//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AbstractMessage {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct MessageHeader *_field4;
};

struct AbstractPart {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    struct String *_field5;
    struct String *_field6;
    struct String *_field7;
    struct String *_field8;
    struct String *_field9;
    struct String *_field10;
    _Bool _field11;
    _Bool _field12;
    int _field13;
    struct HashMap *_field14;
};

struct AccountValidator {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct OperationCallback *_field4;
    _Bool _field5;
    _Bool _field6;
    struct _opaque_pthread_mutex_t _field7;
    id _field8;
    CDUnknownFunctionPointerType *_field9;
    struct String *_field10;
    struct String *_field11;
    struct String *_field12;
    struct String *_field13;
    struct Array *_field14;
    struct Array *_field15;
    struct Array *_field16;
    struct String *_field17;
    struct NetService *_field18;
    struct NetService *_field19;
    struct NetService *_field20;
    int _field21;
    int _field22;
    int _field23;
    struct MailProvider *_field24;
    int _field25;
    int _field26;
    struct Operation *_field27;
    struct OperationQueue *_field28;
    struct MXRecordResolverOperation *_field29;
    struct IMAPAsyncSession *_field30;
    struct POPAsyncSession *_field31;
    struct SMTPAsyncSession *_field32;
    _Bool _field33;
    _Bool _field34;
    _Bool _field35;
};

struct Address {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    struct String *_field5;
};

struct Array {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct carray_s *_field4;
};

struct CC_MD5state_st {
    unsigned int A;
    unsigned int B;
    unsigned int C;
    unsigned int D;
    unsigned int Nl;
    unsigned int Nh;
    unsigned int data[16];
    int num;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct ConnectionLogger;

struct Data {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    char *_field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct FIRReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GADNAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct GADOAdSize {
    struct CGSize size;
    unsigned long long flags;
};

struct HashMap {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    void **_field6;
};

struct IMAPAsyncConnection;

struct IMAPAsyncSession {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct Array *_field4;
    struct String *_field5;
    unsigned int _field6;
    struct String *_field7;
    struct String *_field8;
    struct String *_field9;
    int _field10;
    int _field11;
    _Bool _field12;
    _Bool _field13;
    struct IMAPNamespace *_field14;
    long long _field15;
    _Bool _field16;
    unsigned int _field17;
    struct ConnectionLogger *_field18;
    _Bool _field19;
    struct IMAPIdentity *_field20;
    struct IMAPIdentity *_field21;
    _Bool _field22;
    struct OperationQueueCallback *_field23;
    id _field24;
    struct String *_field25;
};

struct IMAPFolder {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    char _field5;
    int _field6;
};

struct IMAPFolderInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned long long _field6;
    int _field7;
    unsigned int _field8;
    _Bool _field9;
};

struct IMAPFolderStatus {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned long long _field9;
};

struct IMAPIdentity {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct HashMap *_field4;
};

struct IMAPNamespace {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct Array *_field4;
};

struct IMAPNamespaceItem {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    char _field4;
    struct String *_field5;
};

struct IMAPOperation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct OperationCallback *_field4;
    _Bool _field5;
    _Bool _field6;
    struct _opaque_pthread_mutex_t _field7;
    id _field8;
    CDUnknownFunctionPointerType *_field9;
    struct IMAPAsyncSession *_field10;
    struct IMAPAsyncConnection *_field11;
    struct String *_field12;
    struct IMAPOperationCallback *_field13;
    int _field14;
    _Bool _field15;
};

struct IMAPOperationCallback;

struct IMAPSearchExpression {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    struct String *_field5;
    struct String *_field6;
    unsigned long long _field7;
    struct IndexSet *_field8;
    struct IndexSet *_field9;
    struct IMAPSearchExpression *_field10;
    struct IMAPSearchExpression *_field11;
};

struct IndexSet {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct Range *_field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct MCOIMAPBaseOperationIMAPCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MCOIMAPCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    id _field6;
};

struct MCONNTPCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    id _field6;
};

struct MCONNTPFetchArticleOperationCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MCOOperationCompletionCallback {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    id _field5;
};

struct MCOPOPCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    id _field6;
};

struct MCOPOPFetchMessageOperationCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MCOSMTPCallbackBridge {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    CDUnknownFunctionPointerType *_field5;
    id _field6;
};

struct MCOSMTPSendOperationCallback {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
};

struct MCOValidatorOperationCallback {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    id _field5;
};

struct MXRecordResolverOperation;

struct MailProvider {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    struct Array *_field5;
    struct Array *_field6;
    struct Array *_field7;
    struct Array *_field8;
    struct Array *_field9;
    struct Array *_field10;
    struct HashMap *_field11;
};

struct MessageHeader {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    _Bool _field5;
    struct Array *_field6;
    struct Array *_field7;
    struct Address *_field8;
    struct Address *_field9;
    struct Array *_field10;
    struct Array *_field11;
    struct Array *_field12;
    struct Array *_field13;
    struct String *_field14;
    long long _field15;
    long long _field16;
    struct HashMap *_field17;
};

struct NNTPAsyncSession {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct NNTPSession *_field4;
    struct OperationQueue *_field5;
    struct NNTPOperationQueueCallback *_field6;
    struct ConnectionLogger *_field7;
    struct _opaque_pthread_mutex_t _field8;
    struct NNTPConnectionLogger *_field9;
    struct OperationQueueCallback *_field10;
};

struct NNTPConnectionLogger;

struct NNTPGroupInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    unsigned int _field5;
};

struct NNTPOperation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct OperationCallback *_field4;
    _Bool _field5;
    _Bool _field6;
    struct _opaque_pthread_mutex_t _field7;
    id _field8;
    CDUnknownFunctionPointerType *_field9;
    struct NNTPAsyncSession *_field10;
    struct NNTPOperationCallback *_field11;
    int _field12;
};

struct NNTPOperationCallback;

struct NNTPOperationQueueCallback;

struct NNTPSession;

struct NSDictionary {
    Class _field1;
};

struct NetService {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct String *_field4;
    unsigned int _field5;
    int _field6;
};

struct OSObservable {
    Class _field1;
};

struct Object {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
};

struct Operation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct OperationCallback *_field4;
    _Bool _field5;
    _Bool _field6;
    struct _opaque_pthread_mutex_t _field7;
    id _field8;
};

struct OperationCallback;

struct OperationQueue;

struct OperationQueueCallback;

struct POPAsyncSession {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct POPSession *_field4;
    struct OperationQueue *_field5;
    struct POPOperationQueueCallback *_field6;
    struct ConnectionLogger *_field7;
    struct _opaque_pthread_mutex_t _field8;
    struct POPConnectionLogger *_field9;
    struct OperationQueueCallback *_field10;
};

struct POPConnectionLogger;

struct POPMessageInfo {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned int _field4;
    unsigned int _field5;
    struct String *_field6;
};

struct POPOperation {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct OperationCallback *_field4;
    _Bool _field5;
    _Bool _field6;
    struct _opaque_pthread_mutex_t _field7;
    id _field8;
    CDUnknownFunctionPointerType *_field9;
    struct POPAsyncSession *_field10;
    struct POPOperationCallback *_field11;
    int _field12;
};

struct POPOperationCallback;

struct POPOperationQueueCallback;

struct POPSession;

struct Range;

struct SMTPAsyncSession {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct SMTPSession *_field4;
    struct OperationQueue *_field5;
    struct SMTPOperationQueueCallback *_field6;
    struct ConnectionLogger *_field7;
    struct _opaque_pthread_mutex_t _field8;
    struct SMTPConnectionLogger *_field9;
    struct OperationQueueCallback *_field10;
};

struct SMTPConnectionLogger;

struct SMTPOperationQueueCallback;

struct SMTPSession;

struct Set {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    struct HashMap *_field4;
};

struct String {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    unsigned short *_field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct Value {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    union {
        _Bool _field1;
        char _field2;
        unsigned char _field3;
        short _field4;
        unsigned short _field5;
        int _field6;
        unsigned int _field7;
        long long _field8;
        unsigned long long _field9;
        long long _field10;
        unsigned long long _field11;
        float _field12;
        double _field13;
        void *_field14;
        struct {
            char *_field1;
            int _field2;
        } _field15;
    } _field5;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct carray_s;

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in_addr {
    unsigned int _field1;
};

struct os_last_location {
    struct os_location_coordinate _field1;
    double _field2;
    double _field3;
};

struct os_location_coordinate {
    double _field1;
    double _field2;
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool isAnimatingAPresentationOrDismissal;
    _Bool isDismissing;
    _Bool isTransitioningFromInitialModalToInteractiveState;
    _Bool viewHasAppeared;
    _Bool isRotating;
    _Bool isPresented;
    _Bool rotationTransformIsDirty;
    _Bool imageIsFlickingAwayForDismissal;
    _Bool isDraggingImage;
    _Bool scrollViewIsAnimatingAZoom;
    _Bool imageIsBeingReadFromDisk;
    _Bool isManuallyResizingTheScrollViewFrame;
} CDStruct_10eab4b5;

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    void *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
} CDStruct_9d607ac6;

typedef struct {
    long long _field1;
    void *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
} CDStruct_e097db04;

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

typedef struct {
    long long majorVersion;
    long long minorVersion;
    long long patchVersion;
} CDStruct_f6aba300;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    double headerHeight;
    double footerHeight;
    double avatarDiameter;
    double closeButtonPadding;
    double headerCloseButtonRightPadding;
    double fakeComposerHorizontalPadding;
    struct UIEdgeInsets blockListInsets;
} CDStruct_0088c729;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    struct {
        int _field1;
        int _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        int _field10;
        int _field11;
        int _field12;
        int _field13;
        int _field14;
    } _field10;
} CDStruct_d1583d57;

typedef struct {
    struct CGSize _field1;
    long long _field2;
    _Bool _field3;
    _Bool _field4;
    double _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    struct UIEdgeInsets _field11;
} CDStruct_0b84e0ba;

typedef struct {
    _Bool statusBarHiddenPriorToPresentation;
    long long statusBarStylePriorToPresentation;
    struct CGRect startingReferenceFrameForThumbnail;
    struct CGRect startingReferenceFrameForThumbnailInPresentingViewControllersOriginalOrientation;
    struct CGPoint startingReferenceCenterForThumbnail;
    long long startingInterfaceOrientation;
    _Bool presentingViewControllerPresentedFromItsUnsupportedOrientation;
} CDStruct_f24d28fa;

#pragma mark Named Unions

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

#pragma mark -

//
// File: Studo
// UUID: 35E82D13-58CD-35CB-AB9B-F99554047EA6
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 10.0.0
//                    SDK version: 12.2.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: /usr/lib/swift
//                               = /usr/lib/swift
//                       Run path: @executable_path/Frameworks
//                               = /Frameworks
//                       Run path: @loader_path/Frameworks
//                               = /Frameworks
//                       Run path: @executable_path/Frameworks
//                               = /Frameworks
//                       Run path: /Users/zigavehovec/Library/Developer/Xcode/DerivedData/Studo-fiytnrvdmwkydsgagcnlkxigxhyj/Build/Intermediates.noindex/ArchiveIntermediates/Studo/BuildProductsPath/Release-iphoneos
//                               = /Users/zigavehovec/Library/Developer/Xcode/DerivedData/Studo-fiytnrvdmwkydsgagcnlkxigxhyj/Build/Intermediates.noindex/ArchiveIntermediates/Studo/BuildProductsPath/Release-iphoneos
//

@protocol AFMultipartFormData
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(NSDictionary *)arg1 body:(NSData *)arg2;
- (void)appendPartWithFormData:(NSData *)arg1 name:(NSString *)arg2;
- (void)appendPartWithFileData:(NSData *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4;
- (void)appendPartWithInputStream:(NSInputStream *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 length:(long long)arg4 mimeType:(NSString *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 fileName:(NSString *)arg3 mimeType:(NSString *)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(NSURL *)arg1 name:(NSString *)arg2 error:(id *)arg3;
@end

@protocol AFURLRequestSerialization <NSObject, NSSecureCoding, NSCopying>
- (NSURLRequest *)requestBySerializingRequest:(NSURLRequest *)arg1 withParameters:(id)arg2 error:(id *)arg3;
@end

@protocol AFURLResponseSerialization <NSObject, NSSecureCoding, NSCopying>
- (id)responseObjectForResponse:(NSURLResponse *)arg1 data:(NSData *)arg2 error:(id *)arg3;
@end

@protocol ANSMetadataSerializable <NSObject>
- (NSDictionary *)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (NSString *)eventName;
@end

@protocol ANSUploaderDelegate <NSObject>
- (void)uploader:(ANSUploader *)arg1 completedRequest:(NSURLRequest *)arg2 withResponse:(NSURLResponse *)arg3 uniqueName:(NSString *)arg4 error:(NSError *)arg5 completionHandler:(void (^)(_Bool, NSError *))arg6;
- (void)uploader:(ANSUploader *)arg1 didFinishUploadWithUniqueName:(NSString *)arg2 error:(NSError *)arg3;
- (NSString *)uploader:(ANSUploader *)arg1 filePathForUniqueName:(NSString *)arg2;

@optional
- (void)uploader:(ANSUploader *)arg1 session:(NSURLSession *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
@end

@protocol AVAssetResourceLoaderDelegate <NSObject>

@optional
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForResponseToAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)resourceLoader:(AVAssetResourceLoader *)arg1 didCancelLoadingRequest:(AVAssetResourceLoadingRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForRenewalOfRequestedResource:(AVAssetResourceRenewalRequest *)arg2;
- (_Bool)resourceLoader:(AVAssetResourceLoader *)arg1 shouldWaitForLoadingOfRequestedResource:(AVAssetResourceLoadingRequest *)arg2;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CLSBetaControllerDelegate <NSObject>
- (CLSSettings *)settingsForBetaController:(CLSBetaController *)arg1;
- (NSString *)APIKeyForBetaController:(CLSBetaController *)arg1;
@end

@protocol CLSCrashReport <NSObject>
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
@property(readonly, nonatomic) NSDate *crashedOnDate;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *identifier;
@end

@protocol CLSCrashReportingControllerDelegate <NSObject>
- (CLSSettings *)settingsForCrashReportingController:(CLSCrashReportingController *)arg1;
- (_Bool)isFirstInstallForCrashReportingController:(CLSCrashReportingController *)arg1;
- (NSString *)installIDForCrashReportingController:(CLSCrashReportingController *)arg1;
- (NSString *)APIKeyForCrashReportingController:(CLSCrashReportingController *)arg1;
- (_Bool)reportingController:(CLSCrashReportingController *)arg1 ensureDeliveryOfUnixSignal:(int)arg2;
- (void)reportingController:(CLSCrashReportingController *)arg1 internalDidDetectReportForLastExecution:(CLSInternalReport *)arg2;
- (void)reportingController:(CLSCrashReportingController *)arg1 didDetectReportForLastExecution:(CLSInternalReport *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (_Bool)reportingControllerMustInformDelegateOfReports:(CLSCrashReportingController *)arg1;
- (_Bool)reportingControllerCanUseBackgroundSessions:(CLSCrashReportingController *)arg1;
- (void)detectedCrash;
- (_Bool)shouldInstallCrashCallback;
@end

@protocol CLSNetworkClientDelegate <NSObject>
- (_Bool)networkClientCanUseBackgroundSessions:(CLSNetworkClient *)arg1;

@optional
- (void)networkClient:(CLSNetworkClient *)arg1 didFinishUploadWithPath:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol CLSReportsControllerDelegate <NSObject>
- (NSString *)bundleIdentifierForReportsController:(CLSReportsController *)arg1;
- (NSString *)APIKeyForReportsController:(CLSReportsController *)arg1;
- (CLSSettings *)settingsForReportsController:(CLSReportsController *)arg1;
- (void)reportsControllerDidCompleteAllSubmissions:(CLSReportsController *)arg1;
- (void)reportsController:(CLSReportsController *)arg1 didCompletePackageSubmission:(NSString *)arg2 error:(NSError *)arg3;
@end

@protocol CLSURLSessionDataDelegate <CLSURLSessionTaskDelegate>
- (void)task:(CLSURLSessionDataTask *)arg1 didReceiveData:(NSData *)arg2;
- (void)task:(CLSURLSessionDataTask *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
@end

@protocol CLSURLSessionDownloadDelegate <CLSURLSessionDataDelegate>
- (void)downloadTask:(CLSURLSessionDownloadTask *)arg1 didFinishDownloadingToURL:(NSURL *)arg2;
@end

@protocol CLSURLSessionTaskDelegate <NSObject>
- (void)task:(CLSURLSessionTask *)arg1 didCompleteWithError:(NSError *)arg2;
- (NSURLRequest *)task:(CLSURLSessionTask *)arg1 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg2 newRequest:(NSURLRequest *)arg3;
@end

@protocol DFPBannerAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADNAdLoader *)arg1 didReceiveDFPBannerView:(DFPNBannerView *)arg2;
- (NSArray *)validBannerSizesForAdLoader:(GADNAdLoader *)arg1;
@end

@protocol DFPCustomRenderedBannerViewDelegate <NSObject>
- (void)bannerView:(DFPOBannerView *)arg1 didReceiveCustomRenderedAd:(DFPOCustomRenderedAd *)arg2;
@end

@protocol DFPCustomRenderedInterstitialDelegate <NSObject>
- (void)interstitial:(DFPOInterstitial *)arg1 didReceiveCustomRenderedAd:(DFPOCustomRenderedAd *)arg2;
@end

@protocol DFPOCustomRenderedAdEventHandler <NSObject>
- (void)finishedRenderingAdView:(UIView *)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;
@end

@protocol FABDownloadAndSaveSettingsOperationDelegate <NSObject>
- (void)operation:(FABDownloadAndSaveSettingsOperation *)arg1 didDownloadAndSaveSettingsWithError:(NSError *)arg2;
@end

@protocol FABKit <NSObject>
+ (NSString *)kitDisplayVersion;
+ (NSString *)bundleIdentifier;

@optional
+ (void)disableUninitializedKitMessaging;
+ (void)initializeIfNeeded;
+ (NSString *)kitBuildVersion;
@end

@protocol FABOnboardingOperationDelegate <NSObject>
- (void)onboardingOperation:(FABOnboardingOperation *)arg1 didCompleteAppCreationWithError:(NSError *)arg2;
- (void)onboardingOperation:(FABOnboardingOperation *)arg1 didCompleteAppUpdateWithError:(NSError *)arg2;
@end

@protocol FDLDictionaryRepresenting <NSObject>
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@end

@protocol FIRALogging <NSObject>
- (void)logMessage:(NSString *)arg1 messageCode:(long long)arg2 withLogLevel:(long long)arg3;
@end

@protocol FIRAuthAppDelegateHandler <NSObject>
- (_Bool)canHandleURL:(NSURL *)arg1;
- (_Bool)canHandleNotification:(NSDictionary *)arg1;
- (void)handleAPNSTokenError:(NSError *)arg1;
- (void)setAPNSToken:(NSData *)arg1;
@end

@protocol FIRAuthBackendImplementation <NSObject>
- (void)resetPassword:(FIRResetPasswordRequest *)arg1 callback:(void (^)(FIRResetPasswordResponse *, NSError *))arg2;
- (void)verifyClient:(FIRVerifyClientRequest *)arg1 callback:(void (^)(FIRVerifyClientResponse *, NSError *))arg2;
- (void)verifyPhoneNumber:(FIRVerifyPhoneNumberRequest *)arg1 callback:(void (^)(FIRVerifyPhoneNumberResponse *, NSError *))arg2;
- (void)sendVerificationCode:(FIRSendVerificationCodeRequest *)arg1 callback:(void (^)(FIRSendVerificationCodeResponse *, NSError *))arg2;
- (void)deleteAccount:(FIRDeleteAccountRequest *)arg1 callback:(void (^)(NSError *))arg2;
- (void)signUpNewUser:(FIRSignUpNewUserRequest *)arg1 callback:(void (^)(FIRSignUpNewUserResponse *, NSError *))arg2;
- (void)getOOBConfirmationCode:(FIRGetOOBConfirmationCodeRequest *)arg1 callback:(void (^)(FIRGetOOBConfirmationCodeResponse *, NSError *))arg2;
- (void)secureToken:(FIRSecureTokenRequest *)arg1 callback:(void (^)(FIRSecureTokenResponse *, NSError *))arg2;
- (void)verifyPassword:(FIRVerifyPasswordRequest *)arg1 callback:(void (^)(FIRVerifyPasswordResponse *, NSError *))arg2;
- (void)verifyCustomToken:(FIRVerifyCustomTokenRequest *)arg1 callback:(void (^)(FIRVerifyCustomTokenResponse *, NSError *))arg2;
- (void)verifyAssertion:(FIRVerifyAssertionRequest *)arg1 callback:(void (^)(FIRVerifyAssertionResponse *, NSError *))arg2;
- (void)setAccountInfo:(FIRSetAccountInfoRequest *)arg1 callback:(void (^)(FIRSetAccountInfoResponse *, NSError *))arg2;
- (void)getProjectConfig:(FIRGetProjectConfigRequest *)arg1 callback:(void (^)(FIRGetProjectConfigResponse *, NSError *))arg2;
- (void)getAccountInfo:(FIRGetAccountInfoRequest *)arg1 callback:(void (^)(FIRGetAccountInfoResponse *, NSError *))arg2;
- (void)createAuthURI:(FIRCreateAuthURIRequest *)arg1 callback:(void (^)(FIRCreateAuthURIResponse *, NSError *))arg2;
@end

@protocol FIRAuthBackendRPCIssuer <NSObject>
- (void)asyncPostToURLWithRequestConfiguration:(FIRAuthRequestConfiguration *)arg1 URL:(NSURL *)arg2 body:(NSData *)arg3 contentType:(NSString *)arg4 completionHandler:(void (^)(NSData *, NSError *))arg5;
@end

@protocol FIRAuthRPCRequest <NSObject>
- (NSURL *)requestURL;

@optional
- (FIRAuthRequestConfiguration *)requestConfiguration;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (_Bool)containsPostBody;
@end

@protocol FIRAuthRPCResponse <NSObject>
- (_Bool)setWithDictionary:(NSDictionary *)arg1 error:(id *)arg2;

@optional
- (NSError *)clientErrorWithShortErrorMessage:(NSString *)arg1 detailErrorMessage:(NSString *)arg2;
@end

@protocol FIRAuthStorage <NSObject>
- (_Bool)removeDataForKey:(NSString *)arg1 error:(id *)arg2;
- (_Bool)setData:(NSData *)arg1 forKey:(NSString *)arg2 error:(id *)arg3;
- (NSData *)dataForKey:(NSString *)arg1 error:(id *)arg2;
- (id <FIRAuthStorage>)initWithService:(NSString *)arg1;
@end

@protocol FIRAuthUIDelegate <NSObject>
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(void (^)(void))arg2;
- (void)presentViewController:(UIViewController *)arg1 animated:(_Bool)arg2 completion:(void (^)(void))arg3;
@end

@protocol FIRAuthWebViewDelegate <NSObject>
- (void)webViewController:(FIRAuthWebViewController *)arg1 didFailWithError:(NSError *)arg2;
- (void)webViewControllerDidCancel:(FIRAuthWebViewController *)arg1;
- (_Bool)webViewController:(FIRAuthWebViewController *)arg1 canHandleURL:(NSURL *)arg2;
@end

@protocol FIRDLJavaScriptExecutorDelegate <NSObject>
- (void)javaScriptExecutor:(FIRDLJavaScriptExecutor *)arg1 failedWithError:(NSError *)arg2;
- (void)javaScriptExecutor:(FIRDLJavaScriptExecutor *)arg1 completedExecutionWithResult:(NSString *)arg2;
@end

@protocol FIRDLRetrievalProcessDelegate <NSObject>
- (void)retrievalProcess:(id <FIRDLRetrievalProcessProtocol>)arg1 completedWithCustomURLScemeURL:(NSURL *)arg2 error:(NSError *)arg3;
@end

@protocol FIRDLRetrievalProcessProtocol <NSObject>
@property(readonly, nonatomic) NSURL *foundURL;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isCompleted) _Bool completed;
@property(readonly, nonatomic) __weak id <FIRDLRetrievalProcessDelegate> delegate;
- (void)retrievePendingDynamicLink;
@end

@protocol FIRInstanceIDKeyPairStoreDelegate <NSObject>
- (void)keyPairStoreDidDeleteKeyPair:(FIRInstanceIDKeyPairStore *)arg1;
@end

@protocol FIRInstanceIDStoreDelegate <NSObject>
- (void)store:(FIRInstanceIDStore *)arg1 didDeleteFCMScopedTokensForCheckin:(FIRInstanceIDCheckinPreferences *)arg2;
@end

@protocol FIRMessagingClientDelegate <NSObject>
@end

@protocol FIRMessagingConnectionDelegate <NSObject>
- (int)connectionDidReceiveAckForRmqIds:(NSArray *)arg1;
- (void)connectionDidRecieveMessage:(GtalkDataMessageStanza *)arg1;
- (void)didLoginWithConnection:(FIRMessagingConnection *)arg1;
- (void)connection:(FIRMessagingConnection *)arg1 didCloseForReason:(unsigned long long)arg2;
@end

@protocol FIRMessagingDataMessageManagerDelegate <NSObject>
- (void)didDeleteMessagesOnServer;
- (void)didSendDataMessageWithID:(NSString *)arg1;
- (void)willSendDataMessageWithID:(NSString *)arg1 error:(NSError *)arg2;
- (void)didReceiveMessage:(NSDictionary *)arg1 withIdentifier:(NSString *)arg2;
@end

@protocol FIRMessagingDelegate <NSObject>
- (void)messaging:(FIRMessaging *)arg1 didRefreshRegistrationToken:(NSString *)arg2;

@optional
- (void)applicationReceivedRemoteMessage:(FIRMessagingRemoteMessage *)arg1;
- (void)messaging:(FIRMessaging *)arg1 didReceiveMessage:(FIRMessagingRemoteMessage *)arg2;
@end

@protocol FIRMessagingPendingTopicsListDelegate <NSObject>
- (_Bool)pendingTopicsListCanRequestTopicUpdates:(FIRMessagingPendingTopicsList *)arg1;
- (void)pendingTopicsListDidUpdate:(FIRMessagingPendingTopicsList *)arg1;
- (void)pendingTopicsList:(FIRMessagingPendingTopicsList *)arg1 requestedUpdateForTopic:(NSString *)arg2 action:(long long)arg3 completion:(void (^)(long long, NSError *))arg4;
@end

@protocol FIRMessagingReceiverDelegate <NSObject>
- (void)receiver:(FIRMessagingReceiver *)arg1 receivedRemoteMessage:(FIRMessagingRemoteMessage *)arg2;
@end

@protocol FIRMessagingRmqScanner <NSObject>
- (void)scanWithRmqMessageHandler:(void (^)(long long, BOOL, NSData *))arg1 dataMessageHandler:(void (^)(long long, GtalkDataMessageStanza *))arg2;
@end

@protocol FIRMessagingSecureSocketDelegate <NSObject>
- (void)didDisconnectWithSecureSocket:(FIRMessagingSecureSocket *)arg1;
- (void)secureSocketDidConnect:(FIRMessagingSecureSocket *)arg1;
- (void)secureSocket:(FIRMessagingSecureSocket *)arg1 didSendProtoWithTag:(BOOL)arg2 rmqId:(NSString *)arg3;
- (void)secureSocket:(FIRMessagingSecureSocket *)arg1 didReceiveData:(NSData *)arg2 withTag:(BOOL)arg3;
@end

@protocol FIRNetworkLoggerDelegate <NSObject>
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(NSString *)arg3 contexts:(NSArray *)arg4;
@end

@protocol FIRNetworkReachabilityDelegate
- (void)reachabilityDidChange;
@end

@protocol FIRReachabilityDelegate
- (void)reachability:(FIRReachabilityChecker *)arg1 statusChanged:(int)arg2;
@end

@protocol FIRUserInfo <NSObject>
@property(readonly, nonatomic) NSString *phoneNumber;
@property(readonly, copy, nonatomic) NSString *email;
@property(readonly, copy, nonatomic) NSURL *photoURL;
@property(readonly, copy, nonatomic) NSString *displayName;
@property(readonly, copy, nonatomic) NSString *uid;
@property(readonly, copy, nonatomic) NSString *providerID;
@end

@protocol GADAdLoaderDelegate <NSObject>
- (void)adLoader:(GADNAdLoader *)arg1 didFailToReceiveAdWithError:(GADNRequestError *)arg2;

@optional
- (void)adLoaderDidFinishLoading:(GADNAdLoader *)arg1;
@end

@protocol GADAdNetworkExtras <NSObject>
@end

@protocol GADAdSizeDelegate <NSObject>
- (void)adViewIntrinsicContentSizeDidChange:(GADNBannerView *)arg1;

@optional
- (void)adView:(GADNBannerView *)arg1 willChangeAdSizeTo:(struct GADNAdSize)arg2;
@end

@protocol GADAppEventDelegate <NSObject>

@optional
- (void)interstitial:(GADOInterstitial *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)adView:(GADOBannerView *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
@end

@protocol GADBannerViewDelegate <NSObject>

@optional
- (void)adViewWillLeaveApplication:(GADBannerView *)arg1;
- (void)adViewDidDismissScreen:(GADBannerView *)arg1;
- (void)adViewWillDismissScreen:(GADBannerView *)arg1;
- (void)adViewWillPresentScreen:(GADBannerView *)arg1;
- (void)adView:(GADBannerView *)arg1 didFailToReceiveAdWithError:(GADRequestError *)arg2;
- (void)adViewDidReceiveAd:(GADBannerView *)arg1;
@end

@protocol GADCustomEventBanner <NSObject>
@property(nonatomic) __weak id <GADCustomEventBannerDelegate> delegate;
- (void)requestBannerAd:(struct GADNAdSize)arg1 parameter:(NSString *)arg2 label:(NSString *)arg3 request:(GADNCustomEventRequest *)arg4;
@end

@protocol GADCustomEventBannerDelegate <NSObject>
@property(readonly, nonatomic) UIViewController *viewControllerForPresentingModalView;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 clickDidOccurInAd:(UIView *)arg2;
- (void)customEventBannerWillLeaveApplication:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerDidDismissModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWillDismissModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWillPresentModal:(id <GADCustomEventBanner>)arg1;
- (void)customEventBannerWasClicked:(id <GADCustomEventBanner>)arg1;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 didFailAd:(NSError *)arg2;
- (void)customEventBanner:(id <GADCustomEventBanner>)arg1 didReceiveAd:(UIView *)arg2;
@end

@protocol GADCustomEventInterstitial <NSObject>
@property(nonatomic) __weak id <GADCustomEventInterstitialDelegate> delegate;
- (void)presentFromRootViewController:(UIViewController *)arg1;
- (void)requestInterstitialAdWithParameter:(NSString *)arg1 label:(NSString *)arg2 request:(GADOCustomEventRequest *)arg3;
@end

@protocol GADCustomEventInterstitialDelegate <NSObject>
- (void)customEventInterstitial:(id <GADCustomEventInterstitial>)arg1 didReceiveAd:(NSObject *)arg2;
- (void)customEventInterstitialWillLeaveApplication:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialDidDismiss:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWillDismiss:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWillPresent:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitialWasClicked:(id <GADCustomEventInterstitial>)arg1;
- (void)customEventInterstitial:(id <GADCustomEventInterstitial>)arg1 didFailAd:(NSError *)arg2;
- (void)customEventInterstitialDidReceiveAd:(id <GADCustomEventInterstitial>)arg1;
@end

@protocol GADCustomEventNativeAd <NSObject>
@property(nonatomic) __weak id <GADCustomEventNativeAdDelegate> delegate;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)requestNativeAdWithParameter:(NSString *)arg1 request:(GADNCustomEventRequest *)arg2 adTypes:(NSArray *)arg3 options:(NSArray *)arg4 rootViewController:(UIViewController *)arg5;
@end

@protocol GADCustomEventNativeAdDelegate <NSObject>
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didReceiveMediatedUnifiedNativeAd:(id <GADMediatedUnifiedNativeAd>)arg2;
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didFailToLoadWithError:(NSError *)arg2;
- (void)customEventNativeAd:(id <GADCustomEventNativeAd>)arg1 didReceiveMediatedNativeAd:(id <GADMediatedNativeAd>)arg2;
@end

@protocol GADInterstitialDelegate <NSObject>

@optional
- (void)interstitialWillLeaveApplication:(GADInterstitial *)arg1;
- (void)interstitialDidDismissScreen:(GADInterstitial *)arg1;
- (void)interstitialWillDismissScreen:(GADInterstitial *)arg1;
- (void)interstitialDidFailToPresentScreen:(GADInterstitial *)arg1;
- (void)interstitialWillPresentScreen:(GADInterstitial *)arg1;
- (void)interstitial:(GADInterstitial *)arg1 didFailToReceiveAdWithError:(GADRequestError *)arg2;
- (void)interstitialDidReceiveAd:(GADInterstitial *)arg1;
@end

@protocol GADMAdNetworkAdapter <NSObject>
+ (Class)networkExtrasClass;
+ (NSString *)adapterVersion;
- (void)presentInterstitialFromRootViewController:(UIViewController *)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADNAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id <GADMAdNetworkConnector>)arg1;

@optional
- (void)changeAdSizeTo:(struct GADNAdSize)arg1;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)getNativeAdWithAdTypes:(NSArray *)arg1 options:(NSArray *)arg2;
@end

@protocol GADMAdNetworkConnector <GADMediationAdRequest>
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didFailInterstitial:(NSError *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 clickDidOccurInBanner:(UIView *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveInterstitial:(NSObject *)arg2;
- (void)adapterDidDismissInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillDismissInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillPresentInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterDidDismissFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillDismissFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillPresentFullScreenModal:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterWillLeaveApplication:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapterDidGetAdClick:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveMediatedUnifiedNativeAd:(id <GADMediatedUnifiedNativeAd>)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveMediatedNativeAd:(id <GADMediatedNativeAd>)arg2;
- (void)adapterDidReceiveInterstitial:(id <GADMAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveAdView:(UIView *)arg2;
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didFailAd:(NSError *)arg2;
- (_Bool)adMuted;
- (float)adVolume;
- (UIViewController *)viewControllerForPresentingModalView;
@end

@protocol GADMRewardBasedVideoAdNetworkAdapter <NSObject>
+ (Class)networkExtrasClass;
+ (NSString *)adapterVersion;
- (void)stopBeingDelegate;
- (void)presentRewardBasedVideoAdWithRootViewController:(UIViewController *)arg1;
- (void)requestRewardBasedVideoAd;
- (void)setUp;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1;

@optional
- (void)setUpWithUserID:(NSString *)arg1;
- (id)initWithGADMAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id <GADMRewardBasedVideoAdNetworkConnector>)arg1 credentials:(NSArray *)arg2;
@end

@protocol GADMRewardBasedVideoAdNetworkConnector <GADMediationAdRequest>
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didFailToLoadRewardBasedVideoAdwithError:(NSError *)arg2;
- (void)adapterWillLeaveApplication:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didRewardUserWithReward:(GADNAdReward *)arg2;
- (void)adapterDidCloseRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidCompletePlayingRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidStartPlayingRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidOpenRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidReceiveRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapterDidGetAdClick:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
- (void)adapter:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1 didFailToSetUpRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)adapterDidSetUpRewardBasedVideoAd:(id <GADMRewardBasedVideoAdNetworkAdapter>)arg1;
@end

@protocol GADMRewardedAdNetworkAdapter <NSObject>
+ (Class)networkExtrasClass;
- (void)presentRewardedAdWithRootViewController:(UIViewController *)arg1;
- (void)requestRewardedAd;
- (id)initWithRewardedAdNetworkConnector:(id <GADMRewardedAdNetworkConnector>)arg1;
@end

@protocol GADMediatedNativeAd <NSObject>
- (NSDictionary *)extraAssets;
- (id <GADMediatedNativeAdDelegate>)mediatedNativeAdDelegate;
@end

@protocol GADMediatedNativeAppInstallAd <GADMediatedNativeAd>
- (NSString *)price;
- (NSString *)store;
- (NSDecimalNumber *)starRating;
- (NSString *)callToAction;
- (GADONativeAdImage *)icon;
- (NSString *)body;
- (NSArray *)images;
- (NSString *)headline;

@optional
- (_Bool)hasVideoContent;
- (UIView *)mediaView;
- (UIView *)adChoicesView;
@end

@protocol GADMediatedNativeContentAd <GADMediatedNativeAd>
- (NSString *)advertiser;
- (NSString *)callToAction;
- (GADONativeAdImage *)logo;
- (NSArray *)images;
- (NSString *)body;
- (NSString *)headline;

@optional
- (_Bool)hasVideoContent;
- (UIView *)mediaView;
- (UIView *)adChoicesView;
@end

@protocol GADMediatedUnifiedNativeAd <NSObject>
@property(readonly, copy, nonatomic) NSDictionary *extraAssets;
@property(readonly, copy, nonatomic) NSString *advertiser;
@property(readonly, copy, nonatomic) NSString *price;
@property(readonly, copy, nonatomic) NSString *store;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, nonatomic) GADONativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *headline;

@optional
@property(readonly, nonatomic) _Bool hasVideoContent;
@property(readonly, nonatomic) UIView *mediaView;
@property(readonly, nonatomic) UIView *adChoicesView;
- (void)didUntrackView:(UIView *)arg1;
- (void)didRecordClickOnAssetWithName:(NSString *)arg1 view:(UIView *)arg2 viewController:(UIViewController *)arg3;
- (void)didRecordImpression;
- (void)didRenderInView:(UIView *)arg1 clickableAssetViews:(NSDictionary *)arg2 nonclickableAssetViews:(NSDictionary *)arg3 viewController:(UIViewController *)arg4;
@end

@protocol GADMediationAdEventDelegate <NSObject>
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)didFailToPresentWithError:(NSError *)arg1;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
@end

@protocol GADMediationAdRequest <NSObject>
- (NSDate *)userBirthday;
- (long long)userGender;
- (NSArray *)userKeywords;
- (NSString *)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (_Bool)userHasLocation;
- (NSNumber *)underAgeOfConsent;
- (NSString *)maxAdContentRating;
- (NSNumber *)childDirectedTreatment;
- (id <GADAdNetworkExtras>)networkExtras;
- (_Bool)testMode;
- (NSDictionary *)credentials;
- (NSString *)publisherId;
@end

@protocol GADMediationAdapter <NSObject>
+ (Class)networkExtrasClass;
+ (CDStruct_f6aba300)adSDKVersion;
+ (CDStruct_f6aba300)version;

@optional
+ (void)updateConfiguration:(GADNMediationServerConfiguration *)arg1;
+ (void)setUp;
+ (void)setUpWithConfiguration:(GADNMediationServerConfiguration *)arg1 completionHandler:(void (^)(NSError *))arg2;
- (void)loadRewardedAdForAdConfiguration:(GADNMediationRewardedAdConfiguration *)arg1 completionHandler:(id <GADMediationRewardedAdEventDelegate> (^)(id <GADMediationRewardedAd>, NSError *))arg2;
- (void)loadNativeAdForAdConfiguration:(GADNMediationNativeAdConfiguration *)arg1 completionHandler:(id <GADMediationNativeAdEventDelegate> (^)(id <GADMediationNativeAd>, NSError *))arg2;
- (void)loadInterstitialForAdConfiguration:(GADNMediationInterstitialAdConfiguration *)arg1 completionHandler:(id <GADMediationInterstitialAdEventDelegate> (^)(id <GADMediationInterstitialAd>, NSError *))arg2;
- (void)loadBannerForAdConfiguration:(GADNMediationBannerAdConfiguration *)arg1 completionHandler:(id <GADMediationBannerAdEventDelegate> (^)(id <GADMediationBannerAd>, NSError *))arg2;
@end

@protocol GADMediationBannerAdEventDelegate <GADMediationAdEventDelegate>
- (void)willBackgroundApplication;
@end

@protocol GADMediationInterstitialAdEventDelegate <GADMediationAdEventDelegate>
- (void)willBackgroundApplication;
@end

@protocol GADMediationNativeAdEventDelegate <GADMediationAdEventDelegate>
- (void)willBackgroundApplication;
- (void)didUnmuteVideo;
- (void)didMuteVideo;
- (void)didEndVideo;
- (void)didPauseVideo;
- (void)didPlayVideo;
@end

@protocol GADMediationRewardedAdEventDelegate <GADMediationAdEventDelegate>
- (void)didEndVideo;
- (void)didStartVideo;
- (void)didRewardUserWithReward:(GADNAdReward *)arg1;
@end

@protocol GADNAVPlayerItemProvider <NSObject>
- (AVPlayerItem *)playerItem;
- (NSURL *)videoURL;
@end

@protocol GADNAdPresenting <NSObject>
- (void)presentFromViewController:(UIViewController *)arg1;
- (_Bool)canPresent;
@end

@protocol GADNAdRendering <NSObject>
+ (id)alloc;
- (void)renderWithServerTransaction:(GADNServerTransaction *)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(void (^)(NSArray *, NSArray *, struct NSDictionary *))arg3;

@optional
- (void)invalidateAndCancel;
@end

@protocol GADNDynamicHeightSearchBannerViewDelegate <NSObject>
- (void)bannerView:(GADNDynamicHeightSearchBannerView *)arg1 didReceiveLandingPageURL:(NSURL *)arg2;
- (void)bannerView:(GADNDynamicHeightSearchBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerView:(GADNDynamicHeightSearchBannerView *)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerViewDidReceiveAd:(GADNDynamicHeightSearchBannerView *)arg1;
@end

@protocol GADNEventContextSource <NSObject>
@property(readonly, nonatomic) GADNEventContext *context;
@end

@protocol GADNJSCoreConsoleProtocol <JSExport>
- (void)logErrorMessage:(NSString *)arg1;
- (void)logMessage:(NSString *)arg1;

@optional
- (void)logErrorMessage:(NSString *)arg1 __JS_EXPORT_AS__error:(id)arg2;
- (void)logMessage:(NSString *)arg1 __JS_EXPORT_AS__log:(id)arg2;
@end

@protocol GADNJSCoreEnvironmentProtocol <JSExport>
@property(readonly, nonatomic) GADNJSCoreLocalStorage *localStorage;
@property(readonly, nonatomic) GADNJSCorePinger *pinger;
@property(readonly, nonatomic) GADNJSCoreTimers *timers;
@property(readonly, nonatomic) GADNJSCoreConsole *console;
@property(readonly, nonatomic) GADNJSCoreInterface *googleAdsJsInterface;
@property(readonly, nonatomic) GADNJSCoreNavigator *navigator;
@property(readonly, nonatomic) NSString *sdkVersion;
@property(readonly, nonatomic) NSString *platform;
@property(readonly, nonatomic) NSString *environment;
@end

@protocol GADNJSCoreInterfaceProtocol <JSExport>
- (void)notifyWithURLString:(NSString *)arg1;

@optional
- (void)notifyWithURLString:(NSString *)arg1 __JS_EXPORT_AS__notify:(id)arg2;
@end

@protocol GADNJSCoreLocalStorageProtocol <JSExport>
- (void)clear;
- (void)removeItemForKey:(NSString *)arg1;
- (void)setItemForKey:(NSString *)arg1 item:(NSString *)arg2;
- (NSString *)itemForKey:(NSString *)arg1;

@optional
- (void)removeItemForKey:(NSString *)arg1 __JS_EXPORT_AS__removeItem:(id)arg2;
- (void)setItemForKey:(NSString *)arg1 item:(NSString *)arg2 __JS_EXPORT_AS__setItem:(id)arg3;
- (NSString *)itemForKey:(NSString *)arg1 __JS_EXPORT_AS__getItem:(id)arg2;
@end

@protocol GADNJSCoreNavigatorProtocol <JSExport>
@property(readonly, nonatomic) NSString *userAgent;
@end

@protocol GADNJSCorePingerProtocol <JSExport>
- (void)pingURL:(NSString *)arg1;

@optional
- (void)pingURL:(NSString *)arg1 __JS_EXPORT_AS__pingUrl:(id)arg2;
@end

@protocol GADNJSCoreTimersProtocol <JSExport>
- (JSValue *)getClearInterval;
- (JSValue *)getClearTimeout;
- (JSValue *)getSetInterval;
- (JSValue *)getSetTimeout;
@end

@protocol GADNJavascriptEvaluating <NSObject>
- (void)asyncEvaluateFunction:(NSString *)arg1 parameters:(NSDictionary *)arg2;
@end

@protocol GADNMediaContentDisplaying <NSObject>
- (double)aspectRatio;
- (struct CGSize)intrinsicContentSize;
- (id <GADNVideoControlling>)videoController;
- (UIView *)mediaView;
@end

@protocol GADNMonitorOwner <NSObject>
- (void)addMonitor:(id)arg1;
@end

@protocol GADNNativeAdViewOverlayProtocol <NSObject>
- (void)setOverlayView:(GADNOverlayView *)arg1;
@end

@protocol GADNPresenterSource
- (NSHashTable *)activePresenters;
@end

@protocol GADNPresenting <GADNEventContextSource>
- (void)relinquishScreenWithCompletion:(void (^)(void))arg1;
- (void)presentFromViewController:(UIViewController *)arg1 completion:(void (^)(void))arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (_Bool)canPresent;
@end

@protocol GADNRewardedConnector <NSObject>
@property(nonatomic) __weak GADNMediationRewardBasedVideoAdRenderer *renderer;
@property(copy, nonatomic) NSDictionary *adConfiguration;
@end

@protocol GADNSignal <NSObject>
- (void)addSignalEntriesToMutableDictionary:(NSMutableDictionary *)arg1;
@end

@protocol GADNSignalSource <NSObject>
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
@end

@protocol GADNTouchHandling <NSObject>
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
@end

@protocol GADNVideoControlling <NSObject>
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setInitialStateWithConfigurations:(NSDictionary *)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
@end

@protocol GADNVideoPlayerViewLoading <NSObject>
- (void)setUpWithPlayer:(GADNVideoPlayer *)arg1 queue:(NSObject<OS_dispatch_queue> *)arg2 completionBlock:(void (^)(NSError *))arg3;
@end

@protocol GADNWebAdViewDelegate <NSObject>
- (void)adView:(GADNWebAdView *)arg1 runJavaScriptTextInputPanelWithTitle:(NSString *)arg2 defaultText:(NSString *)arg3 prompt:(NSString *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)adView:(GADNWebAdView *)arg1 runJavaScriptConfirmPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)adView:(GADNWebAdView *)arg1 runJavaScriptAlertPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(void))arg4;
@end

@protocol GADNWebViewControllerDelegate <NSObject>
- (void)webViewControllerWebContentProcessDidTerminate:(GADNWebViewController *)arg1;
- (void)webViewController:(GADNWebViewController *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewControllerDidFinishLoad:(GADNWebViewController *)arg1;
- (void)webViewControllerDidStartLoad:(GADNWebViewController *)arg1;

@optional
- (void)webViewController:(GADNWebViewController *)arg1 runJavaScriptTextInputPanelWithTitle:(NSString *)arg2 defaultText:(NSString *)arg3 prompt:(NSString *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webViewController:(GADNWebViewController *)arg1 runJavaScriptConfirmPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webViewController:(GADNWebViewController *)arg1 runJavaScriptAlertPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(void))arg4;
- (_Bool)webViewController:(GADNWebViewController *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GADNativeAdDelegate <NSObject>

@optional
- (void)nativeAdWillLeaveApplication:(GADONativeAd *)arg1;
- (void)nativeAdDidDismissScreen:(GADONativeAd *)arg1;
- (void)nativeAdWillDismissScreen:(GADONativeAd *)arg1;
- (void)nativeAdWillPresentScreen:(GADONativeAd *)arg1;
- (void)nativeAdDidRecordClick:(GADONativeAd *)arg1;
- (void)nativeAdDidRecordImpression:(GADONativeAd *)arg1;
@end

@protocol GADNativeAppInstallAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADNAdLoader *)arg1 didReceiveNativeAppInstallAd:(GADNNativeAppInstallAd *)arg2;
@end

@protocol GADNativeContentAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADNAdLoader *)arg1 didReceiveNativeContentAd:(GADNNativeContentAd *)arg2;
@end

@protocol GADNativeCustomTemplateAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADNAdLoader *)arg1 didReceiveNativeCustomTemplateAd:(GADNNativeCustomTemplateAd *)arg2;
- (NSArray *)nativeCustomTemplateIDsForAdLoader:(GADNAdLoader *)arg1;
@end

@protocol GADOActiveViewGMSGHandlerDelegate
- (void)activeViewGMSGHandler:(GADOActiveViewGMSGHandler *)arg1 didReceiveUntrackNotificationForActiveViewID:(unsigned long long)arg2;
- (void)activeViewGMSGHandler:(GADOActiveViewGMSGHandler *)arg1 didReceiveVisibilityNotification:(_Bool)arg2 forActiveViewID:(unsigned long long)arg3;
@end

@protocol GADOActiveViewMonitorDelegate <NSObject>
- (void)activeViewMonitorDidScroll:(GADOActiveViewMonitor *)arg1;
- (void)activeViewMonitorDidRefresh:(GADOActiveViewMonitor *)arg1;
@end

@protocol GADOAdFetcherDelegate <NSObject>
- (void)adFetcher:(GADOAdFetcher *)arg1 didFailToFetchAd:(GADOAd *)arg2 withError:(NSError *)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(GADOAdFetcher *)arg1 didFetchAd:(GADOAd *)arg2;
@end

@protocol GADOAdMediationDelegate <NSObject>
- (GADMAdNetworkConnector *)mediationConnectorForConfiguration:(GADOMConfig *)arg1 networkConfiguration:(GADOMAdNetworkConfig *)arg2;

@optional
- (void)ad:(GADOAd *)arg1 processMediatedAd:(GADOMediatedAd *)arg2 withCompletionHandler:(void (^)(NSError *))arg3;
- (GADOAdLoaderConfiguration *)adLoaderConfigurationForAd:(GADOAd *)arg1 networkConfiguration:(GADOMAdNetworkConfig *)arg2;
@end

@protocol GADOAdViewActiveViewMonitoring <NSObject>
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
@end

@protocol GADOAdViewDelegate <GADOCSIGMSGHandlerDelegate>
- (void)adViewWebProcessDidTerminate:(GADOAdView *)arg1;

@optional
- (void)adViewDidMuteAd:(GADOAdView *)arg1;
- (void)adView:(GADOAdView *)arg1 didReceiveUnconfirmedClickWithClickInfo:(NSDictionary *)arg2;
- (void)adViewDidRecordClick:(GADOAdView *)arg1;
- (void)adViewDidRecordImpression:(GADOAdView *)arg1;
- (void)adView:(GADOAdView *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)adView:(GADOAdView *)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)adView:(GADOAdView *)arg1 didMoveToPlacement:(id)arg2;
- (void)adView:(GADOAdView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)adViewDidFinishLoad:(GADOAdView *)arg1;
- (void)adViewDidStartLoad:(GADOAdView *)arg1;
- (_Bool)adView:(GADOAdView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GADOCSIGMSGHandlerDelegate <NSObject>

@optional
- (GADOCSI *)CSIForGMSGHandler:(GADOGMSGHandler *)arg1;
@end

@protocol GADOClearcutCommandExecuting <NSObject>
- (void)asynchronouslyExecuteCommands:(NSArray *)arg1;
- (_Bool)isLoaded;
@end

@protocol GADOClickTrackerDelegate <NSObject>
- (void)trackerDidFinishTracking:(GADOClickTracker *)arg1;
@end

@protocol GADOConfigurationDelegate <NSObject>
- (void)configurationDidUpdate:(GADOConfiguration *)arg1;
@end

@protocol GADODelayLoadDelegate <NSObject>
- (void)loadHandlerDidChangeDelay:(GADODelayPageLoadGMSGHandler *)arg1 from:(long long)arg2 to:(long long)arg3;
- (void)loadHandlerDidCancel:(GADODelayPageLoadGMSGHandler *)arg1;
@end

@protocol GADODynamicHeightSearchBannerViewDelegate <NSObject>
- (void)bannerView:(GADODynamicHeightSearchBannerView *)arg1 didReceiveLandingPageURL:(NSURL *)arg2;
- (void)bannerView:(GADODynamicHeightSearchBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerView:(GADODynamicHeightSearchBannerView *)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerViewDidReceiveAd:(GADODynamicHeightSearchBannerView *)arg1;
@end

@protocol GADOImpressionMonitorDelegate <NSObject>
- (void)impressionMonitorDidMonitorImpression:(GADOImpressionMonitor *)arg1;
@end

@protocol GADOInstreamNativeAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADOAdLoader *)arg1 didReceiveInstreamNativeAd:(GADOInstreamNativeAd *)arg2;
@end

@protocol GADOIntermitting <NSObject>
@property(readonly, nonatomic) GADOIntermission *intermission;
- (void)relinquishScreenWithCompletion:(void (^)(void))arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(UIViewController *)arg1 completion:(void (^)(void))arg2;

@optional
- (void)didReturnToApplication;
@end

@protocol GADOInterstitialAdClickDelegate <NSObject>

@optional
- (void)interstitialDidReceiveAdClick:(GADOInterstitial *)arg1;
@end

@protocol GADOInterstitialPoolDelegate <NSObject>

@optional
- (void)interstitialPoolDidRemoveEntry:(GADOInterstitialPool *)arg1;
- (void)interstitialPoolDidAddEntry:(GADOInterstitialPool *)arg1;
@end

@protocol GADOInterstitialPoolRefilling <GADOInterstitialPoolDelegate>
- (void)addPool:(GADOInterstitialPool *)arg1;
@end

@protocol GADOInterstitialRewardBasedVideoAdDelegate <NSObject>
- (void)interstitial:(GADOInterstitial *)arg1 didChangeAdMetadata:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)interstitial:(GADOInterstitial *)arg1 didRewardUserWithReward:(GADOAdReward *)arg2;
- (void)interstitialDidCompletePlayingRewardBasedVideoAd:(GADOInterstitial *)arg1;
- (void)interstitialDidStartPlayingRewardBasedVideoAd:(GADOInterstitial *)arg1;
@end

@protocol GADOLoadable <NSObject>
+ (GADMAdNetworkConnector *)mediationConnectorForConfiguration:(GADOMConfig *)arg1 networkConfiguration:(GADOMAdNetworkConfig *)arg2;
+ (_Bool)canInitWithAdLoader:(GADOAdLoader *)arg1 error:(id *)arg2;
+ (NSDictionary *)requestParametersForAdLoader:(GADOAdLoader *)arg1;
+ (Protocol *)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id <GADOLoadable>)loadableAdWithAdDictionary:(NSDictionary *)arg1 options:(NSDictionary *)arg2;
- (_Bool)hasValidConfigurationForRequestParameters:(NSDictionary *)arg1;
- (void)adLoaderDidReceiveAd:(GADOAdLoader *)arg1;
- (void)loadAssetsWithCompletionHandler:(void (^)(NSError *))arg1;
- (void)setRootViewController:(UIViewController *)arg1;
- (void)setAdUnitID:(NSString *)arg1;
@end

@protocol GADOMConnectorDelegate <NSObject>
- (_Bool)connectorShouldReturnMediatedAd:(GADMAdNetworkConnector *)arg1;
- (void)adRequestFailedFromConnector:(GADMAdNetworkConnector *)arg1 withError:(NSError *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withMediatedAd:(GADOMediatedAd *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withInterstitial:(NSObject *)arg2;
- (void)adRequestReturnsFromConnector:(GADMAdNetworkConnector *)arg1 withView:(UIView *)arg2;
@end

@protocol GADOMIDAdEventsPublisher <NSObject>
- (void)publishImpressionEvent;
@end

@protocol GADOMIDAdSessionDelegate <NSObject>
- (void)adSession:(GADOMIDAdSession *)arg1 didRegisterAdView:(UIView *)arg2;
- (void)adSessionDidFinish:(GADOMIDAdSession *)arg1;
- (void)adSessionDidStart:(GADOMIDAdSession *)arg1;
@end

@protocol GADOMIDAdSessionRegistryStateObserver <NSObject>
- (void)adSessionDidBecomeActive:(GADOMIDAdSession *)arg1;
- (void)adSessionRegistryDidResignActive;
- (void)adSessionRegistryDidBecomeActive;
@end

@protocol GADOMIDCommandPublisher <NSObject>
- (void)publishCommand:(NSString *)arg1;
@end

@protocol GADOMIDJSExecutor <NSObject>
@property(readonly, nonatomic) id jsEnvironment;
@property(readonly, nonatomic) _Bool supportBackgroundThread;
- (void)injectJavaScriptFromString:(NSString *)arg1;
@end

@protocol GADOMIDJSInvoker <NSObject>
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
- (void)invokeScript:(NSString *)arg1;
- (void)invokeCallback:(JSValue *)arg1 argument:(id)arg2;
- (void)invokeCallback:(JSValue *)arg1;
@end

@protocol GADOMIDNodeProcessor <NSObject>
@property(nonatomic) __weak id <GADOMIDNodeProcessor> processorForChildren;
- (NSArray *)orderedChildrenForView:(UIView *)arg1;
- (NSArray *)childrenForView:(UIView *)arg1;
- (NSMutableDictionary *)stateForView:(UIView *)arg1;
@end

@protocol GADOMIDSessionEventsPublisher <NSObject>
- (void)publishFinishEvent;
- (void)publishErrorWithType:(unsigned long long)arg1 errorMessage:(NSString *)arg2;
- (void)publishStartEventWithAdSessionId:(NSString *)arg1 JSONContext:(NSDictionary *)arg2 verificationParameters:(NSArray *)arg3;
- (void)publishInitWithConfiguration:(GADOMIDAdSessionConfiguration *)arg1;
@end

@protocol GADOMIDStateWatcherDelegate <NSObject>
- (void)appDidResignActive;
- (void)appDidBecomeActive;
@end

@protocol GADOMIDVideoEventsPublisher <NSObject>
- (void)publishVideoEventWithName:(NSString *)arg1 parameters:(NSDictionary *)arg2;
@end

@protocol GADOMInternalAdNetworkConnector <GADMAdNetworkConnector>
@property(retain, nonatomic) GADOMAdNetworkConfig *networkConfig;

@optional
- (void)adapter:(id <GADMAdNetworkAdapter>)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
@end

@protocol GADOMRAIDEventHandling <NSObject>
- (void)unloadAdView:(GADOAdView *)arg1;
- (void)handleError:(NSString *)arg1 action:(NSString *)arg2;
- (void)notifyOrientationToMRAIDCreative;
- (void)updatePositionFromView:(UIView *)arg1;
- (void)updateVisibility:(_Bool)arg1;
- (void)MRAIDAdDidUnload;
- (void)MRAIDAdDidLoad;
@end

@protocol GADOMRewardBasedVideoAdConnectorDelegate
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didFailToPresentRewardedAdWithError:(NSError *)arg2;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didReceiveAdMetadataChange:(GADORewardBasedVideoAd *)arg2;
- (void)connectorWillLeaveApplication:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidCloseRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidCompletePlayingRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidStartPlayingRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connectorDidOpenRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didRewardUserWithReward:(GADOAdReward *)arg2;
- (void)connectorDidReceiveClick:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didFailToReceiveRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)connectorDidReceiveRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
- (void)connector:(GADMRewardBasedVideoAdNetworkConnector *)arg1 didFailToSetUpRewardBasedVideoAdWithError:(NSError *)arg2;
- (void)connectorDidSetUpRewardBasedVideoAd:(GADMRewardBasedVideoAdNetworkConnector *)arg1;
@end

@protocol GADOMSlotDelegate <NSObject>
- (void)presentInterstitialFromRootViewController:(UIViewController *)arg1;
- (_Bool)changeAdTypeTo:(GADOAdType *)arg1;
- (void)mediateForAdType:(GADOAdType *)arg1 config:(GADOMConfig *)arg2;
@end

@protocol GADOMWebViewRenderedCheckerDelegate <NSObject>
- (void)webView:(GADOWebView *)arg1 isRendered:(_Bool)arg2;
@end

@protocol GADOMediaContentDelegate <NSObject>

@optional
- (void)mediaContent:(GADOMediaContent *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
@end

@protocol GADOMediaContentDisplaying <NSObject>
- (id <GADOVideoControlling>)videoController;
- (UIView *)mediaView;
- (void)loadVideoWithCompletionHandler:(void (^)(NSError *))arg1;
@end

@protocol GADOMediatedNativeCustomTemplateAd <GADMediatedNativeAd>
@end

@protocol GADOMediationAdRequestInternal <GADMediationAdRequest>
- (NSString *)userRequestAgent;
- (NSString *)currentAdapterName;
- (NSArray *)adapterNames;
- (NSDictionary *)extras;
- (NSDictionary *)inlineAd;
@end

@protocol GADONativeAdDelegateInternal <NSObject>

@optional
- (void)nativeAdDidMuteAd:(GADONativeAd *)arg1;
@end

@protocol GADONativeAdMediaDisplaying <NSObject>
- (GADOVideoController *)videoController;
- (id <GADOMediaContentDisplaying>)mediaContent;
@end

@protocol GADONativeAdSourceAttributing <NSObject>
- (UIView *)adChoicesContentView;
@end

@protocol GADONativeAdUnconfirmedClickDelegate <NSObject>
- (void)nativeAdDidCancelUnconfirmedClick:(GADONativeAd *)arg1;
- (void)nativeAd:(GADONativeAd *)arg1 didReceiveUnconfirmedClickOnAssetID:(NSString *)arg2;
@end

@protocol GADOOverlayPresenting <NSObject>
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
@property(nonatomic) __weak GADOViewController *presentedViewController;
- (void)setNeedsUpdateOrientation;
- (void)dismissWithCompletionHandler:(void (^)(void))arg1;
- (UIViewController *)presentationViewController;
- (void)presentFromViewController:(UIViewController *)arg1 completion:(void (^)(void))arg2;
@end

@protocol GADOOverlayViewSource <NSObject>
- (GADOOverlayView *)overlayView;
@end

@protocol GADOResourceCacheDelegate <NSObject>

@optional
- (void)resourceCache:(GADOResourceCache *)arg1 didFailCachingWithError:(NSError *)arg2;
- (void)resourceCacheDidSucceedCaching:(GADOResourceCache *)arg1;
- (void)resourceCacheDidReceiveData:(GADOResourceCache *)arg1;
- (void)resourceCacheDidReceiveResponse:(GADOResourceCache *)arg1;
- (void)resourceCacheDidStartCaching:(GADOResourceCache *)arg1;
@end

@protocol GADORewardBasedVideoAdClickDelegate <NSObject>

@optional
- (void)rewardBasedVideoAdDidReceiveAdClick:(GADORewardBasedVideoAd *)arg1;
@end

@protocol GADORewardBasedVideoAdGMSGHandlerDelegate <NSObject>

@optional
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveVideoCompleteNotification:(GADORewardBasedVideoAdGMSGHandler *)arg1;
- (void)rewardBasedVideoAdGMSGHandler:(GADORewardBasedVideoAdGMSGHandler *)arg1 didReceiveRewardNotificationWithRewardItem:(GADOAdReward *)arg2;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveStartVideoNotification:(GADORewardBasedVideoAdGMSGHandler *)arg1;
@end

@protocol GADORewardedAdInternalDelegate <GADRewardBasedVideoAdDelegate>
- (void)rewardBasedVideoAd:(GADORewardBasedVideoAd *)arg1 didFailToPresentRewardedAdWithError:(NSError *)arg2;
@end

@protocol GADOSDKCoreControllerDelegate <NSObject>
- (NSDictionary *)backgroundRequestParameters;
- (_Bool)requiresBackgroundSingalCollection;
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(GADOAd *)arg1 headers:(NSDictionary *)arg2;
- (void)loadAdURLWithParameters:(NSDictionary *)arg1;
- (void)setRequestID:(NSString *)arg1;
- (long long)requestedAdType;
- (NSDictionary *)requestParameters;
- (GADOCSITimeRecorder *)adLoadActionTimeRecorder;
@end

@protocol GADOSDKCoreGMSGHandlerDelegate
- (void)SDKCoreGMSGHandlerDidReceiveResumeSDKCoreRefreshAction:(GADOSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandlerDidReceivePauseSDKCoreRefreshAction:(GADOSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandler:(GADOSDKCoreGMSGHandler *)arg1 didReceiveResultActionWithRequestID:(NSString *)arg2 arguments:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandlerDidReceiveSDKCoreUpdateNotification:(GADOSDKCoreGMSGHandler *)arg1;
- (void)SDKCoreGMSGHandler:(GADOSDKCoreGMSGHandler *)arg1 didLoadSDKConstants:(NSDictionary *)arg2;
- (void)SDKCoreGMSGHandler:(GADOSDKCoreGMSGHandler *)arg1 didReceiveInvalidAdWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandler:(GADOSDKCoreGMSGHandler *)arg1 loadAdWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
- (void)SDKCoreGMSGHandler:(GADOSDKCoreGMSGHandler *)arg1 loadAdURLWithRequestID:(NSString *)arg2 parameters:(NSDictionary *)arg3;
@end

@protocol GADOSDKCoreWebViewNotification
- (void)didFinishLoadingSDKCoreInSDKCoreWebView:(GADOSDKCoreWebView *)arg1;
@end

@protocol GADOSlotAdEventDelegate <NSObject>

@optional
- (void)slotDidMuteAd:(GADOSlot *)arg1;
- (void)slot:(GADOSlot *)arg1 didReceiveUnconfirmedClickWithClickInfo:(NSDictionary *)arg2;
- (void)slotDidRecordClick:(GADOSlot *)arg1;
- (void)slotDidRecordImpression:(GADOSlot *)arg1;
- (void)slot:(GADOSlot *)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)slotWillLeaveApplication:(GADOSlot *)arg1;
- (void)slotDidDismissScreen:(GADOSlot *)arg1;
- (void)slotWillDismissScreen:(GADOSlot *)arg1;
- (void)slotWillPresentScreen:(GADOSlot *)arg1;
@end

@protocol GADOSlotAdKeyDelegate <NSObject>
- (NSDictionary *)viewHierarchyInformationForSlot:(GADOSlot *)arg1;
- (void)cacheViewHierarchyInformationForSlot:(GADOSlot *)arg1;
@end

@protocol GADOSlotAdLoadDelegate <NSObject>
- (void)slot:(GADOSlot *)arg1 didFailToLoadAdContentWithError:(NSError *)arg2;
- (void)slotFinishedLoadingAdContent:(GADOSlot *)arg1;
@end

@protocol GADOSlotAdResponseDelegate <NSObject>
- (void)slot:(GADOSlot *)arg1 willProcessMediatedAdResponse:(GADOAd *)arg2;
- (_Bool)slot:(GADOSlot *)arg1 shouldProcessAdResponse:(GADOAd *)arg2 error:(id *)arg3;
@end

@protocol GADOSlotDelegate <NSObject>

@optional
- (void)slot:(GADOSlot *)arg1 didChangeAdMetadata:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)slotDidReceiveAdClick:(GADOSlot *)arg1;
- (void)slot:(GADOSlot *)arg1 willLoadAdWithRequest:(GADORequest *)arg2;
- (_Bool)slot:(GADOSlot *)arg1 notifyPublisherToRenderCustomRenderingAd:(GADOAd *)arg2 error:(id *)arg3;
- (void)slot:(GADOSlot *)arg1 didReceiveAppEvent:(NSString *)arg2 withInfo:(NSString *)arg3;
- (void)slot:(GADOSlot *)arg1 willResizeToAdSize:(struct GADOAdSize)arg2;
- (void)slotDidLoadMRAIDAd:(GADOSlot *)arg1;
- (NSArray *)validAdSizes;
- (struct GADOAdSize)adSize;
- (void)layoutSubviewsIfNeeded;
- (void)setAdSize:(struct GADOAdSize)arg1 andReload:(_Bool)arg2;
- (void)slot:(GADOSlot *)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)slot:(GADOSlot *)arg1 didReceiveAdView:(UIView *)arg2;
- (UIViewController *)rootViewController;
- (struct CGRect)bounds;
- (struct CGRect)frameInInterface;
- (struct CGRect)frame;
- (_Bool)slotShouldPreemptInProgressRequest:(GADOSlot *)arg1;
- (_Bool)slotShouldReloadCurrentRequest:(GADOSlot *)arg1;
- (_Bool)slot:(GADOSlot *)arg1 shouldLoadRequest:(GADORequest *)arg2 error:(id *)arg3;
@end

@protocol GADOStatisticDictionaryDelegate <NSObject>
- (void)didUpdateStatisticDictionary:(GADOStatisticDictionary *)arg1;
- (NSObject<OS_dispatch_queue> *)notificationQueue;
@end

@protocol GADOURLConnectionDelegate
- (void)connection:(GADOURLConnection *)arg1 loadDidFail:(NSError *)arg2 httpStatusCode:(long long)arg3;
- (void)connection:(GADOURLConnection *)arg1 loadDidFinish:(NSString *)arg2 baseURL:(NSURL *)arg3;
- (void)connection:(GADOURLConnection *)arg1 loadDidReceiveCachedResponse:(NSURLResponse *)arg2;
- (_Bool)connection:(GADOURLConnection *)arg1 loadShouldUseCacheForResponse:(NSURLResponse *)arg2;
- (void)connection:(GADOURLConnection *)arg1 willPerformRedirect:(GADOURLConnectionRedirect *)arg2;
- (NSError *)connection:(GADOURLConnection *)arg1 shouldRedirectToURL:(NSURL *)arg2;
@end

@protocol GADOVideoControlling <NSObject>
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setInitialStateWithVideoOptions:(GADOVideoOptions *)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
@end

@protocol GADOVideoLoaderDelegate <NSObject>
- (void)videoLoader:(GADOVideoLoader *)arg1 didFailToLoadURL:(NSURL *)arg2 withError:(NSError *)arg3;
- (void)videoLoader:(GADOVideoLoader *)arg1 didStartedLoadingURL:(NSURL *)arg2;
@end

@protocol GADOVideoPlayerDelegate <NSObject>
- (void)player:(GADOVideoPlayer *)arg1 didLoadURL:(NSURL *)arg2 withAVPlayer:(AVPlayer *)arg3;
@end

@protocol GADOVideoRendering <NSObject>
- (void)optimizeVideoForAdVisibility:(_Bool)arg1;
- (void)disableVideoPlaybackOptimization;
- (void)resetVideoPlaybackOptimization;
- (void)enableVideoPlaybackOptimization;
- (void)setUpWithPlayer:(AVPlayer *)arg1;
@end

@protocol GADOViewBoundsMonitorDelegate <NSObject>
- (void)viewBoundsChanged:(GADOViewBoundsMonitor *)arg1;
@end

@protocol GADOViewMonitorDelegate <NSObject>
- (void)viewMonitorDidRefresh:(GADOViewMonitor *)arg1;
@end

@protocol GADOWebKitWebViewMRAIDDelegate <NSObject>
- (NSString *)MRAIDJavaScriptURLStringForWebView:(GADOWebKitWebView *)arg1;
@end

@protocol GADOWebView
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, nonatomic) UIScrollView *scrollView;
- (_Bool)contentSizeUpdatesSynchronously;
- (_Bool)isLoading;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)reload;
- (void)stopLoading;
- (void)goForward;
- (void)goBack;
- (void)loadRequest:(NSURLRequest *)arg1;
- (void)loadHTMLString:(NSString *)arg1 baseURL:(NSURL *)arg2;
- (void)evaluateJavaScriptFromString:(NSString *)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@end

@protocol GADOWebViewContentSizeDelegate <NSObject>
- (void)webView:(GADOWebView *)arg1 didChangeScrollViewContentSize:(struct CGSize)arg2;
@end

@protocol GADOWebViewDelegate <NSObject>
- (void)webViewProcessDidTerminate:(GADOWebView *)arg1;
- (void)webView:(GADOWebView *)arg1 runJavaScriptTextInputPanelWithTitle:(NSString *)arg2 defaultText:(NSString *)arg3 prompt:(NSString *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(GADOWebView *)arg1 runJavaScriptConfirmPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(GADOWebView *)arg1 runJavaScriptAlertPanelWithTitle:(NSString *)arg2 message:(NSString *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webView:(GADOWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(GADOWebView *)arg1;
- (void)webViewDidStartLoad:(GADOWebView *)arg1;
- (_Bool)webView:(GADOWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GADRTBAdapter <GADMediationAdapter>
- (void)collectSignalsForRequestParameters:(GADNRTBRequestParameters *)arg1 completionHandler:(void (^)(NSString *, NSError *))arg2;
@end

@protocol GADRewardBasedVideoAdDelegate <NSObject>
- (void)rewardBasedVideoAd:(GADRewardBasedVideoAd *)arg1 didRewardUserWithReward:(GADAdReward *)arg2;

@optional
- (void)rewardBasedVideoAdWillLeaveApplication:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidClose:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidCompletePlaying:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidStartPlaying:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidOpen:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(GADRewardBasedVideoAd *)arg1;
- (void)rewardBasedVideoAd:(GADRewardBasedVideoAd *)arg1 didFailToLoadWithError:(NSError *)arg2;
@end

@protocol GADRewardBasedVideoAdDelegatePreview <NSObject>

@optional
- (void)rewardBasedVideoAdMetadataDidChange:(GADORewardBasedVideoAd *)arg1;
@end

@protocol GADUnifiedNativeAdLoaderDelegate <GADAdLoaderDelegate>
- (void)adLoader:(GADNAdLoader *)arg1 didReceiveUnifiedNativeAd:(GADNUnifiedNativeAd *)arg2;
@end

@protocol GIDSignInDelegate <NSObject>
- (void)signIn:(GIDSignIn *)arg1 didSignInForUser:(GIDGoogleUser *)arg2 withError:(NSError *)arg3;

@optional
- (void)signIn:(GIDSignIn *)arg1 didDisconnectWithUser:(GIDGoogleUser *)arg2 withError:(NSError *)arg3;
@end

@protocol GIDSignInUIDelegate <NSObject>

@optional
- (void)signIn:(GIDSignIn *)arg1 dismissViewController:(UIViewController *)arg2;
- (void)signIn:(GIDSignIn *)arg1 presentViewController:(UIViewController *)arg2;
- (void)signInWillDispatch:(GIDSignIn *)arg1 error:(NSError *)arg2;
@end

@protocol GIDSignInWebViewControllerDelegate <NSObject>
- (void)signInWebViewControllerDidComplete:(GIDSignInWebViewController *)arg1 withURL:(NSURL *)arg2 error:(NSError *)arg3;
- (void)signInWebViewControllerNeedsDismissing:(GIDSignInWebViewController *)arg1;
- (_Bool)signInWebViewController:(GIDSignInWebViewController *)arg1 shouldKeepLSOCookiesForAuthResponseURL:(NSURL *)arg2;
- (_Bool)signInWebViewController:(GIDSignInWebViewController *)arg1 shouldTreatURLAsAuthResponse:(NSURL *)arg2;
@end

@protocol GIDSignInWebViewDelegate <NSObject>
- (void)signInWebView:(GIDSignInWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (_Bool)signInWebView:(GIDSignInWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol GLKViewControllerDelegate <NSObject>
- (void)glkViewControllerUpdate:(GLKViewController *)arg1;

@optional
- (void)glkViewController:(GLKViewController *)arg1 willPause:(_Bool)arg2;
@end

@protocol GLKViewDelegate <NSObject>
- (void)glkView:(GLKView *)arg1 drawInRect:(struct CGRect)arg2;
@end

@protocol ICMArticleContentViewControllerDelegate <NSObject>
- (void)closePressed;
- (void)didSendReaction;
@end

@protocol ICMArticleViewControllerDelegate <NSObject>
- (void)articleDidClose;
@end

@protocol ICMChatHeadContentView
- (struct CGSize)contentSize;
- (void)addContent:(ICMConversationPart *)arg1;
@end

@protocol ICMClientConditionDelegate <NSObject>
- (void)clientConditionSatisfied:(id <ICMClientConditionProtocol>)arg1;
@end

@protocol ICMClientConditionProtocol <NSObject>
@property(retain, nonatomic) NSString *conversationId;
@property(retain, nonatomic) NSString *conditionId;
@property(retain, nonatomic) NSString *transitionId;
@end

@protocol ICMCloseMessengerDelegate <NSObject>
- (void)closeMessenger;
@end

@protocol ICMComposerDelegate <NSObject>
- (void)composer:(ICMComposerView *)arg1 selectedInputChanged:(id <IIMInput>)arg2;
- (struct CGSize)maximumSizeForComposerView;
- (void)composerDidType;
@end

@protocol ICMComposerPersistManager <NSObject>
- (void)clearPersistedData;
- (void)clearPersistedDataWithConversationId:(NSString *)arg1;
- (NSString *)persistedStringWithConversationId:(NSString *)arg1;
- (_Bool)doesPersistedStringExistWithConversationId:(NSString *)arg1;
- (void)persistString:(NSString *)arg1 conversationId:(NSString *)arg2;
@end

@protocol ICMConversationCardViewControllerDelegate
- (void)reloadConversationCardView;
- (void)navigateToViewController:(UIViewController *)arg1;
@end

@protocol ICMConversationCardViewDelegate
- (void)didSelecViewPreviousConversationButton;
- (void)didSelectStartNewConversationButton;
@end

@protocol ICMConversationContentAccessoryViewDelegate <NSObject>
- (UIView *)customAccessoryViewFirstResponder;
- (struct CGSize)sizeForCustomAccessoryView;
@end

@protocol ICMConversationContentDelegate <NSObject>
- (void)contentViewController:(ICMConversationContentViewController *)arg1 handleTextInputIntent:(id <ITBIntent>)arg2;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 presentMessengerSheetIntent:(id <ITBIntent>)arg2;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 setProfileExpanded:(_Bool)arg2;
- (_Bool)contentViewControllerComposerTextViewWantsFirstResponder:(ICMConversationContentViewController *)arg1;
- (void)contentViewControllerLayoutDependentViews:(ICMConversationContentViewController *)arg1;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 didSetNewConversationCreationInProgress:(_Bool)arg2;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 presentHelpCenter:(NSURL *)arg2 forConversation:(ICMConversation *)arg3;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 trackOpsMetricEventType:(NSString *)arg2 withName:(NSString *)arg3;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 presentArticle:(NSString *)arg2 forConversation:(ICMConversation *)arg3 conversationPart:(ICMConversationPart *)arg4;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 presentPostForConversation:(ICMConversation *)arg2;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 finishedLoadingConversation:(ICMConversation *)arg2 firstLoad:(_Bool)arg3;
- (void)contentViewControllerInsetsDidUpdate:(ICMConversationContentViewController *)arg1;
- (void)contentViewController:(ICMConversationContentViewController *)arg1 conversationDidUpdate:(ICMConversation *)arg2;
@end

@protocol ICMErrorDelegate <NSObject>

@optional
- (void)didSelectRetryButton;
@end

@protocol ICMFileUploadConfig <NSObject>
- (NSString *)contentType;
- (NSString *)uploadDestination;
- (NSDictionary *)postParametersDictionary;
@end

@protocol ICMFullScreenInAppDelegate <NSObject>
- (UIColor *)fakeComposerInactiveTextColor;
- (UIColor *)footerSeparatorColor;
- (UIColor *)headerSeparatorColor;
- (void)closePressed;
- (void)openPressed;

@optional
- (void)didCalculateBlocksSize:(struct CGSize)arg1;
@end

@protocol ICMFullScreenInAppProtocol <NSObject>
- (ICMConversation *)conversation;
@end

@protocol ICMHelpCenterContainerViewControllerDelegate <NSObject>
- (void)helpCenterDidClose;
@end

@protocol ICMHelpCenterViewControllerDelegate <NSObject>
- (void)closeHelpCenterTapped;
@end

@protocol ICMHomescreenAppsErrorCellDelegate
- (void)reloadHomescreenApps;
@end

@protocol ICMInAppHeaderDelegate <NSObject>
- (void)closePressed;
- (double)headerCloseButtonRightPadding;
@end

@protocol ICMInAppUpdateProtocol <NSObject>
- (void)conversationMarkedAsRead:(NSString *)arg1;
@end

@protocol ICMInAppsAnimationProtocol <NSObject>
- (void)animateOutWithCompletion:(void (^)(void))arg1;
@end

@protocol ICMInAppsDelegate <NSObject>
- (void)showInbox;
- (void)hideInApp:(UIViewController *)arg1;
- (void)dismissConversation:(ICMConversation *)arg1 fromFull:(_Bool)arg2;
- (void)presentConversation:(ICMConversation *)arg1 fromFull:(_Bool)arg2;

@optional
- (void)didHideInApps;
- (void)didHideFullScreenInApp;
- (void)didShowFullScreenInApp;
- (void)launcherTapped;
- (_Bool)shouldShowLauncher;
- (_Bool)isMessengerOpen;
- (void)conversationShown:(ICMConversation *)arg1 asFull:(_Bool)arg2;
@end

@protocol ICMInboxDelegate <NSObject>
- (void)navigateToConversation:(ICMConversation *)arg1;
@end

@protocol ICMIntercomLinkDelegate <NSObject>
- (NSString *)contentValueForIntercomLink;
- (NSString *)solutionValueForIntercomLink;
@end

@protocol ICMMessengerSheetViewControllerDelegate <NSObject>
- (void)messengerSheetDidCloseAndTriggerReload:(ICMMessengerSheetViewController *)arg1;
- (void)messengerSheetDidClose:(ICMMessengerSheetViewController *)arg1;
@end

@protocol ICMOnInboxDataLoadAction <NSObject>
- (void)inboxController:(UIViewController<ICMInboxDelegate> *)arg1 viewAppearedWithConversations:(NSArray *)arg2;
- (void)inboxController:(UIViewController<ICMInboxDelegate> *)arg1 didLoadConversations:(NSArray *)arg2;
@end

@protocol ICMPostContainerCardViewDelegate <NSObject>
- (void)postCardOpenButtonPressed;
@end

@protocol ICMProfileSizeDelegate <NSObject>
- (double)navigationBarHeight;
- (double)minimumHeightForProfileView;
- (double)maximumHeightForProfileView;

@optional
- (double)marginForExpandedProfileView;
@end

@protocol ICMProfileViewDelegate <ICMProfileSizeDelegate>
- (void)profileExandedStateChanged:(_Bool)arg1;
- (void)profileTapped;
- (void)profileViewIsTransitioningToSize:(struct CGSize)arg1;
@end

@protocol ICMQuickReplyViewDelegate <NSObject>
- (void)quickReplyViewTapped:(ICMQuickReplyView *)arg1 forReplyOption:(ICMReplyOption *)arg2 andPartId:(NSString *)arg3;
@end

@protocol ICMReactionsViewControllerDelegate <NSObject>
- (void)reactionsViewController:(ICMReactionsViewController *)arg1 reactedWithOption:(ICMReactionsOption *)arg2;
@end

@protocol ICMRootViewControllerDelegate <NSObject>
- (_Bool)shouldShowLauncher;
- (_Bool)shouldShowInApps;
- (void)setIntercomHelpCenterWindowFullScreen:(_Bool)arg1;
- (void)setWindowIsFullScreen:(_Bool)arg1;
- (void)hideIntercomHelpCenterWindow;
- (void)hideIntercomWindow;
@end

@protocol ICMSnippetActionDelegate <NSObject>
- (void)hideSnippets;
- (void)snippetDismissedForConversation:(ICMConversation *)arg1 remainingCount:(unsigned long long)arg2;
- (void)snippetTappedForConversation:(ICMConversation *)arg1;
- (void)frontSnippetChanged:(ICMConversation *)arg1;
@end

@protocol ICMWebHelpCenterScriptHandlerDelegate <NSObject>
- (void)webHelpCenterScriptHandlerReactionClicked:(ICMWebHelpCenterScriptHandler *)arg1 articleId:(NSString *)arg2 reactionIndex:(NSString *)arg3;
- (void)webHelpCenterScriptHandlerMetricEvent:(ICMWebHelpCenterScriptHandler *)arg1 action:(NSString *)arg2 object:(NSString *)arg3 place:(NSString *)arg4 metadata:(NSDictionary *)arg5;
@end

@protocol ICMWindowProvider <NSObject>
- (UIWindow *)helpCenterWindow;
- (UIWindow *)intercomWindow;
- (UIWindow *)hostAppWindow;
@end

@protocol ICPAppComponentDelegate <NSObject>
- (void)component:(UIView *)arg1 logMetricEvent:(NSDictionary *)arg2;
- (void)component:(UIView *)arg1 openURL:(NSURL *)arg2;
- (void)component:(UIView *)arg1 handleTextInput:(IntercomSDK_ICPTextInputPayload *)arg2;
- (void)component:(UIView *)arg1 openSheetWithURL:(NSURL *)arg2 sheetParams:(NSDictionary *)arg3;
- (void)reloadRequiredForComponent:(UIView *)arg1;
@end

@protocol IIMAction <NSObject>
- (NSArray *)blocks;
@end

@protocol IIMComposer <NSObject>
@property(retain, nonatomic) UIButton *actionButton;
@property(nonatomic) __weak id <IIMComposerDelegate> composerDelegate;
- (void)selectedInputChanged:(id <IIMInput>)arg1;
- (UITextView<IIMResponder> *)textView;
@end

@protocol IIMComposerDelegate <NSObject>
- (void)composerDidInvalidateContentSize;
- (void)textViewDidChange:(UITextView *)arg1;
@end

@protocol IIMGIFFetcherDelegate <NSObject>
- (void)fetcher:(IntercomSDK_IIMGIFFetcher *)arg1 placeholderTypeChanged:(unsigned long long)arg2;
- (void)fetcher:(IntercomSDK_IIMGIFFetcher *)arg1 findGIFsWithQuery:(NSString *)arg2 successBlock:(void (^)(NSArray *))arg3 failureBlock:(void (^)(NSError *))arg4;
@end

@protocol IIMGIFInputDelegate <NSObject>
- (void)gifInput:(IntercomSDK_IIMGIFInput *)arg1 findGIFsWithQuery:(NSString *)arg2 successBlock:(void (^)(NSArray *))arg3 failureBlock:(void (^)(NSError *))arg4;
@end

@protocol IIMImagePreviewProtocol <NSObject>
@property(copy, nonatomic) CDUnknownBlockType imagePreviewerActionBlock;
@property(retain, nonatomic) UIView *sourceView;
@property(retain, nonatomic) UIViewController *presentingViewController;
@property(retain, nonatomic) UIImage *previewImage;
@end

@protocol IIMInput <NSObject>
@property(retain, nonatomic) UIButton *inputButton;
- (UIInputViewController *)inputViewController;

@optional
@property(nonatomic) __weak id <IIMInputDelegate> inputDelegate;
- (UIColor *)contextualBackgroundColor;
@end

@protocol IIMInputAccessoryViewDelegate <NSObject>
- (void)inputAccessoryView:(IntercomSDK_IIMInputAccessoryView *)arg1 input:(id <IIMInput>)arg2 showImagePreviewWithMetadata:(id <IIMImagePreviewProtocol>)arg3;
- (void)inputAccessoryView:(IntercomSDK_IIMInputAccessoryView *)arg1 input:(id <IIMInput>)arg2 dismissViewController:(UIViewController *)arg3;
- (void)inputAccessoryView:(IntercomSDK_IIMInputAccessoryView *)arg1 input:(id <IIMInput>)arg2 presentViewController:(UIViewController *)arg3;
- (void)inputAccessoryView:(IntercomSDK_IIMInputAccessoryView *)arg1 input:(id <IIMInput>)arg2 performedAction:(id <IIMAction>)arg3;

@optional
- (void)inputAccessoryView:(IntercomSDK_IIMInputAccessoryView *)arg1 inputSelected:(id <IIMInput>)arg2;
@end

@protocol IIMInputButtonContainerViewDelegate <NSObject>
- (void)sendPressed;
- (void)inputSelected:(id <IIMInput>)arg1;
@end

@protocol IIMInputDelegate <NSObject>
- (void)input:(id <IIMInput>)arg1 showImagePreviewWithMetadata:(id <IIMImagePreviewProtocol>)arg2;
- (void)input:(id <IIMInput>)arg1 dismissViewController:(UIViewController *)arg2;
- (void)input:(id <IIMInput>)arg1 presentViewController:(UIViewController *)arg2;
- (void)input:(id <IIMInput>)arg1 performedAction:(id <IIMAction>)arg2;
@end

@protocol IIMMediaFetcher <NSObject>
- (void)loadPreviewForMediaItem:(id <IIMMediaItem>)arg1 targetSize:(struct CGSize)arg2 resultHandler:(void (^)(id))arg3;
- (void)fetchMediaItemsForQuery:(NSString *)arg1 resultHandler:(void (^)(NSArray *))arg2;

@optional
- (void)tearDown;
- (void)setVisibileRange:(struct _NSRange)arg1 numberOfColumns:(unsigned long long)arg2 previewSize:(struct CGSize)arg3;
@end

@protocol IIMMediaInput <IIMInput>
- (UIImage *)previewCloseButtonImage;
- (NSString *)previewSendButtonText;
- (IntercomSDK_IIMMediaPlaceholderView *)placeholderView;
- (id <IIMAction>)actionForMediaItem:(id <IIMMediaItem>)arg1;

@optional
- (void)dismissExpandedInput:(UIViewController *)arg1;
- (void)presentExpandedInput:(UIViewController *)arg1;
- (UIButton *)expandInputButton;
@end

@protocol IIMMediaItem <NSObject>
- (UIImage *)placeholderImage;
@end

@protocol IIMPhotosFetcherDelegate <NSObject>
- (void)imageFetcher:(IntercomSDK_IIMPhotosFetcher *)arg1 permissionStatusChanged:(unsigned long long)arg2;
@end

@protocol IIMResponder <NSObject>
- (void)setInputViewController:(UIInputViewController *)arg1;
@end

@protocol IIUColorPickerDelegate <NSObject>
- (void)changedToColor:(UIColor *)arg1;
@end

@protocol IIUImageAnnotationDelegate <NSObject>
- (void)dismissImageAnnotationViewController;
@end

@protocol ITBBlockAppearance <NSObject>
@property(nonatomic) _Bool isTextSelectable;
@property(retain, nonatomic) NSString *facebookFollowString;
@property(retain, nonatomic) NSString *twitterFollowString;
@property(nonatomic) double singleImageCornerRadius;
@property(nonatomic) double inlineImageCornerRadius;
@property(nonatomic) double singleImagePadding;
@property(nonatomic) double inlineImagePadding;
@property(nonatomic) struct UIEdgeInsets linkInsets;
@property(nonatomic) struct UIEdgeInsets codeInsets;
@property(nonatomic) struct UIEdgeInsets textInsets;
@property(retain, nonatomic) UIFont *buttonFont;
@property(retain, nonatomic) UIFont *subheadingFont;
@property(retain, nonatomic) UIFont *headingFont;
@property(retain, nonatomic) UIFont *codeFont;
@property(retain, nonatomic) UIFont *paragraphFont;
@property(retain, nonatomic) UIColor *appPrimaryColor;
@property(retain, nonatomic) UIColor *separatorColor;
@property(retain, nonatomic) UIColor *typingDotColor;
@property(retain, nonatomic) UIColor *codeTextColor;
@property(retain, nonatomic) UIColor *codeBackgroundColor;
@property(retain, nonatomic) UIColor *buttonTextColor;
@property(retain, nonatomic) UIColor *buttonBackgroundColor;
@property(retain, nonatomic) UIColor *subHeadingTextColor;
@property(retain, nonatomic) UIColor *headingTextColor;
@property(retain, nonatomic) UIColor *textColor;
@property(retain, nonatomic) UIColor *linkTextColor;

@optional
@property(nonatomic) _Bool showMessengerAppBorder;
@property(nonatomic) struct UIEdgeInsets messengerCardInsets;
@property(retain, nonatomic) UIImage *activityIndicatorImage;
@property(retain, nonatomic) UIColor *activityIndicatorColor;
@property(nonatomic) double defaultLinkHeight;
@property(nonatomic) double maxLinkHeight;
@property(nonatomic) struct UIEdgeInsets linkFooterInsets;
@property(nonatomic) struct CGSize linkFooterImageSize;
@property(retain, nonatomic) UIImage *linkFooterImage;
@property(nonatomic) double avatarRadius;
- (NSAttributedString *)linkWrittenByAttributedStringForName:(NSString *)arg1;
- (NSAttributedString *)linkUpdatedAtAttributedStringForDate:(NSDate *)arg1;
- (UIImage *)linkAuthorInitialsImageForName:(NSString *)arg1 diameter:(double)arg2;
@end

@protocol ITBBlockListViewControllerDelegate <NSObject>

@optional
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
- (void)setupScrollView:(UIScrollView *)arg1;
- (void)didCalculateBlocksSize:(struct CGSize)arg1;
@end

@protocol ITBBlockViewDelegate <NSObject>
- (void)reloadRequiredForBlock:(IntercomSDK_ITBBlock *)arg1;

@optional
- (UIViewController *)viewControllerForModalPresentation;
@end

@protocol ITBBlockViewProtocol <NSObject>
+ (struct CGSize)estimateSizeForBlock:(IntercomSDK_ITBBlock *)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
- (void)configureWithBlock:(IntercomSDK_ITBBlock *)arg1;
@end

@protocol ITBImagePreviewDelegate <NSObject>
- (void)blockView:(IntercomSDK_ITBBlockView<ITBBlockViewProtocol> *)arg1 showImagePreviewWithMetadata:(id <ITBImagePreviewMetadataProtocol>)arg2;
@end

@protocol ITBImagePreviewMetadataProtocol <NSObject>
@property(copy, nonatomic) CDUnknownBlockType imagePreviewerActionBlock;
@property(retain, nonatomic) UIView *sourceView;
@property(retain, nonatomic) UIViewController *presentingViewController;
@property(retain, nonatomic) UIImage *previewImage;
@end

@protocol ITBInputTextIntent <ITBIntent>
- (void (^)(UIAlertController *))inputTextCompletionBlock;
- (NSString *)inputCurrentText;
- (NSString *)inputPlaceholder;
- (NSString *)inputTitle;
@end

@protocol ITBIntent <NSObject>
- (long long)intentType;

@optional
- (NSString *)intentArticleId;
- (NSURL *)intentUrl;
@end

@protocol ITBIntentOpenerDelegate <NSObject>
- (void)handleIntent:(id <ITBIntent>)arg1 forBlock:(IntercomSDK_ITBBlock *)arg2 fromView:(UIView *)arg3;
@end

@protocol ITBMessengerCardMetricEventIntent <ITBIntent>
- (NSDictionary *)metricPayload;
@end

@protocol ITBOpenSheetIntent <ITBIntent>
- (NSDictionary *)sheetParams;
@end

@protocol ITBUploadCancellationDelegate <NSObject>
- (void)uploadCancelled:(IntercomSDK_ITBUpload *)arg1;
@end

@protocol ITBUploadProgressDelegate <NSObject>
- (void)uploadFailed;
- (void)uploadProgressUpdated:(double)arg1;
@end

@protocol IntercomConversationCollectionViewControllerDelegate <NSObject>
- (struct UIEdgeInsets)insetsForPart:(id <IntercomConversationPart>)arg1;
- (_Bool)shouldShowAvatarForPart:(id <IntercomConversationPart>)arg1;
- (_Bool)shouldShowSlideOverViewForPart:(id <IntercomConversationPart>)arg1;
- (_Bool)shouldShowBubbleFooterForPart:(id <IntercomConversationPart>)arg1;
- (_Bool)shouldShowBubbleForPart:(id <IntercomConversationPart>)arg1;
- (UIView *)customAccessoryViewFirstResponder;
- (struct CGSize)sizeForCustomAccessoryView;
- (long long)bubblePositionForPart:(id <IntercomConversationPart>)arg1;

@optional
- (void)conversationPartForContentExtraction:(id <IntercomConversationPart>)arg1 touchPoint:(struct CGPoint)arg2 sourceFrame:(struct CGRect)arg3;
- (void)layoutDependentViews;
- (double)maximumTopInset;
- (double)minimumTopInset;
- (void)insetsDidUpdate;
- (double)maxWidthForPart:(id <IntercomConversationPart>)arg1 inWidth:(double)arg2;
- (void)partTapped:(id <IntercomConversationPart>)arg1;
- (void)configureTimestampDividerView:(IntercomSDK_IntercomConversationReusableView *)arg1 forPart:(id <IntercomConversationPart>)arg2;
- (void)configureBubbleView:(IntercomSDK_IntercomConversationReusableView *)arg1 forPart:(id <IntercomConversationPart>)arg2;
- (void)configureRetryButtonView:(IntercomSDK_IntercomConversationReusableView *)arg1 forPart:(id <IntercomConversationPart>)arg2;
- (void)willConfigureCustomCell:(IntercomSDK_IntercomConversationCustomCell *)arg1 withPart:(id <IntercomConversationPart>)arg2;
- (void)configureAvatarView:(IntercomSDK_IntercomConversationReusableView *)arg1 forPart:(id <IntercomConversationPart>)arg2;
- (unsigned long long)numberOfItemsInPart:(id <IntercomConversationPart>)arg1;
- (NSString *)cellTypeForItem:(unsigned long long)arg1 inPart:(id <IntercomConversationPart>)arg2;
- (_Bool)shouldAddDividerBeforePartAtIndex:(unsigned long long)arg1 inArray:(NSArray *)arg2;
- (double)concatenationDistanceForPart:(id <IntercomConversationPart>)arg1 withPart:(id <IntercomConversationPart>)arg2;
- (_Bool)shouldConcatenatePart:(id <IntercomConversationPart>)arg1 withPart:(id <IntercomConversationPart>)arg2;
- (_Bool)shouldShowRetryButtonForPart:(id <IntercomConversationPart>)arg1;
@end

@protocol IntercomConversationCollectionViewLayoutDelegate <NSObject>
- (void)prepareToLayoutSection:(unsigned long long)arg1;
- (_Bool)isTypingPartInSection:(unsigned long long)arg1;
- (_Bool)shouldScrollAutomatically;
- (_Bool)shouldAddDividerBeforeSection:(unsigned long long)arg1;
- (struct CGSize)sizeForItemAtIndexPath:(NSIndexPath *)arg1;
- (CDStruct_0b84e0ba)attributesForSection:(unsigned long long)arg1;
@end

@protocol IntercomConversationPart <NSObject>
@property(nonatomic) _Bool participantIsAdmin;
@property(nonatomic) struct CGSize estimatedSize;
@property(nonatomic) double maxLayoutWidth;
@property(nonatomic) long long state;
@property(retain, nonatomic) NSArray *blocks;
@end

@protocol IntercomConversationPartDelegate <NSObject>
- (UIViewController *)viewControllerForModalPresentation;
- (void)reloadRequiredForPart:(id <IntercomConversationPart>)arg1;
@end

@protocol IntercomNexusConnectionDelegate <NSObject>
- (void)connectionDidDisconnect:(IntercomSDK_IntercomNexusConnection *)arg1;
- (void)connectionDidConnect:(IntercomSDK_IntercomNexusConnection *)arg1;
- (void)connection:(IntercomSDK_IntercomNexusConnection *)arg1 didReceiveMessage:(NSDictionary *)arg2;
@end

@protocol IntercomNexusObserverProtocol <NSObject>
- (void)eventOccurred:(IntercomSDK_IntercomNexusEvent *)arg1;

@optional
- (NSString *)observedConversationId;
@end

@protocol IntercomNexusSocketDelegate <NSObject>
- (void)websocketDidDisconnect:(IntercomSDK_IntercomNexusSocket *)arg1;
- (void)websocketDidConnect:(IntercomSDK_IntercomNexusSocket *)arg1;
- (void)websocket:(IntercomSDK_IntercomNexusSocket *)arg1 didReceiveMessage:(NSDictionary *)arg2;
@end

@protocol JSExport
@end

@protocol MFMailComposeViewControllerDelegate <NSObject>

@optional
- (void)mailComposeController:(MFMailComposeViewController *)arg1 didFinishWithResult:(long long)arg2 error:(NSError *)arg3;
@end

@protocol MFMessageComposeViewControllerDelegate <NSObject>
- (void)messageComposeViewController:(MFMessageComposeViewController *)arg1 didFinishWithResult:(long long)arg2;
@end

@protocol NANOMessageBase <NSObject>
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo;
@property(readonly, nonatomic) const char *messageID;
- (NSData *)protoBuffer;
- (id)initWithBuffer:(NSData *)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSObject
@property(nonatomic, readonly) NSString *description;
- (void *)zone;
- (long long)retainCount;
- (id)autorelease;
- (void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id *)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id *)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id *)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
@property(nonatomic, readonly) Class superclass;
@property(nonatomic, readonly) long long hash;
- (_Bool)isEqual:(id)arg1;

@optional
@property(nonatomic, readonly) NSString *debugDescription;
@end

@protocol NSSecureCoding <NSCoding>
+ (_Bool)supportsSecureCoding;
@end

@protocol NSStreamDelegate <NSObject>

@optional
- (void)stream:(NSStream *)arg1 handleEvent:(unsigned long long)arg2;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didFinishCollectingMetrics:(NSURLSessionTaskMetrics *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
- (void)URLSession:(NSURLSession *)arg1 taskIsWaitingForConnectivity:(NSURLSessionTask *)arg2;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willBeginDelayedRequest:(NSURLRequest *)arg3 completionHandler:(void (^)(long long, NSURLRequest *))arg4;
@end

@protocol OSEmailSubscriptionStateObserver
- (void)onChanged:(OSEmailSubscriptionState *)arg1;
@end

@protocol OSPermissionStateObserver <NSObject>
- (void)onChanged:(OSPermissionState *)arg1;
@end

@protocol OSSubscriptionObserver <NSObject>
- (void)onOSSubscriptionChanged:(OSSubscriptionStateChanges *)arg1;
@end

@protocol OSSubscriptionStateObserver
- (void)onChanged:(OSSubscriptionState *)arg1;
@end

@protocol OneSignalNotificationSettings <NSObject>
- (void)onAPNsResponse:(_Bool)arg1;
- (void)onNotificationPromptResponse:(int)arg1;
- (void)registerForProvisionalAuthorization:(void (^)(_Bool))arg1;
- (void)promptForNotifications:(void (^)(_Bool))arg1;
- (void)getNotificationPermissionState:(void (^)(OSPermissionState *))arg1;
- (OSPermissionState *)getNotificationPermissionState;
- (int)getNotificationTypes;
@end

@protocol PINRemoteImageCategory <NSObject>
@property(nonatomic) _Bool IntercomSDK_pin_updateWithProgress;
- (_Bool)IntercomSDK_pin_ignoreGIFs;
- (void)IntercomSDK_pin_clearImages;
- (void)IntercomSDK_pin_updateUIWithImage:(UIImage *)arg1 animatedImage:(IntercomSDK_FLAnimatedImage *)arg2;
- (void)IntercomSDK_pin_setPlaceholderWithImage:(UIImage *)arg1;
- (void)IntercomSDK_pin_setDownloadImageOperationUUID:(NSUUID *)arg1;
- (NSUUID *)IntercomSDK_pin_downloadImageOperationUUID;
- (void)IntercomSDK_pin_cancelImageDownload;
- (void)IntercomSDK_pin_setImageFromURLs:(NSArray *)arg1 placeholderImage:(UIImage *)arg2 completion:(void (^)(IntercomSDK_PINRemoteImageManagerResult *))arg3;
- (void)IntercomSDK_pin_setImageFromURLs:(NSArray *)arg1 placeholderImage:(UIImage *)arg2;
- (void)IntercomSDK_pin_setImageFromURLs:(NSArray *)arg1;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 placeholderImage:(UIImage *)arg2 processorKey:(NSString *)arg3 processor:(UIImage * (^)(IntercomSDK_PINRemoteImageManagerResult *, unsigned long long *))arg4 completion:(void (^)(IntercomSDK_PINRemoteImageManagerResult *))arg5;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 processorKey:(NSString *)arg2 processor:(UIImage * (^)(IntercomSDK_PINRemoteImageManagerResult *, unsigned long long *))arg3 completion:(void (^)(IntercomSDK_PINRemoteImageManagerResult *))arg4;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 placeholderImage:(UIImage *)arg2 processorKey:(NSString *)arg3 processor:(UIImage * (^)(IntercomSDK_PINRemoteImageManagerResult *, unsigned long long *))arg4;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 processorKey:(NSString *)arg2 processor:(UIImage * (^)(IntercomSDK_PINRemoteImageManagerResult *, unsigned long long *))arg3;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 placeholderImage:(UIImage *)arg2 completion:(void (^)(IntercomSDK_PINRemoteImageManagerResult *))arg3;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 completion:(void (^)(IntercomSDK_PINRemoteImageManagerResult *))arg2;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1 placeholderImage:(UIImage *)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(NSURL *)arg1;

@optional
- (unsigned long long)pin_defaultOptions;
- (void)pin_updateUIWithRemoteImageManagerResult:(IntercomSDK_PINRemoteImageManagerResult *)arg1;
@end

@protocol PINURLSessionManagerDelegate <NSObject>
- (void)didCompleteTask:(NSURLSessionTask *)arg1 withError:(NSError *)arg2;
- (void)didReceiveData:(NSData *)arg1 forTask:(NSURLSessionTask *)arg2;

@optional
- (void)didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg1 forTask:(NSURLSessionTask *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
@end

@protocol SFSafariViewControllerDelegate <NSObject>

@optional
- (void)safariViewController:(SFSafariViewController *)arg1 initialLoadDidRedirectToURL:(NSURL *)arg2;
- (void)safariViewController:(SFSafariViewController *)arg1 didCompleteInitialLoad:(_Bool)arg2;
- (void)safariViewControllerDidFinish:(SFSafariViewController *)arg1;
- (NSArray *)safariViewController:(SFSafariViewController *)arg1 excludedActivityTypesForURL:(NSURL *)arg2 title:(NSString *)arg3;
- (NSArray *)safariViewController:(SFSafariViewController *)arg1 activityItemsForURL:(NSURL *)arg2 title:(NSString *)arg3;
@end

@protocol SKPaymentTransactionObserver <NSObject>
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedTransactions:(NSArray *)arg2;

@optional
- (_Bool)paymentQueue:(SKPaymentQueue *)arg1 shouldAddStorePayment:(SKPayment *)arg2 forProduct:(SKProduct *)arg3;
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedDownloads:(NSArray *)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(SKPaymentQueue *)arg1;
- (void)paymentQueue:(SKPaymentQueue *)arg1 restoreCompletedTransactionsFailedWithError:(NSError *)arg2;
- (void)paymentQueue:(SKPaymentQueue *)arg1 removedTransactions:(NSArray *)arg2;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol SRWebSocketDelegate <NSObject>
- (void)webSocket:(IntercomSDK_SRWebSocket *)arg1 didReceiveMessage:(id)arg2;

@optional
- (_Bool)webSocketShouldConvertTextFrameToString:(IntercomSDK_SRWebSocket *)arg1;
- (void)webSocket:(IntercomSDK_SRWebSocket *)arg1 didReceivePong:(NSData *)arg2;
- (void)webSocket:(IntercomSDK_SRWebSocket *)arg1 didCloseWithCode:(long long)arg2 reason:(NSString *)arg3 wasClean:(_Bool)arg4;
- (void)webSocket:(IntercomSDK_SRWebSocket *)arg1 didFailWithError:(NSError *)arg2;
- (void)webSocketDidOpen:(IntercomSDK_SRWebSocket *)arg1;
@end

@protocol UIActionSheetDelegate <NSObject>

@optional
- (void)actionSheet:(UIActionSheet *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)actionSheet:(UIActionSheet *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentActionSheet:(UIActionSheet *)arg1;
- (void)willPresentActionSheet:(UIActionSheet *)arg1;
- (void)actionSheetCancel:(UIActionSheet *)arg1;
- (void)actionSheet:(UIActionSheet *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIAdaptivePresentationControllerDelegate <NSObject>

@optional
- (void)presentationController:(UIPresentationController *)arg1 willPresentWithAdaptiveStyle:(long long)arg2 transitionCoordinator:(id <UIViewControllerTransitionCoordinator>)arg3;
- (UIViewController *)presentationController:(UIPresentationController *)arg1 viewControllerForAdaptivePresentationStyle:(long long)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1 traitCollection:(UITraitCollection *)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(UIPresentationController *)arg1;
@end

@protocol UIAlertViewDelegate <NSObject>

@optional
- (_Bool)alertViewShouldEnableFirstOtherButton:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(UIAlertView *)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(UIAlertView *)arg1;
- (void)willPresentAlertView:(UIAlertView *)arg1;
- (void)alertViewCancel:(UIAlertView *)arg1;
- (void)alertView:(UIAlertView *)arg1 clickedButtonAtIndex:(long long)arg2;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
@property(nonatomic, retain) UIWindow *window;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UIBarPositioningDelegate <NSObject>

@optional
- (long long)positionForBar:(id <UIBarPositioning>)arg1;
@end

@protocol UICollectionViewDataSource <NSObject>
- (UICollectionViewCell *)collectionView:(UICollectionView *)arg1 cellForItemAtIndexPath:(NSIndexPath *)arg2;
- (long long)collectionView:(UICollectionView *)arg1 numberOfItemsInSection:(long long)arg2;

@optional
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 indexPathForIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)indexTitlesForCollectionView:(UICollectionView *)arg1;
- (void)collectionView:(UICollectionView *)arg1 moveItemAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 canMoveItemAtIndexPath:(NSIndexPath *)arg2;
- (UICollectionReusableView *)collectionView:(UICollectionView *)arg1 viewForSupplementaryElementOfKind:(NSString *)arg2 atIndexPath:(NSIndexPath *)arg3;
- (long long)numberOfSectionsInCollectionView:(UICollectionView *)arg1;
@end

@protocol UICollectionViewDelegate <UIScrollViewDelegate>

@optional
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSpringLoadItemAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (struct CGPoint)collectionView:(UICollectionView *)arg1 targetContentOffsetForProposedContentOffset:(struct CGPoint)arg2;
- (NSIndexPath *)collectionView:(UICollectionView *)arg1 targetIndexPathForMoveFromItemAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (NSIndexPath *)indexPathForPreferredFocusedViewInCollectionView:(UICollectionView *)arg1;
- (void)collectionView:(UICollectionView *)arg1 didUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldUpdateFocusInContext:(UICollectionViewFocusUpdateContext *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 canFocusItemAtIndexPath:(NSIndexPath *)arg2;
- (UICollectionViewTransitionLayout *)collectionView:(UICollectionView *)arg1 transitionLayoutForOldLayout:(UICollectionViewLayout *)arg2 newLayout:(UICollectionViewLayout *)arg3;
- (void)collectionView:(UICollectionView *)arg1 performAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 canPerformAction:(SEL)arg2 forItemAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldShowMenuForItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingSupplementaryView:(UICollectionReusableView *)arg2 forElementOfKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 didEndDisplayingCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 willDisplaySupplementaryView:(UICollectionReusableView *)arg2 forElementKind:(NSString *)arg3 atIndexPath:(NSIndexPath *)arg4;
- (void)collectionView:(UICollectionView *)arg1 willDisplayCell:(UICollectionViewCell *)arg2 forItemAtIndexPath:(NSIndexPath *)arg3;
- (void)collectionView:(UICollectionView *)arg1 didDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldDeselectItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldSelectItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didUnhighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (void)collectionView:(UICollectionView *)arg1 didHighlightItemAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)collectionView:(UICollectionView *)arg1 shouldHighlightItemAtIndexPath:(NSIndexPath *)arg2;
@end

@protocol UICollectionViewDelegateFlowLayout <UICollectionViewDelegate>

@optional
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForFooterInSection:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct UIEdgeInsets)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(UICollectionView *)arg1 layout:(UICollectionViewLayout *)arg2 sizeForItemAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UIDocumentMenuDelegate <NSObject>
- (void)documentMenu:(UIDocumentMenuViewController *)arg1 didPickDocumentPicker:(UIDocumentPickerViewController *)arg2;

@optional
- (void)documentMenuWasCancelled:(UIDocumentMenuViewController *)arg1;
@end

@protocol UIDocumentPickerDelegate <NSObject>

@optional
- (void)documentPicker:(UIDocumentPickerViewController *)arg1 didPickDocumentAtURL:(NSURL *)arg2;
- (void)documentPickerWasCancelled:(UIDocumentPickerViewController *)arg1;
- (void)documentPicker:(UIDocumentPickerViewController *)arg1 didPickDocumentsAtURLs:(NSArray *)arg2;
@end

@protocol UIGestureRecognizerDelegate <NSObject>

@optional
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceivePress:(UIPress *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldReceiveTouch:(UITouch *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldBeRequiredToFailByGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizer:(UIGestureRecognizer *)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(UIGestureRecognizer *)arg2;
- (_Bool)gestureRecognizerShouldBegin:(UIGestureRecognizer *)arg1;
@end

@protocol UIImagePickerControllerDelegate <NSObject>

@optional
- (void)imagePickerControllerDidCancel:(UIImagePickerController *)arg1;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingMediaWithInfo:(NSDictionary *)arg2;
- (void)imagePickerController:(UIImagePickerController *)arg1 didFinishPickingImage:(UIImage *)arg2 editingInfo:(NSDictionary *)arg3;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIPageViewControllerDataSource <NSObject>
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerAfterViewController:(UIViewController *)arg2;
- (UIViewController *)pageViewController:(UIPageViewController *)arg1 viewControllerBeforeViewController:(UIViewController *)arg2;

@optional
- (long long)presentationIndexForPageViewController:(UIPageViewController *)arg1;
- (long long)presentationCountForPageViewController:(UIPageViewController *)arg1;
@end

@protocol UIPageViewControllerDelegate <NSObject>

@optional
- (long long)pageViewControllerPreferredInterfaceOrientationForPresentation:(UIPageViewController *)arg1;
- (unsigned long long)pageViewControllerSupportedInterfaceOrientations:(UIPageViewController *)arg1;
- (long long)pageViewController:(UIPageViewController *)arg1 spineLocationForInterfaceOrientation:(long long)arg2;
- (void)pageViewController:(UIPageViewController *)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(NSArray *)arg3 transitionCompleted:(_Bool)arg4;
- (void)pageViewController:(UIPageViewController *)arg1 willTransitionToViewControllers:(NSArray *)arg2;
@end

@protocol UIPopoverPresentationControllerDelegate <UIAdaptivePresentationControllerDelegate>

@optional
- (void)popoverPresentationController:(UIPopoverPresentationController *)arg1 willRepositionPopoverToRect:(struct CGRect *)arg2 inView:(id *)arg3;
- (void)popoverPresentationControllerDidDismissPopover:(UIPopoverPresentationController *)arg1;
- (_Bool)popoverPresentationControllerShouldDismissPopover:(UIPopoverPresentationController *)arg1;
- (void)prepareForPopoverPresentation:(UIPopoverPresentationController *)arg1;
@end

@protocol UIPreviewActionItem <NSObject>
@property(nonatomic, readonly) NSString *title;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidChangeAdjustedContentInset:(UIScrollView *)arg1;
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UISearchBarDelegate <UIBarPositioningDelegate>

@optional
- (void)searchBar:(UISearchBar *)arg1 selectedScopeButtonIndexDidChange:(long long)arg2;
- (void)searchBarResultsListButtonClicked:(UISearchBar *)arg1;
- (void)searchBarCancelButtonClicked:(UISearchBar *)arg1;
- (void)searchBarBookmarkButtonClicked:(UISearchBar *)arg1;
- (void)searchBarSearchButtonClicked:(UISearchBar *)arg1;
- (_Bool)searchBar:(UISearchBar *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)searchBar:(UISearchBar *)arg1 textDidChange:(NSString *)arg2;
- (void)searchBarTextDidEndEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldEndEditing:(UISearchBar *)arg1;
- (void)searchBarTextDidBeginEditing:(UISearchBar *)arg1;
- (_Bool)searchBarShouldBeginEditing:(UISearchBar *)arg1;
@end

@protocol UISearchControllerDelegate <NSObject>

@optional
- (void)presentSearchController:(UISearchController *)arg1;
- (void)didDismissSearchController:(UISearchController *)arg1;
- (void)willDismissSearchController:(UISearchController *)arg1;
- (void)didPresentSearchController:(UISearchController *)arg1;
- (void)willPresentSearchController:(UISearchController *)arg1;
@end

@protocol UISearchResultsUpdating <NSObject>
- (void)updateSearchResultsForSearchController:(UISearchController *)arg1;
@end

@protocol UITabBarControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)tabBarController:(UITabBarController *)arg1 animationControllerForTransitionFromViewController:(UIViewController *)arg2 toViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)tabBarController:(UITabBarController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)tabBarControllerPreferredInterfaceOrientationForPresentation:(UITabBarController *)arg1;
- (unsigned long long)tabBarControllerSupportedInterfaceOrientations:(UITabBarController *)arg1;
- (void)tabBarController:(UITabBarController *)arg1 didEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willEndCustomizingViewControllers:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBarController:(UITabBarController *)arg1 willBeginCustomizingViewControllers:(NSArray *)arg2;
- (void)tabBarController:(UITabBarController *)arg1 didSelectViewController:(UIViewController *)arg2;
- (_Bool)tabBarController:(UITabBarController *)arg1 shouldSelectViewController:(UIViewController *)arg2;
@end

@protocol UITabBarDelegate <NSObject>

@optional
- (void)tabBar:(UITabBar *)arg1 didEndCustomizingItems:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBar:(UITabBar *)arg1 willEndCustomizingItems:(NSArray *)arg2 changed:(_Bool)arg3;
- (void)tabBar:(UITabBar *)arg1 didBeginCustomizingItems:(NSArray *)arg2;
- (void)tabBar:(UITabBar *)arg1 willBeginCustomizingItems:(NSArray *)arg2;
- (void)tabBar:(UITabBar *)arg1 didSelectItem:(UITabBarItem *)arg2;
@end

@protocol UITableViewDataSource <NSObject>
- (UITableViewCell *)tableView:(UITableView *)arg1 cellForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 numberOfRowsInSection:(long long)arg2;

@optional
- (void)tableView:(UITableView *)arg1 moveRowAtIndexPath:(NSIndexPath *)arg2 toIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (long long)tableView:(UITableView *)arg1 sectionForSectionIndexTitle:(NSString *)arg2 atIndex:(long long)arg3;
- (NSArray *)sectionIndexTitlesForTableView:(UITableView *)arg1;
- (_Bool)tableView:(UITableView *)arg1 canMoveRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canEditRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForFooterInSection:(long long)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForHeaderInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(UITableView *)arg1;
@end

@protocol UITableViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)tableView:(UITableView *)arg1 shouldSpringLoadRowAtIndexPath:(NSIndexPath *)arg2 withContext:(id <UISpringLoadedInteractionContext>)arg3;
- (NSIndexPath *)indexPathForPreferredFocusedViewInTableView:(UITableView *)arg1;
- (void)tableView:(UITableView *)arg1 didUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2 withAnimationCoordinator:(UIFocusAnimationCoordinator *)arg3;
- (_Bool)tableView:(UITableView *)arg1 shouldUpdateFocusInContext:(UITableViewFocusUpdateContext *)arg2;
- (_Bool)tableView:(UITableView *)arg1 canFocusRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 performAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 canPerformAction:(SEL)arg2 forRowAtIndexPath:(NSIndexPath *)arg3 withSender:(id)arg4;
- (_Bool)tableView:(UITableView *)arg1 shouldShowMenuForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 indentationLevelForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 targetIndexPathForMoveFromRowAtIndexPath:(NSIndexPath *)arg2 toProposedIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 didEndEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 willBeginEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldIndentWhileEditingRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 trailingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (UISwipeActionsConfiguration *)tableView:(UITableView *)arg1 leadingSwipeActionsConfigurationForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSArray *)tableView:(UITableView *)arg1 editActionsForRowAtIndexPath:(NSIndexPath *)arg2;
- (NSString *)tableView:(UITableView *)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 editingStyleForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willDeselectRowAtIndexPath:(NSIndexPath *)arg2;
- (NSIndexPath *)tableView:(UITableView *)arg1 willSelectRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didUnhighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (_Bool)tableView:(UITableView *)arg1 shouldHighlightRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 accessoryButtonTappedForRowWithIndexPath:(NSIndexPath *)arg2;
- (long long)tableView:(UITableView *)arg1 accessoryTypeForRowWithIndexPath:(NSIndexPath *)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForFooterInSection:(long long)arg2;
- (UIView *)tableView:(UITableView *)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 estimatedHeightForRowAtIndexPath:(NSIndexPath *)arg2;
- (double)tableView:(UITableView *)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(UITableView *)arg1 heightForRowAtIndexPath:(NSIndexPath *)arg2;
- (void)tableView:(UITableView *)arg1 didEndDisplayingFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 didEndDisplayingCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayFooterView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayHeaderView:(UIView *)arg2 forSection:(long long)arg3;
- (void)tableView:(UITableView *)arg1 willDisplayCell:(UITableViewCell *)arg2 forRowAtIndexPath:(NSIndexPath *)arg3;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1 reason:(long long)arg2;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
- (id <UIViewImplicitlyAnimating>)interruptibleAnimatorForTransition:(id <UIViewControllerContextTransitioning>)arg1;
@end

@protocol UIViewControllerPreviewingDelegate <NSObject>
- (void)previewingContext:(id <UIViewControllerPreviewing>)arg1 commitViewController:(UIViewController *)arg2;
- (UIViewController *)previewingContext:(id <UIViewControllerPreviewing>)arg1 viewControllerForLocation:(struct CGPoint)arg2;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol UNUserNotificationCenterDelegate <NSObject>

@optional
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 openSettingsForNotification:(UNNotification *)arg2;
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 didReceiveNotificationResponse:(UNNotificationResponse *)arg2 withCompletionHandler:(void (^)(void))arg3;
- (void)userNotificationCenter:(UNUserNotificationCenter *)arg1 willPresentNotification:(UNNotification *)arg2 withCompletionHandler:(void (^)(unsigned long long))arg3;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol WKScriptMessageHandler <NSObject>
- (void)userContentController:(WKUserContentController *)arg1 didReceiveScriptMessage:(WKScriptMessage *)arg2;
@end

@protocol WKUIDelegate <NSObject>

@optional
- (void)webView:(WKWebView *)arg1 commitPreviewingViewController:(UIViewController *)arg2;
- (UIViewController *)webView:(WKWebView *)arg1 previewingViewControllerForElement:(WKPreviewElementInfo *)arg2 defaultActions:(NSArray *)arg3;
- (_Bool)webView:(WKWebView *)arg1 shouldPreviewElement:(WKPreviewElementInfo *)arg2;
- (void)webView:(WKWebView *)arg1 runJavaScriptTextInputPanelWithPrompt:(NSString *)arg2 defaultText:(NSString *)arg3 initiatedByFrame:(WKFrameInfo *)arg4 completionHandler:(void (^)(NSString *))arg5;
- (void)webView:(WKWebView *)arg1 runJavaScriptConfirmPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(_Bool))arg4;
- (void)webView:(WKWebView *)arg1 runJavaScriptAlertPanelWithMessage:(NSString *)arg2 initiatedByFrame:(WKFrameInfo *)arg3 completionHandler:(void (^)(void))arg4;
- (void)webViewDidClose:(WKWebView *)arg1;
- (WKWebView *)webView:(WKWebView *)arg1 createWebViewWithConfiguration:(WKWebViewConfiguration *)arg2 forNavigationAction:(WKNavigationAction *)arg3 windowFeatures:(WKWindowFeatures *)arg4;
@end

@protocol WKURLSchemeHandler <NSObject>
- (void)webView:(WKWebView *)arg1 stopURLSchemeTask:(id <WKURLSchemeTask>)arg2;
- (void)webView:(WKWebView *)arg1 startURLSchemeTask:(id <WKURLSchemeTask>)arg2;
@end

@interface OnePasswordExtension : NSObject
{
}

+ (id)failedToObtainURLStringFromWebViewError;
+ (id)failedToLoadItemProviderDataErrorWithUnderlyingError:(id)arg1;
+ (id)failedToFillFieldsErrorWithLocalizedErrorMessage:(id)arg1 underlyingError:(id)arg2;
+ (id)failedToCollectFieldsErrorWithUnderlyingError:(id)arg1;
+ (id)failedToContactExtensionErrorWithActivityError:(id)arg1;
+ (id)extensionCancelledByUserError;
+ (id)systemAppExtensionAPINotAvailableError;
+ (id)sharedExtension;
- (void)fillLoginIntoWebView:(id)arg1 forViewController:(id)arg2 sender:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createExtensionItemForURLString:(id)arg1 webPageDetails:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)activityViewControllerForItem:(id)arg1 viewController:(id)arg2 sender:(id)arg3 typeIdentifier:(id)arg4;
- (void)processExtensionItem:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)executeFillScript:(id)arg1 inWebView:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fillItemIntoUIWebView:(id)arg1 webViewController:(id)arg2 sender:(id)arg3 showOnlyLogins:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)fillItemIntoWKWebView:(id)arg1 forViewController:(id)arg2 sender:(id)arg3 showOnlyLogins:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)findLoginIn1PasswordWithURLString:(id)arg1 collectedPageDetails:(id)arg2 forWebViewController:(id)arg3 sender:(id)arg4 withWebView:(id)arg5 showOnlyLogins:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;
- (_Bool)isSystemAppExtensionAPIAvailable;
- (void)fillReturnedItems:(id)arg1 intoWebView:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createExtensionItemForWebView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isOnePasswordExtensionActivityType:(id)arg1;
- (void)fillItemIntoWebView:(id)arg1 forViewController:(id)arg2 sender:(id)arg3 showOnlyLogins:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)changePasswordForLoginForURLString:(id)arg1 loginDetails:(id)arg2 passwordGenerationOptions:(id)arg3 forViewController:(id)arg4 sender:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)storeLoginForURLString:(id)arg1 loginDetails:(id)arg2 passwordGenerationOptions:(id)arg3 forViewController:(id)arg4 sender:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)findLoginForURLString:(id)arg1 forViewController:(id)arg2 sender:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)isAppExtensionAvailable;

@end

@interface _TtC5Studo17HomeTabController : _$s15XLPagerTabStrip014ButtonBarPagerbC14ViewControllerCN <UINavigationControllerDelegate>
{
    // Error parsing type: , name: snackBar
    // Error parsing type: , name: menuButton
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
    // Error parsing type: , name: rcDialogShown
    // Error parsing type: , name: emptyNavigationItem
    // Error parsing type: , name: needsToScrollTabStripToIndex
    // Error parsing type: , name: realm
    // Error parsing type: , name: oldTabNavigationItemIds
    // Error parsing type: , name: tabNavigationItems.storage
    // Error parsing type: , name: tabNavigationItemsNotificationToken
    // Error parsing type: , name: oldSideDrawerNavigationItems
    // Error parsing type: , name: sideDrawerNavigationItems.storage
    // Error parsing type: , name: sideDrawerNavigationItemsNotificationToken
    // Error parsing type: , name: tabNavigationVCCache
    // Error parsing type: , name: dialogInfos
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)calendarTriggerOptionsMenu;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)showSupport:(id)arg1;
- (void)showMenu:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UIBarButtonItem *menuButton; // @synthesize menuButton;

@end

@interface _TtCC5Studo17HomeTabController19EmptyNavigationItem : UIViewController
{
    // Error parsing type: , name: indicatorInfo
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _TtCC5Studo17HomeTabController21ExtendedIndicatorInfo : _$s15XLPagerTabStrip13IndicatorInfoCN
{
    // Error parsing type: , name: activeTitle
}

@end

@interface _TtC5Studo16CourseGroupModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18SignInNavigationVC : UINavigationController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithRootViewController:(id)arg1;
- (id)initWithNavigationBarClass:(Class)arg1 toolbarClass:(Class)arg2;
- (void)unwindToSignIn:(id)arg1;
- (void)viewWillAppear:(_Bool)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewDidLoad;

@end

@interface _TtC5Studo12LinkedUnisVC : _TtC5Studo4MbVC <UITableViewDataSource, UITableViewDelegate>
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: items
    // Error parsing type: , name: tableView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)unwindToSettings:(id)arg1;
- (_Bool)shouldPerformSegueWithIdentifier:(id)arg1 sender:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo14LinkedUnisItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo7UniItem : _TtC5Studo14LinkedUnisItem
{
    // Error parsing type: , name: uniDescriptor
    // Error parsing type: , name: uniCredentials
}

@end

@interface _TtC5Studo7AddItem : _TtC5Studo14LinkedUnisItem
{
}

@end

@interface _TtC5Studo14LinkedUnisCell : _TtC5Studo8MbTVCell
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _TtC5Studo17LinkedUnisUniCell : _TtC5Studo14LinkedUnisCell
{
    // Error parsing type: , name: uniName
    // Error parsing type: , name: lastSynced
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *lastSynced; // @synthesize lastSynced;
@property(nonatomic, retain) UILabel *uniName; // @synthesize uniName;

@end

@interface _TtC5Studo24LinkedUnisUniWarningCell : _TtC5Studo17LinkedUnisUniCell
{
    // Error parsing type: , name: errorMessage
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *errorMessage; // @synthesize errorMessage;

@end

@interface _TtC5Studo17LinkedUnisAddCell : _TtC5Studo14LinkedUnisCell
{
    // Error parsing type: , name: title
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *title; // @synthesize title;

@end

@interface _TtC5Studo16MailAttachmentVC : UIViewController
{
    // Error parsing type: , name: webView
    // Error parsing type: , name: request
    // Error parsing type: , name: data
    // Error parsing type: , name: mimeType
    // Error parsing type: , name: uiBarButton
    // Error parsing type: , name: docController
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)barButtonAction;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
@property(nonatomic, retain) UIWebView *webView; // @synthesize webView;

@end

@interface _TtC5Studo15CalendarMinutes : _TtCs12_SwiftObject
{
    // Error parsing type: , name: text
    // Error parsing type: , name: enabled
}

@end

@interface _TtC5Studo14AbstractParser : _TtCs12_SwiftObject
{
    // Error parsing type: , name: persistenceManager
}

@end

@interface _TtCC5Studo14AbstractParser11ParserError : _TtCs12_SwiftObject
{
    // Error parsing type: , name: message
}

@end

@interface _TtCC5Studo14AbstractParser11SilentError : _TtCs12_SwiftObject
{
    // Error parsing type: , name: message
}

@end

@interface _TtCC5Studo14AbstractParser12NetworkError : _TtCs12_SwiftObject
{
    // Error parsing type: , name: message
}

@end

@interface _TtCC5Studo14AbstractParser16LocalizedMessage : _TtCs12_SwiftObject
{
    // Error parsing type: , name: dict
}

@end

@interface _TtCC5Studo14AbstractParser9LoginData : _TtCs12_SwiftObject
{
    // Error parsing type: , name: credentials
    // Error parsing type: , name: loginResult
    // Error parsing type: , name: uniId
    // Error parsing type: , name: message
    // Error parsing type: , name: appIsInForeground
}

@end

@interface _TtC5Studo15ChatToolbarView : UIView <UITextViewDelegate>
{
    // Error parsing type: , name: view
    // Error parsing type: , name: textView
    // Error parsing type: , name: letfButton
    // Error parsing type: , name: leftButtonLabel
    // Error parsing type: , name: rightButton
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: attachmentButton
    // Error parsing type: , name: attachmentContainerView
    // Error parsing type: , name: attachmentView
    // Error parsing type: , name: leftButtonTopConstraint
    // Error parsing type: , name: leftButtonBottomConstraint
    // Error parsing type: , name: rightButtonTopConstraint
    // Error parsing type: , name: rightButtonBottomConstraint
    // Error parsing type: , name: attachmentButtonTopConstraint
    // Error parsing type: , name: attachmentButtonBottomConstraint
    // Error parsing type: , name: attachmentButtonWidthConstraint
    // Error parsing type: , name: attachmentContainerViewHeightConstraint
    // Error parsing type: , name: attachmentViewTopConstraint
    // Error parsing type: , name: textViewHeightConstraint
    // Error parsing type: , name: leftButtonAction
    // Error parsing type: , name: rightButtonAction
    // Error parsing type: , name: attachmentButtonAction
    // Error parsing type: , name: attachmentCloseButtonAction
    // Error parsing type: , name: textViewAction
    // Error parsing type: , name: textViewOnFocusAction
    // Error parsing type: , name: onEdit
    // Error parsing type: , name: keyboardHeight
    // Error parsing type: , name: currentSendMode
    // Error parsing type: , name: privacyType
    // Error parsing type: , name: initialChar
    // Error parsing type: , name: buttonTopAligned
    // Error parsing type: , name: isInEditMode
    // Error parsing type: , name: readyToSend
    // Error parsing type: , name: attachmentContainerViewHeight
    // Error parsing type: , name: originalAttachmentButtonWidth
    // Error parsing type: , name: attachmentButtonWidth
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)didReceiveKeyboardWillWillChangeFrameNotificationWithNotification:(id)arg1;
- (void)deviceOrientationDidChange;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)attachmentCloseButtonAction:(id)arg1;
- (void)attachmentButtonAction:(id)arg1;
- (void)rightButtonAction:(id)arg1;
- (void)letfButtonAction:(id)arg1;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
- (void)dealloc;
- (id)init;
- (id)initWithCoder:(id)arg1;
@property(nonatomic) _Bool buttonTopAligned; // @synthesize buttonTopAligned;
@property(nonatomic, retain) NSLayoutConstraint *textViewHeightConstraint; // @synthesize textViewHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentViewTopConstraint; // @synthesize attachmentViewTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentContainerViewHeightConstraint; // @synthesize attachmentContainerViewHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentButtonWidthConstraint; // @synthesize attachmentButtonWidthConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentButtonBottomConstraint; // @synthesize attachmentButtonBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentButtonTopConstraint; // @synthesize attachmentButtonTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *rightButtonBottomConstraint; // @synthesize rightButtonBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *rightButtonTopConstraint; // @synthesize rightButtonTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *leftButtonBottomConstraint; // @synthesize leftButtonBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *leftButtonTopConstraint; // @synthesize leftButtonTopConstraint;
@property(nonatomic, retain) _TtC5Studo16MbAttachmentView *attachmentView; // @synthesize attachmentView;
@property(nonatomic, retain) UIView *attachmentContainerView; // @synthesize attachmentContainerView;
@property(nonatomic, retain) UIButton *attachmentButton; // @synthesize attachmentButton;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) UIButton *rightButton; // @synthesize rightButton;
@property(nonatomic, retain) UILabel *leftButtonLabel; // @synthesize leftButtonLabel;
@property(nonatomic, retain) UIButton *letfButton; // @synthesize letfButton;
@property(nonatomic, retain) UITextView *textView; // @synthesize textView;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo14CalendarWeekVC : _TtC5Studo6HomeVC <UIViewControllerPreviewingDelegate>
{
    // Error parsing type: , name: pageViews
    // Error parsing type: , name: pageCount
    // Error parsing type: , name: pastPageCount
    // Error parsing type: , name: futurePageCount
    // Error parsing type: , name: thisMonday
    // Error parsing type: , name: oldSize
    // Error parsing type: , name: currentPage.storage
    // Error parsing type: , name: cal
    // Error parsing type: , name: scrollView
    // Error parsing type: , name: swipeHint
    // Error parsing type: , name: interstitial
    // Error parsing type: , name: showInterstitial
    // Error parsing type: , name: rewardVideo
    // Error parsing type: , name: swipeHintAnimating
    // Error parsing type: , name: notificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: lastVisitDate
    // Error parsing type: , name: showRewardDialog
    // Error parsing type: , name: deeplinkToHandle
    // Error parsing type: , name: shouldRefreshCalendarAndShowSuccessDialog
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: shouldShowReenableEventsSnackbar
    // Error parsing type: , name: initialValiDate
    // Error parsing type: , name: lastTitle
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (void)onUnlockCalendarClicked:(id)arg1;
- (void)onProBannerClick:(id)arg1;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)viewDidLayoutSubviews;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIImageView *swipeHint; // @synthesize swipeHint;
@property(nonatomic, retain) UIScrollView *scrollView; // @synthesize scrollView;

@end

@interface _TtC5Studo9SmsInfoVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: subtitleLabel
    // Error parsing type: , name: button
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)buttonAction:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo24ReoccurringEventPickerVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: tableData
    // Error parsing type: , name: selectedCellIndex
    // Error parsing type: , name: delegate
    // Error parsing type: , name: currentFrequency
    // Error parsing type: , name: reoccurringUntil
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo12CalendarView : _TtC5Studo10CustomView
{
    // Error parsing type: , name: onItemClickListener
    // Error parsing type: , name: backgroundPaint
    // Error parsing type: , name: eventPaint
    // Error parsing type: , name: eventBackgroundPaint
    // Error parsing type: , name: eventTextPaint
    // Error parsing type: , name: linePaint
    // Error parsing type: , name: captionPaint
    // Error parsing type: , name: currentTimePaint
    // Error parsing type: , name: currentDayPaint
    // Error parsing type: , name: backgroundLineVisibilty
    // Error parsing type: , name: backgroundLineCaptionVisibilty
    // Error parsing type: , name: fullDayHeaderHeight
    // Error parsing type: , name: intDates
    // Error parsing type: , name: dates
    // Error parsing type: , name: weekdays
    // Error parsing type: , name: weekdayPos
    // Error parsing type: , name: weekendEvents
    // Error parsing type: , name: startTime
    // Error parsing type: , name: events
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface _TtC5Studo14ChatNewTopicVC : _TtC5Studo6ChatVC
{
    // Error parsing type: , name: messageTypeBackgroundView
    // Error parsing type: , name: messageTypeLabel
    // Error parsing type: , name: messageTypeButton
    // Error parsing type: , name: chatToolbar
    // Error parsing type: , name: bottomLayoutToChatToolbarConstraint
    // Error parsing type: , name: headerCell
    // Error parsing type: , name: headerCellHeightConstraint
    // Error parsing type: , name: presenter
    // Error parsing type: , name: channelId
    // Error parsing type: , name: tabId
    // Error parsing type: , name: topicTypes
    // Error parsing type: , name: selectedTopicType
    // Error parsing type: , name: privacyType
    // Error parsing type: , name: imagePicker
    // Error parsing type: , name: currentAttachment
    // Error parsing type: , name: filePicker
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didReceiveKeyboardNotificationWithNotification:(id)arg1;
- (void)messageTypeButtonAction:(id)arg1;
- (void)cancelButtonAction;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *headerCellHeightConstraint; // @synthesize headerCellHeightConstraint;
@property(nonatomic, retain) _TtC5Studo21ChatMessageHeaderCell *headerCell; // @synthesize headerCell;
@property(nonatomic, retain) NSLayoutConstraint *bottomLayoutToChatToolbarConstraint; // @synthesize bottomLayoutToChatToolbarConstraint;
@property(nonatomic, retain) _TtC5Studo15ChatToolbarView *chatToolbar; // @synthesize chatToolbar;
@property(nonatomic, retain) UIButton *messageTypeButton; // @synthesize messageTypeButton;
@property(nonatomic, retain) UILabel *messageTypeLabel; // @synthesize messageTypeLabel;
@property(nonatomic, retain) UIView *messageTypeBackgroundView; // @synthesize messageTypeBackgroundView;

@end

@interface _TtC5Studo11SelectUniVC : _TtC5Studo11AuthManager <UISearchControllerDelegate, UISearchResultsUpdating>
{
    // Error parsing type: , name: searchResultsData
    // Error parsing type: , name: notificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: federalState
    // Error parsing type: , name: country
    // Error parsing type: , name: uniSearch
    // Error parsing type: , name: tableView
    // Error parsing type: , name: hint
    // Error parsing type: , name: hintVisible
    // Error parsing type: , name: hintHidden
    // Error parsing type: , name: hintInfo
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didDismissSearchController:(id)arg1;
- (void)didPresentSearchController:(id)arg1;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)onBackPressed:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
@property(nonatomic, retain) UIImageView *hintInfo; // @synthesize hintInfo;
@property(nonatomic, retain) NSLayoutConstraint *hintHidden; // @synthesize hintHidden;
@property(nonatomic, retain) NSLayoutConstraint *hintVisible; // @synthesize hintVisible;
@property(nonatomic, retain) UILabel *hint; // @synthesize hint;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo26WorkloadSliderTrackerModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo26AbstractPersistenceManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo7LunchVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: date
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: items
    // Error parsing type: , name: tableView
    // Error parsing type: , name: emptyView
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UILabel *emptyView; // @synthesize emptyView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;
- (void)viewWillDisappear:(_Bool)arg1;

@end

@interface _TtC5Studo4Item : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo8DateItem : _TtC5Studo4Item
{
    // Error parsing type: , name: date
}

@end

@interface _TtC5Studo14RestaurantItem : _TtC5Studo4Item
{
    // Error parsing type: , name: restaurantName
    // Error parsing type: , name: restaurantAddress
    // Error parsing type: , name: logoUrl
    // Error parsing type: , name: restaurantId
}

@end

@interface _TtC5Studo10SloganItem : _TtC5Studo4Item
{
    // Error parsing type: , name: slogan
}

@end

@interface _TtC5Studo8MenuItem : _TtC5Studo4Item
{
    // Error parsing type: , name: menuEntry
}

@end

@interface _TtC5Studo12FreeTextItem : _TtC5Studo4Item
{
    // Error parsing type: , name: menuEntry
}

@end

@interface _TtC5Studo8MoreItem : _TtC5Studo4Item
{
    // Error parsing type: , name: date
}

@end

@interface _TtC5Studo8DateCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: date
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *date; // @synthesize date;

@end

@interface _TtC5Studo14RestaurantCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: restaurantTag
    // Error parsing type: , name: restaurantLogo
    // Error parsing type: , name: restaurantName
    // Error parsing type: , name: restaurantAddress
    // Error parsing type: , name: favButton
    // Error parsing type: , name: isFav
    // Error parsing type: , name: restaurantId
    // Error parsing type: , name: lunchVC
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)favButtonAction:(id)arg1;
@property(nonatomic, retain) UIButton *favButton; // @synthesize favButton;
@property(nonatomic, retain) UILabel *restaurantAddress; // @synthesize restaurantAddress;
@property(nonatomic, retain) UILabel *restaurantName; // @synthesize restaurantName;
@property(nonatomic, retain) UIImageView *restaurantLogo; // @synthesize restaurantLogo;
@property(nonatomic, retain) UILabel *restaurantTag; // @synthesize restaurantTag;

@end

@interface _TtC5Studo10SloganCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: slogan
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *slogan; // @synthesize slogan;

@end

@interface _TtC5Studo8MenuCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: menuName
    // Error parsing type: , name: menuInfo
    // Error parsing type: , name: menuPrice
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *menuPrice; // @synthesize menuPrice;
@property(nonatomic, retain) UILabel *menuInfo; // @synthesize menuInfo;
@property(nonatomic, retain) UILabel *menuName; // @synthesize menuName;

@end

@interface _TtC5Studo12FreeTextCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: freeText
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *freeText; // @synthesize freeText;

@end

@interface _TtC5Studo8MoreCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: more
    // Error parsing type: , name: data
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *more; // @synthesize more;

@end

@interface _TtC5Studo8SmsPinVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: pin1
    // Error parsing type: , name: lineView1
    // Error parsing type: , name: pin2
    // Error parsing type: , name: lineView2
    // Error parsing type: , name: pin3
    // Error parsing type: , name: lineView3
    // Error parsing type: , name: pin4
    // Error parsing type: , name: lineView4
    // Error parsing type: , name: errorLabel
    // Error parsing type: , name: button
    // Error parsing type: , name: statusLabel
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: diallingCode
    // Error parsing type: , name: number
    // Error parsing type: , name: secret
    // Error parsing type: , name: timerSeconds
    // Error parsing type: , name: timer
    // Error parsing type: , name: createNewUser
    // Error parsing type: , name: isMigration
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)buttonAction:(id)arg1;
- (void)pinDidEndEditing:(id)arg1;
- (void)pinDidBeginEditing:(id)arg1;
- (void)pinChanged:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) UILabel *statusLabel; // @synthesize statusLabel;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UILabel *errorLabel; // @synthesize errorLabel;
@property(nonatomic, retain) UIView *lineView4; // @synthesize lineView4;
@property(nonatomic, retain) UITextField *pin4; // @synthesize pin4;
@property(nonatomic, retain) UIView *lineView3; // @synthesize lineView3;
@property(nonatomic, retain) UITextField *pin3; // @synthesize pin3;
@property(nonatomic, retain) UIView *lineView2; // @synthesize lineView2;
@property(nonatomic, retain) UITextField *pin2; // @synthesize pin2;
@property(nonatomic, retain) UIView *lineView1; // @synthesize lineView1;
@property(nonatomic, retain) UITextField *pin1; // @synthesize pin1;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo4MbVC : _TtC5Studo18MbLifecycleAwareVC
{
    // Error parsing type: , name: dialog
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)showSupport;
- (void)dismissKeyboardWithSender:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo26BlockingFullscreenDialogVC : _TtC5Studo4MbVC <WKNavigationDelegate>
{
    // Error parsing type: , name: webViewPlaceholderView
    // Error parsing type: , name: webView
    // Error parsing type: , name: stackView
    // Error parsing type: , name: button
    // Error parsing type: , name: stackViewHeightConstraint
    // Error parsing type: , name: loadingView
    // Error parsing type: , name: attributes
    // Error parsing type: , name: checkedBoxes
    // Error parsing type: , name: afterDismissAction
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)deviceOrientationDidChange;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)buttonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
@property(nonatomic, retain) UIView *loadingView; // @synthesize loadingView;
@property(nonatomic, retain) NSLayoutConstraint *stackViewHeightConstraint; // @synthesize stackViewHeightConstraint;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UIStackView *stackView; // @synthesize stackView;
@property(nonatomic, retain) UIView *webViewPlaceholderView; // @synthesize webViewPlaceholderView;

@end

@interface _TtC5Studo7AboutVC : _TtC5Studo4MbVC <UIWebViewDelegate, MFMailComposeViewControllerDelegate>
{
    // Error parsing type: , name: webView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)crashFunc;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)sendLog:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
@property(nonatomic, retain) UIWebView *webView; // @synthesize webView;
- (void)viewDidLoad;

@end

@interface _TtC5Studo6HomeVC : _TtC5Studo4MbVC <UIPopoverPresentationControllerDelegate>
{
    // Error parsing type: , name: homeVCTableView
    // Error parsing type: , name: refreshControl
    // Error parsing type: , name: segueHandled
    // Error parsing type: , name: localizedName
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)viewDidLoad;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)refresh;

@end

@interface _TtC5Studo5Event : _TtCs12_SwiftObject
{
    // Error parsing type: , name: weekStartDate
    // Error parsing type: , name: weekEndDate
    // Error parsing type: , name: data
    // Error parsing type: , name: eventStartWeekday
    // Error parsing type: , name: eventEndWeekday
    // Error parsing type: , name: start
    // Error parsing type: , name: end
    // Error parsing type: , name: initials
    // Error parsing type: , name: url
    // Error parsing type: , name: isPressed
    // Error parsing type: , name: eventIndex
    // Error parsing type: , name: isFullDayEvent
}

@end

@interface _TtC5Studo19ChatTopicOverviewVC : _TtC5Studo6ChatVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: fab
    // Error parsing type: , name: loadingActivityIndicator
    // Error parsing type: , name: headerCell
    // Error parsing type: , name: headerCellHeightConstraint
    // Error parsing type: , name: emptyChannelTextView
    // Error parsing type: , name: presenter
    // Error parsing type: , name: tableData
    // Error parsing type: , name: channelId
    // Error parsing type: , name: tabId
    // Error parsing type: , name: votingType
    // Error parsing type: , name: createdNewTopic
    // Error parsing type: , name: currentlyLoadingOnScroll
    // Error parsing type: , name: loadOnScrollDownwardsThreshold
    // Error parsing type: , name: loadOnScrollUpwardsThreshold
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)willEnterForeground;
- (void)fabAction:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)longPressRecognizer:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *emptyChannelTextView; // @synthesize emptyChannelTextView;
@property(nonatomic, retain) NSLayoutConstraint *headerCellHeightConstraint; // @synthesize headerCellHeightConstraint;
@property(nonatomic, retain) _TtC5Studo21ChatMessageHeaderCell *headerCell; // @synthesize headerCell;
@property(nonatomic, retain) UIActivityIndicatorView *loadingActivityIndicator; // @synthesize loadingActivityIndicator;
@property(nonatomic, retain) UIButton *fab; // @synthesize fab;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo13SignInStudoVC : _TtC5Studo11AuthManager <UITextFieldDelegate>
{
    // Error parsing type: , name: emailTextField
    // Error parsing type: , name: passwordTextField
    // Error parsing type: , name: signInButton
    // Error parsing type: , name: passwordManagerButton
    // Error parsing type: , name: titelLabel
    // Error parsing type: , name: haveYouLabel
    // Error parsing type: , name: forgotPasswordButton
    // Error parsing type: , name: backButton
    // Error parsing type: , name: moreButton
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)passwordManagerClick:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)moreButtonAction:(id)arg1;
- (void)signIn:(id)arg1;
- (void)onBackPressed:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
@property(nonatomic, retain) UIButton *moreButton; // @synthesize moreButton;
@property(nonatomic, retain) UIButton *backButton; // @synthesize backButton;
@property(nonatomic, retain) UIButton *forgotPasswordButton; // @synthesize forgotPasswordButton;
@property(nonatomic, retain) UILabel *haveYouLabel; // @synthesize haveYouLabel;
@property(nonatomic, retain) UILabel *titelLabel; // @synthesize titelLabel;
@property(nonatomic, retain) UIButton *passwordManagerButton; // @synthesize passwordManagerButton;
@property(nonatomic, retain) _TtC5Studo8MbButton *signInButton; // @synthesize signInButton;
@property(nonatomic, retain) UITextField *passwordTextField; // @synthesize passwordTextField;
@property(nonatomic, retain) UITextField *emailTextField; // @synthesize emailTextField;

@end

@interface _TtC5Studo23LocalPersistenceManager : _TtC5Studo26AbstractPersistenceManager
{
    // Error parsing type: , name: parserState
}

@end

@interface _TtC5Studo8GradesVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: tableView
    // Error parsing type: , name: emptyView
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UILabel *emptyView; // @synthesize emptyView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo9GradeCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: title
    // Error parsing type: , name: info
    // Error parsing type: , name: date
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *date; // @synthesize date;
@property(nonatomic, retain) UILabel *info; // @synthesize info;
@property(nonatomic, retain) UILabel *title; // @synthesize title;

@end

@interface _TtC5Studo14UniCredentials : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: username
    // Error parsing type: , name: password
    // Error parsing type: , name: uniUserId
    // Error parsing type: , name: temporary
    // Error parsing type: , name: lastSuccessfulFullSync
    // Error parsing type: , name: syncCount
    // Error parsing type: , name: profileUrl
    // Error parsing type: , name: firstName
    // Error parsing type: , name: lastName
    // Error parsing type: , name: matrikelNumber
    // Error parsing type: , name: webmailUsername
    // Error parsing type: , name: webmailPassword
    // Error parsing type: , name: valid
    // Error parsing type: , name: forcePasswordChange
    // Error parsing type: , name: emailAddress
    // Error parsing type: , name: syncFailLevel
    // Error parsing type: , name: nativeMailUsername
    // Error parsing type: , name: nativeMailPassword
    // Error parsing type: , name: nativeMailValid
    // Error parsing type: , name: lastSuccessfulMailSync
    // Error parsing type: , name: lastUnsuccessfulMailSync
    // Error parsing type: , name: parserErrorMessage
    // Error parsing type: , name: parserErrorResolveUrl
    // Error parsing type: , name: emailAddressParsed
    // Error parsing type: , name: lastParserConnection
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long lastParserConnection; // @synthesize lastParserConnection;
@property(nonatomic) _Bool emailAddressParsed; // @synthesize emailAddressParsed;
@property(nonatomic, copy) NSString *parserErrorResolveUrl; // @synthesize parserErrorResolveUrl;
@property(nonatomic, copy) NSString *parserErrorMessage; // @synthesize parserErrorMessage;
@property(nonatomic) long long lastUnsuccessfulMailSync; // @synthesize lastUnsuccessfulMailSync;
@property(nonatomic) long long lastSuccessfulMailSync; // @synthesize lastSuccessfulMailSync;
@property(nonatomic) _Bool nativeMailValid; // @synthesize nativeMailValid;
@property(nonatomic, copy) NSString *nativeMailPassword; // @synthesize nativeMailPassword;
@property(nonatomic, copy) NSString *nativeMailUsername; // @synthesize nativeMailUsername;
@property(nonatomic) long long syncFailLevel; // @synthesize syncFailLevel;
@property(nonatomic, copy) NSString *emailAddress; // @synthesize emailAddress;
@property(nonatomic) _Bool forcePasswordChange; // @synthesize forcePasswordChange;
@property(nonatomic) _Bool valid; // @synthesize valid;
@property(nonatomic, copy) NSString *webmailPassword; // @synthesize webmailPassword;
@property(nonatomic, copy) NSString *webmailUsername; // @synthesize webmailUsername;
@property(nonatomic, copy) NSString *matrikelNumber; // @synthesize matrikelNumber;
@property(nonatomic, copy) NSString *lastName; // @synthesize lastName;
@property(nonatomic, copy) NSString *firstName; // @synthesize firstName;
@property(nonatomic, copy) NSString *profileUrl; // @synthesize profileUrl;
@property(nonatomic) long long syncCount; // @synthesize syncCount;
@property(nonatomic) long long lastSuccessfulFullSync; // @synthesize lastSuccessfulFullSync;
@property(nonatomic) _Bool temporary; // @synthesize temporary;
@property(nonatomic, copy) NSString *uniUserId; // @synthesize uniUserId;
@property(nonatomic, copy) NSString *password; // @synthesize password;
@property(nonatomic, copy) NSString *username; // @synthesize username;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;

@end

@interface _TtC5Studo6Course : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: subtitle
    // Error parsing type: , name: semester
    // Error parsing type: , name: type
    // Error parsing type: , name: section
    // Error parsing type: , name: active
    // Error parsing type: , name: examRegistrationAvailable
    // Error parsing type: , name: imageUrl
    // Error parsing type: , name: courseInfo
}

+ (id)indexedProperties;
+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *imageUrl; // @synthesize imageUrl;
@property(nonatomic) _Bool examRegistrationAvailable; // @synthesize examRegistrationAvailable;
@property(nonatomic) _Bool active; // @synthesize active;
@property(nonatomic, copy) NSString *section; // @synthesize section;
@property(nonatomic, copy) NSString *type; // @synthesize type;
@property(nonatomic, copy) NSString *semester; // @synthesize semester;
@property(nonatomic, copy) NSString *subtitle; // @synthesize subtitle;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo10CourseInfo : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: url
    // Error parsing type: , name: text
}

- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;

@end

@interface _TtC5Studo10StudyState : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: curriculumUrl
    // Error parsing type: , name: studyPlanName
    // Error parsing type: , name: detailUrl
    // Error parsing type: , name: active
}

+ (id)primaryKey;
+ (id)indexedProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool active; // @synthesize active;
@property(nonatomic, copy) NSString *detailUrl; // @synthesize detailUrl;
@property(nonatomic, copy) NSString *studyPlanName; // @synthesize studyPlanName;
@property(nonatomic, copy) NSString *curriculumUrl; // @synthesize curriculumUrl;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo10ExamResult : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: date
    // Error parsing type: , name: grade
    // Error parsing type: , name: courseId
    // Error parsing type: , name: name
    // Error parsing type: , name: subgradesCount
    // Error parsing type: , name: subgradesUrl
    // Error parsing type: , name: detailUrl
}

+ (id)primaryKey;
+ (id)indexedProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *detailUrl; // @synthesize detailUrl;
@property(nonatomic, copy) NSString *subgradesUrl; // @synthesize subgradesUrl;
@property(nonatomic, copy) NSString *subgradesCount; // @synthesize subgradesCount;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *courseId; // @synthesize courseId;
@property(nonatomic, copy) NSString *grade; // @synthesize grade;
@property(nonatomic, copy) NSString *date; // @synthesize date;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo6Search : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: url
}

+ (id)primaryKey;
+ (id)indexedProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13CalendarEvent : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: id
    // Error parsing type: , name: stateRaw
    // Error parsing type: , name: url
    // Error parsing type: , name: summary
    // Error parsing type: , name: eventDescription
    // Error parsing type: , name: initials
    // Error parsing type: , name: startDate
    // Error parsing type: , name: endDate
    // Error parsing type: , name: startMinute
    // Error parsing type: , name: endMinute
    // Error parsing type: , name: latitude
    // Error parsing type: , name: longitude
    // Error parsing type: , name: location
    // Error parsing type: , name: fixRaw
    // Error parsing type: , name: typeRaw
    // Error parsing type: , name: studoRoomId
    // Error parsing type: , name: groupName
    // Error parsing type: , name: customEvent
    // Error parsing type: , name: color
    // Error parsing type: , name: studoCourseId
    // Error parsing type: , name: note
    // Error parsing type: , name: hidden
    // Error parsing type: , name: notificationSecondsRaw
    // Error parsing type: , name: reoccurringFrequencyRaw
    // Error parsing type: , name: reoccurringUntil
    // Error parsing type: , name: reoccurringExDatesRaw
    // Error parsing type: , name: feedId
}

+ (id)ignoredProperties;
+ (id)indexedProperties;
+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *feedId; // @synthesize feedId;
@property(nonatomic, copy) NSString *reoccurringExDatesRaw; // @synthesize reoccurringExDatesRaw;
@property(nonatomic) long long reoccurringUntil; // @synthesize reoccurringUntil;
@property(nonatomic, copy) NSString *reoccurringFrequencyRaw; // @synthesize reoccurringFrequencyRaw;
@property(nonatomic, copy) NSString *notificationSecondsRaw; // @synthesize notificationSecondsRaw;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic, copy) NSString *note; // @synthesize note;
@property(nonatomic, copy) NSString *studoCourseId; // @synthesize studoCourseId;
@property(nonatomic, copy) NSString *color; // @synthesize color;
@property(nonatomic) _Bool customEvent; // @synthesize customEvent;
@property(nonatomic, copy) NSString *groupName; // @synthesize groupName;
@property(nonatomic, copy) NSString *studoRoomId; // @synthesize studoRoomId;
@property(nonatomic, copy) NSString *typeRaw; // @synthesize typeRaw;
@property(nonatomic, copy) NSString *fixRaw; // @synthesize fixRaw;
@property(nonatomic, copy) NSString *location; // @synthesize location;
@property(nonatomic) double longitude; // @synthesize longitude;
@property(nonatomic) double latitude; // @synthesize latitude;
@property(nonatomic) long long endMinute; // @synthesize endMinute;
@property(nonatomic) long long startMinute; // @synthesize startMinute;
@property(nonatomic) long long endDate; // @synthesize endDate;
@property(nonatomic) long long startDate; // @synthesize startDate;
@property(nonatomic, copy) NSString *initials; // @synthesize initials;
@property(nonatomic, copy) NSString *eventDescription; // @synthesize eventDescription;
@property(nonatomic, copy) NSString *summary; // @synthesize summary;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic, copy) NSString *stateRaw; // @synthesize stateRaw;
@property(nonatomic, copy) NSString *id; // @synthesize id;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;

@end

@interface _TtC5Studo12CalendarFeed : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: color
    // Error parsing type: , name: icalUrl
    // Error parsing type: , name: valid
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool valid; // @synthesize valid;
@property(nonatomic, copy) NSString *icalUrl; // @synthesize icalUrl;
@property(nonatomic, copy) NSString *color; // @synthesize color;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo4Room : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: address
    // Error parsing type: , name: indoorDotLeft
    // Error parsing type: , name: indoorDotTop
    // Error parsing type: , name: namePublic
    // Error parsing type: , name: nameInternal
    // Error parsing type: , name: indoorImgUrl
    // Error parsing type: , name: outdoorImgUrl
    // Error parsing type: , name: outdoorPhotoUrl
    // Error parsing type: , name: infoUrl
    // Error parsing type: , name: studoId
    // Error parsing type: , name: latitude
    // Error parsing type: , name: longitude
}

+ (id)primaryKey;
+ (id)indexedProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) double longitude; // @synthesize longitude;
@property(nonatomic) double latitude; // @synthesize latitude;
@property(nonatomic, copy) NSString *studoId; // @synthesize studoId;
@property(nonatomic, copy) NSString *infoUrl; // @synthesize infoUrl;
@property(nonatomic, copy) NSString *outdoorPhotoUrl; // @synthesize outdoorPhotoUrl;
@property(nonatomic, copy) NSString *outdoorImgUrl; // @synthesize outdoorImgUrl;
@property(nonatomic, copy) NSString *indoorImgUrl; // @synthesize indoorImgUrl;
@property(nonatomic, copy) NSString *nameInternal; // @synthesize nameInternal;
@property(nonatomic, copy) NSString *namePublic; // @synthesize namePublic;
@property(nonatomic) double indoorDotTop; // @synthesize indoorDotTop;
@property(nonatomic) double indoorDotLeft; // @synthesize indoorDotLeft;
@property(nonatomic, copy) NSString *address; // @synthesize address;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13UniDescriptor : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: hidden
    // Error parsing type: , name: name
    // Error parsing type: , name: shortName
    // Error parsing type: , name: beta
    // Error parsing type: , name: uniSystemName
    // Error parsing type: , name: uniSystemLoginHint
    // Error parsing type: , name: uniSystemUsernameHint
    // Error parsing type: , name: parserName
    // Error parsing type: , name: country
    // Error parsing type: , name: city
    // Error parsing type: , name: longitude
    // Error parsing type: , name: latitude
    // Error parsing type: , name: uniSystemChangePasswordUrl
    // Error parsing type: , name: backgroundSyncHours
    // Error parsing type: , name: federalState
    // Error parsing type: , name: sideDrawerBottomImageUrl
    // Error parsing type: , name: uniSystemAllowEmailAsUsername
    // Error parsing type: , name: examRegistrationAvailable
    // Error parsing type: , name: oauthClientId
    // Error parsing type: , name: oauthAuthorizationScope
    // Error parsing type: , name: oauthAuthorizationEndpointUrl
    // Error parsing type: , name: oauthTokenEndpointUrl
    // Error parsing type: , name: uniSystemLoginFormImageUrl
    // Error parsing type: , name: uniSystemLoginFormHint
    // Error parsing type: , name: uniSystemLoginLoadingHint
    // Error parsing type: , name: baseUrl
    // Error parsing type: , name: webmailUsernamePrefix
    // Error parsing type: , name: webmailUsernameSuffix
    // Error parsing type: , name: webmailLoginHint
    // Error parsing type: , name: webmailUsernameHint
    // Error parsing type: , name: webmailLoginUrl
    // Error parsing type: , name: webmailUrl
    // Error parsing type: , name: webmailAutoLoginJs
    // Error parsing type: , name: webmailUrlPrefixes
    // Error parsing type: , name: uniServices
    // Error parsing type: , name: courses
    // Error parsing type: , name: calendar
    // Error parsing type: , name: news
    // Error parsing type: , name: exams
    // Error parsing type: , name: studies
    // Error parsing type: , name: search
    // Error parsing type: , name: rooms
    // Error parsing type: , name: lunch
    // Error parsing type: , name: webmail
    // Error parsing type: , name: nativeMail
    // Error parsing type: , name: chat
    // Error parsing type: , name: newsTabName
    // Error parsing type: , name: nativeMailImapHost
    // Error parsing type: , name: nativeMailImapPort
    // Error parsing type: , name: nativeMailImapConnectionType
    // Error parsing type: , name: nativeMailImapAuthType
    // Error parsing type: , name: nativeMailImapcheckCertificateEnabled
    // Error parsing type: , name: nativeMailSmtpHost
    // Error parsing type: , name: nativeMailSmtpPort
    // Error parsing type: , name: nativeMailSmtpConnectionType
    // Error parsing type: , name: nativeMailSmtpAuthType
    // Error parsing type: , name: nativeMailSmtpcheckCertificateEnabled
    // Error parsing type: , name: nativeMailEnableLoginUI
    // Error parsing type: , name: nativeMailPrefillUsername
    // Error parsing type: , name: nativeMailLoginHint
    // Error parsing type: , name: nativeMailSystemName
    // Error parsing type: , name: nativeMailUsernamePrefix
    // Error parsing type: , name: nativeMailUsernameSuffix
    // Error parsing type: , name: nativeMailSync
    // Error parsing type: , name: nativeMailIgnoredMailFolders
    // Error parsing type: , name: searchKeywords
    // Error parsing type: , name: nativeMailEnableBackgroundDownload
    // Error parsing type: , name: authViaMail
    // Error parsing type: , name: authViaMailAlwaysReturnLoginSuccess
}

+ (id)ignoredProperties;
+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool authViaMailAlwaysReturnLoginSuccess; // @synthesize authViaMailAlwaysReturnLoginSuccess;
@property(nonatomic) _Bool authViaMail; // @synthesize authViaMail;
@property(nonatomic) _Bool nativeMailEnableBackgroundDownload; // @synthesize nativeMailEnableBackgroundDownload;
@property(nonatomic, copy) NSString *searchKeywords; // @synthesize searchKeywords;
@property(nonatomic, copy) NSString *nativeMailIgnoredMailFolders; // @synthesize nativeMailIgnoredMailFolders;
@property(nonatomic) _Bool nativeMailSync; // @synthesize nativeMailSync;
@property(nonatomic, copy) NSString *nativeMailUsernameSuffix; // @synthesize nativeMailUsernameSuffix;
@property(nonatomic, copy) NSString *nativeMailUsernamePrefix; // @synthesize nativeMailUsernamePrefix;
@property(nonatomic, copy) NSString *nativeMailSystemName; // @synthesize nativeMailSystemName;
@property(nonatomic, copy) NSString *nativeMailLoginHint; // @synthesize nativeMailLoginHint;
@property(nonatomic) _Bool nativeMailPrefillUsername; // @synthesize nativeMailPrefillUsername;
@property(nonatomic) _Bool nativeMailEnableLoginUI; // @synthesize nativeMailEnableLoginUI;
@property(nonatomic) _Bool nativeMailSmtpcheckCertificateEnabled; // @synthesize nativeMailSmtpcheckCertificateEnabled;
@property(nonatomic) long long nativeMailSmtpAuthType; // @synthesize nativeMailSmtpAuthType;
@property(nonatomic) long long nativeMailSmtpConnectionType; // @synthesize nativeMailSmtpConnectionType;
@property(nonatomic) long long nativeMailSmtpPort; // @synthesize nativeMailSmtpPort;
@property(nonatomic, copy) NSString *nativeMailSmtpHost; // @synthesize nativeMailSmtpHost;
@property(nonatomic) _Bool nativeMailImapcheckCertificateEnabled; // @synthesize nativeMailImapcheckCertificateEnabled;
@property(nonatomic) long long nativeMailImapAuthType; // @synthesize nativeMailImapAuthType;
@property(nonatomic) long long nativeMailImapConnectionType; // @synthesize nativeMailImapConnectionType;
@property(nonatomic) long long nativeMailImapPort; // @synthesize nativeMailImapPort;
@property(nonatomic, copy) NSString *nativeMailImapHost; // @synthesize nativeMailImapHost;
@property(nonatomic, copy) NSString *newsTabName; // @synthesize newsTabName;
@property(nonatomic) _Bool chat; // @synthesize chat;
@property(nonatomic) _Bool nativeMail; // @synthesize nativeMail;
@property(nonatomic) _Bool webmail; // @synthesize webmail;
@property(nonatomic) _Bool lunch; // @synthesize lunch;
@property(nonatomic) _Bool rooms; // @synthesize rooms;
@property(nonatomic) _Bool search; // @synthesize search;
@property(nonatomic) _Bool studies; // @synthesize studies;
@property(nonatomic) _Bool exams; // @synthesize exams;
@property(nonatomic) _Bool news; // @synthesize news;
@property(nonatomic) _Bool calendar; // @synthesize calendar;
@property(nonatomic) _Bool courses; // @synthesize courses;
@property(nonatomic, copy) NSString *webmailAutoLoginJs; // @synthesize webmailAutoLoginJs;
@property(nonatomic, copy) NSString *webmailUrl; // @synthesize webmailUrl;
@property(nonatomic, copy) NSString *webmailLoginUrl; // @synthesize webmailLoginUrl;
@property(nonatomic, copy) NSString *webmailUsernameHint; // @synthesize webmailUsernameHint;
@property(nonatomic, copy) NSString *webmailLoginHint; // @synthesize webmailLoginHint;
@property(nonatomic, copy) NSString *webmailUsernameSuffix; // @synthesize webmailUsernameSuffix;
@property(nonatomic, copy) NSString *webmailUsernamePrefix; // @synthesize webmailUsernamePrefix;
@property(nonatomic, copy) NSString *baseUrl; // @synthesize baseUrl;
@property(nonatomic, copy) NSString *uniSystemLoginLoadingHint; // @synthesize uniSystemLoginLoadingHint;
@property(nonatomic, copy) NSString *uniSystemLoginFormHint; // @synthesize uniSystemLoginFormHint;
@property(nonatomic, copy) NSString *uniSystemLoginFormImageUrl; // @synthesize uniSystemLoginFormImageUrl;
@property(nonatomic, copy) NSString *oauthTokenEndpointUrl; // @synthesize oauthTokenEndpointUrl;
@property(nonatomic, copy) NSString *oauthAuthorizationEndpointUrl; // @synthesize oauthAuthorizationEndpointUrl;
@property(nonatomic, copy) NSString *oauthAuthorizationScope; // @synthesize oauthAuthorizationScope;
@property(nonatomic, copy) NSString *oauthClientId; // @synthesize oauthClientId;
@property(nonatomic) _Bool examRegistrationAvailable; // @synthesize examRegistrationAvailable;
@property(nonatomic) _Bool uniSystemAllowEmailAsUsername; // @synthesize uniSystemAllowEmailAsUsername;
@property(nonatomic, copy) NSString *sideDrawerBottomImageUrl; // @synthesize sideDrawerBottomImageUrl;
@property(nonatomic, copy) NSString *federalState; // @synthesize federalState;
@property(nonatomic) long long backgroundSyncHours; // @synthesize backgroundSyncHours;
@property(nonatomic, copy) NSString *uniSystemChangePasswordUrl; // @synthesize uniSystemChangePasswordUrl;
@property(nonatomic) double latitude; // @synthesize latitude;
@property(nonatomic) double longitude; // @synthesize longitude;
@property(nonatomic, copy) NSString *city; // @synthesize city;
@property(nonatomic, copy) NSString *country; // @synthesize country;
@property(nonatomic, copy) NSString *parserName; // @synthesize parserName;
@property(nonatomic, copy) NSString *uniSystemUsernameHint; // @synthesize uniSystemUsernameHint;
@property(nonatomic, copy) NSString *uniSystemLoginHint; // @synthesize uniSystemLoginHint;
@property(nonatomic, copy) NSString *uniSystemName; // @synthesize uniSystemName;
@property(nonatomic) _Bool beta; // @synthesize beta;
@property(nonatomic, copy) NSString *shortName; // @synthesize shortName;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;

@end

@interface _TtC5Studo16WebmailUrlPrefix : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: prefix
}

- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *prefix; // @synthesize prefix;

@end

@interface _TtC5Studo10UniService : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: name
    // Error parsing type: , name: url
    // Error parsing type: , name: position
    // Error parsing type: , name: studyNameRegex
}

- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *studyNameRegex; // @synthesize studyNameRegex;
@property(nonatomic) long long position; // @synthesize position;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic, copy) NSString *name; // @synthesize name;

@end

@interface _TtC5Studo4News : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: publisherName
    // Error parsing type: , name: publisherImageUrl
    // Error parsing type: , name: contentText
    // Error parsing type: , name: contentImageUrl
    // Error parsing type: , name: url
    // Error parsing type: , name: date
    // Error parsing type: , name: contentImageScale
    // Error parsing type: , name: uniId
    // Error parsing type: , name: sortScore
    // Error parsing type: , name: style
    // Error parsing type: , name: recommended
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool recommended; // @synthesize recommended;
@property(nonatomic) long long style; // @synthesize style;
@property(nonatomic) double sortScore; // @synthesize sortScore;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic) double contentImageScale; // @synthesize contentImageScale;
@property(nonatomic, copy) NSString *date; // @synthesize date;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic, copy) NSString *contentImageUrl; // @synthesize contentImageUrl;
@property(nonatomic, copy) NSString *contentText; // @synthesize contentText;
@property(nonatomic, copy) NSString *publisherImageUrl; // @synthesize publisherImageUrl;
@property(nonatomic, copy) NSString *publisherName; // @synthesize publisherName;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo9MenuEntry : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: date
    // Error parsing type: , name: price
    // Error parsing type: , name: restaurantName
    // Error parsing type: , name: restaurantRank
    // Error parsing type: , name: restaurantAddress
    // Error parsing type: , name: vegetarian
    // Error parsing type: , name: vegan
    // Error parsing type: , name: glutenfree
    // Error parsing type: , name: paid
    // Error parsing type: , name: logoUrl
    // Error parsing type: , name: slogan
    // Error parsing type: , name: restaurantId
    // Error parsing type: , name: freeText
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *freeText; // @synthesize freeText;
@property(nonatomic, copy) NSString *restaurantId; // @synthesize restaurantId;
@property(nonatomic, copy) NSString *slogan; // @synthesize slogan;
@property(nonatomic, copy) NSString *logoUrl; // @synthesize logoUrl;
@property(nonatomic) _Bool paid; // @synthesize paid;
@property(nonatomic) _Bool glutenfree; // @synthesize glutenfree;
@property(nonatomic) _Bool vegan; // @synthesize vegan;
@property(nonatomic) _Bool vegetarian; // @synthesize vegetarian;
@property(nonatomic, copy) NSString *restaurantAddress; // @synthesize restaurantAddress;
@property(nonatomic) double restaurantRank; // @synthesize restaurantRank;
@property(nonatomic, copy) NSString *restaurantName; // @synthesize restaurantName;
@property(nonatomic) double price; // @synthesize price;
@property(nonatomic, copy) NSString *date; // @synthesize date;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo4Mail : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uid
    // Error parsing type: , name: uniId
    // Error parsing type: , name: destinationAddresses
    // Error parsing type: , name: sourceDisplayName
    // Error parsing type: , name: sourceAddress
    // Error parsing type: , name: subject
    // Error parsing type: , name: htmlBody
    // Error parsing type: , name: receiveDate
    // Error parsing type: , name: isSpam
    // Error parsing type: , name: mailboxId
    // Error parsing type: , name: flags
    // Error parsing type: , name: attachmentCount
    // Error parsing type: , name: deleted
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool deleted; // @synthesize deleted;
@property(nonatomic) long long attachmentCount; // @synthesize attachmentCount;
@property(nonatomic) long long flags; // @synthesize flags;
@property(nonatomic, copy) NSString *mailboxId; // @synthesize mailboxId;
@property(nonatomic) _Bool isSpam; // @synthesize isSpam;
@property(nonatomic, copy) NSDate *receiveDate; // @synthesize receiveDate;
@property(nonatomic, copy) NSString *htmlBody; // @synthesize htmlBody;
@property(nonatomic, copy) NSString *subject; // @synthesize subject;
@property(nonatomic, copy) NSString *sourceAddress; // @synthesize sourceAddress;
@property(nonatomic, copy) NSString *sourceDisplayName; // @synthesize sourceDisplayName;
@property(nonatomic, copy) NSString *destinationAddresses; // @synthesize destinationAddresses;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic) long long uid; // @synthesize uid;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo14MailAttachment : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: contentId
    // Error parsing type: , name: mailId
    // Error parsing type: , name: inlineAttachment
    // Error parsing type: , name: filename
    // Error parsing type: , name: mimeType
    // Error parsing type: , name: charset
    // Error parsing type: , name: contentLocation
    // Error parsing type: , name: contentDescription
    // Error parsing type: , name: uniId
    // Error parsing type: , name: mailboxId
    // Error parsing type: , name: lastViewedTimestamp
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long lastViewedTimestamp; // @synthesize lastViewedTimestamp;
@property(nonatomic, copy) NSString *mailboxId; // @synthesize mailboxId;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *contentDescription; // @synthesize contentDescription;
@property(nonatomic, copy) NSString *contentLocation; // @synthesize contentLocation;
@property(nonatomic, copy) NSString *charset; // @synthesize charset;
@property(nonatomic, copy) NSString *mimeType; // @synthesize mimeType;
@property(nonatomic, copy) NSString *filename; // @synthesize filename;
@property(nonatomic) _Bool inlineAttachment; // @synthesize inlineAttachment;
@property(nonatomic, copy) NSString *mailId; // @synthesize mailId;
@property(nonatomic, copy) NSString *contentId; // @synthesize contentId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo7Mailbox : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: messageCount
    // Error parsing type: , name: uidNext
    // Error parsing type: , name: inbox
    // Error parsing type: , name: outbox
    // Error parsing type: , name: trashbox
    // Error parsing type: , name: flags
    // Error parsing type: , name: modSequenceValueRaw
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long modSequenceValueRaw; // @synthesize modSequenceValueRaw;
@property(nonatomic) long long flags; // @synthesize flags;
@property(nonatomic) _Bool trashbox; // @synthesize trashbox;
@property(nonatomic) _Bool outbox; // @synthesize outbox;
@property(nonatomic) _Bool inbox; // @synthesize inbox;
@property(nonatomic) long long uidNext; // @synthesize uidNext;
@property(nonatomic) long long messageCount; // @synthesize messageCount;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo19NetworkDispatchTask : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: kind
    // Error parsing type: , name: dataRaw
    // Error parsing type: , name: retryCounter
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long retryCounter; // @synthesize retryCounter;
@property(nonatomic, copy) NSString *dataRaw; // @synthesize dataRaw;
@property(nonatomic, copy) NSString *kind; // @synthesize kind;
@property(nonatomic) long long id; // @synthesize id;

@end

@interface _TtC5Studo10Impression : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: count
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long count; // @synthesize count;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo12RemoteConfig : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: enabled
    // Error parsing type: , name: value
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *value; // @synthesize value;
@property(nonatomic) _Bool enabled; // @synthesize enabled;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo5JsFix : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: urlRegex
    // Error parsing type: , name: javaScript
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *javaScript; // @synthesize javaScript;
@property(nonatomic, copy) NSString *urlRegex; // @synthesize urlRegex;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13ClientChannel : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: name
    // Error parsing type: , name: sortScore
    // Error parsing type: , name: toolbarTitle
    // Error parsing type: , name: footer
    // Error parsing type: , name: iconChar
    // Error parsing type: , name: pinned
    // Error parsing type: , name: hidden
    // Error parsing type: , name: allowedActionIdsRaw
    // Error parsing type: , name: actionParametersRaw
}

+ (id)ignoredProperties;
+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *actionParametersRaw; // @synthesize actionParametersRaw;
@property(nonatomic, copy) NSString *allowedActionIdsRaw; // @synthesize allowedActionIdsRaw;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic) _Bool pinned; // @synthesize pinned;
@property(nonatomic, copy) NSString *iconChar; // @synthesize iconChar;
@property(nonatomic, copy) NSString *footer; // @synthesize footer;
@property(nonatomic, copy) NSString *toolbarTitle; // @synthesize toolbarTitle;
@property(nonatomic) double sortScore; // @synthesize sortScore;
@property(nonatomic, copy) NSString *name; // @synthesize name;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo9ClientTab : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: channelId
    // Error parsing type: , name: title
    // Error parsing type: , name: defaultTopicId
    // Error parsing type: , name: sortScore
    // Error parsing type: , name: hidden
    // Error parsing type: , name: stickyInfo
    // Error parsing type: , name: stickyInfoBackgroundColor
    // Error parsing type: , name: votingTypeRaw
    // Error parsing type: , name: allowedTopicTypesRaw
    // Error parsing type: , name: defaultTopicTypeRaw
    // Error parsing type: , name: privacyTypeRaw
    // Error parsing type: , name: enableFileUpload
    // Error parsing type: , name: enableNewTopics
    // Error parsing type: , name: toolbarActionRaw
    // Error parsing type: , name: shareUrl
    // Error parsing type: , name: notificationEnabled
    // Error parsing type: , name: loadOnScrollDownwards
    // Error parsing type: , name: loadOnScrollUpwards
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool loadOnScrollUpwards; // @synthesize loadOnScrollUpwards;
@property(nonatomic) _Bool loadOnScrollDownwards; // @synthesize loadOnScrollDownwards;
@property(nonatomic) _Bool notificationEnabled; // @synthesize notificationEnabled;
@property(nonatomic, copy) NSString *shareUrl; // @synthesize shareUrl;
@property(nonatomic, copy) NSString *toolbarActionRaw; // @synthesize toolbarActionRaw;
@property(nonatomic) _Bool enableNewTopics; // @synthesize enableNewTopics;
@property(nonatomic) _Bool enableFileUpload; // @synthesize enableFileUpload;
@property(nonatomic, copy) NSString *privacyTypeRaw; // @synthesize privacyTypeRaw;
@property(nonatomic, copy) NSString *defaultTopicTypeRaw; // @synthesize defaultTopicTypeRaw;
@property(nonatomic, copy) NSString *allowedTopicTypesRaw; // @synthesize allowedTopicTypesRaw;
@property(nonatomic, copy) NSString *votingTypeRaw; // @synthesize votingTypeRaw;
@property(nonatomic) long long stickyInfoBackgroundColor; // @synthesize stickyInfoBackgroundColor;
@property(nonatomic, copy) NSString *stickyInfo; // @synthesize stickyInfo;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic) double sortScore; // @synthesize sortScore;
@property(nonatomic, copy) NSString *defaultTopicId; // @synthesize defaultTopicId;
@property(nonatomic, copy) NSString *title; // @synthesize title;
@property(nonatomic, copy) NSString *channelId; // @synthesize channelId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo11ClientTopic : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: tabId
    // Error parsing type: , name: header
    // Error parsing type: , name: text
    // Error parsing type: , name: footer
    // Error parsing type: , name: votingTypeRaw
    // Error parsing type: , name: typeRaw
    // Error parsing type: , name: votes
    // Error parsing type: , name: hidden
    // Error parsing type: , name: sortScore
    // Error parsing type: , name: toolbarTitle
    // Error parsing type: , name: voteStateRaw
    // Error parsing type: , name: stickyInfo
    // Error parsing type: , name: stickyInfoBackgroundColor
    // Error parsing type: , name: allowedActionIdsRaw
    // Error parsing type: , name: allowedInlineActionIdsRaw
    // Error parsing type: , name: notificationEnabled
    // Error parsing type: , name: enableFileUpload
    // Error parsing type: , name: tagIdsRaw
    // Error parsing type: , name: actionParametersRaw
    // Error parsing type: , name: scrollToBottomOnOpen
    // Error parsing type: , name: hideKeyboardAfterSending
    // Error parsing type: , name: toolbarActionRaw
    // Error parsing type: , name: allowNewMessages
    // Error parsing type: , name: canSubscribe
    // Error parsing type: , name: messageDelimiterRaw
    // Error parsing type: , name: styleRaw
    // Error parsing type: , name: loadOnScrollDownwards
    // Error parsing type: , name: loadOnScrollUpwards
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool loadOnScrollUpwards; // @synthesize loadOnScrollUpwards;
@property(nonatomic) _Bool loadOnScrollDownwards; // @synthesize loadOnScrollDownwards;
@property(nonatomic, copy) NSString *styleRaw; // @synthesize styleRaw;
@property(nonatomic, copy) NSString *messageDelimiterRaw; // @synthesize messageDelimiterRaw;
@property(nonatomic) _Bool canSubscribe; // @synthesize canSubscribe;
@property(nonatomic) _Bool allowNewMessages; // @synthesize allowNewMessages;
@property(nonatomic, copy) NSString *toolbarActionRaw; // @synthesize toolbarActionRaw;
@property(nonatomic) _Bool hideKeyboardAfterSending; // @synthesize hideKeyboardAfterSending;
@property(nonatomic) _Bool scrollToBottomOnOpen; // @synthesize scrollToBottomOnOpen;
@property(nonatomic, copy) NSString *actionParametersRaw; // @synthesize actionParametersRaw;
@property(nonatomic, copy) NSString *tagIdsRaw; // @synthesize tagIdsRaw;
@property(nonatomic) _Bool enableFileUpload; // @synthesize enableFileUpload;
@property(nonatomic) _Bool notificationEnabled; // @synthesize notificationEnabled;
@property(nonatomic, copy) NSString *allowedInlineActionIdsRaw; // @synthesize allowedInlineActionIdsRaw;
@property(nonatomic, copy) NSString *allowedActionIdsRaw; // @synthesize allowedActionIdsRaw;
@property(nonatomic) long long stickyInfoBackgroundColor; // @synthesize stickyInfoBackgroundColor;
@property(nonatomic, copy) NSString *stickyInfo; // @synthesize stickyInfo;
@property(nonatomic, copy) NSString *voteStateRaw; // @synthesize voteStateRaw;
@property(nonatomic, copy) NSString *toolbarTitle; // @synthesize toolbarTitle;
@property(nonatomic) double sortScore; // @synthesize sortScore;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic) long long votes; // @synthesize votes;
@property(nonatomic, copy) NSString *typeRaw; // @synthesize typeRaw;
@property(nonatomic, copy) NSString *votingTypeRaw; // @synthesize votingTypeRaw;
@property(nonatomic, copy) NSString *footer; // @synthesize footer;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *header; // @synthesize header;
@property(nonatomic, copy) NSString *tabId; // @synthesize tabId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13ClientMessage : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: topicId
    // Error parsing type: , name: header
    // Error parsing type: , name: text
    // Error parsing type: , name: downloadUrl
    // Error parsing type: , name: fileName
    // Error parsing type: , name: footer
    // Error parsing type: , name: votes
    // Error parsing type: , name: hidden
    // Error parsing type: , name: sortScore
    // Error parsing type: , name: voteStateRaw
    // Error parsing type: , name: allowedActionIdsRaw
    // Error parsing type: , name: allowedInlineActionIdsRaw
    // Error parsing type: , name: tagIdsRaw
    // Error parsing type: , name: actionParametersRaw
    // Error parsing type: , name: styleRaw
    // Error parsing type: , name: inlineImageUrl
    // Error parsing type: , name: inlineImageScale
    // Error parsing type: , name: inlineImageMaxWidth
    // Error parsing type: , name: showAttachmentLayout
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool showAttachmentLayout; // @synthesize showAttachmentLayout;
@property(nonatomic) long long inlineImageMaxWidth; // @synthesize inlineImageMaxWidth;
@property(nonatomic) double inlineImageScale; // @synthesize inlineImageScale;
@property(nonatomic, copy) NSString *inlineImageUrl; // @synthesize inlineImageUrl;
@property(nonatomic, copy) NSString *styleRaw; // @synthesize styleRaw;
@property(nonatomic, copy) NSString *actionParametersRaw; // @synthesize actionParametersRaw;
@property(nonatomic, copy) NSString *tagIdsRaw; // @synthesize tagIdsRaw;
@property(nonatomic, copy) NSString *allowedInlineActionIdsRaw; // @synthesize allowedInlineActionIdsRaw;
@property(nonatomic, copy) NSString *allowedActionIdsRaw; // @synthesize allowedActionIdsRaw;
@property(nonatomic, copy) NSString *voteStateRaw; // @synthesize voteStateRaw;
@property(nonatomic) double sortScore; // @synthesize sortScore;
@property(nonatomic) _Bool hidden; // @synthesize hidden;
@property(nonatomic) long long votes; // @synthesize votes;
@property(nonatomic, copy) NSString *footer; // @synthesize footer;
@property(nonatomic, copy) NSString *fileName; // @synthesize fileName;
@property(nonatomic, copy) NSString *downloadUrl; // @synthesize downloadUrl;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *header; // @synthesize header;
@property(nonatomic, copy) NSString *topicId; // @synthesize topicId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13ClientChatTag : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: text
    // Error parsing type: , name: color
    // Error parsing type: , name: filled
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool filled; // @synthesize filled;
@property(nonatomic, copy) NSString *color; // @synthesize color;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo19TopicTypeDescriptor : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: text
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo16ClientChatAction : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: text
    // Error parsing type: , name: nextActionIdsRaw
    // Error parsing type: , name: optimisticUiActionsRaw
    // Error parsing type: , name: actionChainHeadline
    // Error parsing type: , name: filled
    // Error parsing type: , name: color
    // Error parsing type: , name: lineSortScore
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) long long lineSortScore; // @synthesize lineSortScore;
@property(nonatomic, copy) NSString *color; // @synthesize color;
@property(nonatomic) _Bool filled; // @synthesize filled;
@property(nonatomic, copy) NSString *actionChainHeadline; // @synthesize actionChainHeadline;
@property(nonatomic, copy) NSString *optimisticUiActionsRaw; // @synthesize optimisticUiActionsRaw;
@property(nonatomic, copy) NSString *nextActionIdsRaw; // @synthesize nextActionIdsRaw;
@property(nonatomic, copy) NSString *text; // @synthesize text;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo11ChatSetting : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: value
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *value; // @synthesize value;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo23ClientWorkloadUserEntry : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: courseId
    // Error parsing type: , name: date
    // Error parsing type: , name: workloadDurationRaw
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *workloadDurationRaw; // @synthesize workloadDurationRaw;
@property(nonatomic) long long date; // @synthesize date;
@property(nonatomic, copy) NSString *courseId; // @synthesize courseId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo17WebViewCredential : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: domainAndPath
    // Error parsing type: , name: inputTextMapRaw
    // Error parsing type: , name: inputPasswordMapRaw
    // Error parsing type: , name: jsAfterFilling
}

+ (id)primaryKey;
+ (id)ignoredProperties;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic, copy) NSString *jsAfterFilling; // @synthesize jsAfterFilling;
@property(nonatomic, copy) NSString *inputPasswordMapRaw; // @synthesize inputPasswordMapRaw;
@property(nonatomic, copy) NSString *inputTextMapRaw; // @synthesize inputTextMapRaw;
@property(nonatomic, copy) NSString *domainAndPath; // @synthesize domainAndPath;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo14NavigationItem : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: uniId
    // Error parsing type: , name: type
    // Error parsing type: , name: localizedName
    // Error parsing type: , name: position
    // Error parsing type: , name: showAsTab
    // Error parsing type: , name: showAsSideDrawerItem
    // Error parsing type: , name: url
    // Error parsing type: , name: editable
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) _Bool editable; // @synthesize editable;
@property(nonatomic, copy) NSString *url; // @synthesize url;
@property(nonatomic) _Bool showAsSideDrawerItem; // @synthesize showAsSideDrawerItem;
@property(nonatomic) _Bool showAsTab; // @synthesize showAsTab;
@property(nonatomic) double position; // @synthesize position;
@property(nonatomic, copy) NSString *localizedName; // @synthesize localizedName;
@property(nonatomic, copy) NSString *type; // @synthesize type;
@property(nonatomic, copy) NSString *uniId; // @synthesize uniId;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo12RealmSetting : _$s10RealmSwift6ObjectCN
{
    // Error parsing type: , name: id
    // Error parsing type: , name: stringValue
    // Error parsing type: , name: intValue
    // Error parsing type: , name: boolValue
    // Error parsing type: , name: doubleValue
}

+ (id)primaryKey;
- (void).cxx_destruct;
- (id)initWithValue:(id)arg1 schema:(id)arg2;
- (id)initWithRealm:(id)arg1 schema:(id)arg2;
- (id)init;
@property(nonatomic) double doubleValue; // @synthesize doubleValue;
@property(nonatomic) _Bool boolValue; // @synthesize boolValue;
@property(nonatomic) long long intValue; // @synthesize intValue;
@property(nonatomic, copy) NSString *stringValue; // @synthesize stringValue;
@property(nonatomic, copy) NSString *id; // @synthesize id;

@end

@interface _TtC5Studo13DialogManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5StudoP33_4187D5A5D59774388B858B543B20A62E6Dialog : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo17SelectCountryItem : _TtCs12_SwiftObject
{
    // Error parsing type: , name: name
}

@end

@interface _TtC5Studo21SelectFederalSateItem : _TtCs12_SwiftObject
{
    // Error parsing type: , name: name
}

@end

@interface _TtC5Studo14RequestUniItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo13SelectUniCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: uniName
    // Error parsing type: , name: uniSystemLoginHint
    // Error parsing type: , name: betaTag
    // Error parsing type: , name: uniDescriptor
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UIImageView *betaTag; // @synthesize betaTag;
@property(nonatomic, retain) UILabel *uniSystemLoginHint; // @synthesize uniSystemLoginHint;
@property(nonatomic, retain) UILabel *uniName; // @synthesize uniName;

@end

@interface _TtC5Studo14RequestUniCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo15BasicSelectCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo10MbCheckBox : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: switchView
    // Error parsing type: , name: textView
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)switchViewAction:(id)arg1;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
- (id)init;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UITextView *textView; // @synthesize textView;
@property(nonatomic, retain) UISwitch *switchView; // @synthesize switchView;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo11SignInUniVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: params
    // Error parsing type: , name: usernameTextField
    // Error parsing type: , name: usernameTextFieldSeperator
    // Error parsing type: , name: passwordTextField
    // Error parsing type: , name: passwordTextFieldSeperator
    // Error parsing type: , name: signInButton
    // Error parsing type: , name: passwordManagerButton
    // Error parsing type: , name: infoTextView
    // Error parsing type: , name: termsOfServiceButton
    // Error parsing type: , name: moreInfoButton
    // Error parsing type: , name: loginSystemImageView
    // Error parsing type: , name: loginSystemHint
    // Error parsing type: , name: usernameTextFieldHeightConstraint
    // Error parsing type: , name: passwordTextFieldHeightConstraint
    // Error parsing type: , name: usernameTextFieldBottomConstraint
    // Error parsing type: , name: passwordTextFieldBottomConstraint
    // Error parsing type: , name: loginSystemImageViewHeightConstraint
    // Error parsing type: , name: loginSystemImageViewBottomConstraint
    // Error parsing type: , name: loginSystemHintBottomConstraint
    // Error parsing type: , name: disableNativeMailAuthViewHeightConstraint
    // Error parsing type: , name: disableNativeMailAuthView
    // Error parsing type: , name: disableNativeMailAuthButton
    // Error parsing type: , name: orLabel
    // Error parsing type: , name: uniSigninConstraints
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)passwordManagerClick:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)onClickTermsOfService:(id)arg1;
- (void)onClickSignIn:(id)arg1;
- (void)onLongClickSignIn:(id)arg1;
- (void)moreInfosClick:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)onBackPressed:(id)arg1;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3 interaction:(long long)arg4;
- (void)disableNativeMailAuthButton:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *orLabel; // @synthesize orLabel;
@property(nonatomic, retain) UIButton *disableNativeMailAuthButton; // @synthesize disableNativeMailAuthButton;
@property(nonatomic, retain) UIView *disableNativeMailAuthView; // @synthesize disableNativeMailAuthView;
@property(nonatomic, retain) NSLayoutConstraint *disableNativeMailAuthViewHeightConstraint; // @synthesize disableNativeMailAuthViewHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *loginSystemHintBottomConstraint; // @synthesize loginSystemHintBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *loginSystemImageViewBottomConstraint; // @synthesize loginSystemImageViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *loginSystemImageViewHeightConstraint; // @synthesize loginSystemImageViewHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *passwordTextFieldBottomConstraint; // @synthesize passwordTextFieldBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *usernameTextFieldBottomConstraint; // @synthesize usernameTextFieldBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *passwordTextFieldHeightConstraint; // @synthesize passwordTextFieldHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *usernameTextFieldHeightConstraint; // @synthesize usernameTextFieldHeightConstraint;
@property(nonatomic, retain) UILabel *loginSystemHint; // @synthesize loginSystemHint;
@property(nonatomic, retain) UIImageView *loginSystemImageView; // @synthesize loginSystemImageView;
@property(nonatomic, retain) UIButton *moreInfoButton; // @synthesize moreInfoButton;
@property(nonatomic, retain) UIButton *termsOfServiceButton; // @synthesize termsOfServiceButton;
@property(nonatomic, retain) UITextView *infoTextView; // @synthesize infoTextView;
@property(nonatomic, retain) UIButton *passwordManagerButton; // @synthesize passwordManagerButton;
@property(nonatomic, retain) _TtC5Studo8MbButton *signInButton; // @synthesize signInButton;
@property(nonatomic, retain) UIView *passwordTextFieldSeperator; // @synthesize passwordTextFieldSeperator;
@property(nonatomic, retain) UITextField *passwordTextField; // @synthesize passwordTextField;
@property(nonatomic, retain) UIView *usernameTextFieldSeperator; // @synthesize usernameTextFieldSeperator;
@property(nonatomic, retain) UITextField *usernameTextField; // @synthesize usernameTextField;

@end

@interface _TtCC5Studo11SignInUniVC6Params : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uniId
}

@end

@interface _TtCC5Studo11SignInUniVC7UniAuth : _TtCC5Studo11SignInUniVC6Params
{
}

@end

@interface _TtCC5Studo11SignInUniVC14UniAuthViaMail : _TtCC5Studo11SignInUniVC6Params
{
}

@end

@interface _TtCC5Studo11SignInUniVC8MailAuth : _TtCC5Studo11SignInUniVC6Params
{
}

@end

@interface _TtCC5Studo11SignInUniVC8UniOAuth : _TtCC5Studo11SignInUniVC6Params
{
}

@end

@interface _TtC5Studo9Analytics : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo9Analytics10ScreenName : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo9Analytics6Webtag : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo9Analytics11StudoEvents : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo8SyncTask : _TtCs12_SwiftObject
{
    // Error parsing type: , name: mail
    // Error parsing type: , name: parser
}

@end

@interface _TtC5Studo19InviteFriendsHelper : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18MbSegmentedPagerVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: segment
    // Error parsing type: , name: separator
    // Error parsing type: , name: loadingIndicator
    // Error parsing type: , name: tabHeightConstraint
    // Error parsing type: , name: tabBottomSpaceConstraint
    // Error parsing type: , name: segmentIds
    // Error parsing type: , name: currentSegmentPosition
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)SegmentController:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *tabBottomSpaceConstraint; // @synthesize tabBottomSpaceConstraint;
@property(nonatomic, retain) NSLayoutConstraint *tabHeightConstraint; // @synthesize tabHeightConstraint;
@property(nonatomic, retain) UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator;
@property(nonatomic, retain) UIView *separator; // @synthesize separator;
@property(nonatomic, retain) UISegmentedControl *segment; // @synthesize segment;

@end

@interface _TtC5Studo17NetworkDispatcher : _TtCs12_SwiftObject
{
    // Error parsing type: , name: dispatchIndex
    // Error parsing type: , name: dispatchIndexLock
    // Error parsing type: , name: dispatchLock
}

@end

@interface _TtC5Studo16ClientProVoucher : NSObject <NSCoding>
{
    // Error parsing type: , name: token
    // Error parsing type: , name: used
    // Error parsing type: , name: createdDate
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface _TtC5Studo24BlockingFullscreenDialog : NSObject <NSCoding>
{
    // Error parsing type: , name: attributes
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface _TtCC13Studo_Staging24BlockingFullscreenDialog10Attributes : NSObject <NSCoding>
{
    // Error parsing type: , name: id
    // Error parsing type: , name: version
    // Error parsing type: , name: title
    // Error parsing type: , name: htmlContent
    // Error parsing type: , name: htmlCheckboxesContent
    // Error parsing type: , name: buttonContent
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface _TtC5Studo29ReoccurringEventUntilPickerVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: datePicker
    // Error parsing type: , name: datePickerHeightConstraint
    // Error parsing type: , name: saveButton
    // Error parsing type: , name: tableData
    // Error parsing type: , name: selectedCellIndex
    // Error parsing type: , name: datePickerHeight
    // Error parsing type: , name: delegate
    // Error parsing type: , name: currentFrequency
    // Error parsing type: , name: reoccurringUntil
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)datePickerAction:(id)arg1;
- (void)saveButtonAction:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *saveButton; // @synthesize saveButton;
@property(nonatomic, retain) NSLayoutConstraint *datePickerHeightConstraint; // @synthesize datePickerHeightConstraint;
@property(nonatomic, retain) UIDatePicker *datePicker; // @synthesize datePicker;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo17CalendarEventCell : UITableViewCell
{
    // Error parsing type: , name: cardView
    // Error parsing type: , name: title
    // Error parsing type: , name: subtitle
    // Error parsing type: , name: subtitleTopConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
@property(nonatomic, retain) NSLayoutConstraint *subtitleTopConstraint; // @synthesize subtitleTopConstraint;
@property(nonatomic, retain) UILabel *subtitle; // @synthesize subtitle;
@property(nonatomic, retain) UILabel *title; // @synthesize title;
@property(nonatomic, retain) UIView *cardView; // @synthesize cardView;

@end

@interface _TtC5Studo20CurrentTimeIndicator : UITableViewCell
{
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _TtC5Studo20CalendarWeekViewCell : UITableViewCell
{
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo21CalendarMonthViewCell : UITableViewCell
{
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo19NoEventsDayViewCell : UITableViewCell
{
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo13GoProViewCell : UITableViewCell
{
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _TtC5Studo18ScheduleCellHeight : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo26CalendarScheduleHeaderView : UITableViewHeaderFooterView
{
    // Error parsing type: , name: monthLabel
    // Error parsing type: , name: dayLabel
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithReuseIdentifier:(id)arg1;
@property(nonatomic, retain) UILabel *dayLabel; // @synthesize dayLabel;
@property(nonatomic, retain) UILabel *monthLabel; // @synthesize monthLabel;

@end

@interface _TtC5Studo31CalendarScheduleTodayHeaderView : UITableViewHeaderFooterView
{
    // Error parsing type: , name: monthLabel
    // Error parsing type: , name: dayLabel
    // Error parsing type: , name: dayBackground
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithReuseIdentifier:(id)arg1;
@property(nonatomic, retain) UIView *dayBackground; // @synthesize dayBackground;
@property(nonatomic, retain) UILabel *dayLabel; // @synthesize dayLabel;
@property(nonatomic, retain) UILabel *monthLabel; // @synthesize monthLabel;

@end

@interface _TtC5Studo7MbRealm : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo27MbNetworkChangePromptHelper : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18CalendarEventAddVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: scrollView
    // Error parsing type: , name: headerView
    // Error parsing type: , name: cancelButton
    // Error parsing type: , name: saveButton
    // Error parsing type: , name: titleTextField
    // Error parsing type: , name: dateSectionIcon
    // Error parsing type: , name: fullDayLabel
    // Error parsing type: , name: fullDaySwitch
    // Error parsing type: , name: dateSectionIconTopConstraint
    // Error parsing type: , name: dateSectionIconHeightConstraint
    // Error parsing type: , name: fullDayLabelHeightConstraint
    // Error parsing type: , name: fullDayLabelBottomConstraint
    // Error parsing type: , name: fromDateButton
    // Error parsing type: , name: fromTimeButton
    // Error parsing type: , name: fromDatePickerContainerView
    // Error parsing type: , name: fromDatePickerContainerViewHeight
    // Error parsing type: , name: fromDatePicker
    // Error parsing type: , name: tilDateButton
    // Error parsing type: , name: tilTimeButton
    // Error parsing type: , name: tilDatePickerContainerView
    // Error parsing type: , name: tilDatePickerContainerViewHeight
    // Error parsing type: , name: tilDatePicker
    // Error parsing type: , name: seperatorView
    // Error parsing type: , name: reoccurringImageView
    // Error parsing type: , name: reoccurringButton
    // Error parsing type: , name: reoccurringImageTopConstraint
    // Error parsing type: , name: reoccurringImageBottomConstraint
    // Error parsing type: , name: reoccurringImageHeightConstraint
    // Error parsing type: , name: reoccurringButtonHeightConstraint
    // Error parsing type: , name: notificationsView
    // Error parsing type: , name: notificationsStackView
    // Error parsing type: , name: notificationsAddButton
    // Error parsing type: , name: colorDotView
    // Error parsing type: , name: colorButton
    // Error parsing type: , name: initialsTextField
    // Error parsing type: , name: noteImageView
    // Error parsing type: , name: noteTextView
    // Error parsing type: , name: initialStartDate
    // Error parsing type: , name: fromDate
    // Error parsing type: , name: tilDate
    // Error parsing type: , name: datePickerContainerViewExpandedHeight
    // Error parsing type: , name: eventIdToEdit
    // Error parsing type: , name: eventIdToDuplicate
    // Error parsing type: , name: titlePlaceholderText
    // Error parsing type: , name: initialsPlaceholderText
    // Error parsing type: , name: fullDayOffset
    // Error parsing type: , name: clickedEventStartDate
    // Error parsing type: , name: clickedEventEndDate
    // Error parsing type: , name: roomNavigationController
    // Error parsing type: , name: buttonToNotificationTime
    // Error parsing type: , name: currentFrequency
    // Error parsing type: , name: reoccurringUntil
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)textFieldDidEndEditing:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)reoccurringButtonAction:(id)arg1;
- (void)notificationButtonAction:(id)arg1;
- (void)notificationsAddButtonAction:(id)arg1;
- (void)colorButtonAction:(id)arg1;
- (void)tilDatePickerAction:(id)arg1;
- (void)fromDatePickerAction:(id)arg1;
- (void)fullDaySwitchAction:(id)arg1;
- (void)saveButtonAction:(id)arg1;
- (void)cancelButtonAction:(id)arg1;
- (void)tilTimeButtonAction:(id)arg1;
- (void)tilDateButtonAction:(id)arg1;
- (void)fromTimeButtonAction:(id)arg1;
- (void)fromDateButtonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dismissKeyboardWithSender:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITextView *noteTextView; // @synthesize noteTextView;
@property(nonatomic, retain) UIImageView *noteImageView; // @synthesize noteImageView;
@property(nonatomic, retain) UITextField *initialsTextField; // @synthesize initialsTextField;
@property(nonatomic, retain) UIButton *colorButton; // @synthesize colorButton;
@property(nonatomic, retain) UIView *colorDotView; // @synthesize colorDotView;
@property(nonatomic, retain) UIButton *notificationsAddButton; // @synthesize notificationsAddButton;
@property(nonatomic, retain) UIStackView *notificationsStackView; // @synthesize notificationsStackView;
@property(nonatomic, retain) UIView *notificationsView; // @synthesize notificationsView;
@property(nonatomic, retain) NSLayoutConstraint *reoccurringButtonHeightConstraint; // @synthesize reoccurringButtonHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *reoccurringImageHeightConstraint; // @synthesize reoccurringImageHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *reoccurringImageBottomConstraint; // @synthesize reoccurringImageBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *reoccurringImageTopConstraint; // @synthesize reoccurringImageTopConstraint;
@property(nonatomic, retain) UIButton *reoccurringButton; // @synthesize reoccurringButton;
@property(nonatomic, retain) UIImageView *reoccurringImageView; // @synthesize reoccurringImageView;
@property(nonatomic, retain) UIView *seperatorView; // @synthesize seperatorView;
@property(nonatomic, retain) UIDatePicker *tilDatePicker; // @synthesize tilDatePicker;
@property(nonatomic, retain) NSLayoutConstraint *tilDatePickerContainerViewHeight; // @synthesize tilDatePickerContainerViewHeight;
@property(nonatomic, retain) UIView *tilDatePickerContainerView; // @synthesize tilDatePickerContainerView;
@property(nonatomic, retain) UIButton *tilTimeButton; // @synthesize tilTimeButton;
@property(nonatomic, retain) UIButton *tilDateButton; // @synthesize tilDateButton;
@property(nonatomic, retain) UIDatePicker *fromDatePicker; // @synthesize fromDatePicker;
@property(nonatomic, retain) NSLayoutConstraint *fromDatePickerContainerViewHeight; // @synthesize fromDatePickerContainerViewHeight;
@property(nonatomic, retain) UIView *fromDatePickerContainerView; // @synthesize fromDatePickerContainerView;
@property(nonatomic, retain) UIButton *fromTimeButton; // @synthesize fromTimeButton;
@property(nonatomic, retain) UIButton *fromDateButton; // @synthesize fromDateButton;
@property(nonatomic, retain) NSLayoutConstraint *fullDayLabelBottomConstraint; // @synthesize fullDayLabelBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *fullDayLabelHeightConstraint; // @synthesize fullDayLabelHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *dateSectionIconHeightConstraint; // @synthesize dateSectionIconHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *dateSectionIconTopConstraint; // @synthesize dateSectionIconTopConstraint;
@property(nonatomic, retain) UISwitch *fullDaySwitch; // @synthesize fullDaySwitch;
@property(nonatomic, retain) UILabel *fullDayLabel; // @synthesize fullDayLabel;
@property(nonatomic, retain) UIImageView *dateSectionIcon; // @synthesize dateSectionIcon;
@property(nonatomic, retain) _TtC5Studo23MbAutoCompleteTextField *titleTextField; // @synthesize titleTextField;
@property(nonatomic, retain) UIButton *saveButton; // @synthesize saveButton;
@property(nonatomic, retain) UIButton *cancelButton; // @synthesize cancelButton;
@property(nonatomic, retain) UIView *headerView; // @synthesize headerView;
@property(nonatomic, retain) UIScrollView *scrollView; // @synthesize scrollView;

@end

@interface _TtC5Studo19CountryCodePickerVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: countryCodes
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *headerLabel; // @synthesize headerLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo13CountryPrefix : _TtCs12_SwiftObject
{
    // Error parsing type: , name: emoticon
    // Error parsing type: , name: prefix
    // Error parsing type: , name: name
}

@end

@interface _TtC5Studo16MbAttachmentView : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: fileExtensionButton
    // Error parsing type: , name: filenameLabel
    // Error parsing type: , name: fileExtensionButtonTopConstraint
    // Error parsing type: , name: filenameLabelTopConstraint
    // Error parsing type: , name: fileExtensionCloseButtonTopConstraint
    // Error parsing type: , name: attachmentButtonAction
    // Error parsing type: , name: attachmentCloseButtonAction
    // Error parsing type: , name: attachment
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (void)attachmentCloseButtonAction:(id)arg1;
- (void)attachmentButtonAction:(id)arg1;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) NSLayoutConstraint *fileExtensionCloseButtonTopConstraint; // @synthesize fileExtensionCloseButtonTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *filenameLabelTopConstraint; // @synthesize filenameLabelTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *fileExtensionButtonTopConstraint; // @synthesize fileExtensionButtonTopConstraint;
@property(nonatomic, retain) UILabel *filenameLabel; // @synthesize filenameLabel;
@property(nonatomic, retain) UIButton *fileExtensionButton; // @synthesize fileExtensionButton;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo10Attachment : _TtCs12_SwiftObject
{
    // Error parsing type: , name: name
    // Error parsing type: , name: extensionStr
    // Error parsing type: , name: data
    // Error parsing type: , name: mimeType
}

@end

@interface _TtC5Studo17ForwardAttachment : _TtC5Studo10Attachment
{
    // Error parsing type: , name: contentId
    // Error parsing type: , name: inline
    // Error parsing type: , name: charset
}

@end

@interface _TtC5Studo20SideDrawerHeaderCell : UITableViewCell
{
    // Error parsing type: , name: accessibilityCloseSideDrawerButton
    // Error parsing type: , name: header
    // Error parsing type: , name: headerName
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)onAccessibilityCloseSideDrawerClick:(id)arg1;
@property(nonatomic, retain) UILabel *headerName; // @synthesize headerName;
@property(nonatomic, retain) UILabel *header; // @synthesize header;
@property(nonatomic, retain) UIButton *accessibilityCloseSideDrawerButton; // @synthesize accessibilityCloseSideDrawerButton;

@end

@interface _TtC5Studo17ChannelOverviewVC : _TtC5Studo6ChatVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: noContentLabel
    // Error parsing type: , name: loadingActivityIndicator
    // Error parsing type: , name: headerCell
    // Error parsing type: , name: headerCellHeightConstraint
    // Error parsing type: , name: presenter
    // Error parsing type: , name: tableData
    // Error parsing type: , name: preLoadingIndicator
    // Error parsing type: , name: goToInfos
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)longPressRecognizer:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *headerCellHeightConstraint; // @synthesize headerCellHeightConstraint;
@property(nonatomic, retain) _TtC5Studo21ChatMessageHeaderCell *headerCell; // @synthesize headerCell;
@property(nonatomic, retain) UIActivityIndicatorView *loadingActivityIndicator; // @synthesize loadingActivityIndicator;
@property(nonatomic, retain) UILabel *noContentLabel; // @synthesize noContentLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5StudoP33_FED89213D82B761DB03855987F174D006Target : _TtCs12_SwiftObject
{
    // Error parsing type: , name: trailingClosure
}

- (void)invoke;

@end

@interface _TtC5Studo5Color : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo15ColorPickerCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: colorView
    // Error parsing type: , name: label
    // Error parsing type: , name: color
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *label; // @synthesize label;
@property(nonatomic, retain) UIView *colorView; // @synthesize colorView;

@end

@interface _TtC5Studo26StudoUITableViewController : UITableViewController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface _TtC5Studo17ChatTopicDetailVC : _TtC5Studo6ChatVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: loadingActivityIndicator
    // Error parsing type: , name: headerCell
    // Error parsing type: , name: headerCellHeightConstraint
    // Error parsing type: , name: presenter
    // Error parsing type: , name: tableData
    // Error parsing type: , name: topicId
    // Error parsing type: , name: shouldScrollToBottomAfterSendingMessage
    // Error parsing type: , name: shouldScrollToBottomOnOpen
    // Error parsing type: , name: shouldHideKeyboardAfterSend
    // Error parsing type: , name: votingType
    // Error parsing type: , name: privacyType
    // Error parsing type: , name: highlightMessageId
    // Error parsing type: , name: isNotificationToggleVisible
    // Error parsing type: , name: messageDelimiter
    // Error parsing type: , name: allowNewMessages
    // Error parsing type: , name: topic
    // Error parsing type: , name: goToInfos
    // Error parsing type: , name: currentAttachment
    // Error parsing type: , name: currentlyLoadingOnScroll
    // Error parsing type: , name: loadOnScrollDownwardsThreshold
    // Error parsing type: , name: loadOnScrollUpwardsThreshold
    // Error parsing type: , name: shouldScrollToBottomAfterTextFieldOnFocus
    // Error parsing type: , name: loadingAllMessagesLoadingIndicator
    // Error parsing type: , name: isInEditMode
    // Error parsing type: , name: filePicker
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)willEnterForeground;
- (void)didReceiveKeyboardWillHideNotificationWithNotification:(id)arg1;
- (void)didReceiveKeyboardWillShowNotificationWithNotification:(id)arg1;
- (void)onEditMessageFinished;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)longPressRecognizer:(id)arg1;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillLayoutSubviews;
- (void)updateViewConstraints;
@property(nonatomic, readonly) _Bool canBecomeFirstResponder;
@property(nonatomic, readonly) UIView *inputAccessoryView;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *headerCellHeightConstraint; // @synthesize headerCellHeightConstraint;
@property(nonatomic, retain) _TtC5Studo21ChatMessageHeaderCell *headerCell; // @synthesize headerCell;
@property(nonatomic, retain) UIActivityIndicatorView *loadingActivityIndicator; // @synthesize loadingActivityIndicator;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo14NotificationVC : UITableViewController
{
    // Error parsing type: , name: emailCell
    // Error parsing type: , name: emailLabel
    // Error parsing type: , name: emailSwitch
    // Error parsing type: , name: gradesCell
    // Error parsing type: , name: gradesLabel
    // Error parsing type: , name: gradesSwitch
    // Error parsing type: , name: examRegistrationCell
    // Error parsing type: , name: examRegistrationLabel
    // Error parsing type: , name: examRegistrationSwitch
    // Error parsing type: , name: notificationTestCell
    // Error parsing type: , name: notificationTestLabel
    // Error parsing type: , name: hiddenSections
    // Error parsing type: , name: noNativeMail
    // Error parsing type: , name: noExamResults
    // Error parsing type: , name: noExamRegistration
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (void)examRegistrationCellAction:(id)arg1;
- (void)gradesCellAction:(id)arg1;
- (void)emailCellAction:(id)arg1;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)willEnterForeground;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *notificationTestLabel; // @synthesize notificationTestLabel;
@property(nonatomic, retain) UITableViewCell *notificationTestCell; // @synthesize notificationTestCell;
@property(nonatomic, retain) UISwitch *examRegistrationSwitch; // @synthesize examRegistrationSwitch;
@property(nonatomic, retain) UILabel *examRegistrationLabel; // @synthesize examRegistrationLabel;
@property(nonatomic, retain) UITableViewCell *examRegistrationCell; // @synthesize examRegistrationCell;
@property(nonatomic, retain) UISwitch *gradesSwitch; // @synthesize gradesSwitch;
@property(nonatomic, retain) UILabel *gradesLabel; // @synthesize gradesLabel;
@property(nonatomic, retain) UITableViewCell *gradesCell; // @synthesize gradesCell;
@property(nonatomic, retain) UISwitch *emailSwitch; // @synthesize emailSwitch;
@property(nonatomic, retain) UILabel *emailLabel; // @synthesize emailLabel;
@property(nonatomic, retain) UITableViewCell *emailCell; // @synthesize emailCell;

@end

@interface _TtC5Studo6RoomVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: lvTypeLabel
    // Error parsing type: , name: lvNameLabel
    // Error parsing type: , name: dateTimeLabel
    // Error parsing type: , name: lvInfoLabel
    // Error parsing type: , name: noteLabel
    // Error parsing type: , name: roomNrLabel
    // Error parsing type: , name: roomNameLabel
    // Error parsing type: , name: roomAddressLabel
    // Error parsing type: , name: detailsButton
    // Error parsing type: , name: outdoorPhotoView
    // Error parsing type: , name: indoorImgView
    // Error parsing type: , name: outdoorImgView
    // Error parsing type: , name: indoorImgViewHeightConstraint
    // Error parsing type: , name: outdoorImgViewHeightConstraint
    // Error parsing type: , name: scrollView
    // Error parsing type: , name: dotLeftConstraint
    // Error parsing type: , name: dotTopConstraint
    // Error parsing type: , name: planDot
    // Error parsing type: , name: SeparatorLineView
    // Error parsing type: , name: eventView
    // Error parsing type: , name: eventViewHeightConstraint
    // Error parsing type: , name: lvInfoLabelHeightConstraint
    // Error parsing type: , name: noteLabelHeightConstraint
    // Error parsing type: , name: courseDetailsButton
    // Error parsing type: , name: courseDetailsButtonHeightConstraint
    // Error parsing type: , name: courseDetailsButtonBottomSpaceConstraint
    // Error parsing type: , name: outdoorPhotoViewWidthConstraint
    // Error parsing type: , name: outdoorPhotoViewSpacingConstraint
    // Error parsing type: , name: roomView
    // Error parsing type: , name: roomViewHeightConstraint
    // Error parsing type: , name: lvInfoLabelBottomSpaceConstraint
    // Error parsing type: , name: noteLabelBottomSpaceConstraint
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
    // Error parsing type: , name: params
    // Error parsing type: , name: offsetToRestore
    // Error parsing type: , name: dotAnimated
    // Error parsing type: , name: room
    // Error parsing type: , name: didChangeOrientation
    // Error parsing type: , name: calendarEventId
    // Error parsing type: , name: isCustomEvent
    // Error parsing type: , name: clickedEventStartDate
    // Error parsing type: , name: clickedEventEndDate
    // Error parsing type: , name: isReoccurringEvent
    // Error parsing type: , name: calendarVC
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(nonatomic, readonly) NSArray *previewActionItems;
- (void)moreButtonAction;
- (void)outdoorImgViewAction:(id)arg1;
- (void)showCourseDetails:(id)arg1;
- (void)detailsButton:(id)arg1;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) NSLayoutConstraint *noteLabelBottomSpaceConstraint; // @synthesize noteLabelBottomSpaceConstraint;
@property(nonatomic, retain) NSLayoutConstraint *lvInfoLabelBottomSpaceConstraint; // @synthesize lvInfoLabelBottomSpaceConstraint;
@property(nonatomic, retain) NSLayoutConstraint *roomViewHeightConstraint; // @synthesize roomViewHeightConstraint;
@property(nonatomic, retain) UIView *roomView; // @synthesize roomView;
@property(nonatomic, retain) NSLayoutConstraint *outdoorPhotoViewSpacingConstraint; // @synthesize outdoorPhotoViewSpacingConstraint;
@property(nonatomic, retain) NSLayoutConstraint *outdoorPhotoViewWidthConstraint; // @synthesize outdoorPhotoViewWidthConstraint;
@property(nonatomic, retain) NSLayoutConstraint *courseDetailsButtonBottomSpaceConstraint; // @synthesize courseDetailsButtonBottomSpaceConstraint;
@property(nonatomic, retain) NSLayoutConstraint *courseDetailsButtonHeightConstraint; // @synthesize courseDetailsButtonHeightConstraint;
@property(nonatomic, retain) UIButton *courseDetailsButton; // @synthesize courseDetailsButton;
@property(nonatomic, retain) NSLayoutConstraint *noteLabelHeightConstraint; // @synthesize noteLabelHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *lvInfoLabelHeightConstraint; // @synthesize lvInfoLabelHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *eventViewHeightConstraint; // @synthesize eventViewHeightConstraint;
@property(nonatomic, retain) UIView *eventView; // @synthesize eventView;
@property(nonatomic, retain) UIView *SeparatorLineView; // @synthesize SeparatorLineView;
@property(nonatomic, retain) UIImageView *planDot; // @synthesize planDot;
@property(nonatomic, retain) NSLayoutConstraint *dotTopConstraint; // @synthesize dotTopConstraint;
@property(nonatomic, retain) NSLayoutConstraint *dotLeftConstraint; // @synthesize dotLeftConstraint;
@property(nonatomic, retain) UIScrollView *scrollView; // @synthesize scrollView;
@property(nonatomic, retain) NSLayoutConstraint *outdoorImgViewHeightConstraint; // @synthesize outdoorImgViewHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *indoorImgViewHeightConstraint; // @synthesize indoorImgViewHeightConstraint;
@property(nonatomic, retain) UIImageView *outdoorImgView; // @synthesize outdoorImgView;
@property(nonatomic, retain) UIImageView *indoorImgView; // @synthesize indoorImgView;
@property(nonatomic, retain) UIImageView *outdoorPhotoView; // @synthesize outdoorPhotoView;
@property(nonatomic, retain) UIButton *detailsButton; // @synthesize detailsButton;
@property(nonatomic, retain) UILabel *roomAddressLabel; // @synthesize roomAddressLabel;
@property(nonatomic, retain) UILabel *roomNameLabel; // @synthesize roomNameLabel;
@property(nonatomic, retain) UILabel *roomNrLabel; // @synthesize roomNrLabel;
@property(nonatomic, retain) UILabel *noteLabel; // @synthesize noteLabel;
@property(nonatomic, retain) UILabel *lvInfoLabel; // @synthesize lvInfoLabel;
@property(nonatomic, retain) UILabel *dateTimeLabel; // @synthesize dateTimeLabel;
@property(nonatomic, retain) UILabel *lvNameLabel; // @synthesize lvNameLabel;
@property(nonatomic, retain) UILabel *lvTypeLabel; // @synthesize lvTypeLabel;

@end

@interface _TtC5Studo6Params : _TtCs12_SwiftObject
{
    // Error parsing type: , name: studoRoomId
}

@end

@interface _TtC5Studo10RoomParams : _TtC5Studo6Params
{
}

@end

@interface _TtC5Studo19CalendarEventParams : _TtC5Studo6Params
{
    // Error parsing type: , name: calendarEventId
}

@end

@interface _TtC5Studo12ParserConfig : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: credentials
    // Error parsing type: , name: firebaseToken
    // Error parsing type: , name: sessionToken
    // Error parsing type: , name: studies
    // Error parsing type: , name: task
    // Error parsing type: , name: appIsInForeground
    // Error parsing type: , name: forceFullSync
}

@end

@interface _TtC5Studo12MbFilePicker : NSObject <UIImagePickerControllerDelegate, UIDocumentMenuDelegate, UIDocumentPickerDelegate>
{
    // Error parsing type: , name: imagePicker
    // Error parsing type: , name: sourceView
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: currentlyVisible
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)init;
- (void)documentPickerWasCancelled:(id)arg1;
- (void)documentMenuWasCancelled:(id)arg1;
- (void)documentMenu:(id)arg1 didPickDocumentPicker:(id)arg2;
- (void)documentPicker:(id)arg1 didPickDocumentAtURL:(id)arg2;
- (void)imagePickerControllerDidCancel:(id)arg1;
- (void)imagePickerController:(id)arg1 didFinishPickingMediaWithInfo:(id)arg2;

@end

@interface _TtC5Studo10SMTPClient : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: session
}

@end

@interface _TtC5Studo18StickyFooterAdView : UIView <GADBannerViewDelegate>
{
    // Error parsing type: , name: view
    // Error parsing type: , name: adViewContainer
    // Error parsing type: , name: adViewHeightConstraint
    // Error parsing type: , name: adView
    // Error parsing type: , name: onClickListener
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: id
    // Error parsing type: , name: bottomConstraint
    // Error parsing type: , name: heightConstraint
    // Error parsing type: , name: _hide
    // Error parsing type: , name: adSuccessfullyLoaded
    // Error parsing type: , name: hideAdViewUntilAdIsLoaded
    // Error parsing type: , name: adLoadFailed
}

- (void).cxx_destruct;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidReceiveAd:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) NSLayoutConstraint *adViewHeightConstraint; // @synthesize adViewHeightConstraint;
@property(nonatomic, retain) UIView *adViewContainer; // @synthesize adViewContainer;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo6Colors : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo19SelectMailAddressVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: realm
    // Error parsing type: , name: uniDescriptors.storage
    // Error parsing type: , name: uniCredentials.storage
    // Error parsing type: , name: uniIdsFromMailDetectionFails
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *headerLabel; // @synthesize headerLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo14SelectMailCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: mailAddressLabel
    // Error parsing type: , name: uniLabel
    // Error parsing type: , name: editButton
    // Error parsing type: , name: uniId
    // Error parsing type: , name: editButtonCallback
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)editButtonAction:(id)arg1;
@property(nonatomic, retain) UIButton *editButton; // @synthesize editButton;
@property(nonatomic, retain) UILabel *uniLabel; // @synthesize uniLabel;
@property(nonatomic, retain) UILabel *mailAddressLabel; // @synthesize mailAddressLabel;

@end

@interface _TtC5Studo15MailClientFetch : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo15MailClientFetch12FetchedMails : _TtCs12_SwiftObject
{
    // Error parsing type: , name: new
    // Error parsing type: , name: flagsUpdated
}

@end

@interface _TtC5Studo16ReferralRewardVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: subtitleLabel
    // Error parsing type: , name: acceptButton
    // Error parsing type: , name: presenter
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)acceptButtonAction:(id)arg1;
- (void)dealloc;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *acceptButton; // @synthesize acceptButton;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo9StudiesVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: tableView
    // Error parsing type: , name: emptyView
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UILabel *emptyView; // @synthesize emptyView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo9StudyCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: title
    // Error parsing type: , name: info
    // Error parsing type: , name: infoHeight
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) NSLayoutConstraint *infoHeight; // @synthesize infoHeight;
@property(nonatomic, retain) UILabel *info; // @synthesize info;
@property(nonatomic, retain) UILabel *title; // @synthesize title;

@end

@interface _TtC5Studo10SettingsVC : _TtC5Studo26StudoUITableViewController
{
    // Error parsing type: , name: manageUniversitiesLabel
    // Error parsing type: , name: manageUniversitiesIcon
    // Error parsing type: , name: notificationLabel
    // Error parsing type: , name: appBadgeLabel
    // Error parsing type: , name: appBadgeSwitch
    // Error parsing type: , name: backgroundSyncLabel
    // Error parsing type: , name: backgroundSyncSwitch
    // Error parsing type: , name: refreshIntervalLabel
    // Error parsing type: , name: calendarColorsLabel
    // Error parsing type: , name: calendarFulldayDetectionLabel
    // Error parsing type: , name: calendarFulldayDetectionSwitch
    // Error parsing type: , name: showHolidaysSwitch
    // Error parsing type: , name: showHolidaysLabel
    // Error parsing type: , name: importCalendarLabel
    // Error parsing type: , name: showHolidaysLoadingIndicator
    // Error parsing type: , name: reverseCourseOrderLabel
    // Error parsing type: , name: reverseCourseOrderSwitch
    // Error parsing type: , name: chatSettingsLabel
    // Error parsing type: , name: smsAuthLabel
    // Error parsing type: , name: pinLabel
    // Error parsing type: , name: pinSwitch
    // Error parsing type: , name: aboutLabel
    // Error parsing type: , name: logoutLabel
    // Error parsing type: , name: markAllMailAsReadLabel
    // Error parsing type: , name: showSentMailLabel
    // Error parsing type: , name: showSentMailSwitch
    // Error parsing type: , name: showSpamMailLabel
    // Error parsing type: , name: showSpamMailSwitch
    // Error parsing type: , name: automaticFillLabel
    // Error parsing type: , name: automaticFillSwitch
    // Error parsing type: , name: resetLoginCredentialsLabel
    // Error parsing type: , name: bookmarksManageLabel
    // Error parsing type: , name: linkedUnisCell
    // Error parsing type: , name: notificationsCell
    // Error parsing type: , name: appBadgeCell
    // Error parsing type: , name: backgroundSyncCell
    // Error parsing type: , name: backgroundSyncIntervallCell
    // Error parsing type: , name: calendarColorCell
    // Error parsing type: , name: calendarCourseGroupCell
    // Error parsing type: , name: calendarCourseUnhideCell
    // Error parsing type: , name: calendarFulldayDetectionCell
    // Error parsing type: , name: calendarShowHolidaysCell
    // Error parsing type: , name: calendarImportCalendarCell
    // Error parsing type: , name: reverseCourseOrderCell
    // Error parsing type: , name: chatSettingsCell
    // Error parsing type: , name: smsAuthCell
    // Error parsing type: , name: studoPinCell
    // Error parsing type: , name: markMailAsReadCell
    // Error parsing type: , name: automaticFillCell
    // Error parsing type: , name: resetLoginCredentialsCell
    // Error parsing type: , name: bookmarksManageCell
    // Error parsing type: , name: aboutStudoCell
    // Error parsing type: , name: logOutCell
    // Error parsing type: , name: hiddenSections
    // Error parsing type: , name: nativeMailEnabled
    // Error parsing type: , name: calendarEnabled
    // Error parsing type: , name: chatEnabled
    // Error parsing type: , name: courseEnabled
    // Error parsing type: , name: courseGroupsEnabled
    // Error parsing type: , name: realm
    // Error parsing type: , name: uniDescriptorNames
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 titleForHeaderInSection:(long long)arg2;
- (_Bool)tableView:(id)arg1 shouldHighlightRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)showSpamMailSwitch:(id)arg1;
- (void)showSentMailSwitch:(id)arg1;
- (void)automaticFillSwitchAction:(id)arg1;
- (void)pinSwitch:(id)arg1;
- (void)calendarFulldayDetectionChanged:(id)arg1;
- (void)reverseCourseOrderChanged:(id)arg1;
- (void)showHolidaysSwitch:(id)arg1;
- (void)backgroundSyncSwitch:(id)arg1;
- (void)appBadgeSwitchAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableViewCell *logOutCell; // @synthesize logOutCell;
@property(nonatomic, retain) UITableViewCell *aboutStudoCell; // @synthesize aboutStudoCell;
@property(nonatomic, retain) UITableViewCell *bookmarksManageCell; // @synthesize bookmarksManageCell;
@property(nonatomic, retain) UITableViewCell *resetLoginCredentialsCell; // @synthesize resetLoginCredentialsCell;
@property(nonatomic, retain) UITableViewCell *automaticFillCell; // @synthesize automaticFillCell;
@property(nonatomic, retain) UITableViewCell *markMailAsReadCell; // @synthesize markMailAsReadCell;
@property(nonatomic, retain) UITableViewCell *studoPinCell; // @synthesize studoPinCell;
@property(nonatomic, retain) UITableViewCell *smsAuthCell; // @synthesize smsAuthCell;
@property(nonatomic, retain) UITableViewCell *chatSettingsCell; // @synthesize chatSettingsCell;
@property(nonatomic, retain) UITableViewCell *reverseCourseOrderCell; // @synthesize reverseCourseOrderCell;
@property(nonatomic, retain) UITableViewCell *calendarImportCalendarCell; // @synthesize calendarImportCalendarCell;
@property(nonatomic, retain) UITableViewCell *calendarShowHolidaysCell; // @synthesize calendarShowHolidaysCell;
@property(nonatomic, retain) UITableViewCell *calendarFulldayDetectionCell; // @synthesize calendarFulldayDetectionCell;
@property(nonatomic, retain) UITableViewCell *calendarCourseUnhideCell; // @synthesize calendarCourseUnhideCell;
@property(nonatomic, retain) UITableViewCell *calendarCourseGroupCell; // @synthesize calendarCourseGroupCell;
@property(nonatomic, retain) UITableViewCell *calendarColorCell; // @synthesize calendarColorCell;
@property(nonatomic, retain) UITableViewCell *backgroundSyncIntervallCell; // @synthesize backgroundSyncIntervallCell;
@property(nonatomic, retain) UITableViewCell *backgroundSyncCell; // @synthesize backgroundSyncCell;
@property(nonatomic, retain) UITableViewCell *appBadgeCell; // @synthesize appBadgeCell;
@property(nonatomic, retain) UITableViewCell *notificationsCell; // @synthesize notificationsCell;
@property(nonatomic, retain) UITableViewCell *linkedUnisCell; // @synthesize linkedUnisCell;
@property(nonatomic, retain) UILabel *bookmarksManageLabel; // @synthesize bookmarksManageLabel;
@property(nonatomic, retain) UILabel *resetLoginCredentialsLabel; // @synthesize resetLoginCredentialsLabel;
@property(nonatomic, retain) UISwitch *automaticFillSwitch; // @synthesize automaticFillSwitch;
@property(nonatomic, retain) UILabel *automaticFillLabel; // @synthesize automaticFillLabel;
@property(nonatomic, retain) UISwitch *showSpamMailSwitch; // @synthesize showSpamMailSwitch;
@property(nonatomic, retain) UILabel *showSpamMailLabel; // @synthesize showSpamMailLabel;
@property(nonatomic, retain) UISwitch *showSentMailSwitch; // @synthesize showSentMailSwitch;
@property(nonatomic, retain) UILabel *showSentMailLabel; // @synthesize showSentMailLabel;
@property(nonatomic, retain) UILabel *markAllMailAsReadLabel; // @synthesize markAllMailAsReadLabel;
@property(nonatomic, retain) UILabel *logoutLabel; // @synthesize logoutLabel;
@property(nonatomic, retain) UILabel *aboutLabel; // @synthesize aboutLabel;
@property(nonatomic, retain) UISwitch *pinSwitch; // @synthesize pinSwitch;
@property(nonatomic, retain) UILabel *pinLabel; // @synthesize pinLabel;
@property(nonatomic, retain) UILabel *smsAuthLabel; // @synthesize smsAuthLabel;
@property(nonatomic, retain) UILabel *chatSettingsLabel; // @synthesize chatSettingsLabel;
@property(nonatomic, retain) UISwitch *reverseCourseOrderSwitch; // @synthesize reverseCourseOrderSwitch;
@property(nonatomic, retain) UILabel *reverseCourseOrderLabel; // @synthesize reverseCourseOrderLabel;
@property(nonatomic, retain) UIActivityIndicatorView *showHolidaysLoadingIndicator; // @synthesize showHolidaysLoadingIndicator;
@property(nonatomic, retain) UILabel *importCalendarLabel; // @synthesize importCalendarLabel;
@property(nonatomic, retain) UILabel *showHolidaysLabel; // @synthesize showHolidaysLabel;
@property(nonatomic, retain) UISwitch *showHolidaysSwitch; // @synthesize showHolidaysSwitch;
@property(nonatomic, retain) UISwitch *calendarFulldayDetectionSwitch; // @synthesize calendarFulldayDetectionSwitch;
@property(nonatomic, retain) UILabel *calendarFulldayDetectionLabel; // @synthesize calendarFulldayDetectionLabel;
@property(nonatomic, retain) UILabel *calendarColorsLabel; // @synthesize calendarColorsLabel;
@property(nonatomic, retain) UILabel *refreshIntervalLabel; // @synthesize refreshIntervalLabel;
@property(nonatomic, retain) UISwitch *backgroundSyncSwitch; // @synthesize backgroundSyncSwitch;
@property(nonatomic, retain) UILabel *backgroundSyncLabel; // @synthesize backgroundSyncLabel;
@property(nonatomic, retain) UISwitch *appBadgeSwitch; // @synthesize appBadgeSwitch;
@property(nonatomic, retain) UILabel *appBadgeLabel; // @synthesize appBadgeLabel;
@property(nonatomic, retain) UILabel *notificationLabel; // @synthesize notificationLabel;
@property(nonatomic, retain) UIImageView *manageUniversitiesIcon; // @synthesize manageUniversitiesIcon;
@property(nonatomic, retain) UILabel *manageUniversitiesLabel; // @synthesize manageUniversitiesLabel;

@end

@interface _TtC5Studo16SetMailAddressVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: emailTF
    // Error parsing type: , name: saveButton
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: uniId
    // Error parsing type: , name: uniShortName
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)saveButtonAction:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *headerLabel; // @synthesize headerLabel;
@property(nonatomic, retain) _TtC5Studo8MbButton *saveButton; // @synthesize saveButton;
@property(nonatomic, retain) _TtC5Studo23MbAutoCompleteTextField *emailTF; // @synthesize emailTF;

@end

@interface _TtC5Studo10LineReader : _TtCs12_SwiftObject
{
    // Error parsing type: , name: dataAsArray
    // Error parsing type: , name: currentIndex
}

@end

@interface _TtC5Studo14MbGradientView : UIView
{
    // Error parsing type: , name: bgStartColor
    // Error parsing type: , name: bgEndColor
}

+ (Class)layerClass;
- (void).cxx_destruct;
- (void)prepareForInterfaceBuilder;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UIColor *bgEndColor; // @synthesize bgEndColor;
@property(nonatomic, retain) UIColor *bgStartColor; // @synthesize bgStartColor;

@end

@interface _TtC5Studo6NewsVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: items
    // Error parsing type: , name: tableView
    // Error parsing type: , name: emptyView
    // Error parsing type: , name: newsDisappearTimestamps
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)willEnterForeground;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *emptyView; // @synthesize emptyView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo8NewsCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: publisherImage
    // Error parsing type: , name: publisher
    // Error parsing type: , name: date
    // Error parsing type: , name: contentImage
    // Error parsing type: , name: contentImageHeight
    // Error parsing type: , name: newsId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) NSLayoutConstraint *contentImageHeight; // @synthesize contentImageHeight;
@property(nonatomic, retain) UIImageView *contentImage; // @synthesize contentImage;
@property(nonatomic, retain) UILabel *date; // @synthesize date;
@property(nonatomic, retain) UILabel *publisher; // @synthesize publisher;
@property(nonatomic, retain) UIImageView *publisherImage; // @synthesize publisherImage;

@end

@interface _TtC5Studo22LongTextAboveImageCell : _TtC5Studo8NewsCell
{
    // Error parsing type: , name: content
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) _TtC5Studo7MbLabel *content; // @synthesize content;

@end

@interface _TtC5Studo20ShortTextInImageCell : _TtC5Studo8NewsCell
{
    // Error parsing type: , name: title
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *title; // @synthesize title;

@end

@interface _TtC5Studo6AdCell : _TtC5Studo8NewsCell
{
    // Error parsing type: , name: adContainerView
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: adId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidReceiveAd:(id)arg1;
@property(nonatomic, retain) UIView *adContainerView; // @synthesize adContainerView;

@end

@interface _TtC5Studo8CellData : _TtCs12_SwiftObject
{
    // Error parsing type: , name: news
    // Error parsing type: , name: ad
}

@end

@interface _TtC5Studo9CoursesVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm.storage
    // Error parsing type: , name: goToWorkloadId
    // Error parsing type: , name: tableView
    // Error parsing type: , name: emptyView
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UILabel *emptyView; // @synthesize emptyView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo11CoursesCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: type
    // Error parsing type: , name: title
    // Error parsing type: , name: info
    // Error parsing type: , name: infoHeight
    // Error parsing type: , name: courseImage
    // Error parsing type: , name: courseImageWidth
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) NSLayoutConstraint *courseImageWidth; // @synthesize courseImageWidth;
@property(nonatomic, retain) UIImageView *courseImage; // @synthesize courseImage;
@property(nonatomic, retain) NSLayoutConstraint *infoHeight; // @synthesize infoHeight;
@property(nonatomic, retain) UILabel *info; // @synthesize info;
@property(nonatomic, retain) UILabel *title; // @synthesize title;
@property(nonatomic, retain) UILabel *type; // @synthesize type;

@end

@interface _TtC5Studo17CoursesHeaderCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: sectionLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *sectionLabel; // @synthesize sectionLabel;

@end

@interface _TtC5Studo19WorkloadSegueObject : _TtCs12_SwiftObject
{
    // Error parsing type: , name: url
    // Error parsing type: , name: courseId
    // Error parsing type: , name: title
}

@end

@interface _TtC5Studo12CourseDialog : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo8Messages : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo8Messages14SiteRequestMsg : _TtCs12_SwiftObject
{
    // Error parsing type: , name: url
    // Error parsing type: , name: requestId
    // Error parsing type: , name: parameters
    // Error parsing type: , name: paramType
    // Error parsing type: , name: parserId
    // Error parsing type: , name: encoding
    // Error parsing type: , name: uniId
    // Error parsing type: , name: headers
    // Error parsing type: , name: maxTries
    // Error parsing type: , name: body
    // Error parsing type: , name: allowNtlm
}

@end

@interface _TtCC5Studo8Messages15SiteResponseMsg : _TtCs12_SwiftObject
{
    // Error parsing type: , name: request
    // Error parsing type: , name: response
    // Error parsing type: , name: redirectUrl
    // Error parsing type: , name: statusCode
    // Error parsing type: , name: triesCount
}

@end

@interface _TtCC5Studo8Messages15ParserResultMsg : _TtCs12_SwiftObject
{
    // Error parsing type: , name: type
    // Error parsing type: , name: uniId
    // Error parsing type: , name: partial
    // Error parsing type: , name: results
    // Error parsing type: , name: deleteField
    // Error parsing type: , name: deleteValues
}

@end

@interface _TtC5Studo14MessageFactory : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo23SmsForceMigrationInfoVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: button
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)buttonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo13SSLPinManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo15CourseGroupCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: label
    // Error parsing type: , name: toggle
    // Error parsing type: , name: presenter
    // Error parsing type: , name: courseGroup
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)toggleAction:(id)arg1;
- (void)awakeFromNib;
@property(nonatomic, retain) UISwitch *toggle; // @synthesize toggle;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo16ForgotPasswordVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: emailTextField
    // Error parsing type: , name: resetPassword
    // Error parsing type: , name: subtitleLabel
    // Error parsing type: , name: backButton
    // Error parsing type: , name: activityView
    // Error parsing type: , name: checkEmailLabel
    // Error parsing type: , name: checkEmailDescriptionLabel
    // Error parsing type: , name: moreButton
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (void)moreButtonAction:(id)arg1;
- (void)resetPassword:(id)arg1;
- (void)onBackPressed:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *moreButton; // @synthesize moreButton;
@property(nonatomic, retain) UILabel *checkEmailDescriptionLabel; // @synthesize checkEmailDescriptionLabel;
@property(nonatomic, retain) UILabel *checkEmailLabel; // @synthesize checkEmailLabel;
@property(nonatomic, retain) UIActivityIndicatorView *activityView; // @synthesize activityView;
@property(nonatomic, retain) UIButton *backButton; // @synthesize backButton;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) _TtC5Studo8MbButton *resetPassword; // @synthesize resetPassword;
@property(nonatomic, retain) UITextField *emailTextField; // @synthesize emailTextField;

@end

@interface _TtC5Studo3App : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo9Semaphore : _TtCs12_SwiftObject
{
    // Error parsing type: , name: semaphore
}

@end

@interface _TtC5Studo7Integer : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo6System : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo7ProItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo15PositioningItem : _TtC5Studo7ProItem
{
    // Error parsing type: , name: position
}

@end

@interface _TtC5Studo10HeaderItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: title
}

@end

@interface _TtC5Studo12FeaturesItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: title
    // Error parsing type: , name: features
}

@end

@interface _TtC5Studo14AboDetailsItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: description
    // Error parsing type: , name: cancelText
    // Error parsing type: , name: cancelActionUrl
}

@end

@interface _TtC5Studo11BonusesItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: title
    // Error parsing type: , name: creditTitle
    // Error parsing type: , name: bonuses
}

@end

@interface _TtC5Studo11ButtonsItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: buttons
}

@end

@interface _TtC5Studo21ActionDescriptionItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: description
    // Error parsing type: , name: tip
}

@end

@interface _TtC5Studo13SeparatorItem : _TtC5Studo7ProItem
{
}

@end

@interface _TtC5Studo18TermsOfServiceItem : _TtC5Studo15PositioningItem
{
    // Error parsing type: , name: termsOfService
    // Error parsing type: , name: linkText
    // Error parsing type: , name: linkUrl
}

@end

@interface _TtC5Studo15SimpleLabelItem : _TtC5Studo7ProItem
{
    // Error parsing type: , name: text
}

@end

@interface _TtC5Studo15CalendarColorVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: realmNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: tableView
    // Error parsing type: , name: items
    // Error parsing type: , name: selectedCalendarColorKey
    // Error parsing type: , name: selectedCalendarColorItem
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)resetColors;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo17CalendarColorItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo9EventItem : _TtC5Studo17CalendarColorItem
{
}

@end

@interface _TtC5Studo8ExamItem : _TtC5Studo17CalendarColorItem
{
}

@end

@interface _TtC5Studo12HolidaysItem : _TtC5Studo17CalendarColorItem
{
}

@end

@interface _TtC5Studo14FeedImportItem : _TtC5Studo17CalendarColorItem
{
    // Error parsing type: , name: calendarFeed
}

@end

@interface _TtC5Studo17CalendarEventItem : _TtC5Studo17CalendarColorItem
{
    // Error parsing type: , name: event
}

@end

@interface _TtC5Studo17CalendarColorCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: eventName
    // Error parsing type: , name: colorView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UIView *colorView; // @synthesize colorView;
@property(nonatomic, retain) UILabel *eventName; // @synthesize eventName;

@end

@interface _TtC5Studo19CustomColorPickerVC : UIViewController
{
    // Error parsing type: , name: colorPickerView
    // Error parsing type: , name: selectedColor
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)onColorChangeWithColorPickerView:(id)arg1;
- (void)save;
- (void)viewDidLoad;
@property(nonatomic, retain) HRColorPickerView *colorPickerView; // @synthesize colorPickerView;

@end

@interface _TtC5Studo19ChatDeeplinkHandler : _TtCs12_SwiftObject
{
    // Error parsing type: , name: realm
    // Error parsing type: , name: channelNotification
    // Error parsing type: , name: tabNotification
    // Error parsing type: , name: topicNotification
    // Error parsing type: , name: messageNotification
    // Error parsing type: , name: errorMessageNotification
    // Error parsing type: , name: ownPrivateChannelIdNotification
    // Error parsing type: , name: onChattingWithYourself
    // Error parsing type: , name: onLoadingFinished
    // Error parsing type: , name: onError
    // Error parsing type: , name: onStartLoading
    // Error parsing type: , name: channelId
    // Error parsing type: , name: tabId
    // Error parsing type: , name: topicId
    // Error parsing type: , name: messageId
    // Error parsing type: , name: channel
    // Error parsing type: , name: tab
    // Error parsing type: , name: topic
    // Error parsing type: , name: message
    // Error parsing type: , name: errorMessage
    // Error parsing type: , name: deeplinkHandled
}

@end

@interface _TtC5Studo10MbSnackBar : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: textLabel
    // Error parsing type: , name: detailButtonLabel
    // Error parsing type: , name: button
    // Error parsing type: , name: leftMarginConstraint
    // Error parsing type: , name: rightMarginConstraint
    // Error parsing type: , name: bottomMarginConstraint
    // Error parsing type: , name: detailButtonWidthConstraint
    // Error parsing type: , name: detailButtonRightConstraint
    // Error parsing type: , name: buttonAction
    // Error parsing type: , name: superView
    // Error parsing type: , name: animationType
    // Error parsing type: , name: dismissTimer
    // Error parsing type: , name: shouldDismissOnSwipe
    // Error parsing type: , name: duration
}

- (void).cxx_destruct;
- (void)autoDismiss;
- (void)didSwipe:(id)arg1;
- (void)onScreenRotateNotification;
- (void)buttonAction:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) NSLayoutConstraint *detailButtonRightConstraint; // @synthesize detailButtonRightConstraint;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UILabel *detailButtonLabel; // @synthesize detailButtonLabel;
@property(nonatomic, retain) UILabel *textLabel; // @synthesize textLabel;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo6ChatVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: _chatToolbar
    // Error parsing type: , name: _tableView
    // Error parsing type: , name: _loadingActivityIndicator
    // Error parsing type: , name: _headerCell
    // Error parsing type: , name: _headerCellHeightConstraint
    // Error parsing type: , name: stickyInfoShowsSystemMessage
    // Error parsing type: , name: headerCellNonSystemInfo
    // Error parsing type: , name: headerCellNonSystemColor
    // Error parsing type: , name: notificationToggleEnabled
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)toggleNotification;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo4MbAd : _TtCs12_SwiftObject
{
    // Error parsing type: , name: adsInitialized
    // Error parsing type: , name: adsInitializedLockObject
}

@end

@interface _TtC5Studo16HomeNavigationVC : UINavigationController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithRootViewController:(id)arg1;
- (id)initWithNavigationBarClass:(Class)arg1 toolbarClass:(Class)arg2;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;

@end

@interface _TtC5Studo7MbLabel : UILabel <UIGestureRecognizerDelegate>
{
    // Error parsing type: , name: delegate
    // Error parsing type: , name: dataDetector
    // Error parsing type: , name: links
    // Error parsing type: , name: currentlyTouchedLink
    // Error parsing type: , name: enabledTextCheckingTypes
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
@property(nonatomic, readonly) _Bool canBecomeFirstResponder;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
@property(nonatomic, copy) NSString *text;

@end

@interface _TtC5Studo11MbLabelLink : NSObject
{
    // Error parsing type: , name: result
    // Error parsing type: , name: url
}

- (void).cxx_destruct;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(nonatomic, copy) NSURL *url; // @synthesize url;
@property(nonatomic, retain) NSTextCheckingResult *result; // @synthesize result;

@end

@interface _TtC5Studo27NotificationPopoverSetterVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: timeTextField
    // Error parsing type: , name: tableView
    // Error parsing type: , name: cancelButton
    // Error parsing type: , name: saveButton
    // Error parsing type: , name: timeUnits
    // Error parsing type: , name: delegate
    // Error parsing type: , name: showNoNotification
    // Error parsing type: , name: currentTime
    // Error parsing type: , name: index
    // Error parsing type: , name: selectedCellIndex
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)saveButtonAction:(id)arg1;
- (void)cancelButtonAction:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *saveButton; // @synthesize saveButton;
@property(nonatomic, retain) UIButton *cancelButton; // @synthesize cancelButton;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;
@property(nonatomic, retain) UITextField *timeTextField; // @synthesize timeTextField;
@property(nonatomic, retain) UILabel *headerLabel; // @synthesize headerLabel;

@end

@interface _TtCC5Studo27NotificationPopoverSetterVCP33_624B41A505C1B04DE4D6FA340945840F8TimeUnit : _TtCs12_SwiftObject
{
    // Error parsing type: , name: text
    // Error parsing type: , name: multiplier
}

@end

@interface _TtC5Studo11ProBannerVC : _TtC5Studo4MbVC
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _TtC5Studo14MailOverviewVC : _TtC5Studo6HomeVC <UITabBarDelegate>
{
    // Error parsing type: , name: mailTableView
    // Error parsing type: , name: fab
    // Error parsing type: , name: emtpyMailBoxLabel
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
    // Error parsing type: , name: mailNotificationToken
    // Error parsing type: , name: mailboxNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: refreshControl
    // Error parsing type: , name: goToMailId
    // Error parsing type: , name: modifiedMail
    // Error parsing type: , name: modifiedMailCompletionHandler
    // Error parsing type: , name: snackBar
    // Error parsing type: , name: searchController
    // Error parsing type: , name: filterString
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (void)didDismissSearchController:(id)arg1;
- (void)didPresentSearchController:(id)arg1;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)handleLongPressWithGestureRecognizer:(id)arg1;
- (void)fabAction:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (id)tableView:(id)arg1 leadingSwipeActionsConfigurationForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 trailingSwipeActionsConfigurationForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 commitEditingStyle:(long long)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)updateMails;
- (void)didReceiveMemoryWarning;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UILabel *emtpyMailBoxLabel; // @synthesize emtpyMailBoxLabel;
@property(nonatomic, retain) UIButton *fab; // @synthesize fab;
@property(nonatomic, retain) UITableView *mailTableView; // @synthesize mailTableView;

@end

@interface _TtC5Studo14HeaderItemCell : UITableViewCell
{
    // Error parsing type: , name: title
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *title; // @synthesize title;

@end

@interface _TtC5Studo18AboDetailsItemCell : UITableViewCell
{
    // Error parsing type: , name: descriptionText
    // Error parsing type: , name: cancelButton
    // Error parsing type: , name: callback
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)cancelButtonClicked:(id)arg1;
@property(nonatomic, retain) UIButton *cancelButton; // @synthesize cancelButton;
@property(nonatomic, retain) UILabel *descriptionText; // @synthesize descriptionText;

@end

@interface _TtC5Studo16FeaturesItemCell : UITableViewCell
{
    // Error parsing type: , name: stackView
    // Error parsing type: , name: featuresTitleText
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *featuresTitleText; // @synthesize featuresTitleText;
@property(nonatomic, retain) UIStackView *stackView; // @synthesize stackView;

@end

@interface _TtC5Studo25ActionDescriptionItemCell : UITableViewCell
{
    // Error parsing type: , name: descriptionText
    // Error parsing type: , name: tipText
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *tipText; // @synthesize tipText;
@property(nonatomic, retain) UILabel *descriptionText; // @synthesize descriptionText;

@end

@interface _TtC5Studo15ButtonsItemCell : UITableViewCell
{
    // Error parsing type: , name: stackView
    // Error parsing type: , name: callback
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)buttonPressedWithSender:(id)arg1;
@property(nonatomic, retain) UIStackView *stackView; // @synthesize stackView;

@end

@interface _TtC5Studo15BonusesItemCell : UITableViewCell
{
    // Error parsing type: , name: stackView
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UIStackView *stackView; // @synthesize stackView;

@end

@interface _TtC5Studo17SeparatorItemCell : UITableViewCell
{
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface _TtC5Studo22TermsOfServiceItemCell : UITableViewCell
{
    // Error parsing type: , name: billingTermsText
    // Error parsing type: , name: privacyAndTermsOfUsageLink
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)privacyAndTermsClickWithSender:(id)arg1;
@property(nonatomic, retain) UILabel *privacyAndTermsOfUsageLink; // @synthesize privacyAndTermsOfUsageLink;
@property(nonatomic, retain) UILabel *billingTermsText; // @synthesize billingTermsText;

@end

@interface _TtC5Studo15SingleBonusView : UIView
{
    // Error parsing type: , name: contentView
    // Error parsing type: , name: leftText
    // Error parsing type: , name: rightText
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, retain) UILabel *rightText; // @synthesize rightText;
@property(nonatomic, retain) UILabel *leftText; // @synthesize leftText;
@property(nonatomic, retain) UIView *contentView; // @synthesize contentView;

@end

@interface _TtC5Studo17SingleFeatureView : UIView
{
    // Error parsing type: , name: contentView
    // Error parsing type: , name: icon
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, retain) UILabel *label; // @synthesize label;
@property(nonatomic, retain) UIImageView *icon; // @synthesize icon;
@property(nonatomic, retain) UIView *contentView; // @synthesize contentView;

@end

@interface _TtC5Studo8MbTVCell : UITableViewCell
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)awakeFromNib;

@end

@interface _TtC5Studo19SignInUniProgressVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: finished
    // Error parsing type: , name: hello
    // Error parsing type: , name: disclamer
    // Error parsing type: , name: loading
    // Error parsing type: , name: letsGo
    // Error parsing type: , name: studoImgView
    // Error parsing type: , name: minWH
    // Error parsing type: , name: originalFrame
    // Error parsing type: , name: smallFrame
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)onClickLetsGo:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIImageView *studoImgView; // @synthesize studoImgView;
@property(nonatomic, retain) UIButton *letsGo; // @synthesize letsGo;
@property(nonatomic, retain) UILabel *loading; // @synthesize loading;
@property(nonatomic, retain) UILabel *disclamer; // @synthesize disclamer;
@property(nonatomic, retain) UILabel *hello; // @synthesize hello;

@end

@interface _TtC5Studo8MbButton : UIButton
{
    // Error parsing type: , name: clickListener
    // Error parsing type: , name: filled
    // Error parsing type: , name: color
}

- (void).cxx_destruct;
@property(nonatomic, retain) UIColor *backgroundColor;
- (void)touchUpInside;
- (void)touchDown;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
- (void)layoutSubviews;
- (void)prepareForInterfaceBuilder;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, retain) UIColor *color; // @synthesize color;
@property(nonatomic) double borderWidth;
@property(nonatomic) double cornerRadius;
@property(nonatomic) _Bool filled; // @synthesize filled;

@end

@interface _TtC5Studo18MailOverviewTVCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: senderLabel
    // Error parsing type: , name: subjectLabel
    // Error parsing type: , name: dateLabel
    // Error parsing type: , name: attachmentImg
    // Error parsing type: , name: sentLabel
    // Error parsing type: , name: sentToSenderLabelConstraint
    // Error parsing type: , name: attachmentImgWidthConstraint
    // Error parsing type: , name: boldFont
    // Error parsing type: , name: normalFont
    // Error parsing type: , name: boldDateFont
    // Error parsing type: , name: normalDateFont
    // Error parsing type: , name: mail
    // Error parsing type: , name: mailbox
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)awakeFromNib;
@property(nonatomic, retain) NSLayoutConstraint *attachmentImgWidthConstraint; // @synthesize attachmentImgWidthConstraint;
@property(nonatomic, retain) NSLayoutConstraint *sentToSenderLabelConstraint; // @synthesize sentToSenderLabelConstraint;
@property(nonatomic, retain) UILabel *sentLabel; // @synthesize sentLabel;
@property(nonatomic, retain) UIImageView *attachmentImg; // @synthesize attachmentImg;
@property(nonatomic, retain) UILabel *dateLabel; // @synthesize dateLabel;
@property(nonatomic, retain) UILabel *subjectLabel; // @synthesize subjectLabel;
@property(nonatomic, retain) UILabel *senderLabel; // @synthesize senderLabel;

@end

@interface _TtC5Studo11MbUniSearch : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uniDescriptors
    // Error parsing type: , name: uniIdsToKeywords
}

@end

@interface _TtC5Studo14JSONSerializer : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo13MbRewardVideo : NSObject <GADRewardBasedVideoAdDelegate>
{
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: adId
    // Error parsing type: , name: loadingFinishedCallback
    // Error parsing type: , name: userEarnedRewardCallback
}

- (void).cxx_destruct;
- (id)init;
- (void)rewardBasedVideoAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)rewardBasedVideoAdWillLeaveApplication:(id)arg1;
- (void)rewardBasedVideoAdDidOpen:(id)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didRewardUserWithReward:(id)arg2;

@end

@interface _TtC5Studo12RequestUniVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: uniNameTF
    // Error parsing type: , name: emailTF
    // Error parsing type: , name: activateButton
    // Error parsing type: , name: textLabel
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: country
    // Error parsing type: , name: federalState
    // Error parsing type: , name: realm
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)activateButtonAction:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) UILabel *textLabel; // @synthesize textLabel;
@property(nonatomic, retain) _TtC5Studo8MbButton *activateButton; // @synthesize activateButton;
@property(nonatomic, retain) UITextField *emailTF; // @synthesize emailTF;
@property(nonatomic, retain) _TtC5Studo23MbAutoCompleteTextField *uniNameTF; // @synthesize uniNameTF;

@end

@interface _TtC5Studo13TabOverviewVC : _TtC5Studo18MbSegmentedPagerVC
{
    // Error parsing type: , name: presenter
    // Error parsing type: , name: channelId
    // Error parsing type: , name: tabId
    // Error parsing type: , name: isSubscribedWithDeeplink
    // Error parsing type: , name: userInfos
    // Error parsing type: , name: notificationsEnabled
    // Error parsing type: , name: tabs
    // Error parsing type: , name: topicNotification
    // Error parsing type: , name: firstTabSubscribed
    // Error parsing type: , name: _inputAccessoryView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(nonatomic, readonly) UIView *inputAccessoryView;
@property(nonatomic, readonly) _Bool canBecomeFirstResponder;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)sharePressed;
- (void)notificationButtonPressed;
- (void)dealloc;
- (void)viewDidLoad;

@end

@interface _TtC5Studo14SocialSignInVC : _TtC5Studo11AuthManager <GIDSignInDelegate, GIDSignInUIDelegate>
{
    // Error parsing type: , name: params
    // Error parsing type: , name: smsButton
    // Error parsing type: , name: facebookButton
    // Error parsing type: , name: googleButton
    // Error parsing type: , name: mailButton
    // Error parsing type: , name: signInSmsLabel
    // Error parsing type: , name: signInFBLabel
    // Error parsing type: , name: signInGoogleLabel
    // Error parsing type: , name: signInMailLabel
    // Error parsing type: , name: moreButton
    // Error parsing type: , name: showLegacySigninButton
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)signIn:(id)arg1 didSignInForUser:(id)arg2 withError:(id)arg3;
- (void)showLegacySigninButtonAction:(id)arg1;
- (void)backButtonAction:(id)arg1;
- (void)moreButtonAction:(id)arg1;
- (void)signInWithMail:(id)arg1;
- (void)signInWithGoogle:(id)arg1;
- (void)signInWithFacebook:(id)arg1;
- (void)signInWithSms:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *showLegacySigninButton; // @synthesize showLegacySigninButton;
@property(nonatomic, retain) UIButton *moreButton; // @synthesize moreButton;
@property(nonatomic, retain) UILabel *signInMailLabel; // @synthesize signInMailLabel;
@property(nonatomic, retain) UILabel *signInGoogleLabel; // @synthesize signInGoogleLabel;
@property(nonatomic, retain) UILabel *signInFBLabel; // @synthesize signInFBLabel;
@property(nonatomic, retain) UILabel *signInSmsLabel; // @synthesize signInSmsLabel;
@property(nonatomic, retain) UIView *mailButton; // @synthesize mailButton;
@property(nonatomic, retain) UIView *googleButton; // @synthesize googleButton;
@property(nonatomic, retain) UIView *facebookButton; // @synthesize facebookButton;
@property(nonatomic, retain) UIView *smsButton; // @synthesize smsButton;

@end

@interface _TtCC5Studo14SocialSignInVC6Params : _TtCs12_SwiftObject
{
    // Error parsing type: , name: createNewUser
}

@end

@interface _TtC5Studo11BuildConfig : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18MbLifecycleAwareVC : UIViewController
{
    // Error parsing type: , name: lifeCycleListeners
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo17LifecycleListener : _TtCs12_SwiftObject
{
    // Error parsing type: , name: event
    // Error parsing type: , name: listener
    // Error parsing type: , name: debugPurpose
}

@end

@interface _TtC5Studo10MailClient : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo10MailClient25MailDownloadResultDetails : _TtCs12_SwiftObject
{
    // Error parsing type: , name: result
    // Error parsing type: , name: newMails
}

@end

@interface _TtCC5Studo10MailClient14IMAPClientList : _TtCs12_SwiftObject
{
    // Error parsing type: , name: list
}

@end

@interface _TtCC5Studo10MailClientP33_D30134B811E789F2FE1099140B49178610TestConfig : _TtCs12_SwiftObject
{
    // Error parsing type: , name: port
    // Error parsing type: , name: connectionType
    // Error parsing type: , name: authType
    // Error parsing type: , name: usernameSuffix
}

@end

@interface _TtC5Studo9MbSession : _TtCs12_SwiftObject
{
    // Error parsing type: , name: authStateLsiteners
}

@end

@interface _TtC5Studo5PinVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: pinText
    // Error parsing type: , name: indicatorLayout
    // Error parsing type: , name: indicator1
    // Error parsing type: , name: indicator2
    // Error parsing type: , name: indicator3
    // Error parsing type: , name: indicator4
    // Error parsing type: , name: indicator5
    // Error parsing type: , name: indicator6
    // Error parsing type: , name: pinButtonDelete
    // Error parsing type: , name: pinButtonReset
    // Error parsing type: , name: pinToConfirm
    // Error parsing type: , name: currentPin
    // Error parsing type: , name: onPinUnlocked
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)onClick:(id)arg1;
- (void)onResetClick:(id)arg1;
- (void)onDeleteClick:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *pinButtonReset; // @synthesize pinButtonReset;
@property(nonatomic, retain) UIButton *pinButtonDelete; // @synthesize pinButtonDelete;
@property(nonatomic, retain) UIImageView *indicator6; // @synthesize indicator6;
@property(nonatomic, retain) UIImageView *indicator5; // @synthesize indicator5;
@property(nonatomic, retain) UIImageView *indicator4; // @synthesize indicator4;
@property(nonatomic, retain) UIImageView *indicator3; // @synthesize indicator3;
@property(nonatomic, retain) UIImageView *indicator2; // @synthesize indicator2;
@property(nonatomic, retain) UIImageView *indicator1; // @synthesize indicator1;
@property(nonatomic, retain) UIView *indicatorLayout; // @synthesize indicatorLayout;
@property(nonatomic, retain) UILabel *pinText; // @synthesize pinText;

@end

@interface _TtC5Studo14SplashScreenVC : UIViewController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)willEnterForeground;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;

@end

@interface _TtC5Studo30NetworkOperatorChangedPromptVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: promptTextLabel
    // Error parsing type: , name: changeNumberBtn
    // Error parsing type: , name: keepNumberBtn
    // Error parsing type: , name: promptDescriptionLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)keepNumber:(id)arg1;
- (void)changeNumber:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *promptDescriptionLabel; // @synthesize promptDescriptionLabel;
@property(nonatomic, retain) UIButton *keepNumberBtn; // @synthesize keepNumberBtn;
@property(nonatomic, retain) UIButton *changeNumberBtn; // @synthesize changeNumberBtn;
@property(nonatomic, retain) UILabel *promptTextLabel; // @synthesize promptTextLabel;

@end

@interface _TtC5Studo13ColorPickerVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: colors
    // Error parsing type: , name: selectedColor
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)openCustomColorPicker;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo11PickerColor : NSObject
{
    // Error parsing type: , name: name
    // Error parsing type: , name: color
}

- (void).cxx_destruct;
- (id)init;

@end

@interface _TtC5Studo9MbSysinfo : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo5MbLog : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo17ClientSyncManager : _TtCs12_SwiftObject
{
    // Error parsing type: , name: cloudParser
    // Error parsing type: , name: lastSyncStart
    // Error parsing type: , name: lastSyncStartLock
    // Error parsing type: , name: defaultLoginState
    // Error parsing type: , name: defaultSyncState
    // Error parsing type: , name: defaultMailSyncState
    // Error parsing type: , name: loginStates
    // Error parsing type: , name: syncStates
    // Error parsing type: , name: mailSyncStates
    // Error parsing type: , name: loginStateListeners
    // Error parsing type: , name: syncStateListeners
    // Error parsing type: , name: mailSyncStateListeners
    // Error parsing type: , name: realmDataWithUniId
}

@end

@interface _TtC5Studo21AbstractSocketManager : _TtCs12_SwiftObject
{
    // Error parsing type: , name: clientId
    // Error parsing type: , name: registered
    // Error parsing type: , name: localDevServer
    // Error parsing type: , name: productionUrl
    // Error parsing type: , name: devUrl
    // Error parsing type: , name: name
    // Error parsing type: , name: socketLockObject
    // Error parsing type: , name: cookiesHeader
    // Error parsing type: , name: socket
    // Error parsing type: , name: manager
    // Error parsing type: , name: lastNetworkEvent
    // Error parsing type: , name: logRequests
}

@end

@interface _TtC5Studo10CustomView : UIView
{
}

- (void)drawRect:(struct CGRect)arg1;
- (void)layoutSubviews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _TtC5Studo16ChatCacheManager : _TtCs12_SwiftObject
{
    // Error parsing type: , name: fileManager
}

@end

@interface _TtC5Studo19NotificationManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo15ChatMessageCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: chatTagStackView
    // Error parsing type: , name: chatTagStackViewHeightConstraint
    // Error parsing type: , name: chatTagStackViewBottomConstraint
    // Error parsing type: , name: headerLabel
    // Error parsing type: , name: contentLabel
    // Error parsing type: , name: subtitleLabel
    // Error parsing type: , name: subtitleLabelBottomConstraint
    // Error parsing type: , name: upDownVoter
    // Error parsing type: , name: upDownVoterWidthConstraint
    // Error parsing type: , name: upDownVoterHeightConstraint
    // Error parsing type: , name: attachmentView
    // Error parsing type: , name: attachmentViewHeightConstraint
    // Error parsing type: , name: attachmentViewBottomConstraint
    // Error parsing type: , name: attachmentFileExtensionButton
    // Error parsing type: , name: attachmentFileExtensionButtonTopConstraint
    // Error parsing type: , name: attachmentFilenameLabel
    // Error parsing type: , name: attachmentFilenameLabelTopConstraint
    // Error parsing type: , name: attachmentViewButton
    // Error parsing type: , name: seperatorView
    // Error parsing type: , name: inlineButtonStackView
    // Error parsing type: , name: inlineButtonStackViewHeightConstraint
    // Error parsing type: , name: inlineButtonStackViewBottomConstraint
    // Error parsing type: , name: inlineImageView
    // Error parsing type: , name: inlineImageButton
    // Error parsing type: , name: inlineImageViewHeightConstraint
    // Error parsing type: , name: inlineImageViewWidthConstraint
    // Error parsing type: , name: inlineImageViewBottomConstraint
    // Error parsing type: , name: presenterChatTopicDetail
    // Error parsing type: , name: presenterChatTopicOverview
    // Error parsing type: , name: id
    // Error parsing type: , name: url
    // Error parsing type: , name: fileName
    // Error parsing type: , name: chatTagStackViewHeightConstraintHeight
    // Error parsing type: , name: chatTagStackViewTopConstraintHeight
    // Error parsing type: , name: message
    // Error parsing type: , name: topic
    // Error parsing type: , name: buttonToActionId
    // Error parsing type: , name: upDownVoterWidthConstraintConstant
    // Error parsing type: , name: upDownVoterHeightConstraintConstant
    // Error parsing type: , name: inlineButtonStackViewBottomConstraintConstant
    // Error parsing type: , name: subtitleLabelBottomConstraintConstant
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)attachmentViewAction:(id)arg1;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)awakeFromNib;
@property(nonatomic, retain) NSLayoutConstraint *inlineImageViewBottomConstraint; // @synthesize inlineImageViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *inlineImageViewWidthConstraint; // @synthesize inlineImageViewWidthConstraint;
@property(nonatomic, retain) NSLayoutConstraint *inlineImageViewHeightConstraint; // @synthesize inlineImageViewHeightConstraint;
@property(nonatomic, retain) UIButton *inlineImageButton; // @synthesize inlineImageButton;
@property(nonatomic, retain) UIImageView *inlineImageView; // @synthesize inlineImageView;
@property(nonatomic, retain) NSLayoutConstraint *inlineButtonStackViewBottomConstraint; // @synthesize inlineButtonStackViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *inlineButtonStackViewHeightConstraint; // @synthesize inlineButtonStackViewHeightConstraint;
@property(nonatomic, retain) UIStackView *inlineButtonStackView; // @synthesize inlineButtonStackView;
@property(nonatomic, retain) UIView *seperatorView; // @synthesize seperatorView;
@property(nonatomic, retain) UIButton *attachmentViewButton; // @synthesize attachmentViewButton;
@property(nonatomic, retain) NSLayoutConstraint *attachmentFilenameLabelTopConstraint; // @synthesize attachmentFilenameLabelTopConstraint;
@property(nonatomic, retain) UILabel *attachmentFilenameLabel; // @synthesize attachmentFilenameLabel;
@property(nonatomic, retain) NSLayoutConstraint *attachmentFileExtensionButtonTopConstraint; // @synthesize attachmentFileExtensionButtonTopConstraint;
@property(nonatomic, retain) UIButton *attachmentFileExtensionButton; // @synthesize attachmentFileExtensionButton;
@property(nonatomic, retain) NSLayoutConstraint *attachmentViewBottomConstraint; // @synthesize attachmentViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *attachmentViewHeightConstraint; // @synthesize attachmentViewHeightConstraint;
@property(nonatomic, retain) UIView *attachmentView; // @synthesize attachmentView;
@property(nonatomic, retain) NSLayoutConstraint *upDownVoterHeightConstraint; // @synthesize upDownVoterHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *upDownVoterWidthConstraint; // @synthesize upDownVoterWidthConstraint;
@property(nonatomic, retain) _TtC5Studo14UpDownVoteView *upDownVoter; // @synthesize upDownVoter;
@property(nonatomic, retain) NSLayoutConstraint *subtitleLabelBottomConstraint; // @synthesize subtitleLabelBottomConstraint;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) _TtC5Studo7MbLabel *contentLabel; // @synthesize contentLabel;
@property(nonatomic, retain) UILabel *headerLabel; // @synthesize headerLabel;
@property(nonatomic, retain) NSLayoutConstraint *chatTagStackViewBottomConstraint; // @synthesize chatTagStackViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *chatTagStackViewHeightConstraint; // @synthesize chatTagStackViewHeightConstraint;
@property(nonatomic, retain) UIStackView *chatTagStackView; // @synthesize chatTagStackView;

@end

@interface _TtC5Studo16CalendarImportVC : UITableViewController
{
    // Error parsing type: , name: presenter
    // Error parsing type: , name: items
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)dealloc;
- (void)viewWillAppear:(_Bool)arg1;

@end

@interface _TtC5Studo22HeaderCalendarItemCell : UITableViewCell
{
    // Error parsing type: , name: headerTitle
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *headerTitle; // @synthesize headerTitle;

@end

@interface _TtC5Studo22SingleCalendarItemCell : UITableViewCell
{
    // Error parsing type: , name: titleText
    // Error parsing type: , name: subtitleText
    // Error parsing type: , name: warningIcon
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UIImageView *warningIcon; // @synthesize warningIcon;
@property(nonatomic, retain) UILabel *subtitleText; // @synthesize subtitleText;
@property(nonatomic, retain) UILabel *titleText; // @synthesize titleText;

@end

@interface _TtC5Studo17AddImportItemCell : UITableViewCell
{
    // Error parsing type: , name: addDescriptionText
    // Error parsing type: , name: moreInfoButton
    // Error parsing type: , name: importCalendarButton
    // Error parsing type: , name: onButtonClicked
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)importCalendarClicked:(id)arg1;
- (void)moreInfoButtonClicked:(id)arg1;
@property(nonatomic, retain) UIButton *importCalendarButton; // @synthesize importCalendarButton;
@property(nonatomic, retain) UIButton *moreInfoButton; // @synthesize moreInfoButton;
@property(nonatomic, retain) UILabel *addDescriptionText; // @synthesize addDescriptionText;

@end

@interface _TtC5Studo18CalendarImportItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo18CalendarImportItem24HeaderCalendarImportItem : _TtC5Studo18CalendarImportItem
{
    // Error parsing type: , name: title
}

@end

@interface _TtCC5Studo18CalendarImportItem18SingleCalendarItem : _TtC5Studo18CalendarImportItem
{
    // Error parsing type: , name: calendarFeed
    // Error parsing type: , name: calendarDetails
}

@end

@interface _TtCC5Studo18CalendarImportItem13AddImportItem : _TtC5Studo18CalendarImportItem
{
}

@end

@interface _TtC5Studo7Strings : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18ClientMessageLocal : _TtCs12_SwiftObject
{
    // Error parsing type: , name: text
    // Error parsing type: , name: topicId
    // Error parsing type: , name: anonym
    // Error parsing type: , name: downloadUrl
}

@end

@interface _TtC5Studo16ClientTopicLocal : _TtCs12_SwiftObject
{
    // Error parsing type: , name: text
    // Error parsing type: , name: channelId
    // Error parsing type: , name: tabId
    // Error parsing type: , name: topicTypeId
    // Error parsing type: , name: anonym
    // Error parsing type: , name: downloadUrl
}

@end

@interface _TtC5Studo17CourseUnhideModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo12HiddenCourse : _TtCs12_SwiftObject
{
    // Error parsing type: , name: summary
    // Error parsing type: , name: date
    // Error parsing type: , name: id
}

@end

@interface _TtC5Studo13MailWritingVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: fromButton
    // Error parsing type: , name: fromLabel
    // Error parsing type: , name: atTextField
    // Error parsing type: , name: atLabel
    // Error parsing type: , name: subjectTextField
    // Error parsing type: , name: bodyTextView
    // Error parsing type: , name: navSendButton
    // Error parsing type: , name: bottomInfoLabel
    // Error parsing type: , name: scrollView
    // Error parsing type: , name: attachmentButton
    // Error parsing type: , name: attachmentStackView
    // Error parsing type: , name: attachmentStackViewHeightConstraint
    // Error parsing type: , name: realm
    // Error parsing type: , name: filePicker
    // Error parsing type: , name: mode
    // Error parsing type: , name: mailToHandle
    // Error parsing type: , name: selectedUniId
    // Error parsing type: , name: selectedEmail
    // Error parsing type: , name: sendingSucessfull
    // Error parsing type: , name: isSendingMail
    // Error parsing type: , name: emailAddressToUniId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)textViewDidEndEditing:(id)arg1;
- (void)textViewDidBeginEditing:(id)arg1;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)attachmentButtonAction:(id)arg1;
- (void)subjectTextFieldAction:(id)arg1;
- (void)fromButtonAction:(id)arg1;
- (void)navSendButtonAction:(id)arg1;
- (void)navBackButtonAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *attachmentStackViewHeightConstraint; // @synthesize attachmentStackViewHeightConstraint;
@property(nonatomic, retain) UIStackView *attachmentStackView; // @synthesize attachmentStackView;
@property(nonatomic, retain) UIButton *attachmentButton; // @synthesize attachmentButton;
@property(nonatomic, retain) UIScrollView *scrollView; // @synthesize scrollView;
@property(nonatomic, retain) UILabel *bottomInfoLabel; // @synthesize bottomInfoLabel;
@property(nonatomic, retain) UIBarButtonItem *navSendButton; // @synthesize navSendButton;
@property(nonatomic, retain) UITextView *bodyTextView; // @synthesize bodyTextView;
@property(nonatomic, retain) UITextField *subjectTextField; // @synthesize subjectTextField;
@property(nonatomic, retain) UILabel *atLabel; // @synthesize atLabel;
@property(nonatomic, retain) _TtC5Studo23MbAutoCompleteTextField *atTextField; // @synthesize atTextField;
@property(nonatomic, retain) UILabel *fromLabel; // @synthesize fromLabel;
@property(nonatomic, retain) UIButton *fromButton; // @synthesize fromButton;

@end

@interface _TtC5Studo9MbEncoder : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo11EmptyObject : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo11StringUtils : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo12StudoWebView : WKWebView
{
    // Error parsing type: , name: request
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;
- (id)loadRequest:(id)arg1;

@end

@interface _TtCC5Studo12StudoWebView19StudofyReturnObject : _TtCs12_SwiftObject
{
    // Error parsing type: , name: request
    // Error parsing type: , name: isStudoUrl
    // Error parsing type: , name: hasStudoHeader
}

@end

@interface _TtC5Studo12SideDrawerVC : UIViewController
{
    // Error parsing type: , name: sideDrawerItems
    // Error parsing type: , name: tableView
    // Error parsing type: , name: bottomLogoContainerView
    // Error parsing type: , name: bottomLogoImageView
    // Error parsing type: , name: bottomLogoContainerViewHeightConstraint
    // Error parsing type: , name: bottomLogoSeperatorHeightConstraint
    // Error parsing type: , name: realm
    // Error parsing type: , name: sideDrawerProfileHeader.storage
    // Error parsing type: , name: sideDrawerProfileSubHeader.storage
    // Error parsing type: , name: sideDrawerStickyFooterUrl.storage
    // Error parsing type: , name: unreadMailCount.storage
    // Error parsing type: , name: unreadMailCountNotificationToken
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
@property(nonatomic, retain) NSLayoutConstraint *bottomLogoSeperatorHeightConstraint; // @synthesize bottomLogoSeperatorHeightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *bottomLogoContainerViewHeightConstraint; // @synthesize bottomLogoContainerViewHeightConstraint;
@property(nonatomic, retain) UIImageView *bottomLogoImageView; // @synthesize bottomLogoImageView;
@property(nonatomic, retain) UIView *bottomLogoContainerView; // @synthesize bottomLogoContainerView;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo19ImpressionCollector : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo21CalendarScheduleModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo5WebVC : _TtC5Studo6HomeVC <WKUIDelegate>
{
    // Error parsing type: , name: bottomToolbarSpace
    // Error parsing type: , name: backButton
    // Error parsing type: , name: forwardButton
    // Error parsing type: , name: toolbar
    // Error parsing type: , name: tabbarItem
    // Error parsing type: , name: webObject
    // Error parsing type: , name: hideToolbar
    // Error parsing type: , name: savedTableViewYPositionToRestoreOnUnwind
    // Error parsing type: , name: snackbar
    // Error parsing type: , name: lastLoginState
    // Error parsing type: , name: pageOffsetMap
    // Error parsing type: , name: webView
    // Error parsing type: , name: popupWebView
    // Error parsing type: , name: docController
    // Error parsing type: , name: zipDownloadingHTMLNavigation
    // Error parsing type: , name: progressView
    // Error parsing type: , name: fileUrl
    // Error parsing type: , name: fileName
    // Error parsing type: , name: reloadTwice
    // Error parsing type: , name: jsFixes
    // Error parsing type: , name: webCredentialAutoFillJSDict
    // Error parsing type: , name: isJobsWebVC
    // Error parsing type: , name: runJavaScriptAlertPanelWithMessageCompletionHandler
    // Error parsing type: , name: runJavaScriptConfirmPanelWithMessageCompletionHandler
    // Error parsing type: , name: runJavaScriptTextInputPanelWithPromptCompletionHandler
    // Error parsing type: , name: executeWebViewActiveJavaScriptAfterFinishLoading
    // Error parsing type: , name: executeWebViewActiveJavaScriptAfterFinishLoadingWKNavigation
    // Error parsing type: , name: webViewActiveState
    // Error parsing type: , name: webViewActiveStateSubscribed
    // Error parsing type: , name: peeking
    // Error parsing type: , name: popingTooFast
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)closeButtonAction:(id)arg1;
- (void)shareButtonAction:(id)arg1;
- (void)onReloadClick:(id)arg1;
- (void)onForwardClick:(id)arg1;
- (void)onBackClick:(id)arg1;
- (void)didEnterForeground;
- (void)didEnterBackground;
- (void)dealloc;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITabBarItem *tabbarItem; // @synthesize tabbarItem;
@property(nonatomic, retain) UIToolbar *toolbar; // @synthesize toolbar;
@property(nonatomic, retain) UIBarButtonItem *forwardButton; // @synthesize forwardButton;
@property(nonatomic, retain) UIBarButtonItem *backButton; // @synthesize backButton;
@property(nonatomic, retain) NSLayoutConstraint *bottomToolbarSpace; // @synthesize bottomToolbarSpace;

@end

@interface _TtC5Studo9WebObject : _TtCs12_SwiftObject
{
    // Error parsing type: , name: title
    // Error parsing type: , name: tag
    // Error parsing type: , name: url
    // Error parsing type: , name: shareable
    // Error parsing type: , name: enableSyncIndicator
    // Error parsing type: , name: enableNavToolbar
    // Error parsing type: , name: allowLocalFileAccess
    // Error parsing type: , name: shouldChangeTitle
}

@end

@interface _TtC5Studo14JSWebInterface : NSObject <WKScriptMessageHandler>
{
    // Error parsing type: , name: vc
}

- (void).cxx_destruct;
- (id)init;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;

@end

@interface _TtC5Studo16UsernamePassword : _TtCs12_SwiftObject
{
    // Error parsing type: , name: username
    // Error parsing type: , name: password
}

@end

@interface _TtC5Studo21StudoBookmarkActivity : UIActivity
{
    // Error parsing type: , name: studoSharePrefix
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: sourceView
    // Error parsing type: , name: urlString
}

- (void).cxx_destruct;
- (id)init;
@property(nonatomic, readonly) UIViewController *activityViewController;
- (void)prepareWithActivityItems:(id)arg1;
- (_Bool)canPerformWithActivityItems:(id)arg1;
@property(nonatomic, readonly) UIImage *activityImage;
@property(nonatomic, readonly) NSString *activityType;
@property(nonatomic, readonly) NSString *activityTitle;

@end

@interface _TtC5Studo11AppDelegate : UIResponder <UIApplicationDelegate, UNUserNotificationCenterDelegate, OSSubscriptionObserver, FIRMessagingDelegate>
{
    // Error parsing type: , name: window
}

- (void).cxx_destruct;
- (id)init;
- (void)onOSSubscriptionChanged:(id)arg1;
- (void)userNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)application:(id)arg1 performFetchWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)messaging:(id)arg1 didRefreshRegistrationToken:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)applicationWillTerminate:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
@property(nonatomic, retain) UIWindow *window; // @synthesize window;

@end

@interface _TtC5Studo14MbInterstitial : NSObject <GADInterstitialDelegate>
{
    // Error parsing type: , name: interstitial
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: presentInterstitialIfPossible
    // Error parsing type: , name: adId
    // Error parsing type: , name: percentage
}

- (void).cxx_destruct;
- (id)init;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidReceiveAd:(id)arg1;

@end

@interface _TtC5Studo23WorkloadSliderTrackerVC : _TtC5Studo7MbMvpVC
{
    // Error parsing type: , name: navView
    // Error parsing type: , name: leftArrowButton
    // Error parsing type: , name: rightArrowButton
    // Error parsing type: , name: dateLabel
    // Error parsing type: , name: firstTitleLabel
    // Error parsing type: , name: firstSubtitleLabel
    // Error parsing type: , name: firstTimeLabel
    // Error parsing type: , name: firstSlider
    // Error parsing type: , name: secondTitleLabel
    // Error parsing type: , name: secondTimeLabel
    // Error parsing type: , name: secondSlider
    // Error parsing type: , name: thirdTitleLabel
    // Error parsing type: , name: thirdTimeLabel
    // Error parsing type: , name: thirdSlider
    // Error parsing type: , name: stateLabel
    // Error parsing type: , name: stateImage
    // Error parsing type: , name: tabbarItem
    // Error parsing type: , name: presenter
    // Error parsing type: , name: sliderStepSize
    // Error parsing type: , name: maxSliderValue
    // Error parsing type: , name: courseId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)endedTracking:(id)arg1;
- (void)thirdSliderAction:(id)arg1;
- (void)secondSliderAction:(id)arg1;
- (void)firstSliderAction:(id)arg1;
- (void)rightArrowButtonAction:(id)arg1;
- (void)leftArrowButtonAction:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITabBarItem *tabbarItem; // @synthesize tabbarItem;
@property(nonatomic, retain) UIImageView *stateImage; // @synthesize stateImage;
@property(nonatomic, retain) UILabel *stateLabel; // @synthesize stateLabel;
@property(nonatomic, retain) UISlider *thirdSlider; // @synthesize thirdSlider;
@property(nonatomic, retain) UILabel *thirdTimeLabel; // @synthesize thirdTimeLabel;
@property(nonatomic, retain) UILabel *thirdTitleLabel; // @synthesize thirdTitleLabel;
@property(nonatomic, retain) UISlider *secondSlider; // @synthesize secondSlider;
@property(nonatomic, retain) UILabel *secondTimeLabel; // @synthesize secondTimeLabel;
@property(nonatomic, retain) UILabel *secondTitleLabel; // @synthesize secondTitleLabel;
@property(nonatomic, retain) UISlider *firstSlider; // @synthesize firstSlider;
@property(nonatomic, retain) UILabel *firstTimeLabel; // @synthesize firstTimeLabel;
@property(nonatomic, retain) UILabel *firstSubtitleLabel; // @synthesize firstSubtitleLabel;
@property(nonatomic, retain) UILabel *firstTitleLabel; // @synthesize firstTitleLabel;
@property(nonatomic, retain) UILabel *dateLabel; // @synthesize dateLabel;
@property(nonatomic, retain) UIButton *rightArrowButton; // @synthesize rightArrowButton;
@property(nonatomic, retain) UIButton *leftArrowButton; // @synthesize leftArrowButton;
@property(nonatomic, retain) UIView *navView; // @synthesize navView;

@end

@interface _TtC5Studo11AuthManager : _TtC5Studo4MbVC
{
    // Error parsing type: , name: firebaseAuth.storage
    // Error parsing type: , name: searchController
    // Error parsing type: , name: searchModeEnabled
    // Error parsing type: , name: authType
    // Error parsing type: , name: createNewUser_
    // Error parsing type: , name: emailValidationRegex
    // Error parsing type: , name: segueHandled
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)showMoreMenuActionSheetWithSourceView:(id)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo8Settings : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo14CourseUnhideVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: presenter
    // Error parsing type: , name: tableData
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo18SideDrawerItemCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: name
    // Error parsing type: , name: icon
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UIImageView *icon; // @synthesize icon;
@property(nonatomic, retain) UILabel *name; // @synthesize name;

@end

@interface _TtC5Studo20CalendarScheduleItem : _TtCs12_SwiftObject
{
    // Error parsing type: , name: id
    // Error parsing type: , name: startDate
    // Error parsing type: , name: startMinute
    // Error parsing type: , name: endDate
    // Error parsing type: , name: endMinute
    // Error parsing type: , name: summary
    // Error parsing type: , name: color
    // Error parsing type: , name: location
    // Error parsing type: , name: customEvent
    // Error parsing type: , name: eventDescription
    // Error parsing type: , name: studoRoomId
    // Error parsing type: , name: note
    // Error parsing type: , name: startDateInstance
    // Error parsing type: , name: endDateInstance
}

@end

@interface _TtC5Studo25CalendarScheduleEventItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo15NoEventsDayItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo12WeekViewItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo13MonthViewItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo9GoProItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo24CurrentTimeIndicatorItem : _TtC5Studo20CalendarScheduleItem
{
}

@end

@interface _TtC5Studo18CalendarScheduleVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: noExamsLabel
    // Error parsing type: , name: presenter
    // Error parsing type: , name: loadOnScrollUpwardsEnabled
    // Error parsing type: , name: loadOnScrollDowardsEnabled
    // Error parsing type: , name: isLoadingMore
    // Error parsing type: , name: lastValiDate
    // Error parsing type: , name: isExamView
    // Error parsing type: , name: initialValiDate
    // Error parsing type: , name: data
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)previewingContext:(id)arg1 commitViewController:(id)arg2;
- (id)previewingContext:(id)arg1 viewControllerForLocation:(struct CGPoint)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (double)tableView:(id)arg1 heightForFooterInSection:(long long)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayHeaderView:(id)arg2 forSection:(long long)arg3;
- (void)tableView:(id)arg1 willDisplayFooterView:(id)arg2 forSection:(long long)arg3;
- (id)tableView:(id)arg1 viewForFooterInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidAppearFromBackground;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *noExamsLabel; // @synthesize noExamsLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo13MailReadingVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: senderLabel
    // Error parsing type: , name: dateLabel
    // Error parsing type: , name: timeLabel
    // Error parsing type: , name: subjectLabel
    // Error parsing type: , name: atLabel
    // Error parsing type: , name: detailsButton
    // Error parsing type: , name: navActionButton
    // Error parsing type: , name: webViewContainer
    // Error parsing type: , name: wkWebView
    // Error parsing type: , name: uiWebView
    // Error parsing type: , name: detailContainerView
    // Error parsing type: , name: stickyFooterAdView
    // Error parsing type: , name: stickyFooterAdViewHeightConstraint
    // Error parsing type: , name: stickyFooterAdViewBottomConstraint
    // Error parsing type: , name: mailNotificationToken
    // Error parsing type: , name: realm
    // Error parsing type: , name: mailId
    // Error parsing type: , name: verticalContentOffsetOfMailTableView
    // Error parsing type: , name: requestForMailAttachVC
    // Error parsing type: , name: docController
    // Error parsing type: , name: detailsHidden
    // Error parsing type: , name: detailsText
    // Error parsing type: , name: hideDetailsText
    // Error parsing type: , name: containerViewHeight
    // Error parsing type: , name: currentHtmlBody
    // Error parsing type: , name: htmlOptimzation
    // Error parsing type: , name: mainStyle
    // Error parsing type: , name: attachmentCount
    // Error parsing type: , name: mailOverviewVC
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
@property(nonatomic, readonly) NSArray *previewActionItems;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)detailsButtonAction:(id)arg1;
- (void)navActionButtonAction:(id)arg1;
- (void)didReceiveMemoryWarning;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewBottomConstraint; // @synthesize stickyFooterAdViewBottomConstraint;
@property(nonatomic, retain) NSLayoutConstraint *stickyFooterAdViewHeightConstraint; // @synthesize stickyFooterAdViewHeightConstraint;
@property(nonatomic, retain) _TtC5Studo18StickyFooterAdView *stickyFooterAdView; // @synthesize stickyFooterAdView;
@property(nonatomic, retain) UIView *detailContainerView; // @synthesize detailContainerView;
@property(nonatomic, retain) UIView *webViewContainer; // @synthesize webViewContainer;
@property(nonatomic, retain) UIBarButtonItem *navActionButton; // @synthesize navActionButton;
@property(nonatomic, retain) UIButton *detailsButton; // @synthesize detailsButton;
@property(nonatomic, retain) UILabel *atLabel; // @synthesize atLabel;
@property(nonatomic, retain) UILabel *subjectLabel; // @synthesize subjectLabel;
@property(nonatomic, retain) UILabel *timeLabel; // @synthesize timeLabel;
@property(nonatomic, retain) UILabel *dateLabel; // @synthesize dateLabel;
@property(nonatomic, retain) UILabel *senderLabel; // @synthesize senderLabel;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;

@end

@interface _TtC5Studo17EditWikiMessageVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: messageId
    // Error parsing type: , name: wikiText
    // Error parsing type: , name: presenter
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)saveButtonAction;
- (void)cancelButtonAction;
- (void)textViewDidChange:(id)arg1;
- (void)keyboardWillBeHiddenWithNotification:(id)arg1;
- (void)keyboardWasShownWithNotification:(id)arg1;
- (void)dealloc;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
@property(nonatomic, retain) UITextView *wikiText; // @synthesize wikiText;

@end

@interface _TtC5Studo10CalendarVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: container
    // Error parsing type: , name: fab
    // Error parsing type: , name: deeplinkToHandle
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)fabAction:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)dealloc;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *fab; // @synthesize fab;
@property(nonatomic, retain) UIView *container; // @synthesize container;

@end

@interface _TtC5Studo18MbTabBarController : UITabBarController
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;

@end

@interface _TtC5Studo16SmsPhoneNumberVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: diallingCodeTF
    // Error parsing type: , name: numberTF
    // Error parsing type: , name: button
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: moreInfoButton
    // Error parsing type: , name: diallingCode
    // Error parsing type: , name: number
    // Error parsing type: , name: popoverContentVC
    // Error parsing type: , name: createNewUser
    // Error parsing type: , name: isMigration
    // Error parsing type: , name: secret
    // Error parsing type: , name: countryCodeTextViewDelegate
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)textFieldDidChange;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
- (void)buttonAction:(id)arg1;
- (void)moreInfosClick:(id)arg1;
- (void)numberTFAction:(id)arg1;
- (void)diallingCodeTFAction:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *moreInfoButton; // @synthesize moreInfoButton;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) UIButton *button; // @synthesize button;
@property(nonatomic, retain) UITextField *numberTF; // @synthesize numberTF;
@property(nonatomic, retain) UITextField *diallingCodeTF; // @synthesize diallingCodeTF;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtCC5Studo16SmsPhoneNumberVC27CountryCodeTextViewDelegate : NSObject
{
}

- (id)init;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

@end

@interface _TtC5Studo22MailReadingURLProtocol : NSURLProtocol <NSURLConnectionDelegate, NSURLSessionDelegate>
{
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;
- (void)stopLoading;
- (void)startLoading;

@end

@interface _TtC5Studo24MailReadingSchemeHandler : NSObject <WKURLSchemeHandler>
{
    // Error parsing type: , name: realm
    // Error parsing type: , name: mailId
}

- (void).cxx_destruct;
- (id)init;
- (void)webView:(id)arg1 stopURLSchemeTask:(id)arg2;
- (void)webView:(id)arg1 startURLSchemeTask:(id)arg2;

@end

@interface _TtC5Studo11ChatTagView : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: label
    // Error parsing type: , name: _color
    // Error parsing type: , name: _filled
}

- (void).cxx_destruct;
@property(nonatomic, retain) UIColor *backgroundColor;
@property(nonatomic) _Bool backgroundFilled;
@property(nonatomic, retain) UIColor *color;
@property(nonatomic, copy) NSString *text;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UILabel *label; // @synthesize label;
@property(nonatomic, retain) _TtC5Studo33MbNotClearableBackgroundColorView *view; // @synthesize view;

@end

@interface _TtC5Studo33MbNotClearableBackgroundColorView : UIView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
@property(nonatomic, retain) UIColor *backgroundColor;

@end

@interface _TtC5Studo14CommandPayload : _TtCs12_SwiftObject
{
    // Error parsing type: , name: className
    // Error parsing type: , name: content
}

@end

@interface _TtC5Studo7Command : _TtCs12_SwiftObject
{
    // Error parsing type: , name: commandId
    // Error parsing type: , name: waitForAck
}

@end

@interface _TtC5Studo13ClientCommand : _TtC5Studo7Command
{
    // Error parsing type: , name: lastClientActionId
}

@end

@interface _TtC5Studo14ChannelCommand : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: channelId
}

@end

@interface _TtC5Studo10TabCommand : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: tabId
    // Error parsing type: , name: minScore
    // Error parsing type: , name: maxScore
    // Error parsing type: , name: topicCount
}

@end

@interface _TtC5Studo12TopicCommand : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: topicId
    // Error parsing type: , name: minScore
    // Error parsing type: , name: maxScore
    // Error parsing type: , name: messageCount
}

@end

@interface _TtC5Studo14MessageCommand : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: messageId
}

@end

@interface _TtC5Studo16SubscribeChannel : _TtC5Studo14ChannelCommand
{
}

@end

@interface _TtC5Studo12SubscribeTab : _TtC5Studo10TabCommand
{
}

@end

@interface _TtC5Studo21SubscribeTabWithClick : _TtC5Studo12SubscribeTab
{
}

@end

@interface _TtC5Studo31SubscribeTabWithScrollDownwards : _TtC5Studo12SubscribeTab
{
}

@end

@interface _TtC5Studo29SubscribeTabWithScrollUpwards : _TtC5Studo12SubscribeTab
{
}

@end

@interface _TtC5Studo24SubscribeTabWithDeeplink : _TtC5Studo12SubscribeTab
{
    // Error parsing type: , name: topicId
}

@end

@interface _TtC5Studo20SubscribeTabOnResume : _TtC5Studo12SubscribeTab
{
}

@end

@interface _TtC5Studo14SubscribeTopic : _TtC5Studo12TopicCommand
{
}

@end

@interface _TtC5Studo23SubscribeTopicWithClick : _TtC5Studo14SubscribeTopic
{
}

@end

@interface _TtC5Studo33SubscribeTopicWithScrollDownwards : _TtC5Studo14SubscribeTopic
{
}

@end

@interface _TtC5Studo31SubscribeTopicWithScrollUpwards : _TtC5Studo14SubscribeTopic
{
}

@end

@interface _TtC5Studo34SubscribeTopicWithTextFieldOnFocus : _TtC5Studo14SubscribeTopic
{
}

@end

@interface _TtC5Studo26SubscribeTopicWithDeeplink : _TtC5Studo14SubscribeTopic
{
    // Error parsing type: , name: messageId
}

@end

@interface _TtC5Studo22SubscribeTopicOnResume : _TtC5Studo14SubscribeTopic
{
}

@end

@interface _TtC5Studo9VoteTopic : _TtC5Studo12TopicCommand
{
    // Error parsing type: , name: voteType
}

@end

@interface _TtC5Studo15EditWikiMessage : _TtC5Studo14MessageCommand
{
    // Error parsing type: , name: newText
    // Error parsing type: , name: changeSummary
}

@end

@interface _TtC5Studo11VoteMessage : _TtC5Studo14MessageCommand
{
    // Error parsing type: , name: voteType
}

@end

@interface _TtC5Studo8NewTopic : _TtC5Studo10TabCommand
{
    // Error parsing type: , name: text
    // Error parsing type: , name: topicType
    // Error parsing type: , name: anonym
    // Error parsing type: , name: downloadUrl
}

@end

@interface _TtC5Studo10NewMessage : _TtC5Studo12TopicCommand
{
    // Error parsing type: , name: text
    // Error parsing type: , name: anonym
    // Error parsing type: , name: downloadUrl
}

@end

@interface _TtC5Studo11EditMessage : _TtC5Studo14MessageCommand
{
    // Error parsing type: , name: newText
    // Error parsing type: , name: anonym
}

@end

@interface _TtC5Studo17ChannelUserAction : _TtC5Studo14ChannelCommand
{
    // Error parsing type: , name: actionChain
}

@end

@interface _TtC5Studo15TopicUserAction : _TtC5Studo12TopicCommand
{
    // Error parsing type: , name: actionChain
}

@end

@interface _TtC5Studo17MessageUserAction : _TtC5Studo14MessageCommand
{
    // Error parsing type: , name: actionChain
}

@end

@interface _TtC5Studo7SetName : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: name
}

@end

@interface _TtC5Studo9AcceptTos : _TtC5Studo13ClientCommand
{
}

@end

@interface _TtC5Studo18ChatViewVisibility : _TtC5Studo13ClientCommand
{
    // Error parsing type: , name: visible
}

@end

@interface _TtC5Studo13ServerCommand : _TtCs12_SwiftObject
{
    // Error parsing type: , name: className
    // Error parsing type: , name: content
    // Error parsing type: , name: triggerClientCommandId
}

@end

@interface _TtC5Studo18OptimisticUiAction : _TtCs12_SwiftObject
{
    // Error parsing type: , name: id
}

@end

@interface _TtC5Studo6Delete : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo5Share : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo8CopyText : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo4Edit : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo8Deeplink : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo10ChangeName : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo8EditWiki : _TtC5Studo18OptimisticUiAction
{
}

@end

@interface _TtC5Studo11CloudParser : _TtC5Studo14AbstractParser
{
}

@end

@interface _TtC5Studo19LocalNetworkManager : _TtC5Studo22AbstractNetworkManager
{
    // Error parsing type: , name: client
}

@end

@interface _TtC5Studo22AbstractNetworkManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo13MailDetailsVC : UIViewController
{
    // Error parsing type: , name: fromLabel
    // Error parsing type: , name: fromButton
    // Error parsing type: , name: toLabel
    // Error parsing type: , name: toButton
    // Error parsing type: , name: mailId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didReceiveMemoryWarning;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *toButton; // @synthesize toButton;
@property(nonatomic, retain) UILabel *toLabel; // @synthesize toLabel;
@property(nonatomic, retain) UIButton *fromButton; // @synthesize fromButton;
@property(nonatomic, retain) UILabel *fromLabel; // @synthesize fromLabel;

@end

@interface _TtC5Studo9MbPagerVC : UIPageViewController
{
    // Error parsing type: , name: currentPageIndex
    // Error parsing type: , name: onPageIndexChanged
    // Error parsing type: , name: pageViewControllers
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithTransitionStyle:(long long)arg1 navigationOrientation:(long long)arg2 options:(id)arg3;

@end

@interface _TtC5Studo18RequestUniFinishVC : _TtC5Studo4MbVC
{
    // Error parsing type: , name: textLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UILabel *textLabel; // @synthesize textLabel;

@end

@interface _TtC5Studo19CalendarImportModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo9WebmailVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: webmailPrefixes
    // Error parsing type: , name: webmailUrl
    // Error parsing type: , name: webmailLoginUrl
    // Error parsing type: , name: lastAutoLogin
    // Error parsing type: , name: lastUrlLoad
    // Error parsing type: , name: autoLoginFailed
    // Error parsing type: , name: webView
    // Error parsing type: , name: username
    // Error parsing type: , name: password
    // Error parsing type: , name: mailLoginHint
    // Error parsing type: , name: loginView
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)login:(id)arg1;
@property(nonatomic, retain) UIView *loginView; // @synthesize loginView;
@property(nonatomic, retain) UILabel *mailLoginHint; // @synthesize mailLoginHint;
@property(nonatomic, retain) UITextField *password; // @synthesize password;
@property(nonatomic, retain) UITextField *username; // @synthesize username;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
@property(nonatomic, retain) UIWebView *webView; // @synthesize webView;
- (void)dealloc;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)dismissKeyboardWithSender:(id)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo19ClientSocketManager : _TtC5Studo21AbstractSocketManager
{
    // Error parsing type: , name: timeoutDetectionThreadRunning
    // Error parsing type: , name: onRegisteredCallbacks
    // Error parsing type: , name: onRegisteredCallbacksLock
}

@end

@interface _TtC5Studo21MbOAuth2NativeManager : NSObject <SFSafariViewControllerDelegate>
{
    // Error parsing type: , name: safariVC
    // Error parsing type: , name: oauthRedirectUrl
    // Error parsing type: , name: currentChallenge
    // Error parsing type: , name: currentOAuthTokenEndpointUrl
    // Error parsing type: , name: currentOAuthClientId
    // Error parsing type: , name: currentStateOfClient
    // Error parsing type: , name: completionHandler
    // Error parsing type: , name: userDismissed
    // Error parsing type: , name: presentingVC
    // Error parsing type: , name: oauthProcessActive
    // Error parsing type: , name: uniId
    // Error parsing type: , name: loadingDialog
}

- (void).cxx_destruct;
- (id)init;
- (void)safariViewControllerDidFinish:(id)arg1;

@end

@interface _TtC5Studo10IMAPClient : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uniId
    // Error parsing type: , name: session
    // Error parsing type: , name: fullMailDownload
    // Error parsing type: , name: storeErrorsToRealm
    // Error parsing type: , name: imapTaskHandler
}

@end

@interface _TtCC5Studo10IMAPClient11MailContent : _TtCs12_SwiftObject
{
    // Error parsing type: , name: body
    // Error parsing type: , name: attachmentCount
}

@end

@interface _TtCC5Studo10IMAPClient22IMAPServerSaveResponse : _TtCs12_SwiftObject
{
    // Error parsing type: , name: uid
    // Error parsing type: , name: success
    // Error parsing type: , name: mailbox
}

@end

@interface _TtC5Studo14ImapSyncResult : _TtCs12_SwiftObject
{
    // Error parsing type: , name: updatedMessages
    // Error parsing type: , name: vanishedMessages
}

@end

@interface _TtC5Studo18WorkloadOverviewVC : _TtC5Studo18MbTabBarController <UITabBarControllerDelegate>
{
    // Error parsing type: , name: url
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtC5Studo20SelectFederalStateVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: infoLabel
    // Error parsing type: , name: hintHiddenConstraint
    // Error parsing type: , name: hintVisibleConstraint
    // Error parsing type: , name: hintView
    // Error parsing type: , name: searchResultsData
    // Error parsing type: , name: realm
    // Error parsing type: , name: notificationToken
    // Error parsing type: , name: country
    // Error parsing type: , name: uniSearch
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didDismissSearchController:(id)arg1;
- (void)didPresentSearchController:(id)arg1;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIView *hintView; // @synthesize hintView;
@property(nonatomic, retain) NSLayoutConstraint *hintVisibleConstraint; // @synthesize hintVisibleConstraint;
@property(nonatomic, retain) NSLayoutConstraint *hintHiddenConstraint; // @synthesize hintHiddenConstraint;
@property(nonatomic, retain) UILabel *infoLabel; // @synthesize infoLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo8MbCrypto : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo5ProVC : UITableViewController
{
    // Error parsing type: , name: presenter
    // Error parsing type: , name: items
    // Error parsing type: , name: shouldShowCancelSubscriptionDialog
    // Error parsing type: , name: shouldDismissDialog
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)dealloc;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidBecomeActive;
- (void)viewDidLoad;

@end

@interface _TtC5Studo9ChatModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo9ChatModel10StickyNote : _TtCs12_SwiftObject
{
    // Error parsing type: , name: text
    // Error parsing type: , name: backgroundColor
}

@end

@interface _TtC5Studo14UpDownVoteView : _TtC5Studo8VoteView
{
    // Error parsing type: , name: upVoteButton
    // Error parsing type: , name: countLabel
    // Error parsing type: , name: downVoteButton
    // Error parsing type: , name: view
    // Error parsing type: , name: voteType
    // Error parsing type: , name: votingType
    // Error parsing type: , name: voteAction
}

- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)downVoteButtonAction:(id)arg1;
- (void)upVoteButtonAction:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UIView *view; // @synthesize view;
@property(nonatomic, retain) UIButton *downVoteButton; // @synthesize downVoteButton;
@property(nonatomic, retain) UILabel *countLabel; // @synthesize countLabel;
@property(nonatomic, retain) UIButton *upVoteButton; // @synthesize upVoteButton;

@end

@interface _TtC5Studo14CalendarHelper : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo14CalendarHelper6UITime : _TtCs12_SwiftObject
{
    // Error parsing type: , name: time
    // Error parsing type: , name: timeUnit
}

@end

@interface _TtC5Studo14RoomOverviewVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: realm
    // Error parsing type: , name: searchController
    // Error parsing type: , name: items
    // Error parsing type: , name: shouldAutoFocusSearchView
    // Error parsing type: , name: uniId
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)navigationController:(id)arg1 willShowViewController:(id)arg2 animated:(_Bool)arg3;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)didPresentSearchController:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo12RoomItemCell : UITableViewCell
{
    // Error parsing type: , name: heightConstraint
    // Error parsing type: , name: widthConstraint
    // Error parsing type: , name: roomPhoto
    // Error parsing type: , name: roomNameInternal
    // Error parsing type: , name: roomNamePublic
    // Error parsing type: , name: roomAddress
    // Error parsing type: , name: item
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *roomAddress; // @synthesize roomAddress;
@property(nonatomic, retain) UILabel *roomNamePublic; // @synthesize roomNamePublic;
@property(nonatomic, retain) UILabel *roomNameInternal; // @synthesize roomNameInternal;
@property(nonatomic, retain) UIImageView *roomPhoto; // @synthesize roomPhoto;
@property(nonatomic, retain) NSLayoutConstraint *widthConstraint; // @synthesize widthConstraint;
@property(nonatomic, retain) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint;

@end

@interface _TtC5Studo19ReferralRewardModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo7MbMvpVC : _TtC5Studo6HomeVC
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

@end

@interface _TtC5Studo14ProScreenModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo15SelectCountryVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: infoLabel
    // Error parsing type: , name: activityIndicator
    // Error parsing type: , name: hintHiddenConstraint
    // Error parsing type: , name: hintShownConstraint
    // Error parsing type: , name: hintView
    // Error parsing type: , name: searchResultsData
    // Error parsing type: , name: realm
    // Error parsing type: , name: notificationToken
    // Error parsing type: , name: appSettingsUpdated
    // Error parsing type: , name: uniSearch
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)didDismissSearchController:(id)arg1;
- (void)didPresentSearchController:(id)arg1;
- (void)updateSearchResultsForSearchController:(id)arg1;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (double)tableView:(id)arg1 estimatedHeightForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIView *hintView; // @synthesize hintView;
@property(nonatomic, retain) NSLayoutConstraint *hintShownConstraint; // @synthesize hintShownConstraint;
@property(nonatomic, retain) NSLayoutConstraint *hintHiddenConstraint; // @synthesize hintHiddenConstraint;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) UILabel *infoLabel; // @synthesize infoLabel;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo15IntercomManager : _TtCs12_SwiftObject
{
    // Error parsing type: , name: initialized
}

@end

@interface _TtC5Studo13CalendarModel : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo8VoteView : UIView
{
    // Error parsing type: , name: voteCount
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface _TtC5Studo20LegacyNavigationItem : _TtCs12_SwiftObject
{
    // Error parsing type: , name: name
    // Error parsing type: , name: position
    // Error parsing type: , name: type
    // Error parsing type: , name: uniId
}

@end

@interface _TtCC5Studo20LegacyNavigationItem7Courses : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem8Calendar : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem4News : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem5Exams : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem5Study : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem7Webmail : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem10NativeMail : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem5Lunch : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem4Chat : _TtC5Studo20LegacyNavigationItem
{
}

@end

@interface _TtCC5Studo20LegacyNavigationItem10UniService : _TtC5Studo20LegacyNavigationItem
{
    // Error parsing type: , name: url
}

@end

@interface _TtC5Studo22ChatMessageLoadingCell : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: loadingIndicator
    // Error parsing type: , name: loadingIndicatorHeightConstraint
    // Error parsing type: , name: heightConstraint
}

- (void).cxx_destruct;
@property(nonatomic, readonly) struct CGSize intrinsicContentSize;
- (void)layoutSubviews;
- (void)prepareForInterfaceBuilder;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) NSLayoutConstraint *loadingIndicatorHeightConstraint; // @synthesize loadingIndicatorHeightConstraint;
@property(nonatomic, retain) UIActivityIndicatorView *loadingIndicator; // @synthesize loadingIndicator;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo10LoginState : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo10LoginState4Idle : _TtC5Studo10LoginState
{
}

@end

@interface _TtCC5Studo10LoginState7Success : _TtC5Studo10LoginState
{
}

@end

@interface _TtCC5Studo10LoginState9LoggingIn : _TtC5Studo10LoginState
{
}

@end

@interface _TtCC5Studo10LoginState4Fail : _TtC5Studo10LoginState
{
    // Error parsing type: , name: loginResult
    // Error parsing type: , name: message
}

@end

@interface _TtC5Studo21ChatMessageHeaderCell : UIView
{
    // Error parsing type: , name: view
    // Error parsing type: , name: label
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UILabel *label; // @synthesize label;
@property(nonatomic, retain) UIView *view; // @synthesize view;

@end

@interface _TtC5Studo9GoProView : UIView
{
    // Error parsing type: , name: contentView
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: hint1Label
    // Error parsing type: , name: button1
    // Error parsing type: , name: hint2label
    // Error parsing type: , name: button2
    // Error parsing type: , name: button1Action
    // Error parsing type: , name: button2Action
}

- (void).cxx_destruct;
- (void)button2Action:(id)arg1;
- (void)button1Action:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
@property(nonatomic, retain) UIButton *button2; // @synthesize button2;
@property(nonatomic, retain) UILabel *hint2label; // @synthesize hint2label;
@property(nonatomic, retain) UIButton *button1; // @synthesize button1;
@property(nonatomic, retain) UILabel *hint1Label; // @synthesize hint1Label;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;
@property(nonatomic, retain) _TtC5Studo9GoProView *contentView; // @synthesize contentView;

@end

@interface _TtC5Studo19BookmarksOverviewVC : UITableViewController
{
    // Error parsing type: , name: realm
    // Error parsing type: , name: items
    // Error parsing type: , name: realmNotificationToken
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithStyle:(long long)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 willSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;

@end

@interface _TtCC5Studo19BookmarksOverviewVC10HeaderItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo19BookmarksOverviewVC7AddItem : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo18BookmarkHeaderCell : UITableViewCell
{
    // Error parsing type: , name: titleLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo18BookmarkSingleCell : UITableViewCell
{
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: subtitleLabel
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;

@end

@interface _TtC5Studo15BookmarkAddCell : UITableViewCell
{
    // Error parsing type: , name: descriptionLabel
    // Error parsing type: , name: addButton
    // Error parsing type: , name: delegate
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)addButtonAction:(id)arg1;
@property(nonatomic, retain) _TtC5Studo8MbButton *addButton; // @synthesize addButton;
@property(nonatomic, retain) UILabel *descriptionLabel; // @synthesize descriptionLabel;

@end

@interface _TtC5Studo9SyncState : _TtCs12_SwiftObject
{
}

@end

@interface _TtCC5Studo9SyncState4Idle : _TtC5Studo9SyncState
{
}

@end

@interface _TtCC5Studo9SyncState7Success : _TtC5Studo9SyncState
{
}

@end

@interface _TtCC5Studo9SyncState7Syncing : _TtC5Studo9SyncState
{
}

@end

@interface _TtCC5Studo9SyncState4Fail : _TtC5Studo9SyncState
{
}

@end

@interface _TtC5Studo19ChannelOverviewCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: ringImgView
    // Error parsing type: , name: ringImgLabel
    // Error parsing type: , name: titleLabel
    // Error parsing type: , name: subtitleLabel
    // Error parsing type: , name: pinnedImageView
    // Error parsing type: , name: pinnedImageViewWidthConstraint
    // Error parsing type: , name: pinnedImageViewRightConstraint
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)awakeFromNib;
@property(nonatomic, retain) NSLayoutConstraint *pinnedImageViewRightConstraint; // @synthesize pinnedImageViewRightConstraint;
@property(nonatomic, retain) NSLayoutConstraint *pinnedImageViewWidthConstraint; // @synthesize pinnedImageViewWidthConstraint;
@property(nonatomic, retain) UIImageView *pinnedImageView; // @synthesize pinnedImageView;
@property(nonatomic, retain) UILabel *subtitleLabel; // @synthesize subtitleLabel;
@property(nonatomic, retain) UILabel *titleLabel; // @synthesize titleLabel;
@property(nonatomic, retain) UILabel *ringImgLabel; // @synthesize ringImgLabel;
@property(nonatomic, retain) UIImageView *ringImgView; // @synthesize ringImgView;

@end

@interface _TtC5Studo17ParserCookieStore : NSHTTPCookieStorage
{
    // Error parsing type: , name: cookieStore
}

- (void).cxx_destruct;
- (id)init;
- (void)storeCookies:(id)arg1 forTask:(id)arg2;
- (void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3;
- (void)getCookiesForTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)sortedCookiesUsingDescriptors:(id)arg1;
@property(nonatomic) unsigned long long cookieAcceptPolicy;
- (id)cookiesForURL:(id)arg1;
- (void)removeCookiesSinceDate:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (void)setCookie:(id)arg1;
@property(nonatomic, readonly) NSArray *cookies;

@end

@interface _TtC5Studo13NoSpaceLeftVC : UIViewController
{
    // Error parsing type: , name: label
    // Error parsing type: , name: retryButton
    // Error parsing type: , name: activityIndicator
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)retryButtonAction:(id)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIActivityIndicatorView *activityIndicator; // @synthesize activityIndicator;
@property(nonatomic, retain) _TtC5Studo8MbButton *retryButton; // @synthesize retryButton;
@property(nonatomic, retain) UILabel *label; // @synthesize label;

@end

@interface _TtC5Studo24CookiePersistenceManager : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo11ChatManager : _TtC5Studo21AbstractSocketManager
{
    // Error parsing type: , name: acknowledgedCallbacks
    // Error parsing type: , name: processedCallbacks
    // Error parsing type: , name: lastVisibilityChange
    // Error parsing type: , name: chatIsVisible
    // Error parsing type: , name: currentlyVisibleChannelId
    // Error parsing type: , name: currentlyVisibleTopicId
}

@end

@interface _TtC5Studo13CourseGroupVC : _TtC5Studo6HomeVC
{
    // Error parsing type: , name: tableView
    // Error parsing type: , name: presenter
    // Error parsing type: , name: tableData
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewDidLoad;
@property(nonatomic, retain) UITableView *tableView; // @synthesize tableView;

@end

@interface _TtC5Studo14ColorAlgorithm : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo14AuthOverviewVC : _TtC5Studo11AuthManager
{
    // Error parsing type: , name: signUp
    // Error parsing type: , name: signUpLabel
    // Error parsing type: , name: signIn
    // Error parsing type: , name: subTitleLabel
    // Error parsing type: , name: moreButton
    // Error parsing type: , name: safariController
    // Error parsing type: , name: afterBlockingDialogDismissAction
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)safariViewController:(id)arg1 didCompleteInitialLoad:(_Bool)arg2;
- (void)prepareForSegue:(id)arg1 sender:(id)arg2;
- (void)moreButtonAction:(id)arg1;
- (void)signIn:(id)arg1;
- (void)signUp:(id)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1;
@property(nonatomic, readonly) long long preferredStatusBarStyle;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(nonatomic, retain) UIButton *moreButton; // @synthesize moreButton;
@property(nonatomic, retain) UILabel *subTitleLabel; // @synthesize subTitleLabel;
@property(nonatomic, retain) UIButton *signIn; // @synthesize signIn;
@property(nonatomic, retain) UILabel *signUpLabel; // @synthesize signUpLabel;
@property(nonatomic, retain) UIView *signUp; // @synthesize signUp;

@end

@interface _TtC5Studo23MbAutoCompleteTextField : UITextField
{
    // Error parsing type: , name: maxNumberOfResults
    // Error parsing type: , name: filteringThreshold
    // Error parsing type: , name: tableViewCellStyle
    // Error parsing type: , name: autoCompleteType
    // Error parsing type: , name: filterStrategy
    // Error parsing type: , name: allowDuplicates
    // Error parsing type: , name: _tableViewParent
    // Error parsing type: , name: onItemSelected
    // Error parsing type: , name: onItemsFilter
    // Error parsing type: , name: tableXOffset
    // Error parsing type: , name: tableYOffset
    // Error parsing type: , name: tableCornerRadius
    // Error parsing type: , name: suggestionsTableView
    // Error parsing type: , name: keyboardFrame
    // Error parsing type: , name: interactedWith
    // Error parsing type: , name: keyboardIsShowing
    // Error parsing type: , name: filterDataSource
    // Error parsing type: , name: filteredResults
    // Error parsing type: , name: filteredResultsSet
}

- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)textFieldDidEndEditing;
- (void)textFieldDidBeginEditing;
- (void)textFieldDidChange;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)layoutSubviews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface _TtC5Studo16AutoCompleteItem : _TtCs12_SwiftObject
{
    // Error parsing type: , name: title
    // Error parsing type: , name: subtitle
    // Error parsing type: , name: metaData
}

@end

@interface _TtC5Studo9IAPHelper : NSObject
{
    // Error parsing type: , name: delegate
    // Error parsing type: , name: products
    // Error parsing type: , name: productRequest
    // Error parsing type: , name: productIdentifiers
}

- (void).cxx_destruct;
- (id)init;

@end

@interface _TtC5Studo14MbSecureRandom : _TtCs12_SwiftObject
{
}

@end

@interface _TtC5Studo21SideDrawerSectionCell : _TtC5Studo8MbTVCell
{
    // Error parsing type: , name: name
}

- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
@property(nonatomic, retain) UILabel *name; // @synthesize name;

@end

@interface _TtC5Studo11TaskHandler : _TtCs12_SwiftObject
{
    // Error parsing type: , name: list
    // Error parsing type: , name: allTasksCanceled
}

@end

@interface _TtCC5Studo11TaskHandler20AbstractTaskCallback : NSObject
{
}

- (id)init;

@end

@interface MCONNTPFetchOverviewOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPFetchParsedContentOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCONNTPGroupInfo : NSObject <NSCopying>
{
    struct NNTPGroupInfo *_nativeInfo;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(nonatomic) unsigned int messageCount;
@property(copy, nonatomic) NSString *name;
- (void)dealloc;
- (id)initWithMCNNTPGroupInfo:(struct NNTPGroupInfo *)arg1;
- (id)description;
- (struct Object *)mco_mcObject;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface LEPPPMainThreadCaller : NSObject
{
    CDUnknownFunctionPointerType _function;
    void *_context;
    NSTimer *_timer;
}

@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) void *context; // @synthesize context=_context;
@property(nonatomic) CDUnknownFunctionPointerType function; // @synthesize function=_function;
- (void)cancel;
- (void)call;
- (void)dealloc;
- (id)init;

@end

@interface MCONNTPFetchAllArticlesOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCONNTPFetchServerTimeOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCONNTPListNewsgroupsOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPNoopOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPCustomCommandOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOObjectWrapper : NSObject
{
    struct Object *mObject;
}

+ (id)objectWrapperWithObject:(struct Object *)arg1;
+ (void)load;
@property(nonatomic) struct Object *object;
- (void)dealloc;

@end

@interface MCONNTPFetchHeaderOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPSession : NSObject
{
    struct IMAPAsyncSession *_session;
    CDUnknownBlockType _connectionLogger;
    struct MCOIMAPCallbackBridge *_callbackBridge;
    CDUnknownBlockType _operationQueueRunningChangeBlock;
}

@property(readonly, nonatomic, getter=isOperationQueueRunning) _Bool operationQueueRunning;
- (void)_queueRunningChanged;
- (id)disconnectOperation;
- (id)plainTextBodyRenderingOperationWithMessage:(id)arg1 folder:(id)arg2 stripWhitespace:(_Bool)arg3;
- (id)plainTextBodyRenderingOperationWithMessage:(id)arg1 folder:(id)arg2;
- (id)plainTextRenderingOperationWithMessage:(id)arg1 folder:(id)arg2;
- (id)htmlBodyRenderingOperationWithMessage:(id)arg1 folder:(id)arg2;
- (id)htmlRenderingOperationWithMessage:(id)arg1 folder:(id)arg2;
- (void)_logWithSender:(void *)arg1 connectionType:(long long)arg2 data:(id)arg3;
- (id)quotaOperation;
- (id)capabilityOperation;
- (id)checkAccountOperation;
- (id)noopOperation;
- (id)connectOperation;
- (id)identityOperationWithClientIdentity:(id)arg1;
- (id)fetchNamespaceOperation;
- (id)idleOperationWithFolder:(id)arg1 lastKnownUID:(unsigned int)arg2;
- (id)searchExpressionOperationWithFolder:(id)arg1 expression:(id)arg2;
- (id)searchOperationWithFolder:(id)arg1 kind:(long long)arg2 searchString:(id)arg3;
- (id)storeLabelsOperationWithFolder:(id)arg1 numbers:(id)arg2 kind:(long long)arg3 labels:(id)arg4;
- (id)storeLabelsOperationWithFolder:(id)arg1 uids:(id)arg2 kind:(long long)arg3 labels:(id)arg4;
- (id)storeFlagsOperationWithFolder:(id)arg1 numbers:(id)arg2 kind:(long long)arg3 flags:(long long)arg4 customFlags:(id)arg5;
- (id)storeFlagsOperationWithFolder:(id)arg1 numbers:(id)arg2 kind:(long long)arg3 flags:(long long)arg4;
- (id)storeFlagsOperationWithFolder:(id)arg1 uids:(id)arg2 kind:(long long)arg3 flags:(long long)arg4 customFlags:(id)arg5;
- (id)storeFlagsOperationWithFolder:(id)arg1 uids:(id)arg2 kind:(long long)arg3 flags:(long long)arg4;
- (id)fetchMessageAttachmentOperationWithFolder:(id)arg1 number:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4;
- (id)fetchMessageAttachmentOperationWithFolder:(id)arg1 number:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4 urgent:(_Bool)arg5;
- (id)fetchMessageAttachmentOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4;
- (id)customCommandOperation:(id)arg1;
- (id)fetchMessageAttachmentOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4 urgent:(_Bool)arg5;
- (id)fetchMessageAttachmentByUIDOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4;
- (id)fetchMessageAttachmentByUIDOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 partID:(id)arg3 encoding:(long long)arg4 urgent:(_Bool)arg5;
- (id)fetchParsedMessageOperationWithFolder:(id)arg1 number:(unsigned int)arg2;
- (id)fetchParsedMessageOperationWithFolder:(id)arg1 number:(unsigned int)arg2 urgent:(_Bool)arg3;
- (id)fetchParsedMessageOperationWithFolder:(id)arg1 uid:(unsigned int)arg2;
- (id)fetchParsedMessageOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 urgent:(_Bool)arg3;
- (id)fetchMessageOperationWithFolder:(id)arg1 number:(unsigned int)arg2;
- (id)fetchMessageOperationWithFolder:(id)arg1 number:(unsigned int)arg2 urgent:(_Bool)arg3;
- (id)fetchMessageOperationWithFolder:(id)arg1 uid:(unsigned int)arg2;
- (id)fetchMessageOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 urgent:(_Bool)arg3;
- (id)fetchMessageByUIDOperationWithFolder:(id)arg1 uid:(unsigned int)arg2;
- (id)fetchMessageByUIDOperationWithFolder:(id)arg1 uid:(unsigned int)arg2 urgent:(_Bool)arg3;
- (id)syncMessagesWithFolder:(id)arg1 requestKind:(long long)arg2 uids:(id)arg3 modSeq:(unsigned long long)arg4;
- (id)syncMessagesByUIDWithFolder:(id)arg1 requestKind:(long long)arg2 uids:(id)arg3 modSeq:(unsigned long long)arg4;
- (id)fetchMessagesByNumberOperationWithFolder:(id)arg1 requestKind:(long long)arg2 numbers:(id)arg3;
- (id)fetchMessagesOperationWithFolder:(id)arg1 requestKind:(long long)arg2 uids:(id)arg3;
- (id)fetchMessagesByUIDOperationWithFolder:(id)arg1 requestKind:(long long)arg2 uids:(id)arg3;
- (id)expungeOperation:(id)arg1;
- (id)copyMessagesOperationWithFolder:(id)arg1 uids:(id)arg2 destFolder:(id)arg3;
- (id)appendMessageOperationWithFolder:(id)arg1 messageData:(id)arg2 flags:(long long)arg3 customFlags:(id)arg4;
- (id)appendMessageOperationWithFolder:(id)arg1 messageData:(id)arg2 flags:(long long)arg3;
- (id)unsubscribeFolderOperation:(id)arg1;
- (id)subscribeFolderOperation:(id)arg1;
- (id)createFolderOperation:(id)arg1;
- (id)deleteFolderOperation:(id)arg1;
- (id)renameFolderOperation:(id)arg1 otherName:(id)arg2;
- (id)fetchAllFoldersOperation;
- (id)fetchSubscribedFoldersOperation;
- (id)folderStatusOperation:(id)arg1;
- (id)folderInfoOperation:(id)arg1;
- (id)_objcOpaqueOperationFromNativeOp:(struct IMAPOperation *)arg1;
- (id)_objcOperationFromNativeOp:(struct IMAPOperation *)arg1;
- (void)cancelAllOperations;
@property(copy, nonatomic) CDUnknownBlockType operationQueueRunningChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType connectionLogger;
@property(readonly, copy, nonatomic) NSString *gmailUserDisplayName;
@property(readonly, nonatomic) MCOIMAPIdentity *serverIdentity;
@property(readonly, nonatomic) MCOIMAPIdentity *clientIdentity;
@property(retain, nonatomic) MCOIMAPNamespace *defaultNamespace;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property(nonatomic) unsigned int maximumConnections;
@property(nonatomic) _Bool allowsFolderConcurrentAccessEnabled;
@property(nonatomic, getter=isVoIPEnabled) _Bool voIPEnabled;
@property(nonatomic, getter=isCheckCertificateEnabled) _Bool checkCertificateEnabled;
@property(nonatomic) double timeout;
@property(nonatomic) long long connectionType;
@property(nonatomic) long long authType;
@property(copy, nonatomic) NSString *OAuth2Token;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(nonatomic) unsigned int port;
@property(copy, nonatomic) NSString *hostname;
- (void)dealloc;
- (id)init;
- (struct Object *)mco_mcObject;

@end

@interface MCOIMAPFetchFoldersOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOPOPNoopOperation : MCOPOPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCONNTPSession : NSObject
{
    struct NNTPAsyncSession *_session;
    CDUnknownBlockType _connectionLogger;
    struct MCONNTPCallbackBridge *_callbackBridge;
    CDUnknownBlockType _operationQueueRunningChangeBlock;
}

@property(readonly, nonatomic, getter=isOperationQueueRunning) _Bool operationQueueRunning;
- (void)_queueRunningChanged;
- (void)_logWithSender:(void *)arg1 connectionType:(long long)arg2 data:(id)arg3;
- (id)checkAccountOperation;
- (id)disconnectOperation;
- (id)listDefaultNewsgroupsOperation;
- (id)listAllNewsgroupsOperation;
- (id)fetchServerDateOperation;
- (id)fetchOverviewOperationWithIndexes:(id)arg1 inGroup:(id)arg2;
- (id)fetchArticleOperationWithMessageID:(id)arg1 inGroup:(id)arg2;
- (id)fetchArticleOperationWithMessageID:(id)arg1;
- (id)fetchArticleOperationWithIndex:(unsigned int)arg1 inGroup:(id)arg2;
- (id)fetchHeaderOperationWithIndex:(unsigned int)arg1 inGroup:(id)arg2;
- (id)fetchAllArticlesOperation:(id)arg1;
- (id)_objcOpaqueOperationFromNativeOp:(struct NNTPOperation *)arg1;
- (id)_objcOperationFromNativeOp:(struct NNTPOperation *)arg1;
- (void)cancelAllOperations;
@property(copy, nonatomic) CDUnknownBlockType operationQueueRunningChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType connectionLogger;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property(nonatomic, getter=isCheckCertificateEnabled) _Bool checkCertificateEnabled;
@property(nonatomic) double timeout;
@property(nonatomic) long long connectionType;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(nonatomic) unsigned int port;
@property(copy, nonatomic) NSString *hostname;
- (void)dealloc;
- (id)init;
- (id)description;
- (struct Object *)mco_mcObject;

@end

@interface MCOAbstractMessage : NSObject <NSCopying>
{
    struct AbstractMessage *_message;
}

- (id)requiredPartsForRendering;
- (id)htmlInlineAttachments;
- (id)attachments;
- (id)partForUniqueID:(id)arg1;
- (id)partForContentID:(id)arg1;
@property(retain, nonatomic) MCOMessageHeader *header;
- (id)description;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithMCMessage:(struct AbstractMessage *)arg1;
- (id)init;
- (struct Object *)mco_mcObject;

@end

@interface MCOAbstractMessagePart : MCOAbstractPart
{
}

@property(retain, nonatomic) MCOAbstractPart *mainPart;
@property(retain, nonatomic) MCOMessageHeader *header;

@end

@interface MCOAbstractMultipart : MCOAbstractPart
{
}

@property(copy, nonatomic) NSArray *parts;

@end

@interface MCOAbstractPart : NSObject <NSCopying>
{
    struct AbstractPart *_part;
}

- (id)allContentTypeParametersNames;
- (void)removeContentTypeParameterForName:(id)arg1;
- (id)contentTypeParameterValueForName:(id)arg1;
- (void)setContentTypeParameterValue:(id)arg1 forName:(id)arg2;
- (id)decodedStringForData:(id)arg1;
- (id)partForUniqueID:(id)arg1;
- (id)partForContentID:(id)arg1;
@property(nonatomic, getter=isAttachment) _Bool attachment;
@property(nonatomic, getter=isInlineAttachment) _Bool inlineAttachment;
@property(copy, nonatomic) NSString *contentDescription;
@property(copy, nonatomic) NSString *contentLocation;
@property(copy, nonatomic) NSString *contentID;
@property(copy, nonatomic) NSString *uniqueID;
@property(copy, nonatomic) NSString *charset;
@property(copy, nonatomic) NSString *mimeType;
@property(copy, nonatomic) NSString *filename;
@property(nonatomic) long long partType;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)dealloc;
- (id)initWithMCPart:(struct AbstractPart *)arg1;
- (id)init;
- (struct Object *)mco_mcObject;

@end

@interface MCOAddress : NSObject <NSCopying, NSCoding>
{
    struct Address *_nativeAddress;
}

+ (id)addressWithMCAddress:(struct Address *)arg1;
+ (id)addressesWithNonEncodedRFC822String:(id)arg1;
+ (id)addressesWithRFC822String:(id)arg1;
+ (id)addressWithNonEncodedRFC822String:(id)arg1;
+ (id)addressWithRFC822String:(id)arg1;
+ (id)addressWithMailbox:(id)arg1;
+ (id)addressWithDisplayName:(id)arg1 mailbox:(id)arg2;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)nonEncodedRFC822String;
- (id)RFC822String;
@property(copy, nonatomic) NSString *mailbox;
@property(copy, nonatomic) NSString *displayName;
- (id)description;
- (void)dealloc;
- (id)initWithMCAddress:(struct Address *)arg1;
- (id)init;
- (struct Object *)mco_mcObject;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOAccountValidator : MCOOperation
{
    CDUnknownBlockType _completionBlock;
    struct AccountValidator *_validator;
    struct MCOValidatorOperationCallback *_imapCallback;
    NSArray *_imapServers;
    NSArray *_popServers;
    NSArray *_smtpServers;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(retain, nonatomic) NSArray *smtpServers; // @synthesize smtpServers=_smtpServers;
@property(retain, nonatomic) NSArray *popServers; // @synthesize popServers=_popServers;
@property(retain, nonatomic) NSArray *imapServers; // @synthesize imapServers=_imapServers;
@property(readonly, retain, nonatomic) NSError *smtpError;
@property(readonly, retain, nonatomic) NSError *popError;
@property(readonly, retain, nonatomic) NSError *imapError;
@property(readonly, retain, nonatomic) MCONetService *smtpServer;
@property(readonly, retain, nonatomic) MCONetService *popServer;
@property(readonly, retain, nonatomic) MCONetService *imapServer;
@property(readonly, retain, nonatomic) NSString *identifier;
- (void)_operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (id)initWithMCValidator:(struct AccountValidator *)arg1;
- (id)init;
@property(nonatomic, getter=isSmtpEnabled) _Bool smtpEnabled;
@property(nonatomic, getter=isPopEnabled) _Bool popEnabled;
@property(nonatomic, getter=isImapEnabled) _Bool imapEnabled;
@property(copy, nonatomic) NSString *OAuth2Token;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(copy, nonatomic) NSString *email;
- (struct Object *)mco_mcObject;

@end

@interface MCOMessageHeader : NSObject <NSCopying, NSCoding>
{
    struct MessageHeader *_nativeHeader;
}

+ (id)messageHeaderWithMCMessageHeader:(struct MessageHeader *)arg1;
+ (id)headerWithData:(id)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)forwardHeader;
- (id)replyAllHeaderWithExcludedRecipients:(id)arg1;
- (id)replyHeaderWithExcludedRecipients:(id)arg1;
- (void)importHeadersData:(id)arg1;
- (id)partialExtractedSubject;
- (id)extractedSubject;
- (id)allExtraHeadersNames;
- (void)removeExtraHeaderForName:(id)arg1;
- (id)extraHeaderValueForName:(id)arg1;
- (void)setExtraHeaderValue:(id)arg1 forName:(id)arg2;
@property(readonly, nonatomic, getter=isMessageIDAutoGenerated) _Bool messageIDAutoGenerated;
@property(copy, nonatomic) NSString *userAgent;
@property(copy, nonatomic) NSString *subject;
@property(copy, nonatomic) NSArray *replyTo;
@property(copy, nonatomic) NSArray *bcc;
@property(copy, nonatomic) NSArray *cc;
@property(copy, nonatomic) NSArray *to;
@property(copy, nonatomic) MCOAddress *from;
@property(copy, nonatomic) MCOAddress *sender;
@property(retain, nonatomic) NSDate *receivedDate;
@property(retain, nonatomic) NSDate *date;
@property(copy, nonatomic) NSArray *inReplyTo;
@property(copy, nonatomic) NSArray *references;
@property(copy, nonatomic) NSString *messageID;
- (id)description;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithData:(id)arg1;
- (id)initWithMCMessageHeader:(struct MessageHeader *)arg1;
- (id)init;
- (struct Object *)mco_mcObject;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOOperation : NSObject
{
    struct Operation *_operation;
    struct MCOOperationCompletionCallback *_callback;
    _Bool _started;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (void)operationCompleted;
- (void)_operationCompleted;
- (void)start;
- (void)cancel;
@property(nonatomic) _Bool shouldRunWhenCancelled;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackDispatchQueue;
@property(readonly) _Bool isCancelled;
- (void)dealloc;
- (id)initWithMCOperation:(struct Operation *)arg1;
- (struct Object *)mco_mcObject;

@end

@interface MCOAttachment : MCOAbstractPart
{
    NSData *_data;
}

+ (id)attachmentWithText:(id)arg1;
+ (id)attachmentWithRFC822Message:(id)arg1;
+ (id)attachmentWithHTMLString:(id)arg1;
+ (id)attachmentWithData:(id)arg1 filename:(id)arg2;
+ (id)attachmentWithContentsOfFile:(id)arg1;
+ (id)mimeTypeForFilename:(id)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)decodedString;
@property(retain, nonatomic) NSData *data;
- (void)dealloc;
- (id)init;

@end

@interface MCOMessageBuilder : MCOAbstractMessage <NSCopying>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)_setBoundaries:(id)arg1;
- (id)openPGPEncryptedMessageDataWithEncryptedData:(id)arg1;
- (id)openPGPSignedMessageDataWithSignatureData:(id)arg1;
- (id)plainTextBodyRenderingAndStripWhitespace:(_Bool)arg1;
- (id)plainTextBodyRendering;
- (id)plainTextRendering;
- (id)htmlBodyRendering;
- (id)htmlRenderingWithDelegate:(id)arg1;
- (id)dataForEncryption;
- (id)data;
- (void)addRelatedAttachment:(id)arg1;
- (void)addAttachment:(id)arg1;
@property(copy, nonatomic) NSString *boundaryPrefix;
@property(copy, nonatomic) NSArray *relatedAttachments;
@property(copy, nonatomic) NSArray *attachments;
@property(copy, nonatomic) NSString *textBody;
@property(copy, nonatomic, setter=setHTMLBody:) NSString *htmlBody;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface MCOMessageParser : MCOAbstractMessage
{
}

+ (id)messageParserWithData:(id)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)plainTextBodyRenderingAndStripWhitespace:(_Bool)arg1;
- (id)plainTextBodyRendering;
- (id)plainTextRendering;
- (id)htmlBodyRendering;
- (id)htmlRenderingWithDelegate:(id)arg1;
- (id)data;
- (id)mainPart;
- (void)dealloc;
- (id)initWithData:(id)arg1;

@end

@interface MCOMessagePart : MCOAbstractMessagePart <NSCopying>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;

@end

@interface MCOMultipart : MCOAbstractMultipart
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;

@end

@interface MCOIMAPOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPFolder : NSObject <NSCopying>
{
    struct IMAPFolder *_nativeFolder;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(nonatomic) long long flags;
@property(nonatomic) BOOL delimiter;
@property(copy, nonatomic) NSString *path;
- (id)description;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCFolder:(struct IMAPFolder *)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOIMAPMessage : MCOAbstractMessage <NSCoding>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)htmlRenderingWithFolder:(id)arg1 delegate:(id)arg2;
- (id)partForPartID:(id)arg1;
@property(nonatomic) unsigned long long gmailMessageID;
@property(nonatomic) unsigned long long gmailThreadID;
@property(copy, nonatomic) NSArray *gmailLabels;
@property(retain, nonatomic) MCOAbstractPart *mainPart;
@property(nonatomic) unsigned long long modSeqValue;
@property(copy, nonatomic) NSArray *customFlags;
@property(nonatomic) long long originalFlags;
@property(nonatomic) long long flags;
@property(nonatomic) unsigned int size;
@property(nonatomic) unsigned int sequenceNumber;
@property(nonatomic) unsigned int uid;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface MCOIMAPMessagePart : MCOAbstractMessagePart <NSCoding>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) NSString *partID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MCOIMAPMultipart : MCOAbstractMultipart <NSCoding>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) NSString *partID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MCOIMAPNamespace : NSObject <NSCopying>
{
    struct IMAPNamespace *_nativeNamespace;
}

+ (id)namespaceWithPrefix:(id)arg1 delimiter:(BOOL)arg2;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (_Bool)containsFolderPath:(id)arg1;
- (id)componentsFromPath:(id)arg1;
- (id)pathForComponents:(id)arg1 prefix:(id)arg2;
- (id)pathForComponents:(id)arg1;
- (id)prefixes;
- (BOOL)mainDelimiter;
- (id)mainPrefix;
- (id)description;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCNamespace:(struct IMAPNamespace *)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOIMAPNamespaceItem : NSObject <NSCopying>
{
    struct IMAPNamespaceItem *_nativeItem;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (_Bool)containsFolder:(id)arg1;
- (id)componentsForPath:(id)arg1;
- (id)pathForComponents:(id)arg1;
@property(nonatomic) BOOL delimiter;
@property(copy, nonatomic) NSString *prefix;
- (id)description;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCNamespaceItem:(struct IMAPNamespaceItem *)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOIMAPPart : MCOAbstractPart <NSCoding>
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (unsigned int)decodedSize;
@property(nonatomic) long long encoding;
@property(nonatomic) unsigned int size;
@property(copy, nonatomic) NSString *partID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MCOIndexSet : NSObject <NSCopying, NSCoding>
{
    struct IndexSet *_indexSet;
}

+ (id)indexSetWithIndex:(unsigned long long)arg1;
+ (id)indexSetWithRange:(CDStruct_4bcfbbae)arg1;
+ (id)indexSet;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)nsIndexSet;
- (void)enumerateIndexes:(CDUnknownBlockType)arg1;
- (unsigned int)rangesCount;
- (CDStruct_4bcfbbae *)allRanges;
- (void)intersectsIndexSet:(id)arg1;
- (void)removeIndexSet:(id)arg1;
- (void)addIndexSet:(id)arg1;
- (void)intersectsRange:(CDStruct_4bcfbbae)arg1;
- (void)removeRange:(CDStruct_4bcfbbae)arg1;
- (void)addRange:(CDStruct_4bcfbbae)arg1;
- (_Bool)containsIndex:(unsigned long long)arg1;
- (void)removeIndex:(unsigned long long)arg1;
- (void)addIndex:(unsigned long long)arg1;
- (unsigned int)count;
- (id)description;
- (_Bool)isEqual:(id)arg1;
- (void)dealloc;
- (id)initWithMCIndexSet:(struct IndexSet *)arg1;
- (id)init;
- (struct Object *)mco_mcObject;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface MCOIMAPIdentity : NSObject <NSCopying>
{
    struct IMAPIdentity *_nativeIdentity;
}

+ (id)identityWithVendor:(id)arg1 name:(id)arg2 version:(id)arg3;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)removeAllInfos;
- (void)setInfo:(id)arg1 forKey:(id)arg2;
- (id)infoForKey:(id)arg1;
- (id)allInfoKeys;
@property(copy, nonatomic) NSString *version;
@property(copy, nonatomic) NSString *name;
@property(copy, nonatomic) NSString *vendor;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCIdentity:(struct IMAPIdentity *)arg1;
- (id)init;

@end

@interface MCOIMAPFolderInfoOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPAppendMessageOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
@property(nonatomic) long long date;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPCopyMessagesOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPFetchMessagesOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
@property(copy, nonatomic) NSArray *extraHeaders;
- (void)itemProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPFetchContentOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPSearchOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPIdleOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)interruptIdle;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPFetchNamespaceOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPIdentityOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPCapabilityOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPSearchExpression : NSObject
{
    struct IMAPSearchExpression *_nativeExpr;
}

+ (id)searchNot:(id)arg1;
+ (id)searchOr:(id)arg1 other:(id)arg2;
+ (id)searchAnd:(id)arg1 other:(id)arg2;
+ (id)searchGmailRaw:(id)arg1;
+ (id)searchGmailMessageID:(unsigned long long)arg1;
+ (id)searchGmailThreadID:(unsigned long long)arg1;
+ (id)searchSizeSmallerThan:(unsigned int)arg1;
+ (id)searchSizeLargerThan:(unsigned int)arg1;
+ (id)searchSinceReceivedDate:(id)arg1;
+ (id)searchOnReceivedDate:(id)arg1;
+ (id)searchBeforeReceivedDate:(id)arg1;
+ (id)searchSinceDate:(id)arg1;
+ (id)searchOnDate:(id)arg1;
+ (id)searchBeforeDate:(id)arg1;
+ (id)searchSpam;
+ (id)searchDeleted;
+ (id)searchUndraft;
+ (id)searchDraft;
+ (id)searchUnanswered;
+ (id)searchAnswered;
+ (id)searchUnflagged;
+ (id)searchFlagged;
+ (id)searchUnread;
+ (id)searchRead;
+ (id)searchHeader:(id)arg1 value:(id)arg2;
+ (id)searchNumbers:(id)arg1;
+ (id)searchUIDs:(id)arg1;
+ (id)searchBody:(id)arg1;
+ (id)searchContent:(id)arg1;
+ (id)searchSubject:(id)arg1;
+ (id)searchRecipient:(id)arg1;
+ (id)searchBcc:(id)arg1;
+ (id)searchCc:(id)arg1;
+ (id)searchTo:(id)arg1;
+ (id)searchFrom:(id)arg1;
+ (id)searchAll;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)dealloc;
- (id)initWithMCExpression:(struct IMAPSearchExpression *)arg1;
- (struct Object *)mco_mcObject;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCOIMAPFolderInfo : NSObject <NSCopying>
{
    struct IMAPFolderInfo *_nativeInfo;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(nonatomic) _Bool allowsNewPermanentFlags;
@property(nonatomic) unsigned int firstUnseenUid;
@property(nonatomic) int messageCount;
@property(nonatomic) unsigned long long modSequenceValue;
@property(nonatomic) unsigned int uidValidity;
@property(nonatomic) unsigned int uidNext;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCFolderInfo:(struct IMAPFolderInfo *)arg1;

@end

@interface MCOIMAPBaseOperation : MCOOperation
{
    struct MCOIMAPBaseOperationIMAPCallback *_imapCallback;
    MCOIMAPSession *_session;
}

- (void)itemProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (id)session;
- (void)setSession:(id)arg1;
- (void)dealloc;
- (id)initWithMCOperation:(struct Operation *)arg1;
@property(nonatomic, getter=isUrgent) _Bool urgent;

@end

@interface MCOSMTPSession : NSObject
{
    struct SMTPAsyncSession *_session;
    CDUnknownBlockType _connectionLogger;
    struct MCOSMTPCallbackBridge *_callbackBridge;
    CDUnknownBlockType _operationQueueRunningChangeBlock;
    _Bool _useHeloIPEnabled;
}

@property(nonatomic, getter=isUseHeloIPEnabled) _Bool useHeloIPEnabled; // @synthesize useHeloIPEnabled=_useHeloIPEnabled;
@property(readonly, nonatomic, getter=isOperationQueueRunning) _Bool operationQueueRunning;
- (void)_queueRunningChanged;
- (void)_logWithSender:(void *)arg1 connectionType:(long long)arg2 data:(id)arg3;
- (id)noopOperation;
- (id)checkAccountOperationWithFrom:(id)arg1;
- (id)sendOperationWithData:(id)arg1 from:(id)arg2 recipients:(id)arg3;
- (id)sendOperationWithData:(id)arg1;
- (id)loginOperation;
- (void)cancelAllOperations;
@property(copy, nonatomic) CDUnknownBlockType operationQueueRunningChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType connectionLogger;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
- (_Bool)useHeloIPEnabled;
@property(nonatomic, getter=isCheckCertificateEnabled) _Bool checkCertificateEnabled;
@property(nonatomic) double timeout;
@property(nonatomic) long long connectionType;
@property(nonatomic) long long authType;
@property(copy, nonatomic) NSString *OAuth2Token;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(nonatomic) unsigned int port;
@property(copy, nonatomic) NSString *hostname;
- (void)dealloc;
- (id)init;
- (struct Object *)mco_mcObject;

@end

@interface MCOSMTPLoginOperation : MCOSMTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOSMTPSendOperation : MCOSMTPOperation
{
    CDUnknownBlockType _completionBlock;
    struct MCOSMTPSendOperationCallback *_smtpCallback;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithMCOperation:(struct Operation *)arg1;

@end

@interface MCOSMTPOperation : MCOOperation
{
    CDUnknownBlockType _completionBlock;
    MCOSMTPSession *_session;
}

- (id)session;
- (void)setSession:(id)arg1;
- (void)operationCompleted;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOSMTPNoopOperation : MCOSMTPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOPOPSession : NSObject
{
    struct POPAsyncSession *_session;
    CDUnknownBlockType _connectionLogger;
    struct MCOPOPCallbackBridge *_callbackBridge;
    CDUnknownBlockType _operationQueueRunningChangeBlock;
}

@property(readonly, nonatomic, getter=isOperationQueueRunning) _Bool operationQueueRunning;
- (void)_queueRunningChanged;
- (void)_logWithSender:(void *)arg1 connectionType:(long long)arg2 data:(id)arg3;
- (id)noopOperation;
- (id)checkAccountOperation;
- (id)disconnectOperation;
- (id)deleteMessagesOperationWithIndexes:(id)arg1;
- (id)fetchMessageOperationWithIndex:(unsigned int)arg1;
- (id)fetchHeaderOperationWithIndex:(unsigned int)arg1;
- (id)fetchMessagesOperation;
- (id)_objcOpaqueOperationFromNativeOp:(struct POPOperation *)arg1;
- (id)_objcOperationFromNativeOp:(struct POPOperation *)arg1;
- (void)cancelAllOperations;
@property(copy, nonatomic) CDUnknownBlockType operationQueueRunningChangeBlock;
@property(copy, nonatomic) CDUnknownBlockType connectionLogger;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property(nonatomic, getter=isCheckCertificateEnabled) _Bool checkCertificateEnabled;
@property(nonatomic) double timeout;
@property(nonatomic) long long connectionType;
@property(nonatomic) long long authType;
@property(copy, nonatomic) NSString *password;
@property(copy, nonatomic) NSString *username;
@property(nonatomic) unsigned int port;
@property(copy, nonatomic) NSString *hostname;
- (void)dealloc;
- (id)init;
- (id)description;
- (struct Object *)mco_mcObject;

@end

@interface MCOPOPFetchHeaderOperation : MCOPOPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOPOPFetchMessageOperation : MCOPOPOperation
{
    CDUnknownBlockType _completionBlock;
    struct MCOPOPFetchMessageOperationCallback *_popCallback;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithMCOperation:(struct Operation *)arg1;

@end

@interface MCOPOPOperation : MCOOperation
{
    CDUnknownBlockType _completionBlock;
    MCOPOPSession *_session;
}

- (id)session;
- (void)setSession:(id)arg1;
- (void)operationCompleted;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOPOPFetchMessagesOperation : MCOPOPOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOPOPMessageInfo : NSObject <NSCopying>
{
    struct POPMessageInfo *_nativeInfo;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) NSString *uid;
@property(nonatomic) unsigned int size;
@property(nonatomic) unsigned int index;
- (void)dealloc;
- (id)initWithMCPOPMessageInfo:(struct POPMessageInfo *)arg1;
- (id)description;
- (struct Object *)mco_mcObject;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface MCONNTPOperation : MCOOperation
{
    CDUnknownBlockType _completionBlock;
    MCONNTPSession *_session;
}

- (id)session;
- (void)setSession:(id)arg1;
- (void)operationCompleted;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOMailProvider : NSObject
{
    struct MailProvider *_provider;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (_Bool)isMainFolder:(id)arg1 prefix:(id)arg2;
- (id)importantFolderPath;
- (id)spamFolderPath;
- (id)draftsFolderPath;
- (id)trashFolderPath;
- (id)allMailFolderPath;
- (id)starredFolderPath;
- (id)sentMailFolderPath;
- (_Bool)matchMX:(id)arg1;
- (_Bool)matchEmail:(id)arg1;
- (id)popServices;
- (id)smtpServices;
- (id)imapServices;
@property(copy, nonatomic) NSString *identifier;
- (id)initWithMCProvider:(struct MailProvider *)arg1;
- (id)initWithInfo:(id)arg1;
- (struct Object *)mco_mcObject;

@end

@interface MCOMailProvidersManager : NSObject
{
}

+ (id)sharedManager;
- (void)registerProvidersWithFilename:(id)arg1;
- (id)providerForIdentifier:(id)arg1;
- (id)providerForMX:(id)arg1;
- (id)providerForEmail:(id)arg1;
- (id)init;

@end

@interface MCONNTPDisconnectOperation : NSObject
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;

@end

@interface MCONetService : NSObject <NSCopying>
{
    struct NetService *_netService;
}

+ (id)serviceWithInfo:(id)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (id)hostnameWithEmail:(id)arg1;
- (id)info;
@property(nonatomic) long long connectionType;
@property(nonatomic) unsigned int port;
@property(copy, nonatomic) NSString *hostname;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithNetService:(struct NetService *)arg1;
- (id)initWithInfo:(id)arg1;
- (struct Object *)mco_mcObject;

@end

@interface MCOIMAPMultiDisconnectOperation : MCOIMAPOperation
{
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;

@end

@interface MCOIMAPFolderStatus : NSObject <NSCopying>
{
    struct IMAPFolderStatus *_nativeStatus;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(nonatomic) unsigned long long highestModSeqValue;
@property(nonatomic) unsigned int uidValidity;
@property(nonatomic) unsigned int uidNext;
@property(nonatomic) unsigned int recentCount;
@property(nonatomic) unsigned int messageCount;
@property(nonatomic) unsigned int unseenCount;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (struct Object *)mco_mcObject;
- (void)dealloc;
- (id)initWithMCFolderStatus:(struct IMAPFolderStatus *)arg1;

@end

@interface MCOIMAPFolderStatusOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCOIMAPMessageRenderingOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface MCONNTPFetchArticleOperation : MCONNTPOperation
{
    CDUnknownBlockType _completionBlock;
    struct MCONNTPFetchArticleOperationCallback *_popCallback;
    CDUnknownBlockType _progress;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
@property(copy, nonatomic) CDUnknownBlockType progress; // @synthesize progress=_progress;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithMCOperation:(struct Operation *)arg1;

@end

@interface MCOIMAPQuotaOperation : MCOIMAPBaseOperation
{
    CDUnknownBlockType _completionBlock;
}

+ (id)mco_objectWithMCObject:(struct Object *)arg1;
+ (void)load;
- (void)operationCompleted;
- (void)cancel;
- (void)start:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface CLSInternalReport : NSObject
{
    NSString *_identifier;
    NSString *_path;
    NSArray *_metadataSections;
}

+ (id)readCLSFileAtPath:(id)arg1;
+ (id)reportWithPath:(id)arg1;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(copy, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
- (id)timeFromCrashContentFile:(id)arg1 sectionName:(id)arg2;
@property(readonly, copy, nonatomic) NSDate *crashedOnDate;
@property(readonly, copy, nonatomic) NSDate *dateCreated;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *APIKey;
- (id)metadataSections;
- (void)enumerateSymbolicatableFilesInContent:(CDUnknownBlockType)arg1;
- (_Bool)checkExistenceOfAtLeastOnceFileInArray:(id)arg1;
@property(readonly, nonatomic) _Bool isCrash;
- (id)crashFilenames;
@property(readonly, nonatomic) _Bool needsToBeSubmitted;
@property(readonly, copy, nonatomic) NSString *binaryImagePath;
@property(readonly, copy, nonatomic) NSString *metadataPath;
- (id)pathForContentFile:(id)arg1;
@property(readonly, copy, nonatomic) NSString *directoryName;
- (id)initWithPath:(id)arg1;
- (id)initWithPath:(id)arg1 executionIdentifier:(id)arg2;

@end

@interface Crashlytics : NSObject <FABKit, CLSCrashReportingControllerDelegate, CLSBetaControllerDelegate>
{
    id <CrashlyticsDelegate> _delegate;
    CLSCrashReportingController *_crashReportingController;
    CLSBetaController *_betaController;
}

+ (void)logEvent:(id)arg1 attributes:(id)arg2;
+ (void)logEvent:(id)arg1;
+ (void)setDevelopmentPlatformVersion:(id)arg1;
+ (void)setDevelopmentPlatformName:(id)arg1;
+ (void)setFloatValue:(float)arg1 forKey:(id)arg2;
+ (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
+ (void)setIntValue:(int)arg1 forKey:(id)arg2;
+ (void)setObjectValue:(id)arg1 forKey:(id)arg2;
+ (void)setUserEmail:(id)arg1;
+ (void)setUserName:(id)arg1;
+ (void)setUserIdentifier:(id)arg1;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2 afterDelay:(double)arg3;
+ (id)startWithAPIKey:(id)arg1 afterDelay:(double)arg2;
+ (id)startWithAPIKey:(id)arg1 delegate:(id)arg2;
+ (id)startWithAPIKey:(id)arg1;
+ (void)disableUninitializedKitMessaging;
+ (void)initializeIfNeeded;
+ (id)kitBuildVersion;
+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (id)sharedInstance;
@property(readonly, nonatomic) CLSBetaController *betaController; // @synthesize betaController=_betaController;
- (void).cxx_destruct;
- (void)logEvent:(id)arg1 attributes:(id)arg2;
- (void)logEvent:(id)arg1;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (id)settingsForBetaController:(id)arg1;
- (id)APIKeyForBetaController:(id)arg1;
- (id)settingsForCrashReportingController:(id)arg1;
- (_Bool)isFirstInstallForCrashReportingController:(id)arg1;
- (id)installIDForCrashReportingController:(id)arg1;
- (id)APIKeyForCrashReportingController:(id)arg1;
- (_Bool)reportingController:(id)arg1 ensureDeliveryOfUnixSignal:(int)arg2;
- (void)reportingController:(id)arg1 internalDidDetectReportForLastExecution:(id)arg2;
- (void)reportingController:(id)arg1 didDetectReportForLastExecution:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)reportingControllerMustInformDelegateOfReports:(id)arg1;
- (_Bool)reportingControllerCanUseBackgroundSessions:(id)arg1;
- (void)detectedCrash;
- (_Bool)shouldInstallCrashCallback;
- (void)warnDelegateAboutMethods;
- (_Bool)delegateRespondsToLegacyMethods;
- (void)monitorErrorsForWKWebViewConfiguration:(id)arg1;
- (_Bool)handleWebView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)monitorErrorsForUIWebView:(id)arg1;
- (void)recordCustomExceptionName:(id)arg1 reason:(id)arg2 frameArray:(id)arg3;
- (void)recordError:(id)arg1 withAdditionalUserInfo:(id)arg2;
- (void)recordError:(id)arg1;
- (void)setDevelopmentPlatformVersion:(id)arg1;
- (id)developmentPlatformVersion;
- (void)setDevelopmentPlatformName:(id)arg1;
- (id)developmentPlatformName;
- (void)setFloatValue:(float)arg1 forKey:(id)arg2;
- (void)setBoolValue:(_Bool)arg1 forKey:(id)arg2;
- (void)setIntValue:(int)arg1 forKey:(id)arg2;
- (void)setObjectValue:(id)arg1 forKey:(id)arg2;
- (void)setUserEmail:(id)arg1;
- (void)setUserName:(id)arg1;
- (void)setUserIdentifier:(id)arg1;
- (void)throwException;
- (void)crash;
@property(nonatomic) id <CrashlyticsDelegate> delegate;
@property(nonatomic) _Bool debugMode;
- (_Bool)isCrashlyticsStarted;
- (id)settingsDictionary;
- (_Bool)isFirstInstall;
- (id)installID;
@property(readonly, copy, nonatomic) NSString *APIKey;
- (void)setKitInfo:(id)arg1;
- (id)kitInfo;
- (id)bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *version;
- (void)start;
- (id)initWithSuper;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSFileManager : NSObject
{
    NSString *_rootPath;
    NSFileManager *_underlyingFileManager;
}

@property(readonly, copy, nonatomic) NSString *rootPath; // @synthesize rootPath=_rootPath;
@property(readonly, nonatomic) NSFileManager *underlyingFileManager; // @synthesize underlyingFileManager=_underlyingFileManager;
- (void).cxx_destruct;
- (_Bool)removeContentsOfAllPaths;
- (_Bool)removeContentsOfPendingPath;
- (_Bool)removeContentsOfProcessingPath;
- (_Bool)movePendingToProcessing;
- (_Bool)moveProcessingContentsToPrepared;
- (void)enumerateFilesInPreparedDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateFilesInActiveDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateReportsInProcessingDirectoryUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeLegacyDirectories;
- (id)setupNewPathForExecutionIdentifier:(id)arg1;
- (_Bool)prepareForNewLaunch;
@property(readonly, nonatomic) NSArray *processingPathContents;
@property(readonly, nonatomic) NSArray *preparedPathContents;
@property(readonly, nonatomic) NSArray *activePathContents;
@property(readonly, copy, nonatomic) NSString *preparedPath;
@property(readonly, copy, nonatomic) NSString *processingPath;
@property(readonly, copy, nonatomic) NSString *pendingPath;
@property(readonly, copy, nonatomic) NSString *activePath;
@property(readonly, copy, nonatomic) NSString *structurePath;
- (id)pathNamespace;
- (id)contentsOfDirectory:(id)arg1;
- (id)fileSizeAtPath:(id)arg1;
- (_Bool)moveItemsFromDirectory:(id)arg1 toDirectory:(id)arg2;
- (void)enumerateFilesInDirectory:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (_Bool)moveItemAtPath:(id)arg1 toDirectory:(id)arg2;
- (_Bool)removeContentsOfDirectoryAtPath:(id)arg1;
- (_Bool)removeItemAtPath:(id)arg1;
- (_Bool)createDirectoryAtPath:(id)arg1;
- (id)init;

@end

@interface CLSAlert : NSObject
{
}

+ (id)alertWithTitle:(id)arg1 message:(id)arg2 delegate:(id)arg3 cancelButtonTitle:(id)arg4 otherButtonTitle:(id)arg5;

@end

@interface CLSDemangleOperation : CLSThreadArrayOperation
{
}

+ (id)demangleCppSymbol:(const char *)arg1;
+ (id)demangleBlockInvokeCppSymbol:(const char *)arg1;
+ (id)demangleSymbol:(const char *)arg1;
- (void)main;
- (id)demangleSymbol:(const char *)arg1;

@end

@interface CLSPackageReportOperation : NSOperation
{
    CLSInternalReport *_report;
    CLSFileManager *_fileManager;
    NSString *_finalPath;
}

@property(copy, nonatomic) NSString *finalPath; // @synthesize finalPath=_finalPath;
@property(readonly, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) CLSInternalReport *report; // @synthesize report=_report;
- (void).cxx_destruct;
- (void)encode:(id)arg1 data:(id)arg2 fromPath:(id)arg3;
- (void)main;
- (id)packagedPathWithName:(id)arg1;
- (id)destinationDirectory;
- (id)reportPath;
- (_Bool)writeBytes:(const void *)arg1 length:(unsigned long long)arg2 toGZFile:(struct gzFile_s *)arg3;
- (_Bool)compressData:(id)arg1 toPath:(id)arg2;
- (id)initWithReport:(id)arg1 fileManager:(id)arg2;

@end

@interface CLSSerializeSymbolicatedFramesOperation : CLSThreadArrayOperation
{
    NSString *_outputPath;
}

@property(copy, nonatomic) NSString *outputPath; // @synthesize outputPath=_outputPath;
- (void).cxx_destruct;
- (void)main;

@end

@interface CLSProcessReportOperation : NSOperation
{
    CLSSymbolResolver *_symbolResolver;
    CLSInternalReport *_report;
}

@property(readonly, nonatomic) CLSInternalReport *report; // @synthesize report=_report;
@property(readonly, nonatomic) CLSSymbolResolver *symbolResolver; // @synthesize symbolResolver=_symbolResolver;
- (void).cxx_destruct;
- (void)main;
- (_Bool)symbolicateFile:(id)arg1 withResolver:(id)arg2;
- (id)threadArrayFromFile:(id)arg1;
- (id)binaryImagePath;
- (id)initWithReport:(id)arg1 resolver:(id)arg2;

@end

@interface CLSSettings : NSObject
{
    NSDictionary *_settingsDictionary;
}

@property(readonly, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *interactivePromptAlwaysSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptSendTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptCancelTitle;
@property(readonly, copy, nonatomic) NSString *interactivePromptMessage;
@property(readonly, copy, nonatomic) NSString *interactivePromptTitle;
- (id)promptValueForSettingsKey:(id)arg1 withLocalizedKey:(id)arg2 defaultValue:(id)arg3;
@property(readonly, nonatomic) unsigned int maxCustomKeys;
@property(readonly, nonatomic) unsigned int maxCustomExceptions;
@property(readonly, nonatomic) unsigned int logBufferSize;
@property(readonly, nonatomic) unsigned int errorLogBufferSize;
@property(readonly, nonatomic) _Bool firebaseCrashlyticsEnabled;
@property(readonly, nonatomic) _Bool userPromptEnabled;
@property(readonly, nonatomic) _Bool crashReportingEnabled;
@property(readonly, nonatomic) _Bool customExceptionsEnabled;
@property(readonly, nonatomic) _Bool errorReportingEnabled;
@property(readonly, nonatomic) _Bool canProcessUrgentReports;
@property(readonly, nonatomic) _Bool shouldSubmitReports;
@property(readonly, nonatomic) _Bool shouldPackageReports;
@property(readonly, copy, nonatomic) NSString *reportsEndpoint;
@property(readonly, copy, nonatomic) NSNumber *betaSuspendDuration;
@property(readonly, copy, nonatomic) NSString *betaEndpoint;
- (id)valueForConfigurationKey:(id)arg1;
- (id)defaultConfiguration;
- (id)configuration;
- (id)initWithDictionary:(id)arg1;

@end

@interface CLSBetaController : NSObject <NSURLSessionDelegate>
{
    NSString *_betaToken;
    _Bool _checksSuspended;
    _Bool _retrying;
    id <CLSBetaControllerDelegate> _delegate;
    FABNetworkClient *_networkClient;
    CLSBetaUpdate *_activeUpdate;
    NSTimer *_checkSuspensionTimer;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (id)pinnnedCertificates;
+ (_Bool)isBetaSupported;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool retrying; // @synthesize retrying=_retrying;
@property(nonatomic) _Bool checksSuspended; // @synthesize checksSuspended=_checksSuspended;
@property(retain, nonatomic) NSTimer *checkSuspensionTimer; // @synthesize checkSuspensionTimer=_checkSuspensionTimer;
@property(retain, nonatomic) CLSBetaUpdate *activeUpdate; // @synthesize activeUpdate=_activeUpdate;
@property(readonly, nonatomic) FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(nonatomic) __weak id <CLSBetaControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)fabricSettingsDownloaded:(id)arg1;
- (void)showBetaAlertForUpdate:(id)arg1;
- (void)didGetUpdate:(id)arg1;
- (_Bool)shouldGetUpdates;
- (void)applicationWillEnterForeground;
- (void)allowChecks;
- (void)temporarilySuspendChecks;
- (id)updateWithData:(id)arg1 error:(id *)arg2;
- (void)handledCompletedBetaRequestWithData:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)loadUpdateWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)maybeGetUpdate:(CDUnknownBlockType)arg1;
- (void)checkForUpdate;
- (id)betaUpdateURL;
- (id)APIKey;
- (id)appInstallationSource;
- (id)appInstanceIdentifier;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appBundleIdentifier;
- (id)betaEndpoint;
- (id)betaUpdateSuspendDurationSecs;
- (id)settings;
@property(readonly, copy, nonatomic) NSString *betaToken;
- (void)dealloc;
- (_Bool)start;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSSymbolResolver : NSObject
{
    NSMutableArray *_binaryImages;
}

- (void).cxx_destruct;
- (_Bool)updateStackFrame:(id)arg1;
- (id)frameForAddress:(unsigned long long)arg1;
- (_Bool)fillInImageDetails:(CDStruct_fad71a87 *)arg1 forUUID:(id)arg2;
- (id)loadedBinaryImageForPC:(unsigned long long)arg1;
- (_Bool)loadBinaryImagesFromFile:(id)arg1;
- (id)init;

@end

@interface CLSCrashReportingController : NSObject <CLSNetworkClientDelegate, CLSReportsControllerDelegate>
{
    CLSFileManager *_fileMananger;
    CLSNetworkClient *_networkClient;
    CLSReportsController *_reportsController;
    NSOperationQueue *_operationQueue;
    CLSSettings *_settings;
    long long _alwaysSendButtonIndex;
    UIAlertView *_crashReportSubmissionAlert;
    CLSInternalReport *_promptedReport;
    long long _promptChoice;
    _Bool _registeredAnalyticsEventListener;
    id <CLSCrashReportingControllerDelegate> _delegate;
    CLSFileManager *_fileManager;
}

@property(retain, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) CLSNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSCrashReportingControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reportsControllerDidCompleteAllSubmissions:(id)arg1;
- (void)reportsController:(id)arg1 didCompletePackageSubmission:(id)arg2 error:(id)arg3;
- (id)bundleIdentifierForReportsController:(id)arg1;
- (id)APIKeyForReportsController:(id)arg1;
- (id)settingsForReportsController:(id)arg1;
- (void)networkClient:(id)arg1 didFinishUploadWithPath:(id)arg2 error:(id)arg3;
- (_Bool)networkClientCanUseBackgroundSessions:(id)arg1;
- (void)fabricSettingsDownloaded:(id)arg1;
- (void)didChangeUIOrientation:(id)arg1;
- (void)didChangeOrientation:(id)arg1;
- (void)didBecomeInactive:(id)arg1;
- (void)willBecomeActive:(id)arg1;
- (void)captureInitialNotificationStates;
- (void)setupStateNotifications;
- (void)registerAnalyticsEventListener;
- (_Bool)checkForAndCreateLaunchMarker;
- (_Bool)removeLaunchFailureMarker;
- (_Bool)launchFailureMarkerPresent;
- (_Bool)createLaunchFailureMarker;
- (id)launchFailureMarkerPath;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)handlePromptCompleteForReport:(id)arg1 shouldSubmit:(_Bool)arg2 shouldMarkAlwaysSubmit:(_Bool)arg3;
- (void)setupAndDisplayAlertWithTitle:(id)arg1 message:(id)arg2 cancel:(id)arg3 send:(id)arg4 alwaysSend:(id)arg5 report:(id)arg6;
- (void)displayPermissionAlertForReport:(id)arg1;
- (void)retryUploadForReportAtPath:(id)arg1;
- (void)uploadPreexistingFiles:(id)arg1;
- (void)handleExistingFilesInPrepared;
- (void)handleExistingFilesInProcessing;
- (void)handleContentsInOtherReportingDirectories;
- (void)removeReport:(id)arg1;
- (void)handleDelegateCompletionForReport:(id)arg1 submit:(_Bool)arg2;
- (void)processExistingActiveReportPath:(id)arg1 asUrgent:(_Bool)arg2;
- (void)processExistingReportPaths:(id)arg1 asUrgent:(_Bool)arg2;
- (id)setupCurrentReport;
- (_Bool)installCrashReportingHandlers:(CDStruct_1e2a2a70 *)arg1;
- (_Bool)prepareForNewLaunch;
- (id)bundleIdentifier;
- (_Bool)needsToPrompt;
- (_Bool)canProcessUrgentReports;
- (_Bool)delegateNeedsToBeInformedOfReports;
- (_Bool)packagingEnabled;
- (void)checkForUserPromptSetting;
- (_Bool)potentiallySubmittableCrashOccurred;
- (_Bool)attemptCurrentReportSubmission;
- (void)deliverCrashDelegateCallback;
- (unsigned int)machExceptionMask;
- (id)settings;
- (id)APIKey;
- (id)installIdentifier;
- (_Bool)firstInstall;
@property(readonly, nonatomic) CLSReportsController *reportsController;
- (_Bool)checkPreconditions;
- (void)crashReportingSetupCompleted:(unsigned long long)arg1;
- (_Bool)startCrashReporterWithAPIKey:(id)arg1 betaToken:(id)arg2 profilingMark:(unsigned long long)arg3 report:(id)arg4;
- (_Bool)startWithProfilingMark:(unsigned long long)arg1 betaToken:(id)arg2;
- (id)clientWithOperationQueue:(id)arg1;
- (id)initWithFileManager:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSStackFrame : NSObject
{
    unsigned int _lineNumber;
    NSString *_symbol;
    NSString *_rawSymbol;
    NSString *_library;
    NSString *_fileName;
    unsigned long long _offset;
    unsigned long long _address;
}

+ (id)stackFrameWithSymbol:(id)arg1;
+ (id)stackFrameWithAddress:(unsigned long long)arg1;
+ (id)stackFrame;
@property(nonatomic) unsigned long long address; // @synthesize address=_address;
@property(nonatomic) unsigned long long offset; // @synthesize offset=_offset;
@property(nonatomic) unsigned int lineNumber; // @synthesize lineNumber=_lineNumber;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(copy, nonatomic) NSString *library; // @synthesize library=_library;
@property(copy, nonatomic) NSString *rawSymbol; // @synthesize rawSymbol=_rawSymbol;
@property(copy, nonatomic) NSString *symbol; // @synthesize symbol=_symbol;
- (void).cxx_destruct;
- (id)description;

@end

@interface CLSSymbolicationOperation : CLSThreadArrayOperation
{
    CLSSymbolResolver *_symbolResolver;
}

@property(retain, nonatomic) CLSSymbolResolver *symbolResolver; // @synthesize symbolResolver=_symbolResolver;
- (void).cxx_destruct;
- (void)main;

@end

@interface CLSReportsController : NSObject
{
    id <CLSReportsControllerDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    CLSNetworkClient *_networkClient;
    CLSFileManager *_fileManager;
}

@property(readonly, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) CLSNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSReportsControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)reportUploadAtPath:(id)arg1 completedWithError:(id)arg2;
- (_Bool)cleanUpSubmittedReportAtPath:(id)arg1;
- (_Bool)uploadPackagedReportAtPath:(id)arg1 asUrgent:(_Bool)arg2;
- (_Bool)submitPackageMultipartMimeAtPath:(id)arg1 synchronously:(_Bool)arg2;
- (_Bool)prepareAndSubmitReport:(id)arg1 asUrgent:(_Bool)arg2 withProcessing:(_Bool)arg3;
- (_Bool)fillInRequest:(id)arg1 forMultipartMimeDataAtPath:(id)arg2;
- (id)mutableRequestWithURL:(id)arg1 timeout:(double)arg2;
- (id)APIKey;
- (id)localeIdentifier;
- (_Bool)packagingEnabled;
- (_Bool)submissionEnabled;
- (id)reportURL;
- (id)reportEndpoint;
- (id)appBundleIdentifier;
- (id)settings;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2 client:(id)arg3 fileManager:(id)arg4;

@end

@interface CLSReport : NSObject <CLSCrashReport>
{
    CLSInternalReport *_internalReport;
    unsigned int _internalKVCounter;
    unsigned int _userKVCounter;
    NSString *_internalCompactedKVFile;
    NSString *_internalIncrementalKVFile;
    NSString *_userCompactedKVFile;
    NSString *_userIncrementalKVFile;
    _Bool _readOnly;
    NSString *_identifer;
    NSString *_bundleVersion;
    NSString *_bundleShortVersionString;
    NSDate *_dateCreated;
    NSDate *_crashedOnDate;
    NSString *_OSVersion;
    NSString *_OSBuildVersion;
    NSNumber *_isCrash;
    NSDictionary *_customKeys;
}

@property(readonly, nonatomic) CLSInternalReport *internalReport; // @synthesize internalReport=_internalReport;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *userEmail;
@property(copy, nonatomic) NSString *userName;
@property(copy, nonatomic) NSString *userIdentifier;
- (void)setObjectValue:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) _Bool isCrash;
@property(readonly, copy, nonatomic) NSString *OSBuildVersion;
@property(readonly, copy, nonatomic) NSString *OSVersion;
@property(readonly, nonatomic) NSDate *crashedOnDate;
@property(readonly, copy, nonatomic) NSDate *dateCreated;
@property(readonly, copy, nonatomic) NSString *bundleShortVersionString;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSDictionary *customKeys;
@property(readonly, copy, nonatomic) NSString *identifier;
- (id)readCustomKeys;
- (void)recordValue:(id)arg1 forUserKey:(id)arg2;
- (void)recordValue:(id)arg1 forInternalKey:(id)arg2;
- (_Bool)canRecordNewValues;
- (CDStruct_4355734a)userKVStorage;
- (CDStruct_4355734a)internalKVStorage;
- (id)initWithInternalReport:(id)arg1;
- (id)initWithInternalReport:(id)arg1 prefetchData:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSThreadArrayOperation : NSOperation
{
    NSArray *_threadArray;
}

@property(retain, nonatomic) NSArray *threadArray; // @synthesize threadArray=_threadArray;
- (void).cxx_destruct;
- (void)enumerateFramesWithBlock:(CDUnknownBlockType)arg1;

@end

@interface CLSFCRAnalytics : NSObject
{
}

+ (id)buildLogParamsFromCrash:(double)arg1;
+ (void)registerAnalyticsEventListener:(CDUnknownBlockType)arg1;
+ (void)logCrashWithTimeStamp:(double)arg1 firebaseCrashlyticsEnabled:(_Bool)arg2;

@end

@interface CLSBetaUpdate : NSObject
{
    NSURL *_url;
    NSString *_version;
}

+ (id)betaUpdateWithDictionary:(id)arg1 error:(id *)arg2;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSString *installLabel;
@property(readonly, copy, nonatomic) NSString *cancelLabel;
@property(readonly, copy, nonatomic) NSString *promptMessage;
@property(readonly, copy, nonatomic) NSString *promptTitle;
- (id)initWithDictionary:(id)arg1;

@end

@interface CLSNetworkClient : NSObject <NSURLSessionDelegate>
{
    NSURLSession *_session;
    _Bool _canUseBackgroundSession;
    id <CLSNetworkClientDelegate> _delegate;
    NSOperationQueue *_operationQueue;
    FABCertificatePinner *_certPinner;
    CDUnknownBlockType _backgroundCompletionHandler;
    CLSFileManager *_fileManager;
}

+ (id)pinner;
@property(retain, nonatomic) CLSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(nonatomic) _Bool canUseBackgroundSession; // @synthesize canUseBackgroundSession=_canUseBackgroundSession;
@property(copy, nonatomic) CDUnknownBlockType backgroundCompletionHandler; // @synthesize backgroundCompletionHandler=_backgroundCompletionHandler;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <CLSNetworkClientDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)handleTaskDescription:(id)arg1 completedWithError:(id)arg2;
- (void)handleTask:(id)arg1 completedWithError:(id)arg2;
- (void)restartTask:(id)arg1;
- (void)runAfterRetryValueFromResponse:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)checkForExistingTaskMatchingDescription:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)checkSession:(id)arg1 forTasksMatchingDescription:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)taskArray:(id)arg1 hasTaskMatchingDescription:(id)arg2;
- (id)relativeTaskPathForAbsolutePath:(id)arg1;
- (id)absolutePathForRelativeTaskPath:(id)arg1;
- (id)rootPath;
- (void)startNewUploadRequest:(id)arg1 filePath:(id)arg2;
- (void)startImmediateUploadRequest:(id)arg1 filePath:(id)arg2;
- (void)startUploadRequest:(id)arg1 filePath:(id)arg2 immediately:(_Bool)arg3;
- (void)attemptToReconnectBackgroundSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsBackgroundRequests;
- (_Bool)NSURLSessionAvailable;
@property(readonly, nonatomic) NSURLSession *session;
- (id)initWithQueue:(id)arg1 fileManager:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Answers : NSObject <FABKit>
{
    ANSAnswersController *_answersController;
}

+ (void)initializeIfNeeded;
+ (id)kitBuildVersion;
+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (void)printMethodUnavailableWithSelector:(id)arg1;
+ (void)logCustomEventWithName:(id)arg1 customAttributes:(id)arg2;
+ (void)logSearchWithQuery:(id)arg1 customAttributes:(id)arg2;
+ (void)logContentViewWithName:(id)arg1 contentType:(id)arg2 contentId:(id)arg3 customAttributes:(id)arg4;
+ (void)logRating:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (void)logStartCheckoutWithPrice:(id)arg1 currency:(id)arg2 itemCount:(id)arg3 customAttributes:(id)arg4;
+ (void)logAddToCartWithPrice:(id)arg1 currency:(id)arg2 itemName:(id)arg3 itemType:(id)arg4 itemId:(id)arg5 customAttributes:(id)arg6;
+ (void)logLevelEnd:(id)arg1 score:(id)arg2 success:(id)arg3 customAttributes:(id)arg4;
+ (void)logLevelStart:(id)arg1 customAttributes:(id)arg2;
+ (void)logPurchaseWithPrice:(id)arg1 currency:(id)arg2 success:(id)arg3 itemName:(id)arg4 itemType:(id)arg5 itemId:(id)arg6 customAttributes:(id)arg7;
+ (void)logShareWithMethod:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (void)logLoginWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (void)logSignUpWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (void)logInviteWithMethod:(id)arg1 customAttributes:(id)arg2;
+ (void)logPreviousSessionCrashedOnDate:(id)arg1;
+ (void)startWithBetaToken:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) ANSAnswersController *answersController; // @synthesize answersController=_answersController;
- (void).cxx_destruct;
- (void)startWithBetaToken:(id)arg1;
- (void)configureLogging;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSPredefinedEvent : ANSEvent
{
    NSString *_predefinedEventName;
    ANSAttributeDictionary *_predefinedAttributes;
    ANSAttributeDictionary *_customAttributes;
}

+ (id)searchEventWithQuery:(id)arg1 customAttributes:(id)arg2;
+ (id)contentViewEventWithName:(id)arg1 contentType:(id)arg2 contentId:(id)arg3 customAttributes:(id)arg4;
+ (id)ratingEventWithRating:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (id)startCheckoutEventWithPrice:(id)arg1 currency:(id)arg2 itemCount:(id)arg3 customAttributes:(id)arg4;
+ (id)addToCartEventWithPrice:(id)arg1 currency:(id)arg2 itemName:(id)arg3 itemType:(id)arg4 itemId:(id)arg5 customAttributes:(id)arg6;
+ (id)levelEndEventWithLevelName:(id)arg1 score:(id)arg2 success:(id)arg3 customAttributes:(id)arg4;
+ (id)levelStartEventWithLevelName:(id)arg1 customAttributes:(id)arg2;
+ (id)purchaseEventWithPrice:(id)arg1 currency:(id)arg2 success:(id)arg3 itemName:(id)arg4 itemType:(id)arg5 itemId:(id)arg6 customAttributes:(id)arg7;
+ (id)inviteEventWithMethod:(id)arg1 customAttributes:(id)arg2;
+ (id)shareEventWithMethod:(id)arg1 contentName:(id)arg2 contentType:(id)arg3 contentId:(id)arg4 customAttributes:(id)arg5;
+ (id)loginEventWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
+ (id)signUpEventWithMethod:(id)arg1 success:(id)arg2 customAttributes:(id)arg3;
@property(retain, nonatomic) ANSAttributeDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(retain, nonatomic) ANSAttributeDictionary *predefinedAttributes; // @synthesize predefinedAttributes=_predefinedAttributes;
@property(retain, nonatomic) NSString *predefinedEventName; // @synthesize predefinedEventName=_predefinedEventName;
- (void).cxx_destruct;
- (id)description;
- (id)dictionaryRepresentation;
- (id)name;

@end

@interface ANSCrashMetadata : NSObject <ANSMetadataSerializable>
{
    NSDictionary *_rawMetadataDictionary;
}

+ (_Bool)writeSerializedDictionary:(id)arg1 toURL:(id)arg2;
+ (id)readSerializedDictionaryFromURL:(id)arg1;
@property(readonly, nonatomic) NSDictionary *rawMetadataDictionary; // @synthesize rawMetadataDictionary=_rawMetadataDictionary;
- (void).cxx_destruct;
- (id)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (id)eventName;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSPackageLogOperation : NSOperation
{
    NSURL *_compressedLogURL;
    NSString *_multipartMimeBoundary;
    NSURL *_packagedLogURL;
}

@property(retain, nonatomic) NSURL *packagedLogURL; // @synthesize packagedLogURL=_packagedLogURL;
@property(retain, nonatomic) NSString *multipartMimeBoundary; // @synthesize multipartMimeBoundary=_multipartMimeBoundary;
@property(retain, nonatomic) NSURL *compressedLogURL; // @synthesize compressedLogURL=_compressedLogURL;
- (void).cxx_destruct;
- (id)multipartURLForCompressedURL:(id)arg1 withBoundary:(id)arg2;
- (void)main;
- (id)initWithCompressedLogURL:(id)arg1 packagedLogURL:(id)arg2 multipartMimeBoundary:(id)arg3;

@end

@interface ANSLifecycleEvent : ANSEvent
{
    NSString *_name;
}

+ (id)nameFromNotification:(id)arg1;
+ (id)notificationNameMap;
+ (id)appLaunchedEvent;
+ (id)installEvent;
+ (id)eventWithNotification:(id)arg1;
- (void).cxx_destruct;
- (_Bool)triggersFlush;
- (id)dictionaryRepresentation;
- (id)name;
- (id)initWithName:(id)arg1;
- (id)initWithNotification:(id)arg1;

@end

@interface ANSRotateCrashMetadataOperation : NSOperation
{
    NSURL *_crashMetadataURL;
    ANSMetadata *_currentMetadata;
    ANSCrashMetadata *_crashMetadata;
    NSDictionary *_currentMetadataDictionary;
}

@property(retain, nonatomic) NSDictionary *currentMetadataDictionary; // @synthesize currentMetadataDictionary=_currentMetadataDictionary;
@property(retain, nonatomic) ANSCrashMetadata *crashMetadata; // @synthesize crashMetadata=_crashMetadata;
@property(retain, nonatomic) ANSMetadata *currentMetadata; // @synthesize currentMetadata=_currentMetadata;
@property(retain, nonatomic) NSURL *crashMetadataURL; // @synthesize crashMetadataURL=_crashMetadataURL;
- (void).cxx_destruct;
- (void)main;
- (id)initWithCrashMetadataURL:(id)arg1 currentMetadata:(id)arg2;

@end

@interface ANSCleanupFilesOperation : NSOperation
{
    CDUnknownBlockType _successBlock;
    NSURL *_directoryUrl;
    long long _maximumPendingMultipartFiles;
}

@property(readonly, nonatomic) long long maximumPendingMultipartFiles; // @synthesize maximumPendingMultipartFiles=_maximumPendingMultipartFiles;
@property(readonly, nonatomic) NSURL *directoryUrl; // @synthesize directoryUrl=_directoryUrl;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
- (void).cxx_destruct;
- (id)URLsByRemovingOldFiles:(id)arg1 withMaximumFileCount:(long long)arg2;
- (void)main;
- (id)initWithDirectoryURL:(id)arg1 maximumPendingMulitpartFiles:(long long)arg2;

@end

@interface ANSAttributeDictionary : NSObject
{
    NSMutableDictionary *_rawDictionary;
}

@property(retain, nonatomic) NSMutableDictionary *rawDictionary; // @synthesize rawDictionary=_rawDictionary;
- (void).cxx_destruct;
- (id)serializeNumber:(id)arg1;
- (id)serializePriceToMicros:(id)arg1;
- (id)serializeSuccess:(id)arg1;
- (id)truncateString:(id)arg1;
- (id)serializeAttributeValue:(id)arg1;
- (_Bool)validAttributeValue:(id)arg1;
- (void)addPriceAttribute:(id)arg1 forKey:(id)arg2;
- (void)addBooleanAttribute:(id)arg1 forKey:(id)arg2;
- (void)addAttribute:(id)arg1 forKey:(id)arg2;
- (id)dictionaryRepresentation;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface ANSSettings : NSObject
{
    NSDictionary *_settingsDictionary;
}

@property(readonly, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
- (void).cxx_destruct;
@property(readonly, nonatomic) double lowPowerUploadTimeout;
@property(readonly, nonatomic) double defaultUploadTimeout;
@property(readonly, nonatomic) long long samplingRate;
@property(readonly, nonatomic) double flushInterval;
@property(readonly, nonatomic) long long maxPendingSendFiles;
@property(readonly, nonatomic) long long maximumPayloadSize;
@property(readonly, nonatomic) _Bool shouldIncludePurchaseEventsInForwardedFirebaseEvents;
@property(readonly, nonatomic) _Bool shouldForwardToFirebaseAnalytics;
@property(readonly, nonatomic) _Bool shouldCollectPredefinedEvents;
@property(readonly, nonatomic) _Bool shouldCollectCustomEvents;
@property(readonly, nonatomic) _Bool shouldCollectAnalytics;
@property(readonly, nonatomic) NSURL *answersURL;
@property(readonly, nonatomic) _Bool valid;
- (id)initWithDictionary:(id)arg1;

@end

@interface ANSMetadata : NSObject <ANSMetadataSerializable>
{
    _Bool _isJailbroken;
    unsigned int _numberOfCores;
    NSString *_APIKey;
    NSString *_betaToken;
    NSString *_buildVersion;
    NSString *_bundleIdentifier;
    NSString *_displayVersion;
    NSString *_executionIdentifier;
    NSString *_hostModel;
    NSString *_installationId;
    NSString *_instanceIdentifier;
    NSString *_locale;
    NSString *_OSBuildVersion;
    NSString *_OSDisplayVersion;
    NSString *_platform;
}

+ (id)ASManager;
@property(readonly, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *OSDisplayVersion; // @synthesize OSDisplayVersion=_OSDisplayVersion;
@property(readonly, nonatomic) NSString *OSBuildVersion; // @synthesize OSBuildVersion=_OSBuildVersion;
@property(readonly, nonatomic) unsigned int numberOfCores; // @synthesize numberOfCores=_numberOfCores;
@property(readonly, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(readonly, nonatomic) _Bool isJailbroken; // @synthesize isJailbroken=_isJailbroken;
@property(readonly, nonatomic) NSString *instanceIdentifier; // @synthesize instanceIdentifier=_instanceIdentifier;
@property(readonly, nonatomic) NSString *installationId; // @synthesize installationId=_installationId;
@property(readonly, nonatomic) NSString *hostModel; // @synthesize hostModel=_hostModel;
@property(readonly, nonatomic) NSString *executionIdentifier; // @synthesize executionIdentifier=_executionIdentifier;
@property(readonly, nonatomic) NSString *displayVersion; // @synthesize displayVersion=_displayVersion;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) NSString *buildVersion; // @synthesize buildVersion=_buildVersion;
@property(readonly, nonatomic) NSString *betaToken; // @synthesize betaToken=_betaToken;
@property(readonly, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (id)dictionaryRepresentationWithStartTime:(unsigned long long)arg1;
- (void)setValueInDictionary:(id)arg1 withKey:(id)arg2 toObject:(id)arg3;
- (id)eventName;
- (_Bool)computeIsJailbroken;
@property(readonly, nonatomic) unsigned int platformCode;
- (id)unwrapBetaToken:(id)arg1;
- (id)initWithFabric:(id)arg1 betaToken:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSEvent : NSObject
{
    NSDate *_timestamp;
    NSString *_identifier;
}

@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool triggersFlush;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) NSString *name;
- (id)init;

@end

@interface ANSFileUtils : NSObject
{
}

+ (id)fileCreatedDateAtURL:(id)arg1 withDefault:(id)arg2;
+ (id)fileSizeAtURL:(id)arg1;
+ (id)filesWithExtension:(id)arg1 inDirectory:(id)arg2;
+ (id)allFilesInDirectory:(id)arg1;

@end

@interface ANSBackoffTimer : NSObject
{
    unsigned long long _retryCount;
    double _initialValue;
    double _jitterCoefficient;
}

+ (_Bool)jitterCoefficientIsValid:(double)arg1;
@property(readonly, nonatomic) double jitterCoefficient; // @synthesize jitterCoefficient=_jitterCoefficient;
@property(nonatomic) double initialValue; // @synthesize initialValue=_initialValue;
@property(nonatomic) unsigned long long retryCount; // @synthesize retryCount=_retryCount;
- (double)computeDelayForInitialValue:(double)arg1 retryCount:(unsigned long long)arg2;
- (double)generateRandomJitter;
- (double)randomDoubleWithMin:(double)arg1 max:(double)arg2;
- (void)executeBlockAfterNextInterval:(CDUnknownBlockType)arg1;
- (id)init;
- (id)initWithInitialValue:(double)arg1 jitterCoefficient:(double)arg2;
- (id)initWithInitialValue:(double)arg1;

@end

@interface ANSNetworkRetryHandler : NSObject
{
    FABCertificatePinner *_certPinner;
    NSMutableDictionary *_retryTimerMap;
}

@property(readonly, nonatomic) NSMutableDictionary *retryTimerMap; // @synthesize retryTimerMap=_retryTimerMap;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
- (void).cxx_destruct;
- (id)timerForIdentifier:(id)arg1 initialRetryValue:(double)arg2;
- (void)handleCompletedRequest:(id)arg1 withResponse:(id)arg2 forIdentifier:(id)arg3 maxRetries:(unsigned long long)arg4 error:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)handleCompletedRequest:(id)arg1 withResponse:(id)arg2 forIdentifier:(id)arg3 error:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)errorWithCode:(long long)arg1 forIdentifier:(id)arg2 request:(id)arg3 handlerError:(id)arg4;
- (double)retryValueForResponse:(id)arg1;
- (void)handleChallenge:(id)arg1 fromURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)sharedFabricSDK;
- (id)init;

@end

@interface ANSWriteEventOperation : NSOperation
{
    _Bool _success;
    ANSEvent *_event;
    id <ANSMetadataSerializable> _metadata;
    NSURL *_logFileUrl;
    NSString *_formattedEvent;
    NSString *_formattedMetadata;
}

@property(retain, nonatomic) NSString *formattedMetadata; // @synthesize formattedMetadata=_formattedMetadata;
@property(retain, nonatomic) NSString *formattedEvent; // @synthesize formattedEvent=_formattedEvent;
@property(nonatomic) _Bool success; // @synthesize success=_success;
@property(retain, nonatomic) NSURL *logFileUrl; // @synthesize logFileUrl=_logFileUrl;
@property(readonly, nonatomic) id <ANSMetadataSerializable> metadata; // @synthesize metadata=_metadata;
@property(retain, nonatomic) ANSEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)logLineWithTimestamp:(id)arg1 eventName:(id)arg2 payloadDictionary:(id)arg3;
- (id)generateFormattedLogLineWithMetdata:(id)arg1 timestamp:(id)arg2;
- (id)generateFormattedLogLineWithEvent:(id)arg1;
- (_Bool)appendLogLine:(id)arg1 toFileDescriptor:(int)arg2;
- (_Bool)writeDataToDescriptor:(int)arg1 withPreexistingFile:(_Bool)arg2;
- (void)main;
- (id)initWithEvent:(id)arg1 metadata:(id)arg2 logFileUrl:(id)arg3;

@end

@interface ANSStubsForFIRAnalytics : NSObject
{
}

+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;

@end

@interface ANSFirebaseAnalyticsBridge : NSObject
{
    id _firebaseAnalytics;
    NSArray *_firebaseReservedKeys;
}

+ (id)sanitizeAttributeName:(id)arg1;
+ (id)sanitizeEventName:(id)arg1;
+ (id)sanitizeKeyName:(id)arg1;
+ (id)firebaseReservedKeys;
+ (_Bool)isFailableEvent:(id)arg1;
+ (id)transformedBaseParameters:(id)arg1 forFirebaseEventName:(id)arg2;
+ (id)extractBaseParameterDictionaryFromPredefinedAttributes:(id)arg1 withKeyMapping:(id)arg2;
+ (id)predefinedParametersFromPredefinedAttributes:(id)arg1 forFirebaseEventName:(id)arg2;
+ (id)customParametersFromCustomAttributes:(id)arg1;
+ (id)combinedParametersFromPredefinedParameters:(id)arg1 customParameters:(id)arg2;
+ (id)firebaseEventParametersForPredefinedAttributes:(id)arg1 customAttributes:(id)arg2 firebaseEventName:(id)arg3;
+ (id)failedEventName:(id)arg1;
+ (_Bool)shouldUseFailedEventName:(id)arg1 predefinedAttributes:(id)arg2;
+ (id)firebaseEventNameForAnswersEventName:(id)arg1 predefinedAttributes:(id)arg2;
@property(retain, nonatomic) NSArray *firebaseReservedKeys; // @synthesize firebaseReservedKeys=_firebaseReservedKeys;
@property(retain, nonatomic) id firebaseAnalytics; // @synthesize firebaseAnalytics=_firebaseAnalytics;
- (void).cxx_destruct;
- (void)logPredefinedEventToFirebaseWithEventName:(id)arg1 parameters:(id)arg2;
- (void)logPredefinedEvent:(id)arg1;
- (void)logCustomEvent:(id)arg1;
- (void)logEvent:(id)arg1;
- (id)initWithFirebaseAnalyticsClass:(Class)arg1;
- (id)init;

@end

@interface ANSTimer : NSObject
{
    NSString *_timerIdentifier;
    double _timeInterval;
    CDUnknownBlockType _timerBlock;
    NSOperationQueue *_queue;
    NSObject<OS_dispatch_source> *_timerSource;
}

@property(retain, nonatomic) NSObject<OS_dispatch_source> *timerSource; // @synthesize timerSource=_timerSource;
@property(readonly, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType timerBlock; // @synthesize timerBlock=_timerBlock;
@property(nonatomic) double timeInterval; // @synthesize timeInterval=_timeInterval;
@property(readonly, nonatomic) NSString *timerIdentifier; // @synthesize timerIdentifier=_timerIdentifier;
- (void).cxx_destruct;
- (void)scheduleDispatchTimer;
- (void)executeBlock;
@property(readonly, nonatomic) double tolerance;
- (void)scheduleTimer;
- (void)dealloc;
- (id)initWithTimeInterval:(double)arg1 onQueue:(id)arg2 timerIdentifier:(id)arg3 block:(CDUnknownBlockType)arg4;

@end

@interface ANSActivityOperation : NSOperation
{
    ANSActivity *_activity;
}

+ (id)operationByStartingActivityName:(id)arg1 options:(unsigned long long)arg2;
@property(readonly, nonatomic) ANSActivity *activity; // @synthesize activity=_activity;
- (void).cxx_destruct;
- (void)main;
- (void)startActivityWithName:(id)arg1 options:(unsigned long long)arg2;

@end

@interface ANSCompressLogOperation : NSOperation
{
    NSURL *_uncompressedLogURL;
    NSURL *_compressedLogURL;
}

@property(retain, nonatomic) NSURL *compressedLogURL; // @synthesize compressedLogURL=_compressedLogURL;
@property(retain, nonatomic) NSURL *uncompressedLogURL; // @synthesize uncompressedLogURL=_uncompressedLogURL;
- (void).cxx_destruct;
- (id)compressedURLForUncompressedURL:(id)arg1;
- (void)main;
- (id)initWithUncompressedLogURL:(id)arg1 compressedLogURL:(id)arg2;

@end

@interface ANSUploader : NSObject <NSURLSessionDelegate>
{
    NSURLSession *_session;
    id <ANSUploaderDelegate> _delegate;
    double _defaultUploadTimeout;
    double _lowPowerUploadTimeout;
    NSOperationQueue *_operationQueue;
}

@property(readonly, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) double lowPowerUploadTimeout; // @synthesize lowPowerUploadTimeout=_lowPowerUploadTimeout;
@property(nonatomic) double defaultUploadTimeout; // @synthesize defaultUploadTimeout=_defaultUploadTimeout;
@property(nonatomic) __weak id <ANSUploaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)handleTaskDescription:(id)arg1 completedWithError:(id)arg2;
- (void)handleTask:(id)arg1 completedWithError:(id)arg2;
- (void)restartTask:(id)arg1;
- (void)checkForExistingTaskMatchingDescription:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)checkSession:(id)arg1 forTasksMatchingDescription:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (_Bool)taskArray:(id)arg1 hasTaskMatchingDescription:(id)arg2;
- (void)startNewUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3;
- (id)errorUserInfoWithFilePath:(id)arg1 uniqueName:(id)arg2;
- (id)errorWithCode:(long long)arg1 userInfo:(id)arg2;
- (void)startUploadRequest:(id)arg1 filePath:(id)arg2 uniqueName:(id)arg3;
- (id)session;
- (id)createBackgroundSessionConfiguration;
- (Class)urlSessionConfigurationClass;
- (Class)urlSessionClass;
- (void)attemptToReconnectBackgroundSessionWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) _Bool supportsBackgroundRequests;
- (_Bool)shouldUseBackgroundRequests;
@property(readonly, nonatomic) _Bool lowPowerMode;
- (_Bool)supportsPowerStateNotifications;
- (void)powerStageChanged:(id)arg1;
- (id)initWithQueue:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSLogger : NSObject
{
    _Bool _debugMode;
}

+ (id)sharedLogger;
@property(nonatomic) _Bool debugMode; // @synthesize debugMode=_debugMode;
- (void)internalLog:(id)arg1 args:(char *)arg2;
- (void)logWithLabel:(id)arg1 format:(id)arg2;
- (void)log:(id)arg1;

@end

@interface ANSApplication : NSObject
{
    NSDictionary *_infoPlistDict;
}

+ (id)hostApplication;
@property(readonly, nonatomic) NSDictionary *infoPlistDict; // @synthesize infoPlistDict=_infoPlistDict;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIApplication *appSharedInstance;
@property(readonly, nonatomic) _Bool isExtension;
@property(readonly, nonatomic) NSString *extensionPointIdentifier;
@property(readonly, nonatomic) NSDictionary *extensionDefinitionDictionary;
@property(readonly, nonatomic) NSString *shortVersionString;
@property(readonly, nonatomic) NSString *bundleVersion;
@property(readonly, nonatomic) NSString *bundleIdentifier;
- (id)initWithInfoPlistDictionary:(id)arg1;

@end

@interface ANSCrashEvent : ANSEvent
{
    NSDate *_crashTimestamp;
    unsigned long long _crashState;
}

@property(nonatomic) unsigned long long crashState; // @synthesize crashState=_crashState;
@property(retain, nonatomic) NSDate *crashTimestamp; // @synthesize crashTimestamp=_crashTimestamp;
- (void).cxx_destruct;
- (id)payloadStringForCrashState:(unsigned long long)arg1;
- (id)dictionaryRepresentation;
- (id)timestamp;
- (id)name;
- (id)initWithTimestamp:(id)arg1 crashState:(unsigned long long)arg2;

@end

@interface ANSCustomEvent : ANSEvent
{
    NSString *_customEventName;
    NSDictionary *_customAttributes;
}

@property(retain, nonatomic) NSDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(readonly, nonatomic) NSString *customEventName; // @synthesize customEventName=_customEventName;
- (void).cxx_destruct;
- (id)description;
- (id)attributesDictionary;
- (id)dictionaryRepresentation;
- (id)name;
- (id)initWithCustomEventName:(id)arg1 customAttributes:(id)arg2;

@end

@interface ANSActivity : NSObject
{
    id <NSObject> _processInfoToken;
    unsigned long long _options;
    NSString *_reason;
    unsigned long long _backgroundTaskIdentifier;
}

+ (id)beginActivityIfAvailable:(id)arg1 options:(unsigned long long)arg2;
+ (void)performActivity:(id)arg1 options:(unsigned long long)arg2 withBlock:(CDUnknownBlockType)arg3;
+ (id)beginActivity:(id)arg1 withOptions:(unsigned long long)arg2;
+ (id)beginActivity:(id)arg1 withOptions:(unsigned long long)arg2 expirationHandler:(CDUnknownBlockType)arg3;
@property(nonatomic) unsigned long long backgroundTaskIdentifier; // @synthesize backgroundTaskIdentifier=_backgroundTaskIdentifier;
@property(readonly, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(readonly, nonatomic) unsigned long long options; // @synthesize options=_options;
@property(retain, nonatomic) id <NSObject> processInfoToken; // @synthesize processInfoToken=_processInfoToken;
- (void).cxx_destruct;
- (void)endAndInvalidateInternalActivity;
- (void)endAndInvalidateBackgroundTask;
- (_Bool)supportsBackgroundTasks;
- (id)sharedAppInstance;
- (void)end;
- (void)dealloc;
- (id)initWithProcessToken:(id)arg1 options:(unsigned long long)arg2 reason:(id)arg3 backgroundTaskIdentifier:(unsigned long long)arg4;
- (unsigned long long)beginBackgroundTaskWithName:(id)arg1 expirationHandler:(CDUnknownBlockType)arg2;

@end

@interface ANSAnswersController : NSObject <ANSUploaderDelegate>
{
    NSOperationQueue *_eventQueue;
    NSString *_rootEventDirectory;
    ANSMetadata *_metadata;
    ANSCrashMetadata *_previousExecutionMetadata;
    ANSUploader *_uploader;
    ANSNetworkRetryHandler *_networkRetryHandler;
    NSURL *_currentLogURL;
    ANSEventFilter *_eventFilter;
    ANSSettings *_settings;
    ANSTimer *_flushTimer;
    ANSFirebaseAnalyticsBridge *_firebaseAnalyticsBridge;
}

+ (id)rootDirectory;
@property(readonly, nonatomic) ANSFirebaseAnalyticsBridge *firebaseAnalyticsBridge; // @synthesize firebaseAnalyticsBridge=_firebaseAnalyticsBridge;
@property(readonly, nonatomic) ANSTimer *flushTimer; // @synthesize flushTimer=_flushTimer;
@property(readonly, nonatomic) ANSSettings *settings; // @synthesize settings=_settings;
@property(readonly, nonatomic) ANSEventFilter *eventFilter; // @synthesize eventFilter=_eventFilter;
@property(readonly, nonatomic) NSURL *currentLogURL; // @synthesize currentLogURL=_currentLogURL;
@property(readonly, nonatomic) ANSNetworkRetryHandler *networkRetryHandler; // @synthesize networkRetryHandler=_networkRetryHandler;
@property(readonly, nonatomic) ANSUploader *uploader; // @synthesize uploader=_uploader;
@property(readonly, nonatomic) ANSCrashMetadata *previousExecutionMetadata; // @synthesize previousExecutionMetadata=_previousExecutionMetadata;
@property(readonly, nonatomic) ANSMetadata *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) NSString *rootEventDirectory; // @synthesize rootEventDirectory=_rootEventDirectory;
@property(readonly, nonatomic) NSOperationQueue *eventQueue; // @synthesize eventQueue=_eventQueue;
- (void).cxx_destruct;
- (void)uploader:(id)arg1 completedRequest:(id)arg2 withResponse:(id)arg3 uniqueName:(id)arg4 error:(id)arg5 completionHandler:(CDUnknownBlockType)arg6;
- (void)uploader:(id)arg1 session:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)uploader:(id)arg1 didFinishUploadWithUniqueName:(id)arg2 error:(id)arg3;
- (id)uploader:(id)arg1 filePathForUniqueName:(id)arg2;
- (id)multipartMimeURLWithBoundary:(id)arg1;
- (id)boundaryFromURL:(id)arg1;
- (void)uploadMultipartFiles:(id)arg1;
- (void)uploadAllMultipartFiles;
- (void)cleanupAndProcessExistingFiles;
- (id)uploadOperationForFileAtURL:(id)arg1 withBoundary:(id)arg2;
- (id)operationsForCompressedLog:(id)arg1;
- (id)operationsForUncompressedLog:(id)arg1;
- (void)rotateAndSubmitCurrentLog;
- (_Bool)shouldSubmitLogAtURL:(id)arg1;
- (void)logEventToFirebase:(id)arg1;
- (void)enqueueEvent:(id)arg1;
- (void)logCrashEvent:(id)arg1;
- (_Bool)shouldLogEvent;
- (void)logEvent:(id)arg1;
- (id)replacePreviousExecutionMetadataWithCurrentMetadata:(id)arg1 inRootDirectory:(id)arg2;
- (void)removeAllLogs;
- (void)flushTimerFired;
- (void)setupFlushTimer;
- (void)initializeSettingsIfNeededWithFabricSettings:(id)arg1;
- (void)fabricSettingsDidBecomeAvailable:(id)arg1;
- (id)generateNewLogPath;
- (void)applicationLifecycleEvent:(id)arg1;
- (void)registerForApplicationLifecycleEvents;
- (id)uploaderWithQueue:(id)arg1 delegate:(id)arg2;
- (id)sharedFabricSDK;
- (id)crashMetadataPathForRootDirectory:(id)arg1;
- (id)eventDirectoryForRootDirectory:(id)arg1;
- (id)initWithBetaToken:(id)arg1 rootDirectory:(id)arg2;
- (id)initWithBetaToken:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ANSUploadOperation : NSOperation
{
    ANSUploader *_uploader;
    NSURL *_answersURL;
    NSString *_apiKey;
    NSURL *_multipartURL;
    NSString *_multipartMimeBoundary;
}

@property(readonly, nonatomic) NSString *multipartMimeBoundary; // @synthesize multipartMimeBoundary=_multipartMimeBoundary;
@property(readonly, nonatomic) NSURL *multipartURL; // @synthesize multipartURL=_multipartURL;
@property(readonly, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(readonly, nonatomic) NSURL *answersURL; // @synthesize answersURL=_answersURL;
@property(readonly, nonatomic) ANSUploader *uploader; // @synthesize uploader=_uploader;
- (void).cxx_destruct;
- (id)currentTimestampString;
- (void)main;
- (id)initWithUploader:(id)arg1 answersURL:(id)arg2 apiKey:(id)arg3 multipartURL:(id)arg4 multipartMimeBoundary:(id)arg5;

@end

@interface ANSEventFilter : NSObject
{
}

+ (int)javaHashCodeForString:(id)arg1;
- (_Bool)shouldDiscardEventWithInstallationID:(id)arg1 forSamplingFactor:(long long)arg2;
- (_Bool)samplingEnabledForEventType:(id)arg1;
- (_Bool)shouldDiscardEvent:(id)arg1 betaToken:(id)arg2 installationID:(id)arg3 withFactor:(long long)arg4;

@end

@interface CLSDataCollectionArbiter : NSObject
{
}

+ (long long)stickySetting;
+ (void)setCrashlyticsCollectionEnabled:(_Bool)arg1;
+ (_Bool)isCrashlyticsCollectionEnabled;
+ (_Bool)isLegacyPlistCrashlyticsCollectionEnabled;

@end

@interface CLSFIRApp : NSObject
{
}

+ (_Bool)isDataCollectionDefaultEnabled;

@end

@interface AdMobKit : NSObject <FABKit>
{
}

+ (id)kitDisplayVersion;
+ (id)bundleIdentifier;
+ (id)sharedInstance;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FABSettingsOnboardingManager : NSObject <FABDownloadAndSaveSettingsOperationDelegate, FABOnboardingOperationDelegate>
{
    _Bool _hasAttemptedAppConfigure;
    FABApplicationIdentiferModel *_appIdentifierModel;
    FABSettings *_settingsModel;
    FABOnboardingOperation *_onboardingOperation;
    NSFileManager *_fileManager;
    NSDictionary *_configuration;
    NSDictionary *_defaultConfiguration;
    NSString *_APIKey;
    NSDictionary *_kitVersionsByKitBundleIdentifier;
    FABNetworkClient *_networkClient;
}

+ (id)settingsDirectoryPath;
@property(readonly, nonatomic) FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(copy, nonatomic) NSDictionary *kitVersionsByKitBundleIdentifier; // @synthesize kitVersionsByKitBundleIdentifier=_kitVersionsByKitBundleIdentifier;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(retain, nonatomic) NSDictionary *defaultConfiguration; // @synthesize defaultConfiguration=_defaultConfiguration;
@property(retain, nonatomic) NSDictionary *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) _Bool hasAttemptedAppConfigure; // @synthesize hasAttemptedAppConfigure=_hasAttemptedAppConfigure;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) FABOnboardingOperation *onboardingOperation; // @synthesize onboardingOperation=_onboardingOperation;
@property(retain, nonatomic) FABSettings *settingsModel; // @synthesize settingsModel=_settingsModel;
@property(retain, nonatomic) FABApplicationIdentiferModel *appIdentifierModel; // @synthesize appIdentifierModel=_appIdentifierModel;
- (void).cxx_destruct;
- (void)postSettingsDownloadCompletedNotification;
- (id)settingsPath;
- (id)settingsURL;
- (void)operation:(id)arg1 didDownloadAndSaveSettingsWithError:(id)arg2;
- (void)onboardingOperation:(id)arg1 didCompleteAppUpdateWithError:(id)arg2;
- (void)onboardingOperation:(id)arg1 didCompleteAppCreationWithError:(id)arg2;
- (id)valueForConfigurationKey:(id)arg1;
- (void)finishNetworkingSession;
- (id)advertisingToken;
- (void)beginOnboarding:(_Bool)arg1 endpointString:(id)arg2;
- (void)beginSettingsDownload;
- (void)beginSettingsAndOnboardingOperationsWithAPIKey:(id)arg1 kitVersionsByKitBundleIdentifier:(id)arg2;
- (id)initWithApplicationIdentifierModel:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FABIcon : NSObject
{
    _Bool _prerendered;
    NSData *_data;
    NSString *_dataHash;
    struct CGSize _size;
}

+ (_Bool)isWithinMaxSurfaceAreaWithImage:(id)arg1;
@property(nonatomic) _Bool prerendered; // @synthesize prerendered=_prerendered;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *dataHash; // @synthesize dataHash=_dataHash;
@property(copy, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (_Bool)largerThanSize:(struct CGSize)arg1;
@property(readonly, nonatomic) _Bool isWithinMaxSurfaceArea;
@property(readonly, nonatomic) double surfaceArea;
- (id)initWithPNGImageAtPath:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2;
- (id)initWithData:(id)arg1 size:(struct CGSize)arg2 prerendered:(_Bool)arg3;
- (id)initWithData:(id)arg1 dataHash:(id)arg2 size:(struct CGSize)arg3 prerendered:(_Bool)arg4;

@end

@interface Fabric : NSObject
{
    _Bool _debug;
    _Bool _isFirstInstall;
    NSString *_APIKey;
    NSString *_installID;
    NSString *_executionIdentifier;
    NSString *_advertisingToken;
    NSArray *_kitClasses;
    NSDictionary *_fabricConfig;
    FABSettingsOnboardingManager *_settingsAndOnboardingManager;
    FABApplicationIdentiferModel *_applicationIdentifierModel;
    unsigned long long _installationMode;
    NSString *_firebaseGoogleAppId;
}

+ (void)autoInitialize:(id)arg1;
+ (void)load;
+ (id)configurationDictionaryForKitClass:(Class)arg1;
+ (_Bool)isCrashlyticsCollectionEnabled;
+ (void)setCrashlyticsCollectionEnabled:(_Bool)arg1;
+ (void)initializeKit:(Class)arg1;
+ (void)disableUninitializedKitMessagingForKit:(Class)arg1;
+ (id)kitClassesByAddingAdMobIfFound:(id)arg1;
+ (id)kitClassesByEnsuringAppseeIsFirst:(id)arg1;
+ (id)kitClassesByAddingAnswersIfFound:(id)arg1;
+ (id)kitClassesByAddingDigitsIfFound:(id)arg1;
+ (void)validateFABKitConformance:(id)arg1;
+ (id)convertToKitClassesIfNeeded:(id)arg1;
+ (id)with:(id)arg1;
+ (id)sharedSDK;
@property(copy, nonatomic) NSString *firebaseGoogleAppId; // @synthesize firebaseGoogleAppId=_firebaseGoogleAppId;
@property(nonatomic) unsigned long long installationMode; // @synthesize installationMode=_installationMode;
@property(readonly, nonatomic) FABApplicationIdentiferModel *applicationIdentifierModel; // @synthesize applicationIdentifierModel=_applicationIdentifierModel;
@property(retain, nonatomic) FABSettingsOnboardingManager *settingsAndOnboardingManager; // @synthesize settingsAndOnboardingManager=_settingsAndOnboardingManager;
@property(copy, nonatomic) NSDictionary *fabricConfig; // @synthesize fabricConfig=_fabricConfig;
@property(copy, nonatomic) NSArray *kitClasses; // @synthesize kitClasses=_kitClasses;
@property(copy, nonatomic) NSString *advertisingToken; // @synthesize advertisingToken=_advertisingToken;
@property(readonly, copy, nonatomic) NSString *executionIdentifier; // @synthesize executionIdentifier=_executionIdentifier;
@property(readonly, nonatomic) _Bool isFirstInstall; // @synthesize isFirstInstall=_isFirstInstall;
@property(readonly, copy, nonatomic) NSString *installID; // @synthesize installID=_installID;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
- (void).cxx_destruct;
- (void)regenerateInstallIDIfNeededWithManager:(Class)arg1;
- (_Bool)shouldAutoInitialize:(id)arg1;
- (_Bool)firebaseMode;
@property(readonly, nonatomic) NSString *instanceIdentifier;
@property(readonly, nonatomic) NSDictionary *settings;
- (id)configurationDictionaryForKit:(id)arg1;
- (id)validFabricConfigFromInfoPlist:(id)arg1;
- (_Bool)setFirebaseGoogleAppIdFromUserInfo:(id)arg1;
- (id)generateInstallationUUID;
- (id)readInstallationUUID;
- (id)kitVersionsByKitBundleIdentifier;
- (void)onboardAppAndDownloadSettings;
- (id)init;

@end

@interface FABNetworkOperation : FABAsyncOperation
{
    NSString *_APIKey;
}

@property(readonly, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (id)localeIdentifier;
- (id)userAgentString;
- (id)mutableRequestWithDefaultHTTPHeadersForURL:(id)arg1 timeout:(double)arg2;
- (id)mutableRequestWithDefaultHTTPHeaderFieldsAndTimeoutForURL:(id)arg1;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABURLBuilder : NSObject
{
    NSMutableString *_URLString;
    unsigned long long _queryParams;
}

+ (id)URLWithBase:(id)arg1;
@property(nonatomic) unsigned long long queryParams; // @synthesize queryParams=_queryParams;
@property(retain, nonatomic) NSMutableString *URLString; // @synthesize URLString=_URLString;
- (void).cxx_destruct;
- (id)URL;
- (void)appendValue:(id)arg1 forQueryParam:(id)arg2;
- (void)escapeAndAppendComponent:(id)arg1;
- (void)appendComponent:(id)arg1;
- (id)escapeString:(id)arg1;
- (id)init;

@end

@interface FABCertificatePinner : NSObject
{
    NSArray *_certificates;
}

+ (struct __SecCertificate *)createCertificationWithData:(const void *)arg1 length:(unsigned long long)arg2;
@property(readonly, nonatomic) NSArray *certificates; // @synthesize certificates=_certificates;
- (void).cxx_destruct;
- (_Bool)handleChallenge:(id)arg1 fromURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (short)evaluateTrust:(struct __SecTrust *)arg1 result:(unsigned int *)arg2;
- (id)initWithCertificates:(id)arg1;

@end

@interface FABAppIconUtility : NSObject
{
    FABIcon *_applicationIcon;
}

+ (id)iconNameSetWithAlternateNamesAddedToIconNameSet:(id)arg1;
+ (void)addIconNameWithModifier:(id)arg1 forIconWithName:(id)arg2 toSetOfIconNames:(id)arg3;
+ (_Bool)isIconImageFileNameExtensionPresentInName:(id)arg1;
+ (struct CGSize)sizeForImage:(id)arg1;
@property(retain, nonatomic) FABIcon *applicationIcon; // @synthesize applicationIcon=_applicationIcon;
- (void).cxx_destruct;
- (id)fetchApplicationIcon;
- (id)iconByFallingBackOnDefaultIconNamingConvention;
- (id)iconFromCFBundleIconFile;
- (id)iconFromCFBundleIconFiles;
- (id)iconFromIOS7StyleCFBundleIconsInFieldWithKey:(id)arg1;
- (id)largestIconInIconNames:(id)arg1 prerendered:(_Bool)arg2;
- (id)iconRootPath;
@property(readonly, nonatomic) NSDictionary *appInfoDictionary;

@end

@interface FABMultipartMimeStreamEncoder : NSObject <NSStreamDelegate>
{
    unsigned long long _length;
    NSString *_boundary;
    NSOutputStream *_outputStream;
}

+ (id)generateBoundary;
+ (id)encoderWithStream:(id)arg1 andBoundary:(id)arg2;
+ (id)contentTypeHTTPHeaderValueWithBoundary:(id)arg1;
+ (void)populateRequest:(id)arg1 withDataFromEncoder:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long length; // @synthesize length=_length;
- (void).cxx_destruct;
- (void)writeData:(id)arg1;
- (_Bool)writeBytes:(const void *)arg1 ofLength:(unsigned long long)arg2;
- (void)addFile:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 fieldName:(id)arg4;
- (void)addValue:(id)arg1 fieldName:(id)arg2;
- (void)addFileData:(id)arg1 fileName:(id)arg2 mimeType:(id)arg3 fieldName:(id)arg4;
@property(readonly, copy, nonatomic) NSData *footerData;
@property(readonly, copy, nonatomic) NSData *headerData;
- (void)endEncoding;
- (void)beginEncoding;
@property(readonly, copy, nonatomic) NSString *contentLengthHTTPHeaderValue;
@property(readonly, copy, nonatomic) NSString *contentTypeHTTPHeaderValue;
- (void)encode:(CDUnknownBlockType)arg1;
- (id)initWithStream:(id)arg1 andBoundary:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FABSettings : NSObject
{
    _Bool _reportingEnabled;
    _Bool _errorReportingEnabled;
    NSNumber *_logBufferSize;
    NSNumber *_maxErrors;
    NSNumber *_maxCustomKeys;
    NSDictionary *_settingsDictionary;
    NSString *_settingsPath;
    NSFileManager *_fileManager;
}

@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) NSString *settingsPath; // @synthesize settingsPath=_settingsPath;
@property(retain, nonatomic) NSDictionary *settingsDictionary; // @synthesize settingsDictionary=_settingsDictionary;
@property(readonly, nonatomic) NSNumber *maxCustomKeys; // @synthesize maxCustomKeys=_maxCustomKeys;
@property(readonly, nonatomic) NSNumber *maxErrors; // @synthesize maxErrors=_maxErrors;
@property(readonly, nonatomic) NSNumber *logBufferSize; // @synthesize logBufferSize=_logBufferSize;
@property(readonly, nonatomic) _Bool errorReportingEnabled; // @synthesize errorReportingEnabled=_errorReportingEnabled;
@property(readonly, nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (id)settingsURLForEndpoint:(id)arg1 appInstanceIdentifer:(id)arg2;
- (void)clearSettingsDictionary;
- (id)appStatus;
- (id)appSettings;
- (id)appSource;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appPlatform;
- (id)appBundleIdentifier;
@property(readonly, nonatomic) _Bool appNeedsOnboarding;
@property(readonly, nonatomic) _Bool appUpdateRequired;
- (id)initWithSettingsPath:(id)arg1 fileManager:(id)arg2;

@end

@interface FABApplicationIdentiferModel : NSObject
{
    NSDictionary *_architectureUUIDMap;
    NSString *_installID;
    NSString *_bundleIdentifier;
    NSString *_instanceIdentifier;
    CDStruct_e24ffa00 _builtSDK;
    CDStruct_e24ffa00 _minimumSDK;
}

@property(readonly, nonatomic) CDStruct_e24ffa00 minimumSDK; // @synthesize minimumSDK=_minimumSDK;
@property(readonly, nonatomic) CDStruct_e24ffa00 builtSDK; // @synthesize builtSDK=_builtSDK;
@property(copy, nonatomic) NSString *instanceIdentifier; // @synthesize instanceIdentifier=_instanceIdentifier;
@property(readonly, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, nonatomic) NSString *installID; // @synthesize installID=_installID;
@property(copy, nonatomic) NSDictionary *architectureUUIDMap; // @synthesize architectureUUIDMap=_architectureUUIDMap;
- (void).cxx_destruct;
- (_Bool)computeInstanceIdentifier;
- (_Bool)computeExecutableInfo;
@property(readonly, nonatomic) FABIcon *icon;
@property(readonly, nonatomic) NSString *minimumSDKString;
@property(readonly, nonatomic) NSString *builtSDKString;
- (id)initWithInstallID:(id)arg1;

@end

@interface FABDownloadAndSaveSettingsOperation : FABNetworkOperation
{
    id <FABDownloadAndSaveSettingsOperationDelegate> _delegate;
    NSError *_error;
    NSURL *_settingsURL;
    NSFileManager *_fileManager;
    NSString *_settingsDirectoryPath;
    NSString *_settingsFilePath;
    NSString *_installIdentifier;
    FABNetworkClient *_networkClient;
}

@property(readonly, nonatomic) __weak FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) NSString *installIdentifier; // @synthesize installIdentifier=_installIdentifier;
@property(readonly, nonatomic) NSString *settingsFilePath; // @synthesize settingsFilePath=_settingsFilePath;
@property(readonly, nonatomic) NSString *settingsDirectoryPath; // @synthesize settingsDirectoryPath=_settingsDirectoryPath;
@property(readonly, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) NSURL *settingsURL; // @synthesize settingsURL=_settingsURL;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) id <FABDownloadAndSaveSettingsOperationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)main;
- (id)mutableRequestWithDefaultHTTPHeaderFieldsAndTimeoutForURL:(id)arg1;
- (id)initWithAPIKey:(id)arg1 delegate:(id)arg2 settingsURL:(id)arg3 settingsDirectoryPath:(id)arg4 settingsFilePath:(id)arg5 fileManager:(id)arg6 installIdentifier:(id)arg7 networkClient:(id)arg8;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABNetworkResponseHandler : NSObject
{
}

+ (void)handleCompletedResponse:(id)arg1 forOriginalRequest:(id)arg2 error:(id)arg3 block:(CDUnknownBlockType)arg4;
+ (void)clientResponseType:(id)arg1 handler:(CDUnknownBlockType)arg2;
+ (id)errorForResponse:(id)arg1 ofType:(long long)arg2 status:(long long)arg3;
+ (id)errorForCode:(long long)arg1 userInfo:(id)arg2;
+ (_Bool)retryableURLError:(id)arg1;
+ (long long)cancelReasonFromURLError:(id)arg1;
+ (_Bool)contentTypeForResponse:(id)arg1 matchesRequest:(id)arg2;
+ (id)requestIdForResponse:(id)arg1;
+ (double)retryValueForResponse:(id)arg1;
+ (id)headerForResponse:(id)arg1 withKey:(id)arg2;

@end

@interface FABOnboardingOperation : FABNetworkOperation
{
    _Bool _shouldCreate;
    NSError *_error;
    FABApplicationIdentiferModel *_appIdentifierModel;
    NSString *_appEndpoint;
    id <FABOnboardingOperationDelegate> _delegate;
    FABNetworkClient *_networkClient;
    NSDictionary *_kitVersionsByKitBundleIdentifier;
}

@property(readonly, copy, nonatomic) NSDictionary *kitVersionsByKitBundleIdentifier; // @synthesize kitVersionsByKitBundleIdentifier=_kitVersionsByKitBundleIdentifier;
@property(readonly, nonatomic) __weak FABNetworkClient *networkClient; // @synthesize networkClient=_networkClient;
@property(readonly, nonatomic) id <FABOnboardingOperationDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *appEndpoint; // @synthesize appEndpoint=_appEndpoint;
@property(readonly, nonatomic) FABApplicationIdentiferModel *appIdentifierModel; // @synthesize appIdentifierModel=_appIdentifierModel;
@property(nonatomic) _Bool shouldCreate; // @synthesize shouldCreate=_shouldCreate;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
- (void).cxx_destruct;
- (id)onboardingRequestForAppCreate:(_Bool)arg1;
- (id)appUpdateURL;
- (id)appCreateURL;
- (id)errorForCode:(unsigned long long)arg1 userInfo:(id)arg2;
- (id)appInstallSource;
- (id)appDisplayVersion;
- (id)appBuildVersion;
- (id)appName;
- (id)appPlatform;
- (id)appBundleIdentifier;
- (void)beginAppConfigure;
- (void)main;
- (id)initWithDelegate:(id)arg1 shouldCreate:(_Bool)arg2 APIKey:(id)arg3 kitVersionsByKitBundleIdentifier:(id)arg4 appIdentifierModel:(id)arg5 endpointString:(id)arg6 networkClient:(id)arg7;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FABNetworkClient : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate>
{
    FABCertificatePinner *_certPinner;
    NSURLSession *_session;
}

@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) FABCertificatePinner *certPinner; // @synthesize certPinner=_certPinner;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)invalidateAndCancel;
- (void)startDownloadTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDownloadTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startDownloadTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 tries:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)startDataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startDataTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)startDataTaskWithRequest:(id)arg1 retryLimit:(unsigned long long)arg2 tries:(unsigned long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)runAfterRetryValueFromResponse:(id)arg1 attempts:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)runAfterRetryValueFromResponse:(id)arg1 attempts:(unsigned long long)arg2 onQueue:(id)arg3 block:(CDUnknownBlockType)arg4;
- (double)computeDelayForResponse:(id)arg1 withRetryCount:(unsigned long long)arg2;
- (double)generateRandomJitter;
- (double)randomDoubleWithMin:(double)arg1 max:(double)arg2;
- (void)dealloc;
- (id)initWithSessionConfiguration:(id)arg1 queue:(id)arg2 pinnedCertificates:(id)arg3;
- (id)initWithQueue:(id)arg1 pinnedCertificates:(id)arg2;
- (id)initWithQueue:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSdSYM : NSObject
{
    CLSMachOBinary *_binary;
    NSBundle *_bundle;
}

+ (id)dSYMWithURL:(id)arg1;
@property(readonly, nonatomic) NSBundle *bundle; // @synthesize bundle=_bundle;
@property(readonly, nonatomic) CLSMachOBinary *binary; // @synthesize binary=_binary;
- (void).cxx_destruct;
- (void)enumerateUUIDs:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *shortBundleVersion;
@property(readonly, copy, nonatomic) NSString *bundleVersion;
@property(readonly, copy, nonatomic) NSString *executablePath;
@property(readonly, copy, nonatomic) NSURL *executableURL;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier;
- (id)initWithURL:(id)arg1;

@end

@interface CLSCodeMapping : NSObject
{
    int _source;
    NSURL *_URL;
    NSString *_sourceName;
}

+ (id)mappingWithURL:(id)arg1;
@property(readonly, copy, nonatomic) NSString *sourceName; // @synthesize sourceName=_sourceName;
@property(nonatomic) int source; // @synthesize source=_source;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1;

@end

@interface CLSMachOBinary : NSObject
{
    NSURL *_url;
    struct CLSMachOFile _file;
    NSMutableArray *_slices;
    NSString *_instanceIdentifier;
}

+ (id)hashNSString:(id)arg1;
+ (id)MachOBinaryWithPath:(id)arg1;
@property(readonly, nonatomic) NSArray *slices; // @synthesize slices=_slices;
- (void).cxx_destruct;
- (id)sliceForArchitecture:(id)arg1;
- (void)enumerateUUIDs:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSString *instanceIdentifier;
@property(readonly, copy, nonatomic) NSString *path;
@property(readonly, copy, nonatomic) NSURL *URL;
- (void)dealloc;
- (id)initWithURL:(id)arg1;

@end

@interface CLSMachOSlice : NSObject
{
    struct CLSMachOSlice _slice;
    NSString *_uuidString;
    NSArray *_linkedDylibs;
    CDStruct_e24ffa00 _minimumOSVersion;
    CDStruct_e24ffa00 _linkedSDKVersion;
}

+ (id)runningSlice;
@property(readonly, nonatomic) CDStruct_e24ffa00 linkedSDKVersion; // @synthesize linkedSDKVersion=_linkedSDKVersion;
@property(readonly, nonatomic) CDStruct_e24ffa00 minimumOSVersion; // @synthesize minimumOSVersion=_minimumOSVersion;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *linkedDylibs;
@property(readonly, copy, nonatomic) NSString *uuid;
@property(readonly, copy, nonatomic) NSString *architectureName;
- (id)initWithSlice:(struct CLSMachOSlice *)arg1;

@end

@interface CLSURLSessionDownloadTask : CLSURLSessionDataTask <NSStreamDelegate>
{
    CDUnknownBlockType _downloadCompletionHandler;
    NSOutputStream *_outputStream;
    NSURL *_targetURL;
}

@property(copy, nonatomic) CDUnknownBlockType downloadCompletionHandler; // @synthesize downloadCompletionHandler=_downloadCompletionHandler;
- (void).cxx_destruct;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)completeForError;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)writeDataToStream:(id)arg1;
- (void)complete;
- (void)cleanup;
- (id)temporaryFileURL;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSessionTask : NSObject
{
    id <CLSURLSessionTaskDelegate> _delegate;
    NSURLRequest *_originalRequest;
    NSURLRequest *_currentRequest;
    NSURLResponse *_response;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _invokesDelegate;
}

+ (id)task;
@property(nonatomic) id <CLSURLSessionTaskDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool invokesDelegate; // @synthesize invokesDelegate=_invokesDelegate;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSError *error; // @synthesize error=_error;
@property(copy, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(copy, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
@property(copy, nonatomic) NSURLRequest *currentRequest; // @synthesize currentRequest=_currentRequest;
- (void).cxx_destruct;
- (void)cleanup;
- (void)resume;
- (void)cancel;
- (void)start;
- (id)init;

@end

@interface CLSURLSessionDataTask : CLSURLSessionTask <NSURLConnectionDelegate>
{
    CDUnknownBlockType _completionHandler;
    NSURLConnection *_connection;
    NSMutableData *_data;
    NSString *_taskDescription;
}

@property(copy, nonatomic) NSString *taskDescription; // @synthesize taskDescription=_taskDescription;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)cancel;
- (void)complete;
- (void)resume;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSession : NSObject <CLSURLSessionDownloadDelegate>
{
    id <NSURLSessionDelegate> _delegate;
    NSOperationQueue *_delegateQueue;
    NSURLSessionConfiguration *_configuration;
    NSMutableSet *_taskSet;
    NSObject<OS_dispatch_queue> *_queue;
    NSString *_sessionDescription;
}

+ (id)newDefaultDelegateQueue;
+ (id)sessionWithConfiguration:(id)arg1 delegate:(id)arg2 delegateQueue:(id)arg3;
+ (id)sessionWithConfiguration:(id)arg1;
+ (_Bool)NSURLSessionShouldBeUsed;
@property(copy, nonatomic) NSString *sessionDescription; // @synthesize sessionDescription=_sessionDescription;
@property(copy, nonatomic) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) NSOperationQueue *delegateQueue; // @synthesize delegateQueue=_delegateQueue;
@property(retain, nonatomic) id <NSURLSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)downloadTask:(id)arg1 didFinishDownloadingToURL:(id)arg2;
- (void)task:(id)arg1 didReceiveData:(id)arg2;
- (void)task:(id)arg1 didReceiveResponse:(id)arg2;
- (void)task:(id)arg1 didCompleteWithError:(id)arg2;
- (id)task:(id)arg1 willPerformHTTPRedirection:(id)arg2 newRequest:(id)arg3;
- (id)downloadTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)dataTaskWithRequest:(id)arg1;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)downloadTaskWithURL:(id)arg1;
- (id)downloadTaskWithRequest:(id)arg1;
- (id)uploadTaskWithRequest:(id)arg1 fromFile:(id)arg2;
- (_Bool)shouldInvokeDelegateSelector:(SEL)arg1 forTask:(id)arg2;
- (void)configureTask:(id)arg1 withRequest:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)removeTaskFromSet:(id)arg1;
- (void)getTasksWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishTasksAndInvalidate;
- (void)invalidateAndCancel;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLSURLSessionConfiguration : NSObject <NSCopying>
{
    NSDictionary *_additionalHeaders;
    NSURLCache *_URLCache;
    unsigned long long _cookiePolicy;
    _Bool _allowsCellularAccess;
    double _timeoutIntervalForRequest;
    double _timeoutIntervalForResource;
}

+ (id)backgroundSessionConfigurationWithIdentifier:(id)arg1;
+ (id)backgroundSessionConfiguration:(id)arg1;
+ (id)ephemeralSessionConfiguration;
+ (id)defaultSessionConfiguration;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) double timeoutIntervalForResource; // @synthesize timeoutIntervalForResource=_timeoutIntervalForResource;
@property(nonatomic) double timeoutIntervalForRequest; // @synthesize timeoutIntervalForRequest=_timeoutIntervalForRequest;
@property(nonatomic) unsigned long long HTTPCookieAcceptPolicy; // @synthesize HTTPCookieAcceptPolicy=_cookiePolicy;
@property(copy, nonatomic) NSDictionary *HTTPAdditionalHeaders; // @synthesize HTTPAdditionalHeaders=_additionalHeaders;
@property(retain, nonatomic) NSURLCache *URLCache; // @synthesize URLCache=_URLCache;
- (void).cxx_destruct;
@property(nonatomic) _Bool sessionSendsLaunchEvents;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface CLSURLSessionUploadTask : CLSURLSessionDataTask
{
}

@end

@interface CLSUserDefaults : NSObject
{
    _Bool _synchronizeWroteToDisk;
    NSURL *_directoryURL;
    NSURL *_fileURL;
    NSDictionary *_persistedDataDictionary;
    NSMutableDictionary *_dataDictionary;
    NSObject<OS_dispatch_queue> *_serialDictionaryQueue;
    NSObject<OS_dispatch_queue> *_synchronizationQueue;
}

+ (id)standardUserDefaults;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *synchronizationQueue; // @synthesize synchronizationQueue=_synchronizationQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialDictionaryQueue; // @synthesize serialDictionaryQueue=_serialDictionaryQueue;
@property(readonly, copy, nonatomic) NSMutableDictionary *dataDictionary; // @synthesize dataDictionary=_dataDictionary;
@property(readonly, copy, nonatomic) NSDictionary *persistedDataDictionary; // @synthesize persistedDataDictionary=_persistedDataDictionary;
@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, copy, nonatomic) NSURL *directoryURL; // @synthesize directoryURL=_directoryURL;
@property(nonatomic) _Bool synchronizeWroteToDisk; // @synthesize synchronizeWroteToDisk=_synchronizeWroteToDisk;
- (void).cxx_destruct;
- (id)objectForKeyByMigratingFromNSUserDefaults:(id)arg1;
- (void)migrateFromNSUserDefaults:(id)arg1;
- (id)loadDefaults;
- (void)synchronize;
- (id)dictionaryRepresentation;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (long long)integerForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)getEscapedAppBundleIdentifier;
- (id)generateDirectoryURLForBaseURL:(id)arg1 hostAppBundleIdentifier:(id)arg2;
- (id)generateDirectoryURL;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FABAsyncOperation : NSOperation
{
    _Bool _internalExecuting;
    _Bool _internalFinished;
    CDUnknownBlockType _asyncCompletion;
    NSRecursiveLock *_lock;
}

@property(retain, nonatomic) NSRecursiveLock *lock; // @synthesize lock=_lock;
@property(copy, nonatomic) CDUnknownBlockType asyncCompletion; // @synthesize asyncCompletion=_asyncCompletion;
- (void).cxx_destruct;
- (void)finishWithError:(id)arg1;
- (void)markDone;
- (void)markStarted;
- (void)unlockedMarkComplete;
- (void)unlockedMarkStarted;
- (void)unlockedMarkFinished;
- (_Bool)checkForCancellation;
- (void)lock:(CDUnknownBlockType)arg1;
- (void)changeValueForKey:(id)arg1 inBlock:(CDUnknownBlockType)arg2;
- (void)start;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (_Bool)isConcurrent;
- (id)init;

@end

@interface FABCompoundOperation : FABAsyncOperation
{
    NSArray *_operations;
    NSOperationQueue *_compoundQueue;
    unsigned long long _completedOperations;
    NSMutableArray *_errors;
    NSObject<OS_dispatch_queue> *_countingQueue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *countingQueue; // @synthesize countingQueue=_countingQueue;
@property(retain, nonatomic) NSMutableArray *errors; // @synthesize errors=_errors;
@property(nonatomic) unsigned long long completedOperations; // @synthesize completedOperations=_completedOperations;
@property(retain, nonatomic) NSOperationQueue *compoundQueue; // @synthesize compoundQueue=_compoundQueue;
@property(copy, nonatomic) NSArray *operations; // @synthesize operations=_operations;
- (void).cxx_destruct;
- (void)attemptCompoundCompletion;
- (void)updateCompletionCountsWithError:(id)arg1;
- (void)injectCompoundSyncCompletionInOperation:(id)arg1;
- (void)injectCompoundAsyncCompletionInOperation:(id)arg1;
- (void)cancel;
- (void)main;
- (id)init;

@end

@interface FIRAIdentifiers : NSObject
{
}

+ (id)sharedInstance;
@property(readonly, copy, nonatomic) NSString *libraryVersion;
@property(readonly, copy, nonatomic) NSString *adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID;
@property(readonly, copy, nonatomic) NSString *googleAppID;

@end

@interface FIRASearchAdReporter : NSObject
{
    FIRAAlarm *_searchAdReporterAlarm;
    FIRAPersistedConfig *_persistedConfig;
    _Bool _searchAdReporterEnabled;
}

@property(nonatomic, getter=isSearchAdReporterEnabled) _Bool searchAdReporterEnabled; // @synthesize searchAdReporterEnabled=_searchAdReporterEnabled;
- (void).cxx_destruct;
- (void)lookUpAdConversionDetails;
- (void)logCampaignEventWithSearchAdCampaign:(_Bool)arg1 campaign:(id)arg2 term:(id)arg3;
- (id)adClientInstance;
- (void)cancelScheduling;
- (void)scheduleSearchAdReport;
- (void)maybeLogIAdCampaignEvent;
- (void)dealloc;
- (void)start;
- (id)initWithWorkerQueue:(id)arg1 persistedConfig:(id)arg2;

@end

@interface FIRAZeroingWeakContainer : NSObject
{
    id _object;
}

@property(nonatomic) __weak id object; // @synthesize object=_object;
- (void).cxx_destruct;

@end

@interface FIRAAppDelegateObserver : NSObject
{
    _Bool _isObserving;
}

+ (id)sharedInstance;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)observeUIApplication;

@end

@interface FIRAAppDelegateProxy : NSProxy
{
}

+ (void)notifyInterceptorsWithMethodSelector:(SEL)arg1 callback:(CDUnknownBlockType)arg2;
+ (_Bool)isAppDelegateProxyEnabled;
+ (CDUnknownFunctionPointerType)implementationOfMethodSelector:(SEL)arg1 fromClass:(Class)arg2;
+ (void)addInstanceMethodWithDestinationSelector:(SEL)arg1 withImplementationFromSourceSelector:(SEL)arg2 fromClass:(Class)arg3 toClass:(Class)arg4;
+ (void)addInstanceMethodWithSelector:(SEL)arg1 fromClass:(Class)arg2 toClass:(Class)arg3;
+ (void)createSubclassWithObject:(id)arg1;
+ (void)proxyOriginalDelegate:(id)arg1;
+ (id)interceptors;
+ (void)unregisterAppDelegateInterceptorWithID:(id)arg1;
+ (id)registerAppDelegateInterceptor:(id)arg1;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (id)fakeDescription;

@end

@interface FIRAAudienceComparisonValues : NSObject
{
    _Bool _valid;
    NSDecimalNumber *_comparisonValue;
    NSDecimalNumber *_maxComparisonValue;
    NSDecimalNumber *_minComparisonValue;
}

@property(nonatomic, getter=isValid) _Bool valid; // @synthesize valid=_valid;
@property(retain, nonatomic) NSDecimalNumber *minComparisonValue; // @synthesize minComparisonValue=_minComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *maxComparisonValue; // @synthesize maxComparisonValue=_maxComparisonValue;
@property(retain, nonatomic) NSDecimalNumber *comparisonValue; // @synthesize comparisonValue=_comparisonValue;
- (void).cxx_destruct;

@end

@interface FIRAConditionalUserProperty : NSObject <NSCopying>
{
    _Bool _active;
    NSString *_name;
    NSString *_origin;
    FIRAValue *_value;
    NSString *_triggerEventName;
    double _triggerTimeout;
    double _timeToLive;
    FIRAEvent *_triggeredEvent;
    FIRAEvent *_timedOutEvent;
    FIRAEvent *_expiredEvent;
    double _creationTimestamp;
    double _triggeredTimestamp;
}

@property(nonatomic) double triggeredTimestamp; // @synthesize triggeredTimestamp=_triggeredTimestamp;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(nonatomic) double creationTimestamp; // @synthesize creationTimestamp=_creationTimestamp;
@property(copy, nonatomic) FIRAEvent *expiredEvent; // @synthesize expiredEvent=_expiredEvent;
@property(copy, nonatomic) FIRAEvent *timedOutEvent; // @synthesize timedOutEvent=_timedOutEvent;
@property(copy, nonatomic) FIRAEvent *triggeredEvent; // @synthesize triggeredEvent=_triggeredEvent;
@property(nonatomic) double timeToLive; // @synthesize timeToLive=_timeToLive;
@property(nonatomic) double triggerTimeout; // @synthesize triggerTimeout=_triggerTimeout;
@property(copy, nonatomic) NSString *triggerEventName; // @synthesize triggerEventName=_triggerEventName;
@property(copy, nonatomic) FIRAValue *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface FIRAConditionalUserPropertyController : NSObject
{
}

+ (id)sharedInstance;
- (void)removeConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (void)setConditionalUserPropertyOnWorkerQueue:(id)arg1;
- (id)conditionalUserPropertiesWithNamePrefix:(id)arg1 filterByOrigin:(id)arg2;
- (void)clearConditionalUserPropertyWithClearEvent:(id)arg1 forName:(id)arg2;
- (void)setConditionalUserProperty:(id)arg1 forName:(id)arg2;
- (id)updateConditionalUserPropertiesWithEventNameOnWorkerQueue:(id)arg1;
- (_Bool)removeExpiredCUPWithExpiredEvents:(id *)arg1;
- (_Bool)removeTimedOutCUPWithTimedOutEvents:(id *)arg1;
- (id)processEventOnWorkerQueue:(id)arg1;

@end

@interface FIRAAppMetadata : NSObject
{
    int _lastBundleIndex;
    double _lastBundleStartTimestamp;
    double _lastBundleEndTimestamp;
}

@property(nonatomic) double lastBundleEndTimestamp; // @synthesize lastBundleEndTimestamp=_lastBundleEndTimestamp;
@property(nonatomic) double lastBundleStartTimestamp; // @synthesize lastBundleStartTimestamp=_lastBundleStartTimestamp;
@property(readonly, nonatomic) int lastBundleIndex; // @synthesize lastBundleIndex=_lastBundleIndex;
- (void)incrementLastBundleIndex;
- (id)initWithLastBundleIndex:(int)arg1 lastBundleStartTimestamp:(double)arg2 lastBundleEndTimestamp:(double)arg3;

@end

@interface FIRADailyCounts : NSObject
{
    int _day;
    int _conversionsCount;
    int _allEventsCount;
    int _publicEventsCount;
    int _errorEventsCount;
    int _realtimeCount;
}

@property(readonly, nonatomic) int realtimeCount; // @synthesize realtimeCount=_realtimeCount;
@property(readonly, nonatomic) int errorEventsCount; // @synthesize errorEventsCount=_errorEventsCount;
@property(readonly, nonatomic) int publicEventsCount; // @synthesize publicEventsCount=_publicEventsCount;
@property(readonly, nonatomic) int allEventsCount; // @synthesize allEventsCount=_allEventsCount;
@property(readonly, nonatomic) int conversionsCount; // @synthesize conversionsCount=_conversionsCount;
@property(readonly, nonatomic) int day; // @synthesize day=_day;
- (void)decrementAllEventsCount;
- (void)incrementRealtimeCountsForCurrentDay:(int)arg1;
- (void)incrementErrorEventsCountForCurrentDay:(int)arg1;
- (void)incrementCountsForCurrentDay:(int)arg1 isPublicEvent:(_Bool)arg2 isConversion:(_Bool)arg3;
- (id)initWithDay:(int)arg1 conversionsCount:(int)arg2 allEventsCount:(int)arg3 publicEventsCount:(int)arg4 errorEventsCount:(int)arg5 realtimeCount:(int)arg6;

@end

@interface FIRADataTypeValidator : NSObject
{
}

+ (_Bool)isValidConditionalUserPropertyValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidConditionalUserPropertyOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidScreenParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalUserAttributeValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicUserAttributeName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidForwardedEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidInternalEventOrigin:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventParameterValue:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventParameterName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidPublicEventName:(id)arg1 failureCode:(long long *)arg2;
+ (_Bool)isValidValue:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (_Bool)isValidPublicName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidInternalName:(id)arg1 maxLength:(long long)arg2 type:(long long)arg3 failureCode:(long long *)arg4;
+ (_Bool)isValidString:(id)arg1 minLength:(long long)arg2 maxLength:(long long)arg3 type:(long long)arg4 failureCode:(long long *)arg5;
+ (void)initialize;

@end

@interface FIRAEvent : NSObject <NSCopying>
{
    NSMutableDictionary *_parameters;
    NSString *_origin;
    NSString *_name;
    double _timestamp;
    double _previousTimestamp;
}

+ (_Bool)isValidParameterKey:(id)arg1 isPublicEvent:(_Bool)arg2 errorParameters:(id)arg3;
+ (id)normalizedParametersForParameters:(id)arg1 isPublicEvent:(_Bool)arg2;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(readonly, nonatomic) double previousTimestamp; // @synthesize previousTimestamp=_previousTimestamp;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(readonly, nonatomic) FIRAPBEvent *protoEvent;
- (_Bool)addScreenParameters:(id)arg1;
@property(nonatomic, getter=isDebug) _Bool debug;
@property(nonatomic, getter=isRealtime) _Bool realtime;
@property(nonatomic, getter=isConversion) _Bool conversion;
- (id)copyWithParameters:(id)arg1;
- (id)copyWithPreviousTimestamp:(double)arg1;
- (id)initWithOrigin:(id)arg1 isPublic:(_Bool)arg2 name:(id)arg3 timestamp:(double)arg4 previousTimestamp:(double)arg5 parameters:(id)arg6;
- (id)initWithEventProto:(id)arg1;

@end

@interface FIRAEventAggregates : NSObject
{
    int _lifetimeCount;
    int _currentBundleCount;
    NSString *_name;
    double _lastFireTimestamp;
}

@property(nonatomic) double lastFireTimestamp; // @synthesize lastFireTimestamp=_lastFireTimestamp;
@property(readonly, nonatomic) int currentBundleCount; // @synthesize currentBundleCount=_currentBundleCount;
@property(readonly, nonatomic) int lifetimeCount; // @synthesize lifetimeCount=_lifetimeCount;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)incrementCurrentBundleCount;
- (void)incrementLifetimeCount;
- (id)initWithName:(id)arg1 lifetimeCount:(int)arg2 currentBundleCount:(int)arg3 lastFireTimestamp:(double)arg4;

@end

@interface FIRAEventFilter : NSObject
{
    int _audienceID;
    int _filterID;
    NSString *_eventName;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *eventName; // @synthesize eventName=_eventName;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 eventName:(id)arg3 data:(id)arg4;

@end

@interface FIRAFilterResult : NSObject
{
    int _audienceID;
    NSData *_currentResults;
    NSData *_previousResults;
}

@property(readonly, nonatomic) NSData *previousResults; // @synthesize previousResults=_previousResults;
@property(readonly, nonatomic) NSData *currentResults; // @synthesize currentResults=_currentResults;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 currentResults:(id)arg2 previousResults:(id)arg3;

@end

@interface FIRAPropertyFilter : NSObject
{
    int _audienceID;
    int _filterID;
    NSString *_propertyName;
    NSData *_data;
}

@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
@property(readonly, nonatomic) int filterID; // @synthesize filterID=_filterID;
@property(readonly, nonatomic) int audienceID; // @synthesize audienceID=_audienceID;
- (void).cxx_destruct;
- (id)initWithAudienceID:(int)arg1 filterID:(int)arg2 propertyName:(id)arg3 data:(id)arg4;

@end

@interface FIRARawEventData : NSObject
{
    FIRAEvent *_rawEvent;
    long long _rowID;
    long long _metadataFingerprint;
}

@property(readonly, nonatomic) long long metadataFingerprint; // @synthesize metadataFingerprint=_metadataFingerprint;
@property(readonly, nonatomic) long long rowID; // @synthesize rowID=_rowID;
@property(readonly, nonatomic) FIRAEvent *rawEvent; // @synthesize rawEvent=_rawEvent;
- (void).cxx_destruct;
- (id)initWithRawEvent:(id)arg1 rowID:(long long)arg2 metadataFingerprint:(long long)arg3;

@end

@interface FIRAUserAttribute : NSObject
{
    NSString *_origin;
    NSString *_name;
    FIRAValue *_value;
    double _lastSetTimestamp;
}

@property(readonly, nonatomic) double lastSetTimestamp; // @synthesize lastSetTimestamp=_lastSetTimestamp;
@property(readonly, nonatomic) FIRAValue *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *origin; // @synthesize origin=_origin;
- (void).cxx_destruct;
@property(readonly, nonatomic) FIRAPBUserAttribute *protoUserAttribute;
@property(readonly, nonatomic) _Bool isPublic;
- (id)initWithOrigin:(id)arg1 name:(id)arg2 value:(id)arg3 lastSetTimestamp:(double)arg4;

@end

@interface FIRAValue : NSObject <NSCopying>
{
    id _value;
    long long _valueType;
}

+ (id)valueFromObject:(id)arg1;
@property(readonly, nonatomic) long long valueType; // @synthesize valueType=_valueType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
@property(readonly, nonatomic) NSString *stringValue;
@property(readonly, nonatomic) _Bool isString;
@property(readonly, nonatomic) long long int64Value;
@property(readonly, nonatomic) _Bool isInt64;
@property(readonly, nonatomic) double doubleValue;
@property(readonly, nonatomic) _Bool isDouble;
- (id)initWithValueType:(long long)arg1 value:(id)arg2;
- (id)initWithString:(id)arg1;
- (id)initWithInt64:(long long)arg1;
- (id)initWithDouble:(double)arg1;

@end

@interface FIRASqliteStore : NSObject
{
    struct sqlite3 *_sqliteHandle;
    NSMutableDictionary *_statementCache;
    const char *_queueLabel;
    NSString *_databasePath;
}

@property(readonly, nonatomic) NSString *databasePath; // @synthesize databasePath=_databasePath;
- (void).cxx_destruct;
- (void)setDatabaseError:(id *)arg1 operation:(id)arg2;
- (id)monitorContextForDatabaseOperation:(id)arg1;
- (id)errorDescriptionForDatabaseOperation:(id)arg1;
- (id)lastErrorMessage;
- (_Bool)bindValues:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)updateStatementForRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (struct sqlite3_stmt *)upsertStatementForRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)valueAtColumn:(int)arg1 forStatement:(struct sqlite3_stmt *)arg2;
- (void)finalizeAndClearStatements;
- (_Bool)closeAndDeleteDatabase;
- (void)closeDatabase;
- (_Bool)validateDatabaseWithError:(id *)arg1;
- (_Bool)openAndValidateDatabase:(id *)arg1;
- (_Bool)executeSQLStatement:(struct sqlite3_stmt *)arg1 error:(id *)arg2;
- (_Bool)executeSQL:(id)arg1 error:(id *)arg2;
- (struct sqlite3_stmt *)prepareSQL:(id)arg1 error:(id *)arg2;
- (void)cleanUpStatement:(struct sqlite3_stmt *)arg1 forQuery:(id)arg2;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (struct sqlite3_stmt *)statementForQuery:(id)arg1 error:(id *)arg2;
- (_Bool)rollbackTransaction;
- (_Bool)endTransaction;
- (_Bool)beginTransaction;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (id)numberForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3 withFilter:(CDUnknownBlockType)arg4;
- (id)recordsForQuery:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (_Bool)deleteAllRecordsFromTableWithName:(id)arg1 error:(id *)arg2;
- (id)deleteRecordsFromTableWithName:(id)arg1 condition:(id)arg2 parameterValues:(id)arg3 error:(id *)arg4;
- (_Bool)deleteRecordFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (_Bool)updateRecord:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5;
- (_Bool)upsertRecord:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3;
- (id)columnInfoForTableWithName:(id)arg1 error:(id *)arg2;
- (id)columnsForTableWithName:(id)arg1 error:(id *)arg2;
- (id)rowCountForTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4;
- (id)rowCountForTableWithName:(id)arg1 error:(id *)arg2;
- (id)tableExists:(id)arg1 error:(id *)arg2;
- (id)validateTableWithName:(id)arg1 requiredColumnNames:(id)arg2 addOnColumns:(id)arg3 error:(id *)arg4;
- (_Bool)copyContentsFromTable:(id)arg1 toTable:(id)arg2 error:(id *)arg3;
- (_Bool)renameTable:(id)arg1 toName:(id)arg2 error:(id *)arg3;
- (_Bool)dropTableWithName:(id)arg1 error:(id *)arg2;
- (_Bool)ensureTableWithName:(id)arg1 createSQL:(id)arg2 requiredColumnNames:(id)arg3 addOnColumns:(id)arg4 error:(id *)arg5;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 modifyColumnInfo:(id)arg4 error:(id *)arg5;
- (_Bool)ensureSchemaOfTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
- (_Bool)ensureTableWithName:(id)arg1 elementaryColumnInfo:(id)arg2 addOnColumnInfo:(id)arg3 error:(id *)arg4;
@property(readonly, nonatomic) struct sqlite3 *sqliteHandle;
- (void)dealloc;
- (id)initWithDatabasePath:(id)arg1;

@end

@interface FIRAAdExposureReporter : NSObject
{
    NSMutableDictionary *_adUnitCounts;
    NSMutableDictionary *_adUnitStartTimes;
    double _adExposureStartTime;
    NSObject<OS_dispatch_queue> *_queue;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)handleEngagementTimer:(id)arg1;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)logAdUnitExposureEventOnSerialQueueWithID:(id)arg1 endTime:(double)arg2 screenParameters:(id)arg3;
- (void)logAdExposureEventOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsOnSerialQueueWithEndTime:(double)arg1 screenParameters:(id)arg2;
- (void)logExposureEventsWithScreenParameters:(id)arg1;
- (void)updateStartTimesOnSerialQueue:(double)arg1;
- (double)currentTime;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FIRAAlarm : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSObject<OS_dispatch_source> *_timer;
    NSString *_name;
    NSDate *_scheduledTimestamp;
}

@property(readonly, nonatomic) NSDate *scheduledTimestamp; // @synthesize scheduledTimestamp=_scheduledTimestamp;
- (void).cxx_destruct;
- (void)dealloc;
- (_Bool)hasActiveTimer;
- (void)cancel;
- (void)runAfterDelay:(double)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)initWithDispatchQueue:(id)arg1 name:(id)arg2;

@end

@interface FIRAAudience : NSObject
{
    FIRADatabase *_database;
}

+ (_Bool)isValidAudienceProto:(id)arg1 usedAudienceIDs:(id)arg2 error:(id *)arg3;
+ (id)updatedFilterResultWithFilterID:(int)arg1 audienceID:(int)arg2 currentFilterResult:(id)arg3 newEvaluationResult:(id)arg4;
+ (_Bool)isFilterResult:(id)arg1 trueForFilterID:(int)arg2;
- (void).cxx_destruct;
- (_Bool)resultsForBundling:(id *)arg1;
- (_Bool)maybeDeleteStaleFilterResults:(id)arg1;
- (_Bool)updateAudiences:(id)arg1;
- (_Bool)evaluateFiltersForUserProperty:(id)arg1;
- (_Bool)evaluateFiltersForEvent:(id)arg1 eventAggregates:(id)arg2;
- (id)initWithDatabase:(id)arg1;

@end

@interface FIRADatabase : NSObject
{
    FIRASqliteStore *_sqliteStore;
    FIRAPersistedConfig *_persistedConfig;
}

- (void).cxx_destruct;
- (_Bool)updateDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 error:(id *)arg5 createDictionaryBlock:(CDUnknownBlockType)arg6;
- (_Bool)upsertDataType:(id)arg1 inTableWithName:(id)arg2 columnName:(id)arg3 columnValue:(id)arg4 tableLimit:(long long)arg5 error:(id *)arg6 createDictionaryBlock:(CDUnknownBlockType)arg7;
- (_Bool)insertDataType:(id)arg1 inTableWithName:(id)arg2 error:(id *)arg3 createDictionaryBlock:(CDUnknownBlockType)arg4;
- (id)dataTypesFromTableWithName:(id)arg1 columnName:(id)arg2 columnValue:(id)arg3 error:(id *)arg4 createDataTypeBlock:(CDUnknownBlockType)arg5;
- (id)allDataTypesFromTableWithName:(id)arg1 tableLimit:(long long)arg2 error:(id *)arg3 createDataTypeBlock:(CDUnknownBlockType)arg4;
- (_Bool)ensureAllTables;
- (id)conditionalUserPropertiesWithCondition:(id)arg1 parameterValues:(id)arg2 error:(id *)arg3;
- (id)conditionalUserPropertiesWithPrefix:(id)arg1 filterByOrigin:(id)arg2 error:(id *)arg3;
- (id)triggeredConditionalUserPropertiesWithEventName:(id)arg1 error:(id *)arg2;
- (id)expiredConditionalUserPropertiesWithError:(id *)arg1;
- (id)timedOutConditionalUserPropertiesWithError:(id *)arg1;
- (_Bool)deleteConditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateConditionalUserProperty:(id)arg1 error:(id *)arg2;
- (id)conditionalUserPropertyWithName:(id)arg1 error:(id *)arg2;
- (id)insertIfNotDuplicatePurchaseFingerprint:(id)arg1 error:(id *)arg2;
- (id)lastRemoteConfigUpdateTimestamp:(id *)arg1;
- (id)queryMeasurementConfigWithError:(id *)arg1;
- (_Bool)updateRemoteConfigSuccessfulTimestamp:(double)arg1 error:(id *)arg2;
- (_Bool)updateRemoteConfig:(id)arg1 error:(id *)arg2;
- (_Bool)deleteAllPropertyFilters:(id *)arg1;
- (_Bool)deleteAllEventFilters:(id *)arg1;
- (_Bool)deletePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateFilterResults:(id)arg1 error:(id *)arg2;
- (_Bool)updatePropertyFilters:(id)arg1 error:(id *)arg2;
- (_Bool)updateEventFilters:(id)arg1 error:(id *)arg2;
- (_Bool)deleteFilterResults:(id)arg1 error:(id *)arg2;
- (id)filterResultForAudienceID:(int)arg1 error:(id *)arg2;
- (id)propertyFiltersForPropertyName:(id)arg1 error:(id *)arg2;
- (id)eventFiltersForEventName:(id)arg1 error:(id *)arg2;
- (id)allAudienceIDs:(id *)arg1;
- (id)allFilterResults:(id *)arg1;
- (_Bool)deleteUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (_Bool)updateUserAttribute:(id)arg1 error:(id *)arg2;
- (id)userAttributesIncludingInternal:(_Bool)arg1 error:(id *)arg2;
- (id)allLifetimeValueUserAttributes:(id *)arg1;
- (id)userAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)containsUserAttributeWithName:(id)arg1 error:(id *)arg2;
- (id)userAttributeCountForOrigin:(id)arg1 error:(id *)arg2;
- (id)publicUserAttributeCount:(id *)arg1;
- (_Bool)updateEventAggregates:(id)arg1 error:(id *)arg2;
- (id)eventAggregatesWithName:(id)arg1 error:(id *)arg2;
- (id)allEventAggregates:(id *)arg1;
- (id)publicEventCount:(id *)arg1;
- (id)containsRealtimeBundlesWithError:(id *)arg1;
- (id)queryLatestBundleTime:(id *)arg1;
- (_Bool)deleteStaleBundlesOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)maybeDeleteStaleData:(id *)arg1;
- (_Bool)deleteBundlesWithRowIDs:(id)arg1 error:(id *)arg2;
- (id)queryBundlesWithCountLimit:(long long)arg1 sizeLimit:(long long)arg2 error:(id *)arg3;
- (_Bool)insertBundle:(id)arg1 isRealtime:(_Bool)arg2 error:(id *)arg3;
- (id)isQueuedBundleTableEmpty:(id *)arg1;
- (id)containsRealtimeRawEventsWithError:(id *)arg1;
- (id)rawEventDataFromDictionary:(id)arg1 error:(id *)arg2;
- (id)nextMetadataFingerprintToProcess:(id *)arg1;
- (_Bool)deleteStaleRawEventsDataOlderThanMaxAge:(double)arg1 error:(id *)arg2;
- (id)deleteRawEventsOverAbsoluteLimit:(id *)arg1;
- (_Bool)deleteRawEventsWithMaxRowID:(long long)arg1 error:(id *)arg2;
- (id)containsRawEventWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)rawEventsWithMetadataFingerprint:(long long)arg1 error:(id *)arg2 eventFilter:(CDUnknownBlockType)arg3;
- (id)queryLatestRawEventTime:(id *)arg1;
- (_Bool)insertRawEvent:(id)arg1 metadataFingerprint:(long long)arg2 isRealtime:(_Bool)arg3 error:(id *)arg4;
- (id)isRawEventsTableEmpty:(id *)arg1;
- (_Bool)deleteUnusedRawEventsMetadata:(id *)arg1;
- (_Bool)deleteRawEventMetadataWithMetadataFingerprint:(long long)arg1 error:(id *)arg2;
- (id)queryRawEventsMetadataWithFingerprint:(long long)arg1 error:(id *)arg2;
- (_Bool)insertIfNotExistsRawEventMetadata:(id)arg1 error:(id *)arg2;
- (_Bool)updateDailyCounts:(id)arg1 error:(id *)arg2;
- (id)dailyCounts:(id *)arg1;
- (_Bool)updateAppMetadata:(id)arg1 error:(id *)arg2;
- (id)queryAppMetadata:(id *)arg1;
- (_Bool)initializeAppMetadata;
- (_Bool)performTransaction:(CDUnknownBlockType)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2;

@end

@interface FIRAEnvironmentInfo : NSObject
{
    NSString *_deviceModel;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly, nonatomic) int timeZoneOffsetMinutes;
@property(readonly, nonatomic) NSString *userDefaultLanguage;
@property(readonly, nonatomic) NSString *deviceOSVersion;
@property(readonly, nonatomic) NSString *deviceModel;

@end

@interface FIRAIdentity : NSObject
{
    NSDate *_lastAppInstanceIDUpdateTimestamp;
    NSString *_hashedIDFA;
    NSString *_resettableDeviceID;
    NSString *_appInstanceID;
    _Bool _limitedAdTracking;
    NSString *_identifierForVendorString;
    FIRAPersistedConfig *_persistedConfig;
    NSString *_appIDFromGMP;
    NSString *_appID;
    NSString *_appVersion;
    NSNumber *_appVersionMajor;
    NSNumber *_appVersionMinor;
    NSNumber *_appVersionRelease;
    long long _devCertHash;
}

+ (void)notCalled;
+ (id)numericFieldsFromAppVersionNumeric:(id)arg1;
+ (long long)firebaseAnalyticsLibraryVersion;
+ (id)sharedInstance;
@property(readonly, nonatomic) long long devCertHash; // @synthesize devCertHash=_devCertHash;
@property(readonly, nonatomic) NSNumber *appVersionRelease; // @synthesize appVersionRelease=_appVersionRelease;
@property(readonly, nonatomic) NSNumber *appVersionMinor; // @synthesize appVersionMinor=_appVersionMinor;
@property(readonly, nonatomic) NSNumber *appVersionMajor; // @synthesize appVersionMajor=_appVersionMajor;
@property(readonly, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, nonatomic) NSString *appID; // @synthesize appID=_appID;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *firebaseInstanceID;
- (id)randomAppInstanceID;
- (void)updateIdentifiers;
@property(readonly, nonatomic) NSString *identifierForVendor;
@property(readonly, nonatomic, getter=isFromAppStore) _Bool fromAppStore;
- (void)setAppIDFromGMP:(id)arg1;
@property(readonly, nonatomic) NSString *appIDFromGMP;
- (id)hashedIDFA;
@property(readonly, nonatomic) NSString *appInstanceID;
@property(readonly, nonatomic) NSString *resettableDeviceID;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
- (id)initWithPersistedConfig:(id)arg1 options:(id)arg2;

@end

@interface FIRAMeasurement : NSObject <FIRNetworkLoggerDelegate, FIRNetworkReachabilityDelegate>
{
    FIROptions *_options;
    NSString *_databaseName;
    long long _initializeComponentsOnce;
    FIRAAlarm *_alarm;
    FIRAAudience *_audience;
    FIRADatabase *_database;
    FIRAIdentity *_identity;
    FIRNetwork *_network;
    FIRAPersistedConfig *_persistedConfig;
    FIRARemoteConfig *_remoteConfig;
    FIRAScheduler *_scheduler;
    FIRASessionReporter *_sessionReporter;
    FIRASearchAdReporter *_searchAdReporter;
    NSArray *_uploadingBundleIDs;
    NSString *_previousGMPAppID;
    // Error parsing type: AQ, name: _backgroundUpdateTask
    double _initTimestamp;
    double _suspendedUploadTimestamp;
    _Bool _enabled;
    _Bool _isNetworkRequestPending;
    _Bool _wasEnabledDuringInitialization;
}

+ (void)handleAppDidFinishLaunching:(id)arg1;
+ (id)deepLinkFromUserActivity:(id)arg1;
+ (void)load;
+ (id)remoteConfig;
+ (id)monitor;
+ (id)sharedInstance;
+ (_Bool)hasSharedInstance;
+ (void)initializeSharedInstanceWithOptions:(id)arg1;
@property(readonly, nonatomic) _Bool wasEnabledDuringInitialization; // @synthesize wasEnabledDuringInitialization=_wasEnabledDuringInitialization;
@property(readonly, nonatomic) _Bool isNetworkRequestPending; // @synthesize isNetworkRequestPending=_isNetworkRequestPending;
@property(readonly, nonatomic) FIRASessionReporter *sessionReporter; // @synthesize sessionReporter=_sessionReporter;
@property(readonly, nonatomic) FIRADatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) FIRAScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) FIRAIdentity *identity; // @synthesize identity=_identity;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)handleAppWillResignActiveEvent:(id)arg1;
- (void)terminateBackgroundTask;
- (void)handleAppWillEnterForegroundNotification:(id)arg1;
- (void)handleAppDidBecomeActiveEvent:(id)arg1;
- (void)swapBackgroundTaskWithNewTaskID:(unsigned long long)arg1;
- (void)filterPurchaseTransactions:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)networkRemoteConfigFetchCompletionHandler:(id)arg1 data:(id)arg2 error:(id)arg3;
- (void)fetchRemoteConfig;
- (double)firstOpenTimestamp;
- (_Bool)removeBundlesFromDatabaseWithIDs:(id)arg1;
- (_Bool)hasDataToUpload;
- (_Bool)bundleRawEvents;
- (id)createRawEventMetadataWithUserAttributes:(id)arg1;
- (void)maxUserPropertiesForOrigin:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userPropertiesIncludingInternal:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)userAttributeWithName:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setUserAttributeOnWorkerQueue:(id)arg1;
- (void)setUserAttribute:(id)arg1;
- (void)removeUserAttributeOnWorkerQueue:(id)arg1;
- (void)removeUserAttribute:(id)arg1;
- (void)maybeAddDebugAndRealtimeParameters:(id)arg1;
- (void)writeEventOnWorkerQueue:(id)arg1;
- (void)handleEventOnWorkerQueue:(id)arg1;
- (void)logEvent:(id)arg1;
- (void)setUploadInProgressWithBundleIDs:(id)arg1;
- (void)networkUploadCompletionHandlerWithResponse:(id)arg1 error:(id)arg2;
- (id)filteredBundlesWithCompatibleAppID:(id)arg1 resettableDeviceID:(id)arg2 vendorDeviceID:(id)arg3 bundlesToUpload:(id)arg4;
- (_Bool)isNetworkReadyForRequest;
- (void)uploadData;
- (void)uploadDataOrRegisterAlarm;
- (double)nextUploadingTime;
- (void)updateSchedule;
- (void)setSessionTimeoutInterval:(double)arg1;
- (void)setMinimumSessionInterval:(double)arg1;
- (_Bool)isAppUpdateWithAnalytics;
- (id)fileAttributesForPath:(id)arg1;
- (long long)timestampMillisRoundedUpToNextHour:(long long)arg1;
- (void)reportOSUpdateOnWorkerQueue;
- (void)reportAppUpdateOnWorkerQueue;
- (void)reportFirstOpenOnWorkerQueue;
- (void)maybeReportStoredCampaignEventWithClickTimestamp:(id)arg1;
- (void)reachabilityDidChange;
- (_Bool)startMeasurementOnWorkerQueue;
- (void)setEnabledOnWorkerQueue:(_Bool)arg1;
- (void)dealloc;
- (_Bool)shouldEnableMeasurement:(id)arg1;
- (id)initWithDatabaseName:(id)arg1 persistedConfig:(id)arg2 network:(id)arg3 scheduler:(id)arg4 alarm:(id)arg5 options:(id)arg6;
- (id)initWithOptions:(id)arg1;
- (_Bool)isValidCampaignURLParamDictionary:(id)arg1;
- (void)handleDebugModeWithURL:(id)arg1;
- (void)handleDeepLink:(id)arg1 clickTimestamp:(id)arg2;
- (void)handleOpenURL:(id)arg1 clickTimestamp:(id)arg2;
- (void)handleOpenURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAMonitor : NSObject
{
    long long _logLevel;
    FIRAASLLogger *_logger;
    FIRAMonitoringSampledData *_monitoringSampledData;
    NSObject<OS_dispatch_queue> *_monitorQueue;
    long long _libraryVersion;
    NSUserDefaults *_monitorUserDefaults;
    long long _excludeBackupOnceToken;
    _Bool _debugModeEnabled;
    _Bool _encodeContexts;
}

+ (id)monitoringDataKeyWithMessage:(id)arg1 logLevel:(long long)arg2 libraryVersion:(long long)arg3;
+ (id)lastFIRASymbolFromException:(id)arg1;
+ (id)encodedStringWithContextObject:(id)arg1;
+ (id)stringWithLogMessage:(id)arg1 logLevel:(long long)arg2 contexts:(id)arg3 encodeContexts:(_Bool)arg4;
+ (id)encodedStringWithContextArray:(id)arg1 insertSpaces:(_Bool)arg2;
+ (_Bool)isMonitorableLevel:(long long)arg1;
+ (_Bool)isSilentLevel:(long long)arg1;
+ (id)logLevelDescriptionFromLogLevel:(long long)arg1;
@property(nonatomic) _Bool encodeContexts; // @synthesize encodeContexts=_encodeContexts;
@property(nonatomic, getter=isDebugModeEnabled) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
- (void).cxx_destruct;
- (void)synchronizeToDiskOnMonitorQueue;
- (void)migrateMonitorDataOnMonitorQueue;
- (void)saveMonitoringDataToUserDefaultsOnMonitorQueue;
- (void)insertOrUpdateMonitoringDataWithMessage:(id)arg1 encodedContext:(id)arg2 logLevel:(long long)arg3;
- (void)logToConsole:(long long)arg1 message:(id)arg2 logLevel:(long long)arg3;
- (_Bool)isLoggableLevel:(long long)arg1;
- (void)loadMonitoringDataFromUserDefaultsOnMonitorQueue;
- (void)clearMonitoringData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)setLogLevel:(long long)arg1;
- (id)initWithLogLevel:(long long)arg1 logger:(id)arg2 libraryVersion:(long long)arg3;
- (id)initWithLibraryVersion:(long long)arg1;

@end

@interface FIRAPersistedConfig : NSObject
{
    NSString *_name;
    NSUserDefaults *_userDefaults;
    NSObject<OS_dispatch_queue> *_serialQueue;
    long long _excludeBackupOnceToken;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)synchronizeToDisk;
- (void)scheduleSynchronizeToDisk;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)setDouble:(double)arg1 forKey:(id)arg2;
- (void)setInt64:(long long)arg1 forKey:(id)arg2;
- (id)stringForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (long long)int64ForKey:(id)arg1 userDefault:(id)arg2;
- (long long)int64ForKey:(id)arg1;
@property(nonatomic) double engagementTimeBeforeSessionStart;
@property(nonatomic) double lastEngagementCheckpointClockTime;
@property(nonatomic) _Bool startNewSession;
@property(copy, nonatomic) NSString *configServerLastModifiedString;
@property(nonatomic) long long firstOpenTimestampMilliseconds;
@property(nonatomic) double lastMonitorDataSampledTimestamp;
@property(readonly, nonatomic) double midnightOffset;
@property(copy, nonatomic, setter=setOSVersion:) NSString *osVersion;
@property(copy, nonatomic) NSString *appVersion;
@property(nonatomic) double lastFailedUploadTimestamp;
@property(nonatomic) double lastSuccessfulUploadTimestamp;
@property(nonatomic) double lastBackoffTimestamp;
@property(readonly, nonatomic) long long measurementEnabledState;
@property(copy, nonatomic) NSString *hashedIDFA;
@property(copy, nonatomic) NSString *appIDFromGMP;
@property(copy, nonatomic) NSString *appInstanceID;
@property(nonatomic) long long searchAdRetryCount;
@property(nonatomic) double lastSearchAdLookUpTimestamp;
@property(copy, nonatomic) NSNumber *searchAdCampaignValue;
@property(nonatomic) double lastDeleteStaleBundlesTimestamp;
- (void)clearValues;
- (id)initWithSuiteName:(id)arg1;

@end

@interface FIRARemoteConfig : NSObject
{
    _Bool _isDefaultInstance;
    NSString *_appIDFromGMP;
    FIRADatabase *_database;
    FIRMutableDictionary *_cachedValueByRemoteConfigKeys;
    FIRMutableDictionary *_cachedEventConfigByEventName;
    NSNumberFormatter *_numberFormatter;
    FIRAPBMeasurementConfig *_remoteConfigProto;
}

+ (id)defaultInstance;
- (void).cxx_destruct;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 maxValue:(long long)arg3 minValue:(long long)arg4;
- (int)intValueFromCacheWithKey:(id)arg1 defaultValue:(int)arg2 maxValue:(int)arg3 minValue:(int)arg4;
- (double)timeIntervalInSecondsFromCacheWithKey:(id)arg1 defaultValue:(double)arg2 maxValue:(double)arg3 minValue:(double)arg4;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 block:(CDUnknownBlockType)arg5;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4;
- (id)cacheValue:(id)arg1 forKey:(id)arg2;
- (id)numberFromString:(id)arg1;
- (id)measurementConfigFromDatabase;
- (void)parseRemoteConfigFromMeasurementConfig:(id)arg1;
@property(readonly, nonatomic) double remoteConfigCacheTimeInterval;
@property(readonly, nonatomic) _Bool blacklistPublic;
@property(readonly, nonatomic) _Bool blacklistInternal;
@property(readonly, nonatomic) double uploadingRealTimeInterval;
@property(readonly, nonatomic) double uploadingDebugModeInterval;
@property(readonly, nonatomic) int maxRealtimeEventCountPerDay;
@property(readonly, nonatomic) int maxBundlesCreatedPerIteration;
@property(readonly, nonatomic) double uploadingRetryInterval;
@property(readonly, nonatomic) int uploadingRetryCount;
@property(readonly, nonatomic) long long uploadMaxSizeLimitBytes;
@property(readonly, nonatomic) long long uploadMaxEventsPerBundle;
@property(readonly, nonatomic) long long uploadMaxBundlesLimit;
@property(readonly, nonatomic) double uploadingInitialDelayInterval;
@property(readonly, nonatomic) double uploadingInterval;
@property(readonly, nonatomic) int maxEventsStored;
@property(readonly, nonatomic) int maxTrackedCurrencies;
@property(readonly, nonatomic) int maxErrorEventsPerDay;
@property(readonly, nonatomic) int maxPublicEventsPerDay;
@property(readonly, nonatomic) int maxEventsPerDay;
@property(readonly, nonatomic) int maxConversionsPerDay;
@property(readonly, nonatomic) _Bool dedupePurchasesEnabled;
@property(readonly, nonatomic) _Bool parsePurchaseDataEnabled;
@property(readonly, nonatomic) _Bool uploadWhenAppInBackgroundEnabled;
@property(readonly, nonatomic) double sessionEventUserEngagementInterval;
@property(readonly, nonatomic) double sessionDefaultTimeoutInterval;
@property(readonly, nonatomic) double sessionDefaultMinimumInterval;
@property(readonly, nonatomic) double networkTimeout;
@property(readonly, nonatomic, getter=isNetworkBackgroundSessionEnabled) _Bool networkBackgroundSessionEnabled;
@property(readonly, nonatomic) double monitoringSamplePeriod;
@property(readonly, nonatomic) double maxQueueTime;
@property(readonly, nonatomic) double adIDCacheTime;
@property(readonly, nonatomic) double databaseDeleteStaleBundlesInterval;
@property(readonly, nonatomic) int maxParametersPerFilter;
@property(readonly, nonatomic) int maxFilterResultCount;
@property(readonly, nonatomic) int maxFiltersPerAudience;
@property(readonly, nonatomic) int maxAudienceCount;
@property(readonly, nonatomic, getter=isSearchAdReporterEnabled) _Bool searchAdReporterEnabled;
@property(readonly, nonatomic) double uploadingBackoffInterval;
- (id)remoteConfigURLWithAppInstanceID:(id)arg1 platform:(id)arg2 SDKVersion:(long long)arg3;
@property(readonly, nonatomic) double lastRemoteConfigUpdateTimestamp;
@property(readonly, nonatomic) long long version;
@property(readonly, nonatomic, getter=isExpired) _Bool expired;
- (_Bool)isEventCustomConversion:(id)arg1;
- (_Bool)isEventBlacklisted:(id)arg1;
- (id)eventConfigWithName:(id)arg1;
- (_Bool)updateMeasurementConfig:(id)arg1;
- (id)initWithGMPAppID:(id)arg1 database:(id)arg2 measurementConfig:(id)arg3;
- (id)initWithGMPAppID:(id)arg1 database:(id)arg2;

@end

@interface FIRAScheduler : NSObject
{
    NSObject<OS_dispatch_queue> *_workerQueue;
}

+ (_Bool)checkOnBackgroundThreadWithMethodName:(id)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *workerQueue; // @synthesize workerQueue=_workerQueue;
- (void).cxx_destruct;
- (void)scheduleOnWorkerQueueBlockID:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)initWithWorkerQueueLabel:(id)arg1;

@end

@interface FIRASessionReporter : NSObject
{
    FIRAPersistedConfig *_persistedConfig;
    FIRAAlarm *_sessionStartTimer;
    FIRAAlarm *_userEngagementTimer;
    double _engagementStartUptime;
    _Bool _reportingEnabled;
    double _minimumSessionInterval;
    double _timeoutSessionInterval;
}

@property(nonatomic) double timeoutSessionInterval; // @synthesize timeoutSessionInterval=_timeoutSessionInterval;
@property(nonatomic) double minimumSessionInterval; // @synthesize minimumSessionInterval=_minimumSessionInterval;
@property(nonatomic, getter=isReportingEnabled) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (double)incurredEngagementTime;
- (double)currentClockTime;
- (double)currentUptime;
- (void)rescheduleUserEngagementTimer;
- (void)rescheduleSessionStartTimer;
- (void)handleScreenDidChangeFromScreen:(id)arg1 toScreen:(id)arg2;
- (void)handleAppWillResignActiveWithScreen:(id)arg1;
- (void)handleAppDidBecomeActive;
- (void)logUserEngagementEventWithScreen:(id)arg1;
- (void)logUserEngagementEvent;
- (void)logSessionStartEvent;
- (_Bool)shouldStartNewSession;
- (void)dealloc;
- (id)initWithPersistedConfig:(id)arg1;

@end

@interface FIRAnalytics : NSObject
{
}

+ (void)maybeEnableTagManager;
+ (void)notifyEventListenersOnSerialQueue:(id)arg1;
+ (void)notifyEventListeners:(id)arg1;
+ (void)removeLogEventListener:(id)arg1;
+ (id)addLogEventListener:(CDUnknownBlockType)arg1;
+ (void)setLogEventInterceptor:(CDUnknownBlockType)arg1;
+ (void)userPropertiesIncludingInternal:(_Bool)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
+ (void)removeInternalUserAttributeForName:(id)arg1;
+ (void)setInternalUserProperty:(id)arg1 forName:(id)arg2;
+ (void)setUserAttributeNumber:(id)arg1 forName:(id)arg2;
+ (void)removeUserAttributeForName:(id)arg1;
+ (void)setUserID:(id)arg1;
+ (void)setUserPropertyString:(id)arg1 forName:(id)arg2;
+ (void)setOpenURLListener:(CDUnknownBlockType)arg1;
+ (void)handleUserActivity:(id)arg1;
+ (void)handleOpenURL:(id)arg1;
+ (void)createAppDelegateProxy;
+ (id)eventsToLogWithEventID:(long long)arg1 origin:(id)arg2 isPublic:(_Bool)arg3 name:(id)arg4 timestamp:(double)arg5 parameters:(id)arg6;
+ (void)logEventOnSerialQueueWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7 addedScreenParameters:(id)arg8;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4 timestamp:(double)arg5 ignoreEnabled:(_Bool)arg6 ignoreInterceptor:(_Bool)arg7;
+ (void)logEventWithOrigin:(id)arg1 isPublicEvent:(_Bool)arg2 name:(id)arg3 parameters:(id)arg4;
+ (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (void)logEventsOnWorkerQueue:(id)arg1 notifyEventListeners:(_Bool)arg2;
+ (void)handleEventsForBackgroundURLSession:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)handleSetSessionTimeoutInterval:(id)arg1;
+ (void)handleSetMinimumSessionInterval:(id)arg1;
+ (void)handleSetEnabled:(id)arg1;
+ (void)observeNotificationsForAnalyticsConfiguration:(id)arg1;
+ (double)loadTimestamp;
+ (id)appInstanceID;
+ (void)setScreenName:(id)arg1 screenClass:(id)arg2;
+ (void)setAnalyticsEnabled:(_Bool)arg1;
+ (_Bool)isCurrentQueueSerialQueue;
+ (void)unsuspendOperationQueue;
+ (void)queueOperationWithBlock:(CDUnknownBlockType)arg1;
+ (void)dispatchAsyncOnSerialQueue:(CDUnknownBlockType)arg1;
+ (void)startWithConfiguration:(id)arg1 options:(id)arg2;
+ (id)sharedInstance;
+ (void)initialize;
+ (void)load;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
- (void)maxUserPropertiesForOrigin:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setInternalUserProperty:(id)arg1 forName:(id)arg2 withOrigin:(id)arg3;

@end

@interface FIRAASIdentifierManager : NSObject
{
    ASIdentifierManager *_sharedIdentifierManager;
}

+ (id)sharedManager;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)advertisingIdentifier;
- (_Bool)isAdvertisingTrackingEnabled;
@property(readonly, nonatomic) _Bool limitedAdTracking;
@property(readonly, nonatomic) _Bool hasLimitedAdTracking;
@property(readonly, nonatomic) NSString *advertisingIdentifierString;
- (id)initWithIdentifierManager:(id)arg1;

@end

@interface FIRAInAppPurchaseProductCache : NSObject
{
    NSMutableSet *_invalidProductIdentifiers;
    NSMutableDictionary *_validProducts;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductIdentifier:(id)arg1;
- (id)init;

@end

@interface FIRAInAppPurchaseTransactionReporter : NSObject
{
    _Bool _reportingEnabled;
    _Bool _reportingWasDisabled;
}

+ (id)transactionFingerprint:(id)arg1;
+ (id)matchByteSequence:(id)arg1 withData:(id)arg2 atIndex:(int)arg3;
+ (id)matchIWithData:(id)arg1 atIndex:(int)arg2;
+ (id)matchHWithData:(id)arg1 atIndex:(int)arg2;
+ (id)matchBWithData:(id)arg1 atIndex:(int)arg2;
+ (id)matchOWithData:(id)arg1 atIndex:(int)arg2;
+ (id)deviceIDData;
+ (_Bool)parseDataBytes:(id)arg1;
+ (_Bool)parseData;
+ (id)sharedInstance;
@property(readonly, nonatomic) _Bool reportingWasDisabled; // @synthesize reportingWasDisabled=_reportingWasDisabled;
- (void)paymentQueue:(id)arg1 updatedFilteredTransactions:(id)arg2;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)reportTransactionsFromArray:(id)arg1;
- (void)disableReporting;
- (void)enableReporting;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAProductsRequest : NSObject
{
    SKProductsRequest *_productsRequest;
    CDUnknownBlockType _completionHandler;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)requestWithQueue:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithProductIdentifiers:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRALifetimeValueRecorder : NSObject
{
}

+ (_Bool)isPurchaseEvent:(id)arg1;
+ (_Bool)recordLifetimeValueToDatabase:(id)arg1 event:(id)arg2;

@end

@interface FIRAASLLogger : NSObject <FIRALogging>
{
}

+ (long long)FIRLoggerLevelFromLogLevel:(long long)arg1;
- (void)logMessage:(id)arg1 messageCode:(long long)arg2 withLogLevel:(long long)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAMonitoringSampledData : NSObject
{
    NSMutableArray *_sampledData;
}

+ (id)sampledDataEntryWithKey:(id)arg1 timestamp:(id)arg2 context:(id)arg3 population:(id)arg4;
+ (id)monitoringURLParamWithKey:(id)arg1 population:(id)arg2 context:(id)arg3;
+ (_Bool)isValidUserDefaultsArrayEntry:(id)arg1;
- (void).cxx_destruct;
- (id)sampledData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)insertOrUpdateSampledDataWithKey:(id)arg1 encodedContext:(id)arg2;
- (id)initWithArray:(id)arg1;

@end

@interface FIRAScreen : NSObject
{
    _Bool _isManuallySet;
    NSString *_name;
    NSString *_className;
    long long _instanceID;
}

@property(nonatomic) _Bool isManuallySet; // @synthesize isManuallySet=_isManuallySet;
@property(readonly, nonatomic) long long instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) NSString *className; // @synthesize className=_className;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithName:(id)arg1 className:(id)arg2 instanceID:(long long)arg3;

@end

@interface FIRAScreenViewReporter : NSObject
{
    UIViewController *_currentViewController;
    FIRAScreen *_currentScreen;
    FIRAScreen *_previousScreen;
    _Bool _allowScreenParameters;
    _Bool _allowPostScreenDidChangeNotification;
    _Bool _allowScreenViewEvent;
    _Bool _isAppActive;
    long long _currentScreenInstanceID;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)notCalled;
+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleApplicationWillResignActive:(id)arg1;
- (void)handleApplicationDidBecomeActive:(id)arg1;
- (void)handleWindowDidResign:(id)arg1;
- (void)logViewScreenEventWithPreviousScreen:(id)arg1 newScreen:(id)arg2;
- (void)postScreenDidChangeNotificationWithPreviousScreen:(id)arg1 newScreen:(id)arg2;
- (void)setCurrentViewController:(id)arg1;
- (void)viewControllerDidDisappear:(id)arg1;
- (void)viewControllerDidAppear:(id)arg1;
- (id)screenParameters;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (_Bool)isAppActive;
- (void)dealloc;
- (id)init;

@end

@interface FIRAAEU : NSObject
{
}

+ (id)sharedApplication;
+ (_Bool)isAEX;
+ (id)systemVersion;
+ (id)deviceModel;
+ (_Bool)isNOD;
+ (_Bool)isASRS;
+ (_Bool)isFAS;

@end

@interface FIRAKeychainWrapper : NSObject
{
}

+ (id)keychainDataWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)searchDirectoryForIdentifier:(id)arg1 withAppID:(id)arg2;
+ (void)deleteKeychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (id)keychainValueWithIdentifier:(id)arg1 appID:(id)arg2;
+ (_Bool)upsertKeychainValue:(id)arg1 withIdentifier:(id)arg2 appID:(id)arg3;

@end

@interface FIRANumericUtil : NSObject
{
}

+ (long long)randomInt64;

@end

@interface FIRAPBAudience : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBAudienceLeafFilterResult : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEvent : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBEventParam : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementBatch : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementBundle : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBMeasurementConfig : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBNumberFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBPropertyFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBResultData : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBSetting : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBStringFilter : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAPBUserAttribute : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIREmailAuthProvider : NSObject
{
}

+ (id)credentialWithEmail:(id)arg1 password:(id)arg2;
- (id)init;

@end

@interface FIREmailPasswordAuthCredential : FIRAuthCredential
{
    NSString *_email;
    NSString *_password;
}

@property(readonly, nonatomic) NSString *password; // @synthesize password=_password;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithEmail:(id)arg1 password:(id)arg2;
- (id)initWithProvider:(id)arg1;

@end

@interface FIRFacebookAuthCredential : FIRAuthCredential
{
    NSString *_accessToken;
}

- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithAccessToken:(id)arg1;
- (id)initWithProvider:(id)arg1;

@end

@interface FIRFacebookAuthProvider : NSObject
{
}

+ (id)credentialWithAccessToken:(id)arg1;
- (id)init;

@end

@interface FIRGitHubAuthCredential : FIRAuthCredential
{
    NSString *_token;
}

@property(readonly, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithToken:(id)arg1;
- (id)initWithProvider:(id)arg1;

@end

@interface FIRGitHubAuthProvider : NSObject
{
}

+ (id)credentialWithToken:(id)arg1;
- (id)init;

@end

@interface FIRGoogleAuthCredential : FIRAuthCredential
{
    NSString *_IDToken;
    NSString *_accessToken;
}

- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithIDToken:(id)arg1 accessToken:(id)arg2;
- (id)initWithProvider:(id)arg1;

@end

@interface FIRGoogleAuthProvider : NSObject
{
}

+ (id)credentialWithIDToken:(id)arg1 accessToken:(id)arg2;
- (id)init;

@end

@interface FIROAuthCredential : FIRAuthCredential
{
    NSString *_IDToken;
    NSString *_accessToken;
}

@property(readonly, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithProviderID:(id)arg1 IDToken:(id)arg2 accessToken:(id)arg3;

@end

@interface FIROAuthProvider : NSObject
{
}

+ (id)credentialWithProviderID:(id)arg1 accessToken:(id)arg2;
+ (id)credentialWithProviderID:(id)arg1 IDToken:(id)arg2 accessToken:(id)arg3;

@end

@interface FIRPhoneAuthCredential : FIRAuthCredential
{
    NSString *_verificationID;
    NSString *_verificationCode;
    NSString *_temporaryProof;
    NSString *_phoneNumber;
}

@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *temporaryProof; // @synthesize temporaryProof=_temporaryProof;
@property(readonly, nonatomic) NSString *verificationCode; // @synthesize verificationCode=_verificationCode;
@property(readonly, nonatomic) NSString *verificationID; // @synthesize verificationID=_verificationID;
- (void).cxx_destruct;
- (id)initWithProviderID:(id)arg1 verificationID:(id)arg2 verificationCode:(id)arg3;
- (id)initWithProvider:(id)arg1;
- (id)initWithTemporaryProof:(id)arg1 phoneNumber:(id)arg2 providerID:(id)arg3;

@end

@interface FIRPhoneAuthProvider : NSObject
{
    FIRAuth *_auth;
    NSString *_callbackScheme;
}

+ (id)providerWithAuth:(id)arg1;
+ (id)provider;
- (void).cxx_destruct;
- (void)fetchAuthDomainWithCompletion:(CDUnknownBlockType)arg1;
- (void)reCAPTCHAURLWithEventID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifyClientWithCompletion:(CDUnknownBlockType)arg1;
- (void)verifyClientAndSendVerificationCodeToPhoneNumber:(id)arg1 retryOnInvalidAppCredential:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)internalVerifyPhoneNumber:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isVerifyAppURL:(id)arg1 eventID:(id)arg2;
- (id)reCAPTCHATokenForURL:(id)arg1 error:(id *)arg2;
- (_Bool)isCallbackSchemeRegistered;
- (id)credentialWithVerificationID:(id)arg1 verificationCode:(id)arg2;
- (void)verifyPhoneNumber:(id)arg1 UIDelegate:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)verifyPhoneNumber:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithAuth:(id)arg1;

@end

@interface FIRTwitterAuthCredential : FIRAuthCredential
{
    NSString *_token;
    NSString *_secret;
}

@property(readonly, nonatomic) NSString *secret; // @synthesize secret=_secret;
@property(readonly, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithToken:(id)arg1 secret:(id)arg2;
- (id)initWithProvider:(id)arg1;

@end

@interface FIRTwitterAuthProvider : NSObject
{
}

+ (id)credentialWithToken:(id)arg1 secret:(id)arg2;
- (id)init;

@end

@interface FIRActionCodeSettings : NSObject
{
    _Bool _handleCodeInApp;
    _Bool _androidInstallIfNotAvailable;
    NSURL *_URL;
    NSString *_iOSBundleID;
    NSString *_androidPackageName;
    NSString *_androidMinimumVersion;
}

@property(readonly, nonatomic) _Bool androidInstallIfNotAvailable; // @synthesize androidInstallIfNotAvailable=_androidInstallIfNotAvailable;
@property(readonly, copy, nonatomic) NSString *androidMinimumVersion; // @synthesize androidMinimumVersion=_androidMinimumVersion;
@property(readonly, copy, nonatomic) NSString *androidPackageName; // @synthesize androidPackageName=_androidPackageName;
@property(readonly, copy, nonatomic) NSString *iOSBundleID; // @synthesize iOSBundleID=_iOSBundleID;
@property(nonatomic) _Bool handleCodeInApp; // @synthesize handleCodeInApp=_handleCodeInApp;
@property(copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (void)setAndroidPackageName:(id)arg1 installIfNotAvailable:(_Bool)arg2 minimumVersion:(id)arg3;
- (void)setIOSBundleID:(id)arg1;
- (id)init;

@end

@interface FIRAdditionalUserInfo : NSObject <NSSecureCoding>
{
    _Bool _newUser;
    NSString *_providerID;
    NSDictionary *_profile;
    NSString *_username;
}

+ (_Bool)supportsSecureCoding;
+ (id)userInfoWithVerifyAssertionResponse:(id)arg1;
@property(readonly, nonatomic, getter=isNewUser) _Bool newUser; // @synthesize newUser=_newUser;
@property(readonly, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, nonatomic) NSDictionary *profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithProviderID:(id)arg1 profile:(id)arg2 username:(id)arg3 isNewUser:(_Bool)arg4;

@end

@interface FIRActionCodeInfo : NSObject
{
    NSString *_email;
    NSString *_fromEmail;
    long long _operation;
}

+ (long long)actionCodeOperationForRequestType:(id)arg1;
@property(readonly, nonatomic) long long operation; // @synthesize operation=_operation;
- (void).cxx_destruct;
- (id)initWithOperation:(long long)arg1 email:(id)arg2 newEmail:(id)arg3;
- (id)dataForKey:(long long)arg1;

@end

@interface FIRAuth : NSObject <FIRAuthAppDelegateHandler>
{
    FIRUser *_currentUser;
    NSString *_firebaseAppName;
    NSMutableArray *_listenerHandles;
    FIRAuthKeychain *_keychain;
    _Bool _autoRefreshTokens;
    _Bool _autoRefreshScheduled;
    _Bool _isAppInBackground;
    id <NSObject> _applicationDidBecomeActiveObserver;
    id <NSObject> _applicationDidEnterBackgroundObserver;
    FIRApp *_app;
    NSString *_firebaseAppId;
    FIRAuthRequestConfiguration *_requestConfiguration;
    FIRAuthAPNSTokenManager *_tokenManager;
    FIRAuthAppCredentialManager *_appCredentialManager;
    FIRAuthNotificationManager *_notificationManager;
    FIRAuthURLPresenter *_authURLPresenter;
}

+ (void)deleteKeychainServiceNameForAppName:(id)arg1;
+ (id)keychainServiceNameForAppName:(id)arg1;
+ (void)setKeychainServiceNameForApp:(id)arg1;
+ (id)authWithApp:(id)arg1;
+ (id)auth;
+ (void)load;
@property(readonly, nonatomic) FIRAuthURLPresenter *authURLPresenter; // @synthesize authURLPresenter=_authURLPresenter;
@property(readonly, nonatomic) FIRAuthNotificationManager *notificationManager; // @synthesize notificationManager=_notificationManager;
@property(readonly, nonatomic) FIRAuthAppCredentialManager *appCredentialManager; // @synthesize appCredentialManager=_appCredentialManager;
@property(readonly, nonatomic) FIRAuthAPNSTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(readonly, copy, nonatomic) FIRAuthRequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
@property(readonly, copy, nonatomic) NSString *firebaseAppId; // @synthesize firebaseAppId=_firebaseAppId;
@property(readonly, nonatomic) __weak FIRApp *app; // @synthesize app=_app;
- (void).cxx_destruct;
- (id)getUID;
- (_Bool)getUser:(id *)arg1 error:(id *)arg2;
- (_Bool)saveUser:(id)arg1 error:(id *)arg2;
- (_Bool)updateCurrentUser:(id)arg1 byForce:(_Bool)arg2 savingToDisk:(_Bool)arg3 error:(id *)arg4;
- (CDUnknownBlockType)signInFlowAuthDataResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)signInFlowAuthResultCallbackByDecoratingCallback:(CDUnknownBlockType)arg1;
- (void)completeSignInWithAccessToken:(id)arg1 accessTokenExpirationDate:(id)arg2 refreshToken:(id)arg3 anonymous:(_Bool)arg4 callback:(CDUnknownBlockType)arg5;
- (void)scheduleAutoTokenRefreshWithDelay:(double)arg1 retry:(_Bool)arg2;
- (void)scheduleAutoTokenRefresh;
- (_Bool)updateKeychainWithUser:(id)arg1 error:(id *)arg2;
- (void)notifyListenersOfAuthStateChangeWithUser:(id)arg1 token:(id)arg2;
- (void)phoneNumberSignInWithRequest:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)signInWithPhoneCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)canHandleURL:(id)arg1;
- (_Bool)canHandleNotification:(id)arg1;
- (void)handleAPNSTokenError:(id)arg1;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
@property(retain, nonatomic) NSData *APNSToken;
@property(copy, nonatomic) NSString *additionalFrameworkMarker;
@property(copy, nonatomic) NSString *languageCode;
- (void)useAppLanguage;
- (void)removeIDTokenDidChangeListener:(id)arg1;
- (id)addIDTokenDidChangeListener:(CDUnknownBlockType)arg1;
- (void)removeAuthStateDidChangeListener:(id)arg1;
- (id)addAuthStateDidChangeListener:(CDUnknownBlockType)arg1;
- (_Bool)signOutByForceWithUserID:(id)arg1 error:(id *)arg2;
- (_Bool)signOut:(id *)arg1;
- (void)sendPasswordResetWithNullableActionCodeSettings:(id)arg1 email:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 actionCodeSettings:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendPasswordResetWithEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applyActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)verifyPasswordResetCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkActionCode:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)confirmPasswordResetWithCode:(id)arg1 newPassword:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createUserWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)signInWithCustomToken:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInAnonymouslyWithCompletion:(CDUnknownBlockType)arg1;
- (void)signInWithCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)internalSignInAndRetrieveDataWithCredential:(id)arg1 isReauthentication:(_Bool)arg2 callback:(CDUnknownBlockType)arg3;
- (void)internalSignInWithCredential:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)signInAndRetrieveDataWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)signInWithEmail:(id)arg1 password:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchProvidersForEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) FIRUser *currentUser;
- (void)dealloc;
- (id)initWithAPIKey:(id)arg1 appName:(id)arg2;
- (id)initWithApp:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthAPNSToken : NSObject
{
    NSString *_string;
    NSData *_data;
    long long _type;
}

@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *string;
- (id)initWithData:(id)arg1 type:(long long)arg2;

@end

@interface FIRAuthAPNSTokenManager : NSObject
{
    UIApplication *_application;
    NSMutableArray *_pendingCallbacks;
    FIRAuthAPNSToken *_token;
    double _timeout;
}

+ (_Bool)isProductionApp;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(retain, nonatomic) FIRAuthAPNSToken *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (void)callBackWithToken:(id)arg1 error:(id)arg2;
- (void)cancelWithError:(id)arg1;
- (void)getTokenWithCallback:(CDUnknownBlockType)arg1;
- (id)initWithApplication:(id)arg1;

@end

@interface FIRAuthAppCredential : NSObject <NSSecureCoding>
{
    NSString *_receipt;
    NSString *_secret;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) NSString *secret; // @synthesize secret=_secret;
@property(readonly, nonatomic) NSString *receipt; // @synthesize receipt=_receipt;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithReceipt:(id)arg1 secret:(id)arg2;

@end

@interface FIRAuthAppCredentialManager : NSObject
{
    FIRAuthKeychain *_keychain;
    NSMutableArray *_pendingReceipts;
    NSMutableDictionary *_callbacksByReceipt;
    FIRAuthAppCredential *_credential;
}

@property(readonly, nonatomic) FIRAuthAppCredential *credential; // @synthesize credential=_credential;
- (void).cxx_destruct;
- (void)callBackWithReceipt:(id)arg1;
- (void)saveData;
- (void)clearCredential;
- (_Bool)canFinishVerificationWithReceipt:(id)arg1 secret:(id)arg2;
- (void)didStartVerificationWithReceipt:(id)arg1 timeout:(double)arg2 callback:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long maximumNumberOfPendingReceipts;
- (id)initWithKeychain:(id)arg1;

@end

@interface FIRAuthAppDelegateProxy : NSObject
{
    id <UIApplicationDelegate> _appDelegate;
    NSMutableDictionary *_originalImplementationsBySelector;
    NSPointerArray *_handlers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (CDUnknownFunctionPointerType)originalImplementationForSelector:(SEL)arg1;
- (void)replaceSelector:(SEL)arg1 withBlock:(id)arg2;
- (id)handlers;
- (_Bool)delegateCanHandleURL:(id)arg1;
- (_Bool)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 handleOpenURL:(id)arg4;
- (_Bool)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 openURL:(id)arg4 sourceApplication:(id)arg5 annotation:(id)arg6;
- (_Bool)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 openURL:(id)arg4 options:(id)arg5;
- (void)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 didReceiveRemoteNotification:(id)arg4;
- (void)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 didReceiveRemoteNotification:(id)arg4 fetchCompletionHandler:(CDUnknownBlockType)arg5;
- (void)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 didFailToRegisterForRemoteNotificationsWithError:(id)arg4;
- (void)object:(id)arg1 selector:(SEL)arg2 application:(id)arg3 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg4;
- (void)addHandler:(id)arg1;
- (void)dealloc;
- (id)initWithApplication:(id)arg1;

@end

@interface FIRAuthCredential : NSObject
{
    NSString *_provider;
}

@property(readonly, copy, nonatomic) NSString *provider; // @synthesize provider=_provider;
- (void).cxx_destruct;
- (void)prepareVerifyAssertionRequest:(id)arg1;
- (id)initWithProvider:(id)arg1;
- (id)init;

@end

@interface FIRAuthDataResult : NSObject <NSSecureCoding>
{
    FIRUser *_user;
    FIRAdditionalUserInfo *_additionalUserInfo;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, nonatomic) FIRAdditionalUserInfo *additionalUserInfo; // @synthesize additionalUserInfo=_additionalUserInfo;
@property(readonly, nonatomic) FIRUser *user; // @synthesize user=_user;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithUser:(id)arg1 additionalUserInfo:(id)arg2;

@end

@interface FIRAuthDefaultUIDelegate : NSObject <FIRAuthUIDelegate>
{
    UIViewController *_viewController;
}

+ (id)defaultUIDelegate;
- (void).cxx_destruct;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthDispatcher : NSObject
{
    CDUnknownBlockType _dispatchAfterImplementation;
}

+ (id)sharedInstance;
@property(copy, nonatomic) CDUnknownBlockType dispatchAfterImplementation; // @synthesize dispatchAfterImplementation=_dispatchAfterImplementation;
- (void).cxx_destruct;
- (void)dispatchAfterDelay:(double)arg1 queue:(id)arg2 task:(CDUnknownBlockType)arg3;

@end

@interface FIRAuthErrorUtils : NSObject
{
}

+ (id)keychainErrorWithFunction:(id)arg1 status:(int)arg2;
+ (id)URLResponseErrorWithCode:(id)arg1 message:(id)arg2;
+ (id)appVerificationUserInteractionFailureWithReason:(id)arg1;
+ (id)webContextCancelledErrorWithMessage:(id)arg1;
+ (id)webContextAlreadyPresentedErrorWithMessage:(id)arg1;
+ (id)captchaCheckFailedErrorWithMessage:(id)arg1;
+ (id)appNotVerifiedErrorWithMessage:(id)arg1;
+ (id)notificationNotForwardedError;
+ (id)missingAppTokenErrorWithUnderlyingError:(id)arg1;
+ (id)quotaExceededErrorWithMessage:(id)arg1;
+ (id)invalidAppCredentialWithMessage:(id)arg1;
+ (id)missingAppCredentialWithMessage:(id)arg1;
+ (id)sessionExpiredErrorWithMessage:(id)arg1;
+ (id)invalidVerificationIDErrorWithMessage:(id)arg1;
+ (id)missingVerificationIDErrorWithMessage:(id)arg1;
+ (id)invalidVerificationCodeErrorWithMessage:(id)arg1;
+ (id)missingVerificationCodeErrorWithMessage:(id)arg1;
+ (id)invalidPhoneNumberErrorWithMessage:(id)arg1;
+ (id)missingPhoneNumberErrorWithMessage:(id)arg1;
+ (id)missingEmailErrorWithMessage:(id)arg1;
+ (id)missingContinueURIErrorWithMessage:(id)arg1;
+ (id)invalidContinueURIErrorWithMessage:(id)arg1;
+ (id)unauthorizedDomainErrorWithMessage:(id)arg1;
+ (id)missingAndroidPackageNameErrorWithMessage:(id)arg1;
+ (id)missingIosBundleIDErrorWithMessage:(id)arg1;
+ (id)invalidRecipientEmailErrorWithMessage:(id)arg1;
+ (id)invalidSenderErrorWithMessage:(id)arg1;
+ (id)invalidMessagePayloadErrorWithMessage:(id)arg1;
+ (id)invalidActionCodeErrorWithMessage:(id)arg1;
+ (id)expiredActionCodeErrorWithMessage:(id)arg1;
+ (id)appNotAuthorizedError;
+ (id)weakPasswordErrorWithServerResponseReason:(id)arg1;
+ (id)operationNotAllowedErrorWithMessage:(id)arg1;
+ (id)credentialAlreadyInUseErrorWithMessage:(id)arg1 credential:(id)arg2;
+ (id)userMismatchError;
+ (id)invalidAPIKeyError;
+ (id)userNotFoundErrorWithMessage:(id)arg1;
+ (id)userTokenExpiredErrorWithMessage:(id)arg1;
+ (id)noSuchProviderError;
+ (id)providerAlreadyLinkedError;
+ (id)accountExistsWithDifferentCredentialErrorWithEmail:(id)arg1;
+ (id)invalidEmailErrorWithMessage:(id)arg1;
+ (id)invalidUserTokenErrorWithMessage:(id)arg1;
+ (id)requiresRecentLoginErrorWithMessage:(id)arg1;
+ (id)invalidCredentialErrorWithMessage:(id)arg1;
+ (id)customTokenMistmatchErrorWithMessage:(id)arg1;
+ (id)invalidCustomTokenErrorWithMessage:(id)arg1;
+ (id)tooManyRequestsErrorWithMessage:(id)arg1;
+ (id)wrongPasswordErrorWithMessage:(id)arg1;
+ (id)userDisabledErrorWithMessage:(id)arg1;
+ (id)emailAlreadyInUseErrorWithEmail:(id)arg1;
+ (id)RPCResponseDecodingErrorWithDeserializedResponse:(id)arg1 underlyingError:(id)arg2;
+ (id)unexpectedResponseWithDeserializedResponse:(id)arg1 underlyingError:(id)arg2;
+ (id)unexpectedResponseWithDeserializedResponse:(id)arg1;
+ (id)unexpectedResponseWithData:(id)arg1 underlyingError:(id)arg2;
+ (id)unexpectedErrorResponseWithDeserializedResponse:(id)arg1;
+ (id)unexpectedErrorResponseWithData:(id)arg1 underlyingError:(id)arg2;
+ (id)networkErrorWithUnderlyingError:(id)arg1;
+ (id)JSONSerializationErrorWithUnderlyingError:(id)arg1;
+ (id)JSONSerializationErrorForUnencodableType;
+ (id)RPCRequestEncodingErrorWithUnderlyingError:(id)arg1;
+ (id)errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)errorWithCode:(long long)arg1 underlyingError:(id)arg2;
+ (id)errorWithCode:(long long)arg1 message:(id)arg2;
+ (id)errorWithCode:(long long)arg1;

@end

@interface FIRAuthExceptionUtils : NSObject
{
}

+ (void)raiseMethodNotImplementedExceptionWithReason:(id)arg1;
+ (void)raiseInvalidParameterExceptionWithReason:(id)arg1;

@end

@interface FIRAuthKeychain : NSObject <FIRAuthStorage>
{
    NSString *_service;
    NSMutableDictionary *_legacyEntryDeletedForKey;
}

- (void).cxx_destruct;
- (id)legacyGenericPasswordQueryWithKey:(id)arg1;
- (id)genericPasswordQueryWithKey:(id)arg1;
- (void)deleteLegacyItemWithKey:(id)arg1;
- (_Bool)deleteItemWithQuery:(id)arg1 error:(id *)arg2;
- (_Bool)setItemWithQuery:(id)arg1 attributes:(id)arg2 error:(id *)arg3;
- (id)itemWithQuery:(id)arg1 error:(id *)arg2;
- (_Bool)removeDataForKey:(id)arg1 error:(id *)arg2;
- (_Bool)setData:(id)arg1 forKey:(id)arg2 error:(id *)arg3;
- (id)dataForKey:(id)arg1 error:(id *)arg2;
- (id)initWithService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthNotificationManager : NSObject
{
    UIApplication *_application;
    FIRAuthAppCredentialManager *_appCredentialManager;
    _Bool _hasCheckedNotificationForwarding;
    _Bool _isNotificationBeingForwarded;
    NSMutableArray *_pendingCallbacks;
    double _timeout;
}

@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
- (void).cxx_destruct;
- (void)callBack;
- (_Bool)canHandleNotification:(id)arg1;
- (void)checkNotificationForwardingWithCallback:(CDUnknownBlockType)arg1;
- (id)initWithApplication:(id)arg1 appCredentialManager:(id)arg2;

@end

@interface FIRAuthSerialTaskQueue : NSObject
{
    NSObject<OS_dispatch_queue> *_dispatchQueue;
}

- (void).cxx_destruct;
- (void)enqueueTask:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface FIRAuthURLPresenter : NSObject <FIRAuthWebViewDelegate>
{
    _Bool _isPresenting;
    CDUnknownBlockType _callbackMatcher;
    SFSafariViewController *_safariViewController;
    FIRAuthWebViewController *_webViewController;
    id <FIRAuthUIDelegate> _UIDelegate;
    CDUnknownBlockType _completion;
}

- (void).cxx_destruct;
- (void)finishPresentationWithURL:(id)arg1 error:(id)arg2;
- (void)webViewController:(id)arg1 didFailWithError:(id)arg2;
- (void)webViewControllerDidCancel:(id)arg1;
- (_Bool)webViewController:(id)arg1 canHandleURL:(id)arg2;
- (void)safariViewControllerDidFinish:(id)arg1;
- (_Bool)canHandleURL:(id)arg1;
- (void)presentURL:(id)arg1 UIDelegate:(id)arg2 callbackMatcher:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthWebView : UIView
{
    UIWebView *_webView;
    UIActivityIndicatorView *_spinner;
}

@property(nonatomic) __weak UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (id)createSpinner;
- (id)createWebView;
- (void)layoutSubviews;
- (void)initializeSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FIRAuthWebViewController : UIViewController
{
    NSURL *_URL;
    id <FIRAuthWebViewDelegate> _delegate;
    FIRAuthWebView *_webView;
}

- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)cancel;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithURL:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSecureTokenService : NSObject <NSSecureCoding>
{
    FIRAuthSerialTaskQueue *_taskQueue;
    NSString *_authorizationCode;
    NSString *_accessToken;
    FIRAuthRequestConfiguration *_requestConfiguration;
    NSString *_refreshToken;
    NSDate *_accessTokenExpirationDate;
}

+ (_Bool)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSDate *accessTokenExpirationDate; // @synthesize accessTokenExpirationDate=_accessTokenExpirationDate;
@property(readonly, copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(retain, nonatomic) FIRAuthRequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
- (void).cxx_destruct;
- (_Bool)hasValidAccessToken;
- (void)requestAccessToken:(CDUnknownBlockType)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
@property(readonly, copy, nonatomic) NSString *rawAccessToken;
- (void)fetchAccessTokenForcingRefresh:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (id)initWithRequestConfiguration:(id)arg1 accessToken:(id)arg2 accessTokenExpirationDate:(id)arg3 refreshToken:(id)arg4;
- (id)initWithRequestConfiguration:(id)arg1 authorizationCode:(id)arg2;
- (id)init;

@end

@interface FIRUser : NSObject <NSSecureCoding, FIRUserInfo>
{
    _Bool _hasEmailPasswordCredential;
    NSDictionary *_providerData;
    FIRAuthSerialTaskQueue *_taskQueue;
    FIRSecureTokenService *_tokenService;
    _Bool _anonymous;
    _Bool _emailVerified;
    NSString *_userID;
    NSString *_displayName;
    NSURL *_photoURL;
    NSString *_email;
    NSString *_phoneNumber;
    FIRAuth *_auth;
}

+ (_Bool)supportsSecureCoding;
+ (void)retrieveUserWithAuth:(id)arg1 accessToken:(id)arg2 accessTokenExpirationDate:(id)arg3 refreshToken:(id)arg4 anonymous:(_Bool)arg5 callback:(CDUnknownBlockType)arg6;
@property(nonatomic) __weak FIRAuth *auth; // @synthesize auth=_auth;
@property(readonly, nonatomic, getter=isEmailVerified) _Bool emailVerified; // @synthesize emailVerified=_emailVerified;
@property(readonly, nonatomic, getter=isAnonymous) _Bool anonymous; // @synthesize anonymous=_anonymous;
@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, copy, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy, nonatomic) NSString *uid; // @synthesize uid=_userID;
- (void).cxx_destruct;
- (void)deleteWithCompletion:(CDUnknownBlockType)arg1;
- (void)sendEmailVerificationWithNullableActionCodeSettings:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendEmailVerificationWithActionCodeSettings:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendEmailVerificationWithCompletion:(CDUnknownBlockType)arg1;
- (void)unlinkFromProvider:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)linkAndRetrieveDataWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)linkWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)internalGetTokenForcingRefresh:(_Bool)arg1 callback:(CDUnknownBlockType)arg2;
- (void)internalGetTokenWithCallback:(CDUnknownBlockType)arg1;
- (void)getTokenForcingRefresh:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getIDTokenForcingRefresh:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)getTokenWithCompletion:(CDUnknownBlockType)arg1;
- (void)getIDTokenWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *refreshToken;
- (void)reauthenticateAndRetrieveDataWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reauthenticateWithCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)reloadWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSDate *accessTokenExpirationDate;
@property(readonly, copy, nonatomic) NSString *rawAccessToken;
- (void)setPhotoURL:(id)arg1;
- (void)setDisplayName:(id)arg1;
- (id)profileChangeRequest;
- (void)updatePhoneNumberCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)internalUpdatePhoneNumberCredential:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updatePassword:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateEmail:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateEmail:(id)arg1 password:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)setTokenService:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)updateKeychain:(id *)arg1;
- (void)executeUserUpdateWithChanges:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2;
- (void)updateWithGetAccountInfoResponse:(id)arg1;
- (void)getAccountInfoRefreshingCache:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *providerData;
@property(readonly, copy, nonatomic) NSString *providerID;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTokenService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRUserProfileChangeRequest : NSObject
{
    FIRUser *_user;
    NSString *_displayName;
    _Bool _displayNameSet;
    NSURL *_photoURL;
    _Bool _photoURLSet;
    _Bool _consumed;
}

- (void).cxx_destruct;
- (void)commitChangesWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)hasUpdates;
@property(copy, nonatomic) NSURL *photoURL;
@property(copy, nonatomic) NSString *displayName;
- (id)initWithUser:(id)arg1;

@end

@interface FIRUserInfoImpl : NSObject <FIRUserInfo, NSSecureCoding>
{
    NSString *_providerID;
    NSString *_userID;
    NSString *_displayName;
    NSURL *_photoURL;
    NSString *_email;
    NSString *_phoneNumber;
}

+ (_Bool)supportsSecureCoding;
+ (id)userInfoWithGetAccountInfoResponseProviderUserInfo:(id)arg1;
@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, copy, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, copy, nonatomic) NSString *uid; // @synthesize uid=_userID;
@property(readonly, copy, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithProviderID:(id)arg1 userID:(id)arg2 displayName:(id)arg3 photoURL:(id)arg4 email:(id)arg5 phoneNumber:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthBackend : NSObject
{
}

+ (id)authUserAgent;
+ (void)resetPassword:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)verifyClient:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)verifyPhoneNumber:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)sendVerificationCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)deleteAccount:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)signUpNewUser:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)getOOBConfirmationCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)secureToken:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)verifyPassword:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)verifyCustomToken:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)verifyAssertion:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)setAccountInfo:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)getProjectConfig:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)getAccountInfo:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)createAuthURI:(id)arg1 callback:(CDUnknownBlockType)arg2;
+ (void)setDefaultBackendImplementationWithRPCIssuer:(id)arg1;
+ (void)setBackendImplementation:(id)arg1;
+ (id)implementation;

@end

@interface FIRAuthBackendRPCIssuerImplementation : NSObject <FIRAuthBackendRPCIssuer>
{
    GTMSessionFetcherService *_fetcherService;
}

- (void).cxx_destruct;
- (void)asyncPostToURLWithRequestConfiguration:(id)arg1 URL:(id)arg2 body:(id)arg3 contentType:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthBackendRPCImplementation : NSObject <FIRAuthBackendImplementation>
{
    id <FIRAuthBackendRPCIssuer> _RPCIssuer;
}

+ (id)clientErrorWithServerErrorMessage:(id)arg1 errorDictionary:(id)arg2 response:(id)arg3;
@property(retain, nonatomic) id <FIRAuthBackendRPCIssuer> RPCIssuer; // @synthesize RPCIssuer=_RPCIssuer;
- (void).cxx_destruct;
- (void)postWithRequest:(id)arg1 response:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)resetPassword:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)verifyClient:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)verifyPhoneNumber:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)sendVerificationCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)deleteAccount:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)signUpNewUser:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getOOBConfirmationCode:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)secureToken:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)verifyPassword:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)verifyCustomToken:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)verifyAssertion:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)setAccountInfo:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getProjectConfig:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)getAccountInfo:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)createAuthURI:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAuthRequestConfiguration : NSObject
{
    NSString *_APIKey;
    NSString *_languageCode;
    NSString *_additionalFrameworkMarker;
}

@property(copy, nonatomic) NSString *additionalFrameworkMarker; // @synthesize additionalFrameworkMarker=_additionalFrameworkMarker;
@property(copy, nonatomic) NSString *languageCode; // @synthesize languageCode=_languageCode;
@property(readonly, copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (id)initWithAPIKey:(id)arg1;

@end

@interface FIRCreateAuthURIRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_identifier;
    NSString *_continueURI;
    NSString *_openIDRealm;
    NSString *_providerID;
    NSString *_clientID;
    NSString *_context;
    NSString *_appID;
}

@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(copy, nonatomic) NSString *context; // @synthesize context=_context;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
@property(copy, nonatomic) NSString *openIDRealm; // @synthesize openIDRealm=_openIDRealm;
@property(copy, nonatomic) NSString *continueURI; // @synthesize continueURI=_continueURI;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithIdentifier:(id)arg1 continueURI:(id)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRCreateAuthURIResponse : NSObject <FIRAuthRPCResponse>
{
    _Bool _registered;
    _Bool _forExistingProvider;
    NSString *_authURI;
    NSString *_providerID;
    NSArray *_allProviders;
}

@property(readonly, copy, nonatomic) NSArray *allProviders; // @synthesize allProviders=_allProviders;
@property(readonly, nonatomic) _Bool forExistingProvider; // @synthesize forExistingProvider=_forExistingProvider;
@property(readonly, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
@property(readonly, nonatomic) _Bool registered; // @synthesize registered=_registered;
@property(readonly, nonatomic) NSString *authURI; // @synthesize authURI=_authURI;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDeleteAccountRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_accessToken;
    NSString *_localID;
}

- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWitLocalID:(id)arg1 accessToken:(id)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDeleteAccountResponse : NSObject <FIRAuthRPCResponse>
{
}

- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetAccountInfoRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_accessToken;
}

@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithAccessToken:(id)arg1 requestConfiguration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetAccountInfoResponseProviderUserInfo : NSObject
{
    NSString *_providerID;
    NSString *_displayName;
    NSURL *_photoURL;
    NSString *_federatedID;
    NSString *_email;
    NSString *_phoneNumber;
}

@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, nonatomic) NSString *federatedID; // @synthesize federatedID=_federatedID;
@property(readonly, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface FIRGetAccountInfoResponseUser : NSObject
{
    _Bool _emailVerified;
    NSString *_localID;
    NSString *_email;
    NSString *_displayName;
    NSURL *_photoURL;
    NSArray *_providerUserInfo;
    NSString *_passwordHash;
    NSString *_phoneNumber;
}

@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *passwordHash; // @synthesize passwordHash=_passwordHash;
@property(readonly, nonatomic) NSArray *providerUserInfo; // @synthesize providerUserInfo=_providerUserInfo;
@property(readonly, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) _Bool emailVerified; // @synthesize emailVerified=_emailVerified;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, nonatomic) NSString *localID; // @synthesize localID=_localID;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface FIRGetAccountInfoResponse : NSObject <FIRAuthRPCResponse>
{
    NSArray *_users;
}

@property(readonly, nonatomic) NSArray *users; // @synthesize users=_users;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetOOBConfirmationCodeRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _androidInstallApp;
    _Bool _handleCodeInApp;
    long long _requestType;
    NSString *_email;
    NSString *_accessToken;
    NSString *_continueURL;
    NSString *_iOSBundleID;
    NSString *_androidPackageName;
    NSString *_androidMinimumVersion;
}

+ (id)verifyEmailRequestWithAccessToken:(id)arg1 actionCodeSettings:(id)arg2 requestConfiguration:(id)arg3;
+ (id)passwordResetRequestWithEmail:(id)arg1 actionCodeSettings:(id)arg2 requestConfiguration:(id)arg3;
+ (id)requestTypeStringValueForRequestType:(long long)arg1;
@property(nonatomic) _Bool handleCodeInApp; // @synthesize handleCodeInApp=_handleCodeInApp;
@property(readonly, nonatomic) _Bool androidInstallApp; // @synthesize androidInstallApp=_androidInstallApp;
@property(readonly, copy, nonatomic) NSString *androidMinimumVersion; // @synthesize androidMinimumVersion=_androidMinimumVersion;
@property(readonly, copy, nonatomic) NSString *androidPackageName; // @synthesize androidPackageName=_androidPackageName;
@property(readonly, copy, nonatomic) NSString *iOSBundleID; // @synthesize iOSBundleID=_iOSBundleID;
@property(readonly, copy, nonatomic) NSString *continueURL; // @synthesize continueURL=_continueURL;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, nonatomic) long long requestType; // @synthesize requestType=_requestType;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithRequestType:(long long)arg1 email:(id)arg2 accessToken:(id)arg3 actionCodeSettings:(id)arg4 requestConfiguration:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetOOBConfirmationCodeResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_OOBCode;
}

@property(readonly, copy, nonatomic) NSString *OOBCode; // @synthesize OOBCode=_OOBCode;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetProjectConfigRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
}

- (_Bool)containsPostBody;
- (id)initWithRequestConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRGetProjectConfigResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_projectID;
    NSArray *_authorizedDomains;
}

@property(readonly, nonatomic) NSArray *authorizedDomains; // @synthesize authorizedDomains=_authorizedDomains;
@property(readonly, nonatomic) NSString *projectID; // @synthesize projectID=_projectID;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRIdentityToolkitRequest : NSObject
{
    FIRAuthRequestConfiguration *_requestConfiguration;
    NSString *_endpoint;
    NSString *_APIKey;
}

+ (void)setHost:(id)arg1;
+ (id)host;
@property(readonly, copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(readonly, copy, nonatomic) NSString *endpoint; // @synthesize endpoint=_endpoint;
- (void).cxx_destruct;
- (id)requestConfiguration;
- (id)requestURL;
- (_Bool)containsPostBody;
- (id)initWithEndpoint:(id)arg1 requestConfiguration:(id)arg2;

@end

@interface FIRResetPasswordRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_oobCode;
    NSString *_updatedPassword;
}

@property(readonly, copy, nonatomic) NSString *updatedPassword; // @synthesize updatedPassword=_updatedPassword;
@property(readonly, copy, nonatomic) NSString *oobCode; // @synthesize oobCode=_oobCode;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithOobCode:(id)arg1 newPassword:(id)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRResetPasswordResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_email;
    NSString *_verifiedEmail;
    NSString *_requestType;
}

@property(readonly, nonatomic) NSString *requestType; // @synthesize requestType=_requestType;
@property(readonly, nonatomic) NSString *verifiedEmail; // @synthesize verifiedEmail=_verifiedEmail;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSecureTokenRequest : NSObject <FIRAuthRPCRequest>
{
    FIRAuthRequestConfiguration *_requestConfiguration;
    unsigned long long _grantType;
    NSString *_scope;
    NSString *_refreshToken;
    NSString *_code;
    NSString *_APIKey;
}

+ (void)setHost:(id)arg1;
+ (id)host;
+ (id)grantTypeStringWithGrantType:(unsigned long long)arg1;
+ (id)refreshRequestWithRefreshToken:(id)arg1 requestConfiguration:(id)arg2;
+ (id)authCodeRequestWithCode:(id)arg1 requestConfiguration:(id)arg2;
@property(readonly, copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
@property(readonly, copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, nonatomic) unsigned long long grantType; // @synthesize grantType=_grantType;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (_Bool)containsPostBody;
- (id)requestURL;
- (id)requestConfiguration;
- (id)initWithGrantType:(unsigned long long)arg1 scope:(id)arg2 refreshToken:(id)arg3 code:(id)arg4 requestConfiguration:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSecureTokenResponse : NSObject <FIRAuthRPCResponse>
{
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
    NSString *_accessToken;
    NSString *_IDToken;
}

@property(readonly, copy, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;
- (id)expectedKind;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSendVerificationCodeRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_phoneNumber;
    FIRAuthAppCredential *_appCredential;
    NSString *_reCAPTCHAToken;
}

@property(readonly, nonatomic) NSString *reCAPTCHAToken; // @synthesize reCAPTCHAToken=_reCAPTCHAToken;
@property(readonly, nonatomic) FIRAuthAppCredential *appCredential; // @synthesize appCredential=_appCredential;
@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithPhoneNumber:(id)arg1 appCredential:(id)arg2 reCAPTCHAToken:(id)arg3 requestConfiguration:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSendVerificationCodeResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_verificationID;
}

@property(readonly, nonatomic) NSString *verificationID; // @synthesize verificationID=_verificationID;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;
- (id)expectedKind;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSetAccountInfoRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _emailVerified;
    _Bool _upgradeToFederatedLogin;
    _Bool _returnSecureToken;
    NSString *_accessToken;
    NSString *_displayName;
    NSString *_localID;
    NSString *_email;
    NSURL *_photoURL;
    NSString *_password;
    NSArray *_providers;
    NSString *_OOBCode;
    NSString *_captchaChallenge;
    NSString *_captchaResponse;
    NSArray *_deleteAttributes;
    NSArray *_deleteProviders;
}

@property(nonatomic) _Bool returnSecureToken; // @synthesize returnSecureToken=_returnSecureToken;
@property(copy, nonatomic) NSArray *deleteProviders; // @synthesize deleteProviders=_deleteProviders;
@property(copy, nonatomic) NSArray *deleteAttributes; // @synthesize deleteAttributes=_deleteAttributes;
@property(copy, nonatomic) NSString *captchaResponse; // @synthesize captchaResponse=_captchaResponse;
@property(copy, nonatomic) NSString *captchaChallenge; // @synthesize captchaChallenge=_captchaChallenge;
@property(nonatomic) _Bool upgradeToFederatedLogin; // @synthesize upgradeToFederatedLogin=_upgradeToFederatedLogin;
@property(nonatomic) _Bool emailVerified; // @synthesize emailVerified=_emailVerified;
@property(copy, nonatomic) NSString *OOBCode; // @synthesize OOBCode=_OOBCode;
@property(copy, nonatomic) NSArray *providers; // @synthesize providers=_providers;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(copy, nonatomic) NSString *localID; // @synthesize localID=_localID;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithRequestConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSetAccountInfoResponseProviderUserInfo : NSObject
{
    NSString *_providerID;
    NSString *_displayName;
    NSURL *_photoURL;
}

@property(readonly, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface FIRSetAccountInfoResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_email;
    NSString *_displayName;
    NSArray *_providerUserInfo;
    NSString *_IDToken;
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
}

@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
@property(readonly, nonatomic) NSArray *providerUserInfo; // @synthesize providerUserInfo=_providerUserInfo;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSignUpNewUserRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _returnSecureToken;
    NSString *_email;
    NSString *_password;
    NSString *_displayName;
}

@property(nonatomic) _Bool returnSecureToken; // @synthesize returnSecureToken=_returnSecureToken;
@property(copy, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithRequestConfiguration:(id)arg1;
- (id)initWithEmail:(id)arg1 password:(id)arg2 displayName:(id)arg3 requestConfiguration:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRSignUpNewUserResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_IDToken;
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
}

@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyAssertionRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _returnSecureToken;
    _Bool _autoCreate;
    NSString *_requestURI;
    NSString *_pendingIDToken;
    NSString *_accessToken;
    NSString *_providerID;
    NSString *_providerAccessToken;
    NSString *_providerIDToken;
    NSString *_providerOAuthTokenSecret;
    NSString *_inputEmail;
}

@property(nonatomic) _Bool autoCreate; // @synthesize autoCreate=_autoCreate;
@property(copy, nonatomic) NSString *inputEmail; // @synthesize inputEmail=_inputEmail;
@property(copy, nonatomic) NSString *providerOAuthTokenSecret; // @synthesize providerOAuthTokenSecret=_providerOAuthTokenSecret;
@property(copy, nonatomic) NSString *providerIDToken; // @synthesize providerIDToken=_providerIDToken;
@property(copy, nonatomic) NSString *providerAccessToken; // @synthesize providerAccessToken=_providerAccessToken;
@property(readonly, copy, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
@property(nonatomic) _Bool returnSecureToken; // @synthesize returnSecureToken=_returnSecureToken;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(copy, nonatomic) NSString *pendingIDToken; // @synthesize pendingIDToken=_pendingIDToken;
@property(copy, nonatomic) NSString *requestURI; // @synthesize requestURI=_requestURI;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithProviderID:(id)arg1 requestConfiguration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyAssertionResponse : NSObject <FIRAuthRPCResponse>
{
    _Bool _needConfirmation;
    _Bool _emailRecycled;
    _Bool _emailVerified;
    _Bool _isNewUser;
    NSString *_federatedID;
    NSString *_providerID;
    NSString *_localID;
    NSString *_email;
    NSString *_inputEmail;
    NSString *_originalEmail;
    NSString *_oauthRequestToken;
    NSString *_oauthScope;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_fullName;
    NSString *_nickName;
    NSString *_displayName;
    NSString *_IDToken;
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
    NSString *_action;
    NSString *_language;
    NSString *_timeZone;
    NSURL *_photoURL;
    NSString *_dateOfBirth;
    NSString *_context;
    NSArray *_verifiedProvider;
    NSDictionary *_profile;
    NSString *_username;
}

@property(readonly, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, nonatomic) NSDictionary *profile; // @synthesize profile=_profile;
@property(nonatomic) _Bool isNewUser; // @synthesize isNewUser=_isNewUser;
@property(nonatomic) _Bool emailVerified; // @synthesize emailVerified=_emailVerified;
@property(nonatomic) _Bool emailRecycled; // @synthesize emailRecycled=_emailRecycled;
@property(nonatomic) _Bool needConfirmation; // @synthesize needConfirmation=_needConfirmation;
@property(readonly, nonatomic) NSArray *verifiedProvider; // @synthesize verifiedProvider=_verifiedProvider;
@property(readonly, nonatomic) NSString *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSString *dateOfBirth; // @synthesize dateOfBirth=_dateOfBirth;
@property(readonly, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, nonatomic) NSString *timeZone; // @synthesize timeZone=_timeZone;
@property(readonly, nonatomic) NSString *language; // @synthesize language=_language;
@property(readonly, nonatomic) NSString *action; // @synthesize action=_action;
@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *nickName; // @synthesize nickName=_nickName;
@property(readonly, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(readonly, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(readonly, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(readonly, nonatomic) NSString *oauthScope; // @synthesize oauthScope=_oauthScope;
@property(readonly, nonatomic) NSString *oauthRequestToken; // @synthesize oauthRequestToken=_oauthRequestToken;
@property(readonly, nonatomic) NSString *originalEmail; // @synthesize originalEmail=_originalEmail;
@property(readonly, nonatomic) NSString *inputEmail; // @synthesize inputEmail=_inputEmail;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, nonatomic) NSString *localID; // @synthesize localID=_localID;
@property(readonly, nonatomic) NSString *providerID; // @synthesize providerID=_providerID;
@property(readonly, nonatomic) NSString *federatedID; // @synthesize federatedID=_federatedID;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyClientRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _isSandbox;
    NSString *_appToken;
}

@property(readonly, nonatomic) _Bool isSandbox; // @synthesize isSandbox=_isSandbox;
@property(readonly, nonatomic) NSString *appToken; // @synthesize appToken=_appToken;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithAppToken:(id)arg1 isSandbox:(_Bool)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyClientResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_receipt;
    NSDate *_suggestedTimeOutDate;
}

@property(readonly, copy, nonatomic) NSDate *suggestedTimeOutDate; // @synthesize suggestedTimeOutDate=_suggestedTimeOutDate;
@property(readonly, copy, nonatomic) NSString *receipt; // @synthesize receipt=_receipt;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyCustomTokenRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _returnSecureToken;
    NSString *_token;
}

@property(nonatomic) _Bool returnSecureToken; // @synthesize returnSecureToken=_returnSecureToken;
@property(readonly, copy, nonatomic) NSString *token; // @synthesize token=_token;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithToken:(id)arg1 requestConfiguration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyCustomTokenResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_IDToken;
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
}

@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyPasswordRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    _Bool _returnSecureToken;
    NSString *_email;
    NSString *_password;
    NSString *_pendingIDToken;
    NSString *_captchaChallenge;
    NSString *_captchaResponse;
}

@property(nonatomic) _Bool returnSecureToken; // @synthesize returnSecureToken=_returnSecureToken;
@property(copy, nonatomic) NSString *captchaResponse; // @synthesize captchaResponse=_captchaResponse;
@property(copy, nonatomic) NSString *captchaChallenge; // @synthesize captchaChallenge=_captchaChallenge;
@property(copy, nonatomic) NSString *pendingIDToken; // @synthesize pendingIDToken=_pendingIDToken;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithEmail:(id)arg1 password:(id)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyPasswordResponse : NSObject <FIRAuthRPCResponse>
{
    NSString *_localID;
    NSString *_email;
    NSString *_displayName;
    NSString *_IDToken;
    NSDate *_approximateExpirationDate;
    NSString *_refreshToken;
    NSURL *_photoURL;
}

@property(readonly, nonatomic) NSURL *photoURL; // @synthesize photoURL=_photoURL;
@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
@property(readonly, nonatomic) NSString *displayName; // @synthesize displayName=_displayName;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
@property(readonly, nonatomic) NSString *localID; // @synthesize localID=_localID;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyPhoneNumberRequest : FIRIdentityToolkitRequest <FIRAuthRPCRequest>
{
    NSString *_verificationID;
    NSString *_verificationCode;
    NSString *_accessToken;
    NSString *_temporaryProof;
    NSString *_phoneNumber;
}

@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *temporaryProof; // @synthesize temporaryProof=_temporaryProof;
@property(copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) NSString *verificationCode; // @synthesize verificationCode=_verificationCode;
@property(readonly, nonatomic) NSString *verificationID; // @synthesize verificationID=_verificationID;
- (void).cxx_destruct;
- (id)unencodedHTTPRequestBodyWithError:(id *)arg1;
- (id)initWithVerificationID:(id)arg1 verificationCode:(id)arg2 requestConfiguration:(id)arg3;
- (id)initWithTemporaryProof:(id)arg1 phoneNumber:(id)arg2 requestConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRVerifyPhoneNumberResponse : NSObject <FIRAuthRPCResponse>
{
    _Bool _isNewUser;
    NSString *_IDToken;
    NSString *_refreshToken;
    NSString *_localID;
    NSString *_phoneNumber;
    NSString *_temporaryProof;
    NSDate *_approximateExpirationDate;
}

@property(readonly, copy, nonatomic) NSDate *approximateExpirationDate; // @synthesize approximateExpirationDate=_approximateExpirationDate;
@property(nonatomic) _Bool isNewUser; // @synthesize isNewUser=_isNewUser;
@property(readonly, nonatomic) NSString *temporaryProof; // @synthesize temporaryProof=_temporaryProof;
@property(readonly, nonatomic) NSString *phoneNumber; // @synthesize phoneNumber=_phoneNumber;
@property(readonly, nonatomic) NSString *localID; // @synthesize localID=_localID;
@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, nonatomic) NSString *IDToken; // @synthesize IDToken=_IDToken;
- (void).cxx_destruct;
- (_Bool)setWithDictionary:(id)arg1 error:(id *)arg2;
- (id)expectedKind;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRAnalyticsConfiguration : NSObject
{
}

+ (id)sharedInstance;
- (void)setAnalyticsCollectionEnabled:(_Bool)arg1;
- (void)setSessionTimeoutInterval:(double)arg1;
- (void)setMinimumSessionInterval:(double)arg1;
- (void)postNotificationName:(id)arg1 value:(id)arg2;

@end

@interface FIRApp : NSObject
{
    _Bool _alreadySentConfigureNotification;
    _Bool _alreadySentDeleteNotification;
    FIROptions *_options;
    NSString *_name;
    CDUnknownBlockType _getTokenImplementation;
    CDUnknownBlockType _getUIDImplementation;
}

+ (_Bool)validateAppIDFingerprint:(id)arg1 withVersion:(id)arg2;
+ (_Bool)validateAppIDFormat:(id)arg1 withVersion:(id)arg2;
+ (id)actualBundleID;
+ (_Bool)validateAppID:(id)arg1;
+ (_Bool)isDefaultAppConfigured;
+ (id)errorForInvalidAppID;
+ (id)errorForSubspecConfigurationFailureWithDomain:(id)arg1 errorCode:(long long)arg2 service:(id)arg3 reason:(id)arg4;
+ (id)errorForMissingOptions;
+ (void)sendNotificationsToSDKs:(id)arg1;
+ (void)addAppToAppDictionary:(id)arg1;
+ (void)resetApps;
+ (id)allApps;
+ (id)appNamed:(id)arg1;
+ (id)defaultApp;
+ (void)configureWithName:(id)arg1 options:(id)arg2;
+ (void)configureDefaultAppWithOptions:(id)arg1 sendingNotifications:(_Bool)arg2;
+ (void)configureWithoutSendingNotification;
+ (void)configureWithOptions:(id)arg1;
+ (void)configure;
@property(copy, nonatomic) CDUnknownBlockType getUIDImplementation; // @synthesize getUIDImplementation=_getUIDImplementation;
@property(copy, nonatomic) CDUnknownBlockType getTokenImplementation; // @synthesize getTokenImplementation=_getTokenImplementation;
@property(nonatomic) _Bool alreadySentDeleteNotification; // @synthesize alreadySentDeleteNotification=_alreadySentDeleteNotification;
@property(nonatomic) _Bool alreadySentConfigureNotification; // @synthesize alreadySentConfigureNotification=_alreadySentConfigureNotification;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)sendLogsWithServiceName:(id)arg1 version:(id)arg2 error:(id)arg3;
- (id)expectedBundleID;
- (_Bool)isAppIDValid;
- (id)getUID;
- (void)checkExpectedBundleID;
@property(readonly, copy, nonatomic) FIROptions *options; // @synthesize options=_options;
- (_Bool)configureCore;
- (void)getTokenForcingRefresh:(_Bool)arg1 withCallback:(CDUnknownBlockType)arg2;
- (id)initInstanceWithName:(id)arg1 options:(id)arg2;
- (void)deleteApp:(CDUnknownBlockType)arg1;

@end

@interface FIRAppAssociationRegistration : NSObject
{
}

+ (id)registeredObjectWithHost:(id)arg1 key:(id)arg2 creationBlock:(CDUnknownBlockType)arg3;

@end

@interface FIRBundleUtil : NSObject
{
}

+ (_Bool)hasBundleIdentifier:(id)arg1 inBundles:(id)arg2;
+ (id)relevantURLSchemes;
+ (id)optionsDictionaryPathWithResourceName:(id)arg1 andFileType:(id)arg2 inBundles:(id)arg3;
+ (id)relevantBundles;

@end

@interface FIRConfiguration : NSObject
{
    FIRAnalyticsConfiguration *_analyticsConfiguration;
    long long _logLevel;
}

+ (id)sharedInstance;
@property(nonatomic) long long logLevel; // @synthesize logLevel=_logLevel;
@property(retain, nonatomic) FIRAnalyticsConfiguration *analyticsConfiguration; // @synthesize analyticsConfiguration=_analyticsConfiguration;
- (void).cxx_destruct;
- (void)setLoggerLevel:(long long)arg1;
- (id)init;

@end

@interface FIRLoggerWrapper : NSObject
{
}

+ (void)logWithLevel:(long long)arg1 withService:(id)arg2 withCode:(id)arg3 withMessage:(id)arg4 withArgs:(char *)arg5;

@end

@interface FIRMutableDictionary : NSObject
{
    NSMutableDictionary *_objects;
    NSObject<OS_dispatch_queue> *_queue;
}

- (void).cxx_destruct;
- (id)dictionary;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (unsigned long long)count;
- (void)removeAllObjects;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (id)description;
- (id)init;

@end

@interface FIRNetwork : NSObject <FIRReachabilityDelegate, FIRNetworkLoggerDelegate>
{
    FIRReachabilityChecker *_reachability;
    FIRMutableDictionary *_requests;
    _Bool _networkConnected;
    _Bool _isDebugModeEnabled;
    id <FIRNetworkReachabilityDelegate> _reachabilityDelegate;
    id <FIRNetworkLoggerDelegate> _loggerDelegate;
    double _timeoutInterval;
}

+ (void)handleEventsForBackgroundURLSessionID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) _Bool isDebugModeEnabled; // @synthesize isDebugModeEnabled=_isDebugModeEnabled;
@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=_loggerDelegate;
@property(nonatomic) __weak id <FIRNetworkReachabilityDelegate> reachabilityDelegate; // @synthesize reachabilityDelegate=_reachabilityDelegate;
@property(readonly, nonatomic, getter=isNetworkConnected) _Bool networkConnected; // @synthesize networkConnected=_networkConnected;
- (void).cxx_destruct;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 context:(id)arg4;
- (void)firNetwork_logWithLevel:(long long)arg1 messageCode:(long long)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)handleErrorWithCode:(long long)arg1 queue:(id)arg2 withHandler:(CDUnknownBlockType)arg3;
- (void)reachability:(id)arg1 statusChanged:(int)arg2;
@property(readonly, nonatomic, getter=hasUploadInProgress) _Bool uploadInProgress;
- (id)getURL:(id)arg1 headers:(id)arg2 queue:(id)arg3 usingBackgroundSession:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)postURL:(id)arg1 payload:(id)arg2 queue:(id)arg3 usingBackgroundSession:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)dealloc;
- (id)initWithReachabilityHost:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRNetworkURLSession : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDownloadDelegate>
{
    CDUnknownBlockType _completionHandler;
    NSString *_sessionID;
    NSURLSessionConfiguration *_sessionConfig;
    NSURL *_networkDirectoryURL;
    NSData *_downloadedData;
    NSURL *_uploadingFileURL;
    NSURLRequest *_request;
    _Bool _backgroundNetworkEnabled;
    id <FIRNetworkLoggerDelegate> _loggerDelegate;
}

+ (id)sessionIDToSystemCompletionHandlerDictionary;
+ (id)sessionIDToFetcherMap;
+ (id)fetcherWithSessionIdentifier:(id)arg1;
+ (void)handleEventsForBackgroundURLSessionID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=_loggerDelegate;
@property(nonatomic, getter=isBackgroundNetworkEnabled) _Bool backgroundNetworkEnabled; // @synthesize backgroundNetworkEnabled=_backgroundNetworkEnabled;
- (void).cxx_destruct;
- (void)populateSessionConfig:(id)arg1 withRequest:(id)arg2;
- (void)callCompletionHandler:(CDUnknownBlockType)arg1 withResponse:(id)arg2 data:(id)arg3 error:(id)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)excludeFromBackupForURL:(id)arg1;
- (_Bool)ensureTemporaryDirectoryExists;
- (id)temporaryFilePathWithSessionID:(id)arg1;
- (void)removeTempItemAtURL:(id)arg1;
- (void)maybeRemoveTempFilesAtURL:(id)arg1 expiringTime:(double)arg2;
- (id)backgroundSessionConfigWithSessionID:(id)arg1;
- (void)setSessionID:(id)arg1;
- (void)callSystemCompletionHandler:(id)arg1;
- (void)addSystemCompletionHandler:(CDUnknownBlockType)arg1 forSession:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (id)sessionIDFromAsyncGETRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)sessionIDFromAsyncPOSTRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithNetworkLoggerDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIROptions : NSObject <NSCopying>
{
    NSDictionary *_analyticsOptionsDictionary;
    long long _createAnalyticsOptionsDictionaryOnce;
    _Bool _usingOptionsFromDefaultPlist;
    _Bool _editingLocked;
    NSString *_deepLinkURLScheme;
    NSMutableDictionary *_optionsDictionary;
}

+ (void)resetDefaultOptions;
+ (id)plistFilePathWithName:(id)arg1;
+ (id)defaultOptionsDictionary;
+ (id)defaultOptions;
@property(nonatomic, getter=isEditingLocked) _Bool editingLocked; // @synthesize editingLocked=_editingLocked;
@property(nonatomic) _Bool usingOptionsFromDefaultPlist; // @synthesize usingOptionsFromDefaultPlist=_usingOptionsFromDefaultPlist;
@property(retain, nonatomic) NSMutableDictionary *optionsDictionary; // @synthesize optionsDictionary=_optionsDictionary;
@property(copy, nonatomic) NSString *deepLinkURLScheme; // @synthesize deepLinkURLScheme=_deepLinkURLScheme;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isSignInEnabled;
@property(readonly, nonatomic) _Bool isAnalyticsEnabled;
@property(readonly, nonatomic) _Bool isAnalyticsCollectionDeactivated;
@property(readonly, nonatomic) _Bool isAnalyticsCollectionEnabled;
@property(readonly, nonatomic) _Bool isMeasurementEnabled;
@property(readonly, nonatomic) NSDictionary *analyticsOptionsDictionary;
@property(copy, nonatomic) NSString *bundleID;
@property(copy, nonatomic) NSString *storageBucket;
@property(copy, nonatomic) NSString *databaseURL;
- (void)setLibraryVersionID:(id)arg1;
@property(readonly, copy, nonatomic) NSString *libraryVersionID;
@property(copy, nonatomic) NSString *googleAppID;
@property(copy, nonatomic) NSString *androidClientID;
@property(copy, nonatomic) NSString *projectID;
@property(copy, nonatomic) NSString *GCMSenderID;
@property(copy, nonatomic) NSString *trackingID;
@property(copy, nonatomic) NSString *clientID;
@property(copy, nonatomic) NSString *APIKey;
- (void)checkEditingLocked;
- (id)initWithGoogleAppID:(id)arg1 GCMSenderID:(id)arg2;
- (id)initWithContentsOfFile:(id)arg1;
- (id)initWithGoogleAppID:(id)arg1 bundleID:(id)arg2 GCMSenderID:(id)arg3 APIKey:(id)arg4 clientID:(id)arg5 trackingID:(id)arg6 androidClientID:(id)arg7 databaseURL:(id)arg8 storageBucket:(id)arg9 deepLinkURLScheme:(id)arg10;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initInternalWithOptionsDictionary:(id)arg1;

@end

@interface FIRReachabilityChecker : NSObject
{
    int reachabilityStatus_;
    const struct FIRReachabilityApi *reachabilityApi_;
    struct __SCNetworkReachability *reachability_;
    NSString *host_;
    id <FIRReachabilityDelegate> reachabilityDelegate_;
    id <FIRNetworkLoggerDelegate> loggerDelegate_;
}

@property(nonatomic) __weak id <FIRNetworkLoggerDelegate> loggerDelegate; // @synthesize loggerDelegate=loggerDelegate_;
@property(nonatomic) __weak id <FIRReachabilityDelegate> reachabilityDelegate; // @synthesize reachabilityDelegate=reachabilityDelegate_;
@property(copy, nonatomic) NSString *host; // @synthesize host=host_;
@property(nonatomic) int reachabilityStatus; // @synthesize reachabilityStatus=reachabilityStatus_;
@property(nonatomic) struct __SCNetworkReachability *reachability; // @synthesize reachability=reachability_;
- (void).cxx_destruct;
- (void)reachabilityFlagsChanged:(unsigned int)arg1;
- (int)statusForFlags:(unsigned int)arg1;
- (void)stop;
- (_Bool)start;
- (void)dealloc;
- (id)initWithReachabilityDelegate:(id)arg1 loggerDelegate:(id)arg2 withHost:(id)arg3;
@property(readonly, nonatomic) _Bool isActive;
@property(nonatomic) const struct FIRReachabilityApi *reachabilityApi; // @synthesize reachabilityApi=reachabilityApi_;

@end

@interface FIRAppEnvironmentUtil : NSObject
{
}

+ (_Bool)hasSCInfoFolder;
+ (id)sharedApplication;
+ (_Bool)isAppExtension;
+ (id)systemVersion;
+ (id)deviceModel;
+ (_Bool)isSimulator;
+ (_Bool)hasEmbeddedMobileProvision;
+ (_Bool)isAppStoreReceiptSandbox;
+ (_Bool)isFromAppStore;

@end

@interface FIRClearcutWriter : NSObject
{
    int _fd;
    unsigned long long _numBytes;
}

@property(nonatomic) unsigned long long numBytes; // @synthesize numBytes=_numBytes;
@property(nonatomic) int fd; // @synthesize fd=_fd;
- (_Bool)writeLogEvent:(id)arg1;
- (void)close;
- (void)dealloc;
- (id)initWithPath:(id)arg1;

@end

@interface FIRClearcutAccountData : NSObject
{
    NSMutableDictionary *_logSourceToWriter;
    NSString *_accountLogDirectory;
}

@property(copy, nonatomic) NSString *accountLogDirectory; // @synthesize accountLogDirectory=_accountLogDirectory;
@property(readonly, copy, nonatomic) NSMutableDictionary *logSourceToWriter; // @synthesize logSourceToWriter=_logSourceToWriter;
- (void).cxx_destruct;
- (id)filenameWithCurrentTimeInDirectory:(id)arg1;
- (void)flushWriters;
- (void)removeWriterForLogSource:(int)arg1;
- (id)writerForLogSource:(int)arg1;
- (id)initWithAccountLogDirectory:(id)arg1;

@end

@interface FIRClearcutRequest : NSObject
{
    int _logSource;
    NSString *_account;
    NSString *_path;
}

@property(readonly, copy, nonatomic) NSString *path; // @synthesize path=_path;
@property(readonly, copy, nonatomic) NSString *account; // @synthesize account=_account;
@property(readonly, nonatomic) int logSource; // @synthesize logSource=_logSource;
- (void).cxx_destruct;
- (id)initWithLogSource:(int)arg1 account:(id)arg2 path:(id)arg3;

@end

@interface FIRClearcutLogger : NSObject <FIRNetworkReachabilityDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;
    // Error parsing type: AQ, name: _backgroundTaskId
    NSObject *_pendingRequestsLock;
    _Bool _sendScheduled;
    int _uploadRetriesRemaining;
    NSString *_applicationBuild;
    unsigned long long _maxRequestNumBytes;
    NSString *_installIdentifier;
    NSURL *_serverURL;
    NSString *_zwiebackCookie;
    long long _fetcherCookieStorageMethod;
    id <FIRClearcutLoggerDelegate> _delegate;
    NSString *_logDirectory;
    NSMutableDictionary *_accounts;
    long long _sendDelayMillis;
    FIRNetwork *_network;
    NSMutableArray *_pendingRequests;
}

+ (id)sharedInstance;
@property(readonly, copy, nonatomic) NSMutableArray *pendingRequests; // @synthesize pendingRequests=_pendingRequests;
@property(retain, nonatomic) FIRNetwork *network; // @synthesize network=_network;
@property(nonatomic) _Bool sendScheduled; // @synthesize sendScheduled=_sendScheduled;
@property(nonatomic) int uploadRetriesRemaining; // @synthesize uploadRetriesRemaining=_uploadRetriesRemaining;
@property(nonatomic) long long sendDelayMillis; // @synthesize sendDelayMillis=_sendDelayMillis;
@property(readonly, copy, nonatomic) NSMutableDictionary *accounts; // @synthesize accounts=_accounts;
@property(copy, nonatomic) NSString *logDirectory; // @synthesize logDirectory=_logDirectory;
@property(nonatomic) __weak id <FIRClearcutLoggerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) long long fetcherCookieStorageMethod; // @synthesize fetcherCookieStorageMethod=_fetcherCookieStorageMethod;
@property(copy) NSString *zwiebackCookie; // @synthesize zwiebackCookie=_zwiebackCookie;
@property(copy) NSURL *serverURL; // @synthesize serverURL=_serverURL;
@property(copy) NSString *installIdentifier; // @synthesize installIdentifier=_installIdentifier;
@property unsigned long long maxRequestNumBytes; // @synthesize maxRequestNumBytes=_maxRequestNumBytes;
@property(copy) NSString *applicationBuild; // @synthesize applicationBuild=_applicationBuild;
- (void).cxx_destruct;
@property(nonatomic) unsigned long long backgroundTaskId; // @dynamic backgroundTaskId;
- (void)reachabilityDidChange;
- (void)sendNextPendingRequestWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)scheduleNextSend;
- (id)nextPendingRequest;
- (void)sendLogsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updatePendingRequests;
- (void)flushWriters;
- (id)logRequestFromPath:(id)arg1 logSource:(int)arg2;
- (id)accountDataForAccount:(id)arg1;
- (void)logEvent:(id)arg1 logSource:(int)arg2 account:(id)arg3;
- (void)flushWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FIRDiagnostics : NSObject
{
}

+ (void)logDiagnostics:(id)arg1;
+ (_Bool)writeString:(id)arg1 toURL:(id)arg2;
+ (id)stringAtURL:(id)arg1;
+ (id)filePathURLWithName:(id)arg1;
+ (id)installString;
+ (id)deviceModel;
+ (id)mapFromServiceStringToTypeEnum:(id)arg1;
+ (void)populateLogProtoWithInfoPlistValues:(id)arg1;
+ (void)populateLogProtoWithNumberOfLinkedFrameworks:(id)arg1;
+ (void)populateLogProtoWithInstalledServices:(id)arg1;
+ (void)populateLogProtoWithCommonInfo:(id)arg1 app:(id)arg2;
+ (void)sendLogsToClearcut:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
+ (void)load;

@end

@interface CLRPBClientInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBIosClientInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBLogEvent : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CLRPBLogRequest : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRPBErrorInfo : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRPBICoreConfiguration : NSObject <NANOMessageBase>
{
    CDStruct_e1a27b1c *_messageInfo;
}

@property(readonly, nonatomic) CDStruct_e1a27b1c *messageInfo; // @synthesize messageInfo=_messageInfo;
@property(readonly, nonatomic) CDUnknownFunctionPointerType copyMessageInfoFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType deallocMessageFieldFn;
@property(readonly, nonatomic) CDUnknownFunctionPointerType initMessageInfoFn;
- (id)protoBuffer;
- (id)initWithBuffer:(id)arg1;
- (id)initWithMessageInfo:(CDStruct_e1a27b1c *)arg1;
@property(readonly, nonatomic) const char *messageID;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLink : NSObject
{
    NSURL *_url;
    unsigned long long _matchConfidence;
    NSString *_minimumAppVersion;
    NSString *_inviteId;
    NSString *_weakMatchEndpoint;
}

@property(copy, nonatomic) NSString *weakMatchEndpoint; // @synthesize weakMatchEndpoint=_weakMatchEndpoint;
@property(copy, nonatomic) NSString *inviteId; // @synthesize inviteId=_inviteId;
@property(copy, nonatomic) NSString *minimumAppVersion; // @synthesize minimumAppVersion=_minimumAppVersion;
@property(nonatomic) unsigned long long matchConfidence; // @synthesize matchConfidence=_matchConfidence;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)initWithParametersDictionary:(id)arg1;
- (id)description;

@end

@interface FIRDynamicLinkNetworking : NSObject
{
    NSString *_APIKey;
    NSString *_clientID;
    NSString *_URLScheme;
}

- (void).cxx_destruct;
- (void)executeOnePlatformRequest:(id)arg1 forURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)sendRequestWithBaseURLString:(id)arg1 requestBody:(id)arg2 endpointPath:(id)arg3 parserBlock:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)convertInvitation:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)retrievePendingDynamicLinkWithIOSVersion:(id)arg1 resolutionHeight:(long long)arg2 resolutionWidth:(long long)arg3 locale:(id)arg4 timezone:(id)arg5 modelName:(id)arg6 FDLSDKVersion:(id)arg7 appInstallationDate:(id)arg8 uniqueMatchVisualStyle:(long long)arg9 retrievalProcessType:(long long)arg10 uniqueMatchLinkToCheck:(id)arg11 handler:(CDUnknownBlockType)arg12;
- (void)completeInvitationByDevice:(id)arg1 iOSVersion:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)resolveShortLink:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithAPIKey:(id)arg1 clientID:(id)arg2 URLScheme:(id)arg3;

@end

@interface FIRDLRetrievalOptions : NSObject
{
    unsigned long long _uniqueMatchPresentation;
    NSURL *_uniqueMatchFailureURL;
}

@property(retain, nonatomic) NSURL *uniqueMatchFailureURL; // @synthesize uniqueMatchFailureURL=_uniqueMatchFailureURL;
@property(nonatomic) unsigned long long uniqueMatchPresentation; // @synthesize uniqueMatchPresentation=_uniqueMatchPresentation;
- (void).cxx_destruct;

@end

@interface FIRDynamicLinks : NSObject <FIRDLRetrievalProcessDelegate>
{
    NSUserDefaults *_userDefaults;
    FIRDynamicLinkNetworking *_dynamicLinkNetworking;
    id <FIRDLRetrievalProcessProtocol> _retrievalProcess;
    _Bool _retrievingPendingDynamicLink;
    NSString *_APIKey;
    NSString *_clientID;
    NSString *_URLScheme;
}

+ (void)performDiagnosticsWithCompletion:(CDUnknownBlockType)arg1;
+ (id)performDiagnosticsIncludingHeaderFooter:(_Bool)arg1 detectedErrors:(long long *)arg2;
+ (id)diagnosticAnalyzeEntitlements;
+ (id)genericDiagnosticInformation;
+ (_Bool)isAutomaticRetrievalEnabled;
+ (id)sharedInstance;
+ (id)dynamicLinks;
@property _Bool retrievingPendingDynamicLink; // @synthesize retrievingPendingDynamicLink=_retrievingPendingDynamicLink;
@property(copy, nonatomic) NSString *URLScheme; // @synthesize URLScheme=_URLScheme;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(copy, nonatomic) NSString *APIKey; // @synthesize APIKey=_APIKey;
- (void).cxx_destruct;
- (void)retrievalProcess:(id)arg1 completedWithCustomURLScemeURL:(id)arg2 error:(id)arg3;
- (void)handlePendingDynamicLinkRetrievalFailureWithErrorCode:(long long)arg1 errorDescription:(id)arg2 underlyingError:(id)arg3;
- (void)passRetrievedDynamicLinkToApplication:(id)arg1;
- (_Bool)handleIncomingCustomSchemeDeepLink:(id)arg1;
- (_Bool)canParseUniversalLinkURL:(id)arg1;
- (_Bool)canParseCustomSchemeURL:(id)arg1;
@property(readonly, nonatomic) FIRDynamicLinkNetworking *dynamicLinkNetworking;
- (_Bool)matchesShortLinkFormat:(id)arg1;
- (void)resolveShortLink:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)handleUniversalLink:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)dynamicLinkFromUniversalLinkURL:(id)arg1;
- (id)dynamicLinkFromCustomSchemeURL:(id)arg1;
- (_Bool)shouldHandleDynamicLinkFromCustomSchemeURL:(id)arg1;
- (_Bool)shouldHandleDeepLinkFromCustomSchemeURL:(id)arg1;
- (id)deepLinkFromUniversalLinkURL:(id)arg1;
- (id)deepLinkFromCustomSchemeURL:(id)arg1;
- (void)checkForPendingDeepLink;
- (void)resumeRetrievalProcessWithPreference:(unsigned long long)arg1;
- (void)retrievePendingDynamicLinkWithRetrievalProcessType:(unsigned long long)arg1 retrievalOptions:(id)arg2 delegate:(id)arg3;
- (void)checkForPendingDynamicLink;
- (_Bool)setUpWithLaunchOptions:(id)arg1 apiKey:(id)arg2 clientID:(id)arg3 urlScheme:(id)arg4 userDefaults:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDLJavaScriptExecutor : NSObject
{
    id <FIRDLJavaScriptExecutorDelegate> _delegate;
    NSString *_script;
    UIWebView *_uiWebView;
    WKWebView *_wkWebView;
}

- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)cleanup;
- (void)handleExecutionError:(id)arg1;
- (void)handleExecutionResult:(id)arg1;
- (void)start;
- (id)initWithDelegate:(id)arg1 script:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDLRetrievalProcessFactory : NSObject
{
    FIRDynamicLinkNetworking *_networkingService;
    NSString *_clientID;
    NSString *_URLScheme;
    NSString *_APIKey;
    NSString *_FDLSDKVersion;
    id <FIRDLRetrievalProcessDelegate> _delegate;
}

- (void).cxx_destruct;
- (id)automaticRetrievalProcess;
- (id)initWithNetworkingService:(id)arg1 clientID:(id)arg2 URLScheme:(id)arg3 APIKey:(id)arg4 FDLSDKVersion:(id)arg5 delegate:(id)arg6;

@end

@interface FIRDLDefaultRetrievalProcess : NSObject <FIRDLJavaScriptExecutorDelegate, FIRDLRetrievalProcessProtocol>
{
    FIRDynamicLinkNetworking *_networkingService;
    NSString *_clientID;
    NSString *_URLScheme;
    NSString *_APIKey;
    FIRDLJavaScriptExecutor *_jsExecutor;
    id <FIRDLRetrievalProcessDelegate> _delegate;
    NSMutableArray *_requestResults;
}

@property(retain) NSMutableArray *requestResults; // @synthesize requestResults=_requestResults;
@property(readonly, nonatomic) __weak id <FIRDLRetrievalProcessDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)javaScriptExecutor:(id)arg1 failedWithError:(id)arg2;
- (void)javaScriptExecutor:(id)arg1 completedExecutionWithResult:(id)arg2;
- (void)markCompleted;
- (void)handleRequestResultsUpdated;
- (id)encounteredErrors;
- (id)foundURLs;
- (void)handleRequestError:(id)arg1;
- (void)handleRequestDidNotFoundLink;
- (void)handleRequestRetrievedDynamicLinkURL:(id)arg1;
- (void)handleFingerprintResult:(id)arg1;
- (void)executeJavaScript:(id)arg1;
- (void)handlePendingDynamicLinkRetrievalFailureWithErrorCode:(long long)arg1 errorDescription:(id)arg2 underlyingError:(id)arg3;
- (void)cleanupJSExecutor;
- (void)retrievePendingDynamicLink;
@property(readonly, nonatomic) NSURL *foundURL;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isCompleted) _Bool completed;
- (id)initWithNetworkingService:(id)arg1 clientID:(id)arg2 URLScheme:(id)arg3 APIKey:(id)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDLDefaultRetrievalProcessV2 : NSObject <FIRDLRetrievalProcessProtocol>
{
    FIRDynamicLinkNetworking *_networkingService;
    NSString *_clientID;
    NSString *_URLScheme;
    NSString *_APIKey;
    NSString *_FDLSDKVersion;
    id <FIRDLRetrievalProcessDelegate> _delegate;
    NSMutableArray *_requestResults;
}

@property(retain) NSMutableArray *requestResults; // @synthesize requestResults=_requestResults;
@property(readonly, nonatomic) __weak id <FIRDLRetrievalProcessDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)uniqueMatchLinkToCheck;
- (void)markCompleted;
- (void)handleRequestResultsUpdated;
- (id)encounteredErrors;
- (id)foundURLs;
- (void)handleRequestError:(id)arg1;
- (void)handleRequestDidNotFoundLink;
- (void)handleRequestRetrievedDynamicLinkURL:(id)arg1;
- (void)handlePendingDynamicLinkRetrievalFailureWithErrorCode:(long long)arg1 errorDescription:(id)arg2 underlyingError:(id)arg3;
- (void)retrievePendingDynamicLink;
@property(readonly, nonatomic) NSURL *foundURL;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic, getter=isCompleted) _Bool completed;
- (id)initWithNetworkingService:(id)arg1 clientID:(id)arg2 URLScheme:(id)arg3 APIKey:(id)arg4 FDLSDKVersion:(id)arg5 delegate:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkGoogleAnalyticsParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parametersWithSource:(id)arg1 medium:(id)arg2 campaign:(id)arg3;
+ (id)parameters;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(copy, nonatomic) NSString *content;
@property(copy, nonatomic) NSString *term;
@property(copy, nonatomic) NSString *campaign;
@property(copy, nonatomic) NSString *medium;
@property(copy, nonatomic) NSString *source;
- (id)initWithSource:(id)arg1 medium:(id)arg2 campaign:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkIOSParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parametersWithBundleID:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(retain, nonatomic) NSURL *iPadFallbackURL;
@property(copy, nonatomic) NSString *iPadBundleID;
@property(copy, nonatomic) NSString *minimumAppVersion;
@property(copy, nonatomic) NSString *customScheme;
@property(retain, nonatomic) NSURL *fallbackURL;
@property(copy, nonatomic) NSString *appStoreID;
@property(readonly, copy, nonatomic) NSString *bundleID;
- (id)initWithBundleID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkItunesConnectAnalyticsParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parameters;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(copy, nonatomic) NSString *providerToken;
@property(copy, nonatomic) NSString *campaignToken;
@property(copy, nonatomic) NSString *affiliateToken;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkAndroidParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parametersWithPackageName:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(retain, nonatomic) NSURL *fallbackURL;
@property(nonatomic) long long minimumVersion;
@property(readonly, copy, nonatomic) NSString *packageName;
- (id)initWithPackageName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkSocialMetaTagParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parameters;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(retain, nonatomic) NSURL *imageURL;
@property(copy, nonatomic) NSString *descriptionText;
@property(copy, nonatomic) NSString *title;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkNavigationInfoParameters : NSObject <FDLDictionaryRepresenting>
{
    NSMutableDictionary *_dictionary;
}

+ (id)parameters;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(nonatomic, getter=isForcedRedirectEnabled) _Bool forcedRedirectEnabled;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRDynamicLinkComponentsOptions : NSObject
{
    long long _pathLength;
}

+ (id)options;
@property(nonatomic) long long pathLength; // @synthesize pathLength=_pathLength;
- (id)init;

@end

@interface FIRDynamicLinkComponents : NSObject
{
    FIRDynamicLinkGoogleAnalyticsParameters *_analyticsParameters;
    FIRDynamicLinkSocialMetaTagParameters *_socialMetaTagParameters;
    FIRDynamicLinkIOSParameters *_iOSParameters;
    FIRDynamicLinkItunesConnectAnalyticsParameters *_iTunesConnectParameters;
    FIRDynamicLinkAndroidParameters *_androidParameters;
    FIRDynamicLinkNavigationInfoParameters *_navigationInfoParameters;
    FIRDynamicLinkComponentsOptions *_options;
    NSURL *_link;
    NSString *_domain;
}

+ (id)shorteningRequestForLongURL:(id)arg1 options:(id)arg2;
+ (void)sendHTTPRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)shortenURL:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)componentsWithLink:(id)arg1 domain:(id)arg2;
@property(copy, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(retain, nonatomic) NSURL *link; // @synthesize link=_link;
@property(retain, nonatomic) FIRDynamicLinkComponentsOptions *options; // @synthesize options=_options;
@property(retain, nonatomic) FIRDynamicLinkNavigationInfoParameters *navigationInfoParameters; // @synthesize navigationInfoParameters=_navigationInfoParameters;
@property(retain, nonatomic) FIRDynamicLinkAndroidParameters *androidParameters; // @synthesize androidParameters=_androidParameters;
@property(retain, nonatomic) FIRDynamicLinkItunesConnectAnalyticsParameters *iTunesConnectParameters; // @synthesize iTunesConnectParameters=_iTunesConnectParameters;
@property(retain, nonatomic) FIRDynamicLinkIOSParameters *iOSParameters; // @synthesize iOSParameters=_iOSParameters;
@property(retain, nonatomic) FIRDynamicLinkSocialMetaTagParameters *socialMetaTagParameters; // @synthesize socialMetaTagParameters=_socialMetaTagParameters;
@property(retain, nonatomic) FIRDynamicLinkGoogleAnalyticsParameters *analyticsParameters; // @synthesize analyticsParameters=_analyticsParameters;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSURL *url;
- (void)shortenWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithLink:(id)arg1 domain:(id)arg2;

@end

@interface GINArgument : NSObject
{
    unsigned long long _type;
    id _object;
    long long _integer;
}

+ (_Bool)setNextArgumentInList:(char *)arg1 atIndex:(unsigned long long)arg2 inInvocation:(id)arg3;
+ (id)argumentWithInteger:(long long)arg1;
+ (id)argumentWithObject:(id)arg1;
@property(nonatomic) long long integer; // @synthesize integer=_integer;
@property(retain, nonatomic) id object; // @synthesize object=_object;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)setArgumentInInvocation:(id)arg1 atIndex:(unsigned long long)arg2;

@end

@interface GINInvocation : NSObject
{
}

+ (double)doubleByPerformingSelector:(SEL)arg1 onTarget:(id)arg2 numberOfArguments:(long long)arg3;
+ (id)objectByPerformingSelector:(SEL)arg1 onTarget:(id)arg2 numberOfArguments:(long long)arg3;

@end

@interface FIRInstanceID : NSObject <FIRInstanceIDKeyPairStoreDelegate>
{
    _Bool _isFetchingDefaultToken;
    _Bool _isDefaultTokenFetchScheduled;
    NSString *_fcmSenderID;
    NSString *_firebaseAppID;
    NSData *_apnsTokenData;
    long long _apnsTokenType;
    NSString *_APNSTupleString;
    NSString *_defaultFCMToken;
    FIRInstanceIDTokenManager *_tokenManager;
    FIRInstanceIDKeyPairStore *_keyPairStore;
    long long _retryCountForDefaultToken;
    long long _retryCountForCheckinRefresh;
}

+ (long long)maxRetryIntervalForDefaultTokenInSeconds;
+ (long long)minIntervalForDefaultTokenRetry;
+ (long long)maxRetryCountForDefaultToken;
+ (id)instanceID;
@property(nonatomic) long long retryCountForCheckinRefresh; // @synthesize retryCountForCheckinRefresh=_retryCountForCheckinRefresh;
@property(nonatomic) long long retryCountForDefaultToken; // @synthesize retryCountForDefaultToken=_retryCountForDefaultToken;
@property _Bool isDefaultTokenFetchScheduled; // @synthesize isDefaultTokenFetchScheduled=_isDefaultTokenFetchScheduled;
@property _Bool isFetchingDefaultToken; // @synthesize isFetchingDefaultToken=_isFetchingDefaultToken;
@property(retain, nonatomic) FIRInstanceIDKeyPairStore *keyPairStore; // @synthesize keyPairStore=_keyPairStore;
@property(retain, nonatomic) FIRInstanceIDTokenManager *tokenManager; // @synthesize tokenManager=_tokenManager;
@property(copy, nonatomic) NSString *defaultFCMToken; // @synthesize defaultFCMToken=_defaultFCMToken;
@property(copy, nonatomic) NSString *APNSTupleString; // @synthesize APNSTupleString=_APNSTupleString;
@property(nonatomic) long long apnsTokenType; // @synthesize apnsTokenType=_apnsTokenType;
@property(retain, nonatomic) NSData *apnsTokenData; // @synthesize apnsTokenData=_apnsTokenData;
@property(copy, nonatomic) NSString *firebaseAppID; // @synthesize firebaseAppID=_firebaseAppID;
@property(copy, nonatomic) NSString *fcmSenderID; // @synthesize fcmSenderID=_fcmSenderID;
- (void).cxx_destruct;
- (void)logAPNSConfigurationError:(id)arg1;
- (_Bool)isProductionApp;
- (_Bool)isSandboxApp;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
- (void)defaultTokenWithHandler:(CDUnknownBlockType)arg1;
- (void)fetchDefaultToken;
- (long long)retryIntervalToFetchDefaultToken;
- (void)keyPairStoreDidDeleteKeyPair:(id)arg1;
- (void)setupNotificationListeners;
- (void)setupKeyPairManager;
- (void)setupTokenManager;
- (void)start;
- (_Bool)isFCMAutoInitEnabled;
- (void)didCompleteConfigure;
- (void)deleteIdentity:(id *)arg1;
- (void)notifyIdentityReset;
- (void)deleteIDWithHandler:(CDUnknownBlockType)arg1;
- (void)getIDWithHandler:(CDUnknownBlockType)arg1;
- (void)asyncLoadKeyPairWithHandler:(CDUnknownBlockType)arg1;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)cachedTokenIfAvailable;
- (id)token;
- (void)stopAllRequests;
- (void)dealloc;
- (id)initPrivately;
- (id)appInstanceID:(id *)arg1;
- (void)fetchCheckinInfoWithHandler:(CDUnknownBlockType)arg1;
- (id)cachedCheckinPreferences;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRInstanceIDAPNSInfo : NSObject <NSCoding>
{
    _Bool _sandbox;
    NSData *_deviceToken;
}

@property(readonly, nonatomic, getter=isSandbox) _Bool sandbox; // @synthesize sandbox=_sandbox;
@property(readonly, nonatomic) NSData *deviceToken; // @synthesize deviceToken=_deviceToken;
- (void).cxx_destruct;
- (_Bool)isEqualToAPNSInfo:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithTokenOptionsDictionary:(id)arg1;
- (id)initWithDeviceToken:(id)arg1 isSandbox:(_Bool)arg2;

@end

@interface FIRInstanceIDAuthKeychainItem : NSObject
{
    NSString *_account;
    NSString *_service;
    NSData *_data;
    NSDate *_modificationDate;
}

+ (id)keychainItemFromDictionary:(id)arg1;
@property(copy, nonatomic) NSDate *modificationDate; // @synthesize modificationDate=_modificationDate;
@property(copy, nonatomic) NSData *data; // @synthesize data=_data;
@property(copy, nonatomic) NSString *service; // @synthesize service=_service;
@property(copy, nonatomic) NSString *account; // @synthesize account=_account;
- (void).cxx_destruct;

@end

@interface FIRInstanceIDAuthKeychain : NSObject
{
    NSString *_generic;
    NSString *_identifier;
}

+ (id)keychainQueryForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 generic:(id)arg4;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(retain, nonatomic) NSString *generic; // @synthesize generic=_generic;
- (void).cxx_destruct;
- (_Bool)removeAllItemsWithError:(id *)arg1;
- (_Bool)setData:(id)arg1 forService:(id)arg2 accessibility:(void *)arg3 account:(id)arg4 accessGroup:(id)arg5 error:(id *)arg6;
- (_Bool)removeItemsMatchingService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
- (id)itemForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
- (id)itemsMatchingService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3 error:(id *)arg4;
@property(readonly, nonatomic) NSString *defaultAccessGroup;
- (id)keychainQueryForService:(id)arg1 account:(id)arg2 accessGroup:(id)arg3;
- (id)initWithIdentifier:(id)arg1;

@end

@interface FIRInstanceIDAuthService : NSObject
{
    _Bool _isCheckinInProgress;
    int _checkinRetryCount;
    FIRInstanceIDStore *_store;
    FIRInstanceIDCheckinService *_checkinService;
    FIRInstanceIDCheckinPreferences *_checkinPreferences;
    NSMutableArray *_checkinHandlers;
    NSTimer *_scheduledCheckinTimer;
}

@property int checkinRetryCount; // @synthesize checkinRetryCount=_checkinRetryCount;
@property(retain) NSTimer *scheduledCheckinTimer; // @synthesize scheduledCheckinTimer=_scheduledCheckinTimer;
@property _Bool isCheckinInProgress; // @synthesize isCheckinInProgress=_isCheckinInProgress;
@property(readonly, nonatomic) NSMutableArray *checkinHandlers; // @synthesize checkinHandlers=_checkinHandlers;
@property(retain, nonatomic) FIRInstanceIDCheckinPreferences *checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
@property(retain, nonatomic) FIRInstanceIDCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(retain, nonatomic) FIRInstanceIDStore *store; // @synthesize store=_store;
- (void).cxx_destruct;
- (_Bool)cachedCheckinMatchesCheckin:(id)arg1;
- (void)notifyCheckinHandlersWithCheckin:(id)arg1 error:(id)arg2;
- (void)resetCheckin:(id *)arg1;
- (void)stopCheckinRequest;
- (void)fetchCheckinInfoWithHandler:(CDUnknownBlockType)arg1;
- (_Bool)hasValidCheckinInfo;
- (long long)calculateNextCheckinRetryIntervalInSeconds;
- (void)performScheduledCheckin;
- (void)onScheduledCheckinTimerFired:(id)arg1;
- (void)clearScheduledCheckinTimer;
- (void)startCheckinTimerWithDuration:(double)arg1;
- (void)scheduleCheckin:(_Bool)arg1;
- (id)initWithStore:(id)arg1;
- (void)dealloc;
- (id)initWithCheckinService:(id)arg1 store:(id)arg2;

@end

@interface FIRInstanceIDBackupExcludedPlist : NSObject
{
    _Bool _fileInApplicationSupport;
    NSDictionary *_cachedPlistContents;
    NSString *_fileName;
    NSString *_applicationSupportSubDirectory;
}

@property(nonatomic) _Bool fileInApplicationSupport; // @synthesize fileInApplicationSupport=_fileInApplicationSupport;
@property(copy, nonatomic) NSString *applicationSupportSubDirectory; // @synthesize applicationSupportSubDirectory=_applicationSupportSubDirectory;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSDictionary *cachedPlistContents; // @synthesize cachedPlistContents=_cachedPlistContents;
- (void).cxx_destruct;
- (_Bool)doesFileExistInDirectory:(unsigned long long)arg1;
- (id)pathWithName:(id)arg1 inDirectory:(unsigned long long)arg2;
- (id)plistPathInDirectory:(unsigned long long)arg1;
- (unsigned long long)plistDirectory;
- (_Bool)doesFileExist;
- (_Bool)moveToApplicationSupportSubDirectory:(id)arg1;
- (void)moveToApplicationSupportSubDirectory;
- (id)contentAsDictionary;
- (_Bool)deleteFile:(id *)arg1;
- (_Bool)writeDictionary:(id)arg1 error:(id *)arg2;
- (id)initWithFileName:(id)arg1 applicationSupportSubDirectory:(id)arg2;

@end

@interface FIRInstanceIDCheckinPreferences : NSObject
{
    _Bool _hasPreCachedAuthCredentials;
    NSString *_deviceID;
    NSString *_secretToken;
    NSString *_deviceDataVersion;
    NSString *_digest;
    NSString *_versionInfo;
    NSMutableDictionary *_gServicesData;
    long long _lastCheckinTimestampMillis;
}

+ (id)checkinKeychainContent:(id)arg1 forIndex:(int)arg2;
+ (id)checkinSecretFromKeychainContent:(id)arg1;
+ (id)checkinDeviceIDFromKeychainContent:(id)arg1;
+ (id)preferencesFromKeychainContents:(id)arg1;
@property(nonatomic) _Bool hasPreCachedAuthCredentials; // @synthesize hasPreCachedAuthCredentials=_hasPreCachedAuthCredentials;
@property(nonatomic) long long lastCheckinTimestampMillis; // @synthesize lastCheckinTimestampMillis=_lastCheckinTimestampMillis;
@property(retain, nonatomic) NSMutableDictionary *gServicesData; // @synthesize gServicesData=_gServicesData;
@property(copy, nonatomic) NSString *versionInfo; // @synthesize versionInfo=_versionInfo;
@property(copy, nonatomic) NSString *digest; // @synthesize digest=_digest;
@property(copy, nonatomic) NSString *deviceDataVersion; // @synthesize deviceDataVersion=_deviceDataVersion;
@property(copy, nonatomic) NSString *secretToken; // @synthesize secretToken=_secretToken;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
- (void).cxx_destruct;
- (_Bool)hasValidCheckinInfo;
- (_Bool)hasCheckinInfo;
- (id)checkinPlistContents;
- (id)checkinKeychainContent;
- (void)updateWithCheckinPlistContents:(id)arg1;
- (void)reset;
- (id)initWithDeviceID:(id)arg1 secretToken:(id)arg2;

@end

@interface FIRInstanceIDCheckinService : NSObject
{
    NSURLSession *_session;
}

+ (void)setCheckinTestBlock:(CDUnknownBlockType)arg1;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)checkinParametersWithExistingCheckin:(id)arg1;
- (void)stopFetching;
- (void)checkinWithExistingCheckin:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface FIRInstanceIDCheckinStore : NSObject
{
    FIRInstanceIDBackupExcludedPlist *_plist;
    FIRInstanceIDAuthKeychain *_keychain;
}

@property(retain, nonatomic) FIRInstanceIDAuthKeychain *keychain; // @synthesize keychain=_keychain;
@property(retain, nonatomic) FIRInstanceIDBackupExcludedPlist *plist; // @synthesize plist=_plist;
- (void).cxx_destruct;
- (_Bool)migrateCheckinItemIfNeeded;
- (id)cachedCheckinPreferences;
- (_Bool)removeCheckinPreferencesWithError:(id *)arg1;
- (_Bool)saveCheckinPreferences:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSString *bundleIdentifierForKeychainAccount;
- (_Bool)hasCheckinPlist;
- (id)initWithCheckinPlist:(id)arg1 keychain:(id)arg2;
- (id)initWithCheckinPlistFileName:(id)arg1 applicationSupportSubDirectory:(id)arg2;

@end

@interface FIRInstanceIDKeyPair : NSObject
{
    struct __SecKey *_privateKey;
    struct __SecKey *_publicKey;
    NSData *_publicKeyData;
    NSData *_privateKeyData;
}

+ (id)appIdentityWithKeyPair:(id)arg1;
+ (_Bool)hasMigratedKeyPairWithLegacyPublicKeyTag:(id)arg1 andNewPublicKeyTag:(id)arg2;
+ (_Bool)deleteKeyPairWithPrivateTag:(id)arg1 publicTag:(id)arg2 error:(id *)arg3;
+ (_Bool)updateKeyRef:(struct __SecKey *)arg1 withTag:(id)arg2;
+ (struct __SecKey *)cachedKeyRefWithTag:(id)arg1;
+ (id)keyDataWithTag:(id)arg1;
+ (id)queryDictWithTag:(id)arg1 addReturnAttr:(_Bool)arg2 withTypeData:(_Bool)arg3;
+ (id)keyPairForPrivateKeyTag:(id)arg1 publicKeyTag:(id)arg2 error:(id *)arg3;
+ (id)generateRSA2048KeyPairWithPrivateTag:(id)arg1 publicTag:(id)arg2 error:(id *)arg3;
@property(retain, nonatomic) NSData *privateKeyData; // @synthesize privateKeyData=_privateKeyData;
@property(retain, nonatomic) NSData *publicKeyData; // @synthesize publicKeyData=_publicKeyData;
- (void).cxx_destruct;
- (struct __SecKey *)privateKey;
- (struct __SecKey *)publicKey;
- (_Bool)isValid;
- (void)dealloc;
- (id)initWithPrivateKey:(struct __SecKey *)arg1 publicKey:(struct __SecKey *)arg2 publicKeyData:(id)arg3 privateKeyData:(id)arg4;
- (id)init;

@end

@interface FIRInstanceIDKeyPairStore : NSObject
{
    int _keychainEntitlementsErrorCount;
    NSObject<FIRInstanceIDKeyPairStoreDelegate> *_delegate;
    FIRInstanceIDBackupExcludedPlist *_plist;
    FIRInstanceIDKeyPair *_keyPair;
}

+ (id)keyStoreFileName;
+ (id)creationTimeKeyWithSubtype:(id)arg1;
+ (id)privateTagWithSubtype:(id)arg1;
+ (id)publicTagWithSubtype:(id)arg1;
+ (id)legacyPrivateTagWithSubtype:(id)arg1;
+ (id)legacyPublicTagWithSubtype:(id)arg1;
@property(nonatomic) int keychainEntitlementsErrorCount; // @synthesize keychainEntitlementsErrorCount=_keychainEntitlementsErrorCount;
@property(retain, nonatomic) FIRInstanceIDKeyPair *keyPair; // @synthesize keyPair=_keyPair;
@property(retain, nonatomic) FIRInstanceIDBackupExcludedPlist *plist; // @synthesize plist=_plist;
@property(nonatomic) __weak NSObject<FIRInstanceIDKeyPairStoreDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)removeKeyPairCreationTimePlistWithError:(id *)arg1;
- (_Bool)deleteSavedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (void)migrateKeyPairCacheIfNeeded;
- (id)cachedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (id)validCachedKeyPairWithSubtype:(id)arg1 error:(id *)arg2;
- (id)generateAndSaveKeyWithSubtype:(id)arg1 creationTime:(long long)arg2 error:(id *)arg3;
- (id)loadKeyPairWithError:(id *)arg1;
- (id)appIdentityWithError:(id *)arg1;
- (_Bool)hasCachedKeyPairs;
- (void)invalidateKeyPairsIfNeeded;
- (id)init;

@end

@interface FIRInstanceIDLogger : NSObject
{
}

+ (id)formatMessageCode:(long long)arg1;
- (void)logFuncError:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncWarning:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncNotice:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncInfo:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncDebug:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;

@end

@interface FIRInstanceIDStore : NSObject
{
    NSObject<FIRInstanceIDStoreDelegate> *_delegate;
    FIRInstanceIDCheckinStore *_checkinStore;
    FIRInstanceIDTokenStore *_tokenStore;
}

+ (_Bool)removeApplicationSupportSubDirectory:(id)arg1 error:(id *)arg2;
+ (_Bool)createApplicationSupportSubDirectory:(id)arg1;
+ (id)pathForApplicationSupportSubDirectory:(id)arg1;
+ (_Bool)hasApplicationSupportSubDirectory:(id)arg1;
@property(retain, nonatomic) FIRInstanceIDTokenStore *tokenStore; // @synthesize tokenStore=_tokenStore;
@property(retain, nonatomic) FIRInstanceIDCheckinStore *checkinStore; // @synthesize checkinStore=_checkinStore;
@property(readonly, nonatomic) __weak NSObject<FIRInstanceIDStoreDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)removeCheckinPreferences:(id *)arg1;
- (id)cachedCheckinPreferences;
- (_Bool)saveCheckinPreferences:(id)arg1 error:(id *)arg2;
- (_Bool)removeAllCachedTokensWithError:(id *)arg1;
- (void)removeCachedTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (_Bool)saveTokenInfo:(id)arg1;
- (id)cachedTokenInfos;
- (id)tokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (_Bool)hasSavedLibraryVersion;
- (id)currentSavedLibraryVersion;
- (void)saveLibraryVersion;
- (void)resetCredentialsIfNeeded;
- (id)initWithCheckinStore:(id)arg1 tokenStore:(id)arg2 delegate:(id)arg3;
- (id)initWithDelegate:(id)arg1;

@end

@interface FIRInstanceIDStringEncoding : NSObject
{
    NSData *charMapData_;
    char *charMap_;
    int reverseCharMap_[128];
    int shift_;
    int mask_;
    _Bool doPad_;
    BOOL paddingChar_;
    int padLen_;
}

+ (id)stringEncodingWithString:(id)arg1;
+ (id)rfc4648Base64WebsafeStringEncoding;
- (void).cxx_destruct;
- (id)decode:(id)arg1;
- (id)encode:(id)arg1;
- (void)setPaddingChar:(BOOL)arg1;
- (void)setDoPad:(_Bool)arg1;
- (_Bool)doPad;
- (id)description;
- (id)initWithString:(id)arg1;

@end

@interface FIRInstanceIDTokenDeleteOperation : FIRInstanceIDTokenOperation
{
}

- (void)handleResponseWithData:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)performTokenOperation;
- (id)initWithAuthorizedEntity:(id)arg1 scope:(id)arg2 checkinPreferences:(id)arg3 keyPair:(id)arg4 action:(long long)arg5;

@end

@interface FIRInstanceIDTokenFetchOperation : FIRInstanceIDTokenOperation
{
}

- (id)parseFetchTokenResponse:(id)arg1;
- (void)handleResponseWithData:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)performTokenOperation;
- (id)initWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 checkinPreferences:(id)arg4 keyPair:(id)arg5;

@end

@interface FIRInstanceIDTokenInfo : NSObject <NSCoding>
{
    NSString *_authorizedEntity;
    NSString *_scope;
    NSString *_token;
    NSString *_appVersion;
    NSString *_firebaseAppID;
    FIRInstanceIDAPNSInfo *_APNSInfo;
    NSDate *_cacheTime;
}

@property(copy, nonatomic) NSDate *cacheTime; // @synthesize cacheTime=_cacheTime;
@property(retain, nonatomic) FIRInstanceIDAPNSInfo *APNSInfo; // @synthesize APNSInfo=_APNSInfo;
@property(readonly, copy, nonatomic) NSString *firebaseAppID; // @synthesize firebaseAppID=_firebaseAppID;
@property(readonly, copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, copy, nonatomic) NSString *token; // @synthesize token=_token;
@property(readonly, copy, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, copy, nonatomic) NSString *authorizedEntity; // @synthesize authorizedEntity=_authorizedEntity;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isFresh;
- (id)initWithAuthorizedEntity:(id)arg1 scope:(id)arg2 token:(id)arg3 appVersion:(id)arg4 firebaseAppID:(id)arg5;

@end

@interface FIRInstanceIDTokenManager : NSObject <FIRInstanceIDStoreDelegate>
{
    FIRInstanceIDAuthService *_authService;
    FIRInstanceIDStore *_instanceIDStore;
    NSOperationQueue *_tokenOperations;
    FIRInstanceIDAPNSInfo *_currentAPNSInfo;
}

@property(retain, nonatomic) FIRInstanceIDAPNSInfo *currentAPNSInfo; // @synthesize currentAPNSInfo=_currentAPNSInfo;
@property(readonly, nonatomic) NSOperationQueue *tokenOperations; // @synthesize tokenOperations=_tokenOperations;
@property(retain, nonatomic) FIRInstanceIDStore *instanceIDStore; // @synthesize instanceIDStore=_instanceIDStore;
@property(retain, nonatomic) FIRInstanceIDAuthService *authService; // @synthesize authService=_authService;
- (void).cxx_destruct;
- (id)updateTokensToAPNSDeviceToken:(id)arg1 isSandbox:(_Bool)arg2;
- (_Bool)checkForTokenRefreshPolicy;
- (id)currentAppVersion;
- (id)createDeleteOperationWithAuthorizedEntity:(id)arg1 scope:(id)arg2 checkinPreferences:(id)arg3 keyPair:(id)arg4 action:(long long)arg5;
- (id)createFetchOperationWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 keyPair:(id)arg4;
- (void)store:(id)arg1 didDeleteFCMScopedTokensForCheckin:(id)arg2;
- (void)stopAllTokenOperations;
- (_Bool)deleteAllTokensLocallyWithError:(id *)arg1;
- (void)deleteAllTokensWithKeyPair:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)cachedTokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (void)fetchNewTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 keyPair:(id)arg3 options:(id)arg4 handler:(CDUnknownBlockType)arg5;
- (void)configureTokenOperations;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRInstanceIDTokenOperation : NSOperation
{
    _Bool _isFinished;
    _Bool _isExecuting;
    long long _action;
    NSString *_authorizedEntity;
    NSString *_scope;
    NSDictionary *_options;
    FIRInstanceIDCheckinPreferences *_checkinPreferences;
    FIRInstanceIDKeyPair *_keyPair;
    long long _result;
    NSURLSessionDataTask *_dataTask;
    NSMutableArray *_completionHandlers;
    CDUnknownBlockType _testBlock;
}

+ (id)HTTPAuthHeaderFromCheckin:(id)arg1;
+ (id)standardQueryItemsWithDeviceID:(id)arg1 scope:(id)arg2;
+ (id)requestWithAuthHeader:(id)arg1;
+ (id)sharedURLSession;
@property(copy, nonatomic) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(readonly) NSMutableArray *completionHandlers; // @synthesize completionHandlers=_completionHandlers;
@property(retain) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(readonly, nonatomic) long long result; // @synthesize result=_result;
@property(retain, nonatomic) FIRInstanceIDKeyPair *keyPair; // @synthesize keyPair=_keyPair;
@property(retain, nonatomic) FIRInstanceIDCheckinPreferences *checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
@property(readonly, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(readonly, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, nonatomic) NSString *authorizedEntity; // @synthesize authorizedEntity=_authorizedEntity;
@property(readonly, nonatomic) long long action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)queryItemsWithKeyPair:(id)arg1;
- (void)performTokenOperation;
- (void)cancel;
- (void)finishWithResult:(long long)arg1 token:(id)arg2 error:(id)arg3;
- (void)start;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setExecuting:(_Bool)arg1;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (void)addCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithAction:(long long)arg1 forAuthorizedEntity:(id)arg2 scope:(id)arg3 options:(id)arg4 checkinPreferences:(id)arg5 keyPair:(id)arg6;

@end

@interface FIRInstanceIDTokenStore : NSObject
{
    FIRInstanceIDAuthKeychain *_keychain;
}

+ (id)tokenInfoFromKeychainItem:(id)arg1;
+ (id)serviceKeyForAuthorizedEntity:(id)arg1 scope:(id)arg2;
+ (id)defaultStore;
@property(retain, nonatomic) FIRInstanceIDAuthKeychain *keychain; // @synthesize keychain=_keychain;
- (void).cxx_destruct;
- (_Bool)removeAllTokensWithError:(id *)arg1;
- (_Bool)removeTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 error:(id *)arg3;
- (_Bool)saveTokenInfo:(id)arg1;
- (id)cachedTokenInfos;
- (id)tokenInfoWithAuthorizedEntity:(id)arg1 scope:(id)arg2;
- (id)initWithKeychain:(id)arg1;
- (id)init;

@end

@interface FIRInstanceIDURLQueryItem : NSObject
{
    NSString *_name;
    NSString *_value;
}

+ (id)queryItemWithName:(id)arg1 value:(id)arg2;
@property(readonly, nonatomic) NSString *value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithName:(id)arg1 value:(id)arg2;

@end

@interface FIRMessagingLog : NSObject
{
}

+ (void)logMessage:(id)arg1;
+ (void)logAnalyticsEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;
+ (void)logEvent:(id)arg1 withNotification:(id)arg2;
+ (void)logForegroundNotification:(id)arg1;
+ (void)logOpenNotification:(id)arg1;
+ (_Bool)canLogNotification:(id)arg1;

@end

@interface FIRMessagingMessageInfo : NSObject
{
    long long _status;
}

@property(nonatomic) long long status; // @synthesize status=_status;
- (id)initWithStatus:(long long)arg1;
- (id)init;

@end

@interface FIRMessagingRemoteMessage : NSObject
{
    NSDictionary *_appData;
}

@property(retain, nonatomic) NSDictionary *appData; // @synthesize appData=_appData;
- (void).cxx_destruct;
- (id)initWithMessage:(id)arg1;
- (id)init;

@end

@interface FIRMessaging : NSObject <FIRMessagingClientDelegate, FIRMessagingReceiverDelegate, FIRReachabilityDelegate>
{
    _Bool _shouldEstablishDirectChannel;
    _Bool _isClientSetup;
    id <FIRMessagingDelegate> _delegate;
    NSString *_fcmSenderID;
    NSData *_apnsTokenData;
    NSString *_defaultFcmToken;
    FIRMessagingInstanceIDProxy *_instanceIDProxy;
    FIRMessagingClient *_client;
    FIRReachabilityChecker *_reachability;
    FIRMessagingDataMessageManager *_dataMessageManager;
    FIRMessagingPubSub *_pubsub;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingReceiver *_receiver;
    FIRMessagingSyncMessageManager *_syncMessageManager;
    NSMutableSet *_loggedMessageIDs;
}

+ (id)firebaselocalesMap;
+ (id)firebaseLocales;
+ (id)currentLocale;
+ (_Bool)createApplicationSupportSubDirectory:(id)arg1;
+ (id)pathForApplicationSupportSubDirectory:(id)arg1;
+ (_Bool)hasApplicationSupportSubDirectory:(id)arg1;
+ (id)FIRMessagingSDKCurrentLocale;
+ (id)FIRMessagingSDKVersion;
+ (id)createFIRMessagingMessageWithMessage:(id)arg1 to:(id)arg2 withID:(id)arg3 timeToLive:(long long)arg4 delay:(int)arg5;
+ (id)normalizeTopic:(id)arg1;
+ (_Bool)isAPNSSyncMessage:(id)arg1;
+ (id)messaging;
@property(retain, nonatomic) NSMutableSet *loggedMessageIDs; // @synthesize loggedMessageIDs=_loggedMessageIDs;
@property(retain, nonatomic) FIRMessagingSyncMessageManager *syncMessageManager; // @synthesize syncMessageManager=_syncMessageManager;
@property(retain, nonatomic) FIRMessagingReceiver *receiver; // @synthesize receiver=_receiver;
@property(retain, nonatomic) FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(retain, nonatomic) FIRMessagingPubSub *pubsub; // @synthesize pubsub=_pubsub;
@property(retain, nonatomic) FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(retain, nonatomic) FIRReachabilityChecker *reachability; // @synthesize reachability=_reachability;
@property(retain, nonatomic) FIRMessagingClient *client; // @synthesize client=_client;
@property(nonatomic) _Bool isClientSetup; // @synthesize isClientSetup=_isClientSetup;
@property(retain, nonatomic) FIRMessagingInstanceIDProxy *instanceIDProxy; // @synthesize instanceIDProxy=_instanceIDProxy;
@property(retain, nonatomic) NSString *defaultFcmToken; // @synthesize defaultFcmToken=_defaultFcmToken;
@property(retain, nonatomic) NSData *apnsTokenData; // @synthesize apnsTokenData=_apnsTokenData;
@property(copy, nonatomic) NSString *fcmSenderID; // @synthesize fcmSenderID=_fcmSenderID;
@property(nonatomic) _Bool shouldEstablishDirectChannel; // @synthesize shouldEstablishDirectChannel=_shouldEstablishDirectChannel;
@property(nonatomic) __weak id <FIRMessagingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didReceiveAPNSToken:(id)arg1;
- (void)defaultInstanceIDTokenWasRefreshed:(id)arg1;
- (void)didReceiveDefaultInstanceIDToken:(id)arg1;
- (void)onNetworkStatusChanged;
- (BOOL)networkType;
- (_Bool)isNetworkAvailable;
- (void)reachability:(id)arg1 statusChanged:(int)arg2;
- (void)receiver:(id)arg1 receivedRemoteMessage:(id)arg2;
- (void)setAPNSToken:(id)arg1 error:(id)arg2;
- (void)sendMessage:(id)arg1 to:(id)arg2 withMessageID:(id)arg3 timeToLive:(long long)arg4;
- (void)unsubscribeFromTopic:(id)arg1;
- (void)subscribeToTopic:(id)arg1;
- (void)disconnect;
- (void)connectWithCompletion:(CDUnknownBlockType)arg1;
- (void)notifyOfDirectChannelConnectionChange;
- (void)updateAutomaticClientConnection;
- (_Bool)shouldBeConnectedAutomatically;
@property(readonly, nonatomic) _Bool isDirectChannelEstablished;
- (void)applicationStateChanged;
- (void)deleteFCMTokenForSenderID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)retrieveFCMTokenForSenderID:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) NSString *FCMToken;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;
@property(copy, nonatomic) NSData *APNSToken;
- (id)linkURLFromMessage:(id)arg1;
- (void)handleIncomingLinkIfNeededFromMessage:(id)arg1;
- (_Bool)handleContextManagerMessage:(id)arg1;
- (id)appDidReceiveMessage:(id)arg1;
- (void)teardown;
- (void)setupSyncMessageManager;
- (void)setupTopics;
- (void)setupRmqManager;
- (void)setupDataMessageManager;
- (void)setupClient;
- (void)setupReceiver;
- (void)setupNotificationListeners;
- (void)setupApplicationSupportSubDirectory;
- (void)start;
@property(nonatomic) __weak id <FIRMessagingDelegate> remoteMessageDelegate;
- (void)dealloc;
- (id)initPrivately;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingCheckinService : NSObject
{
    id _checkinPreferences;
}

@property(retain, nonatomic) id checkinPreferences; // @synthesize checkinPreferences=_checkinPreferences;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool hasValidCheckinInfo;
- (id)digest;
@property(readonly, nonatomic) NSString *versionInfo;
@property(readonly, nonatomic) NSString *secretToken;
@property(readonly, nonatomic) NSString *deviceAuthID;
- (_Bool)tryToLoadPrefetchedCheckinPreferences;

@end

@interface FIRMessagingClient : NSObject <FIRMessagingConnectionDelegate>
{
    _Bool _stayConnected;
    _Bool _didScheduleReconnect;
    FIRMessagingConnection *_connection;
    FIRMessagingDataMessageManager *_dataMessageManager;
    id <FIRMessagingClientDelegate> _clientDelegate;
    FIRMessagingRegistrar *_registrar;
    NSString *_senderId;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRReachabilityChecker *_reachability;
    long long _lastConnectedTimestamp;
    long long _lastDisconnectedTimestamp;
    unsigned long long _connectRetryCount;
    double _connectionTimeoutInterval;
    CDUnknownBlockType _connectHandler;
}

@property(copy, nonatomic) CDUnknownBlockType connectHandler; // @synthesize connectHandler=_connectHandler;
@property(nonatomic) _Bool didScheduleReconnect; // @synthesize didScheduleReconnect=_didScheduleReconnect;
@property(nonatomic) double connectionTimeoutInterval; // @synthesize connectionTimeoutInterval=_connectionTimeoutInterval;
@property(nonatomic) _Bool stayConnected; // @synthesize stayConnected=_stayConnected;
@property(nonatomic) unsigned long long connectRetryCount; // @synthesize connectRetryCount=_connectRetryCount;
@property(nonatomic) long long lastDisconnectedTimestamp; // @synthesize lastDisconnectedTimestamp=_lastDisconnectedTimestamp;
@property(nonatomic) long long lastConnectedTimestamp; // @synthesize lastConnectedTimestamp=_lastConnectedTimestamp;
@property(nonatomic) __weak FIRReachabilityChecker *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(retain, nonatomic) NSString *senderId; // @synthesize senderId=_senderId;
@property(retain, nonatomic) FIRMessagingRegistrar *registrar; // @synthesize registrar=_registrar;
@property(nonatomic) __weak id <FIRMessagingClientDelegate> clientDelegate; // @synthesize clientDelegate=_clientDelegate;
@property(nonatomic) __weak FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(retain, nonatomic) FIRMessagingConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (unsigned long long)nextRetryInterval;
- (void)scheduleConnectRetry;
- (void)didConnectTimeout;
- (void)tryToConnect;
- (void)setupConnection;
- (void)setupConnectionAndConnect;
- (int)connectionDidReceiveAckForRmqIds:(id)arg1;
- (void)connectionDidRecieveMessage:(id)arg1;
- (void)didLoginWithConnection:(id)arg1;
- (void)connection:(id)arg1 didCloseForReason:(unsigned long long)arg2;
- (void)sendOnConnectOrDrop:(id)arg1;
- (void)sendMessage:(id)arg1;
- (void)disconnectWithTryToConnectLater:(_Bool)arg1;
- (void)disconnect;
- (void)connect;
- (void)connectWithHandler:(CDUnknownBlockType)arg1;
- (void)retryConnectionImmediately:(_Bool)arg1;
@property(readonly, nonatomic) _Bool shouldStayConnected;
@property(readonly, nonatomic) _Bool isConnectionActive;
@property(readonly, nonatomic) _Bool isConnected;
- (void)updateSubscriptionWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)cancelAllRequests;
- (void)teardown;
- (id)initWithDelegate:(id)arg1 reachability:(id)arg2 rmq2Manager:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingCodedInputStream : NSObject
{
    NSData *_buffer;
    CDStruct_9d607ac6 _state;
}

@property(nonatomic) CDStruct_9d607ac6 state; // @synthesize state=_state;
@property(retain, nonatomic) NSData *buffer; // @synthesize buffer=_buffer;
- (void).cxx_destruct;
- (id)readDataWithLength:(unsigned int)arg1;
- (_Bool)readLength:(int *)arg1;
- (_Bool)readTag:(char *)arg1;
@property(readonly, nonatomic) unsigned long long offset;
- (id)initWithData:(id)arg1;

@end

@interface FIRMessagingD2SInfo : NSObject
{
    int _streamId;
    NSString *_d2sID;
}

@property(retain, nonatomic) NSString *d2sID; // @synthesize d2sID=_d2sID;
@property(nonatomic) int streamId; // @synthesize streamId=_streamId;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithStreamId:(int)arg1 d2sId:(id)arg2;

@end

@interface FIRMessagingConnection : NSObject <FIRMessagingSecureSocketDelegate>
{
    int _lastStreamIdAcked;
    int _inStreamId;
    int _outStreamId;
    long long _lastHeartbeatPingTimestamp;
    unsigned long long _state;
    NSString *_host;
    unsigned long long _port;
    id <FIRMessagingConnectionDelegate> _delegate;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingDataMessageManager *_dataMessageManager;
    NSString *_authId;
    NSString *_token;
    FIRMessagingSecureSocket *_socket;
    long long _lastLoginServerTimestamp;
    NSMutableArray *_unackedS2dIds;
    NSMutableDictionary *_ackedS2dMap;
    NSMutableArray *_d2sInfos;
    NSMutableArray *_sendOnConnectMessages;
    NSRunLoop *_runLoop;
}

+ (id)createStreamAck;
+ (int)currentNetworkType;
+ (id)loginRequestWithToken:(id)arg1 authID:(id)arg2;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(retain, nonatomic) NSMutableArray *sendOnConnectMessages; // @synthesize sendOnConnectMessages=_sendOnConnectMessages;
@property(retain, nonatomic) NSMutableArray *d2sInfos; // @synthesize d2sInfos=_d2sInfos;
@property(retain, nonatomic) NSMutableDictionary *ackedS2dMap; // @synthesize ackedS2dMap=_ackedS2dMap;
@property(retain, nonatomic) NSMutableArray *unackedS2dIds; // @synthesize unackedS2dIds=_unackedS2dIds;
@property(nonatomic) int outStreamId; // @synthesize outStreamId=_outStreamId;
@property(nonatomic) int inStreamId; // @synthesize inStreamId=_inStreamId;
@property(nonatomic) int lastStreamIdAcked; // @synthesize lastStreamIdAcked=_lastStreamIdAcked;
@property(nonatomic) long long lastLoginServerTimestamp; // @synthesize lastLoginServerTimestamp=_lastLoginServerTimestamp;
@property(retain, nonatomic) FIRMessagingSecureSocket *socket; // @synthesize socket=_socket;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) NSString *authId; // @synthesize authId=_authId;
@property(nonatomic) __weak FIRMessagingDataMessageManager *dataMessageManager; // @synthesize dataMessageManager=_dataMessageManager;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(nonatomic) __weak id <FIRMessagingConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) unsigned long long port; // @synthesize port=_port;
@property(copy, nonatomic) NSString *host; // @synthesize host=_host;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) long long lastHeartbeatPingTimestamp; // @synthesize lastHeartbeatPingTimestamp=_lastHeartbeatPingTimestamp;
- (void).cxx_destruct;
- (double)connectionTimeoutInterval;
- (void)logMessage:(id)arg1 messageType:(int)arg2 isOut:(_Bool)arg3;
- (void)cancelConnectionTimeoutTask;
- (void)scheduleConnectionTimeoutTask;
- (void)connectionTimedOut;
- (void)disconnect;
- (void)resetUnconfirmedAcks;
- (void)confirmAckedS2dIdsWithStreamId:(int)arg1;
- (void)didReceiveAckForRmqIds:(id)arg1;
- (void)confirmAckedD2sIdsWithStreamId:(int)arg1;
- (void)willSendProto:(id)arg1;
- (void)willProcessProto:(id)arg1;
- (void)didReceiveClose:(id)arg1;
- (void)didReceiveSelectiveAck:(id)arg1;
- (void)didReceiveStreamAck:(id)arg1;
- (void)didReceiveUnhandledProto:(id)arg1;
- (void)didReceiveDataMessageStanza:(id)arg1;
- (void)didReceiveHeartbeatAck:(id)arg1;
- (void)didReceiveHeartbeatPing:(id)arg1;
- (void)didReceiveLoginResponse:(id)arg1;
- (void)handleIqStanza:(id)arg1;
- (void)sendClose;
- (void)sendStreamAck;
- (void)sendHeartbeatPing;
- (void)sendHeartbeatAck;
- (void)sendLoginRequest:(id)arg1 token:(id)arg2;
- (void)sendOnConnectOrDrop:(id)arg1;
- (void)sendProto:(id)arg1;
- (void)secureSocket:(id)arg1 didSendProtoWithTag:(BOOL)arg2 rmqId:(id)arg3;
- (void)secureSocket:(id)arg1 didReceiveData:(id)arg2 withTag:(BOOL)arg3;
- (void)didDisconnectWithSecureSocket:(id)arg1;
- (void)secureSocketDidConnect:(id)arg1;
- (void)teardown;
- (void)signOut;
- (void)connectToSocket:(id)arg1;
- (void)setupConnectionSocket;
- (void)signIn;
@property(readonly, copy) NSString *description;
- (id)initWithAuthID:(id)arg1 token:(id)arg2 host:(id)arg3 port:(unsigned long long)arg4 runLoop:(id)arg5 rmq2Manager:(id)arg6 fcmManager:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingContextManagerService : NSObject
{
}

+ (id)parseDataFromMessage:(id)arg1;
+ (void)scheduleLocalNotificationForMessage:(id)arg1 atDate:(id)arg2;
+ (_Bool)handleContextManagerLocalTimeMessage:(id)arg1;
+ (_Bool)handleContextManagerMessage:(id)arg1;
+ (_Bool)isContextManagerMessage:(id)arg1;

@end

@interface FIRMessagingDataMessageManager : NSObject
{
    BOOL _upstreamForceReconnect;
    int _ttl;
    int _maxAppDataSize;
    FIRMessagingClient *_client;
    FIRMessagingRmqManager *_rmq2Manager;
    FIRMessagingSyncMessageManager *_syncMessageManager;
    id <FIRMessagingDataMessageManagerDelegate> _delegate;
    FIRMessagingDelayedMessageQueue *_delayedMessagesQueue;
    NSString *_deviceAuthID;
    NSString *_secretToken;
}

@property(nonatomic) BOOL upstreamForceReconnect; // @synthesize upstreamForceReconnect=_upstreamForceReconnect;
@property(nonatomic) int maxAppDataSize; // @synthesize maxAppDataSize=_maxAppDataSize;
@property(copy, nonatomic) NSString *secretToken; // @synthesize secretToken=_secretToken;
@property(copy, nonatomic) NSString *deviceAuthID; // @synthesize deviceAuthID=_deviceAuthID;
@property(nonatomic) int ttl; // @synthesize ttl=_ttl;
@property(retain, nonatomic) FIRMessagingDelayedMessageQueue *delayedMessagesQueue; // @synthesize delayedMessagesQueue=_delayedMessagesQueue;
@property(nonatomic) __weak id <FIRMessagingDataMessageManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak FIRMessagingSyncMessageManager *syncMessageManager; // @synthesize syncMessageManager=_syncMessageManager;
@property(nonatomic) __weak FIRMessagingRmqManager *rmq2Manager; // @synthesize rmq2Manager=_rmq2Manager;
@property(nonatomic) __weak FIRMessagingClient *client; // @synthesize client=_client;
- (void).cxx_destruct;
- (id)categoryForUpstreamMessages;
- (_Bool)tryToSendDataMessageStanza:(id)arg1;
- (_Bool)delayMessage:(id)arg1;
- (int)delayForMessage:(id)arg1;
- (_Bool)handleExpirationForDataMessage:(id)arg1;
- (void)resendMessagesWithConnection:(id)arg1;
- (void)willSendDataMessageFail:(id)arg1 withMessageId:(id)arg2 error:(unsigned long long)arg3;
- (void)willSendDataMessageSuccess:(id)arg1 withMessageId:(id)arg2;
- (int)addData:(id)arg1 toStanza:(id)arg2;
- (void)addParamWithKey:(id)arg1 value:(id)arg2 toStanza:(id)arg3;
- (void)didSendDataMessageStanza:(id)arg1;
- (void)sendDelayedMessages:(id)arg1;
- (void)sendDataMessageStanza:(id)arg1;
- (id)filterInternalFIRMessagingKeysFromMessage:(id)arg1;
- (void)didReceiveParsedMessage:(id)arg1;
- (id)parseDataMessage:(id)arg1;
- (void)handleMCSDataMessage:(id)arg1;
- (id)processPacket:(id)arg1;
- (void)refreshDelayedMessages;
- (void)setDeviceAuthID:(id)arg1 secretToken:(id)arg2;
- (id)initWithDelegate:(id)arg1 client:(id)arg2 rmq2Manager:(id)arg3 syncMessageManager:(id)arg4;

@end

@interface FIRMessagingDelayedMessageQueue : NSObject
{
    int _persistedMessageCount;
    id <FIRMessagingRmqScanner> _rmqScanner;
    CDUnknownBlockType _sendDelayedMessagesHandler;
    long long _scheduledTimeoutMilliseconds;
    long long _lastDBScanTimestampSeconds;
    NSMutableArray *_messages;
    NSTimer *_sendTimer;
}

@property(retain, nonatomic) NSTimer *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(retain, nonatomic) NSMutableArray *messages; // @synthesize messages=_messages;
@property(nonatomic) long long lastDBScanTimestampSeconds; // @synthesize lastDBScanTimestampSeconds=_lastDBScanTimestampSeconds;
@property(nonatomic) long long scheduledTimeoutMilliseconds; // @synthesize scheduledTimeoutMilliseconds=_scheduledTimeoutMilliseconds;
@property(nonatomic) int persistedMessageCount; // @synthesize persistedMessageCount=_persistedMessageCount;
@property(readonly, copy, nonatomic) CDUnknownBlockType sendDelayedMessagesHandler; // @synthesize sendDelayedMessagesHandler=_sendDelayedMessagesHandler;
@property(readonly, nonatomic) __weak id <FIRMessagingRmqScanner> rmqScanner; // @synthesize rmqScanner=_rmqScanner;
- (void).cxx_destruct;
- (void)cancelTimeout;
- (void)scheduleTimeoutInMillis:(long long)arg1;
- (long long)calculateTimeoutInMillisWithDelayInSeconds:(int)arg1;
- (_Bool)isTimeoutScheduled;
- (long long)messageCount;
- (void)sendMessages;
- (id)removeDelayedMessages;
- (_Bool)queueMessage:(id)arg1;
- (id)initWithRmqScanner:(id)arg1 sendDelayedMessagesHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface FIRMessagingInstanceIDProxy : NSObject
{
}

+ (id)instanceIDProxy;
- (void)deleteTokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (void)tokenWithAuthorizedEntity:(id)arg1 scope:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)token;
- (void)setAPNSToken:(id)arg1 type:(long long)arg2;

@end

@interface FIRMessagingLogger : NSObject
{
}

+ (id)formatMessageCode:(long long)arg1;
+ (id)standardLogger;
- (void)logFuncError:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncWarning:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncNotice:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncInfo:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;
- (void)logFuncDebug:(const char *)arg1 messageCode:(long long)arg2 msg:(id)arg3;

@end

@interface FIRMessagingPacket : NSObject
{
    BOOL _tag;
    NSData *_data;
    NSString *_rmqId;
}

+ (id)packetWithTag:(BOOL)arg1 rmqId:(id)arg2 data:(id)arg3;
@property(nonatomic) NSString *rmqId; // @synthesize rmqId=_rmqId;
@property(nonatomic) BOOL tag; // @synthesize tag=_tag;
@property(retain, nonatomic) NSData *data; // @synthesize data=_data;
- (void).cxx_destruct;
- (id)description;
- (id)initWithTag:(BOOL)arg1 rmqId:(id)arg2 data:(id)arg3;
- (id)init;

@end

@interface FIRMessagingPacketQueue : NSObject
{
    NSMutableArray *_packetsContainer;
}

@property(retain, nonatomic) NSMutableArray *packetsContainer; // @synthesize packetsContainer=_packetsContainer;
- (void).cxx_destruct;
- (id)pop;
- (void)pushHead:(id)arg1;
- (void)push:(id)arg1;
@property(readonly, nonatomic) unsigned long long count;
@property(readonly, nonatomic) _Bool isEmpty;
- (id)init;

@end

@interface FIRMessagingTopicBatch : NSObject <NSCoding>
{
    long long _action;
    NSMutableSet *_topics;
    NSMutableDictionary *_topicHandlers;
}

@property(retain, nonatomic) NSMutableDictionary *topicHandlers; // @synthesize topicHandlers=_topicHandlers;
@property(readonly, copy, nonatomic) NSMutableSet *topics; // @synthesize topics=_topics;
@property(readonly, nonatomic) long long action; // @synthesize action=_action;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithAction:(long long)arg1;

@end

@interface FIRMessagingPendingTopicsList : NSObject <NSCoding>
{
    NSObject<FIRMessagingPendingTopicsListDelegate> *_delegate;
    NSDate *_archiveDate;
    NSMutableArray *_topicBatches;
    FIRMessagingTopicBatch *_currentBatch;
    NSMutableSet *_topicsInFlight;
}

+ (void)pruneTopicBatches:(id)arg1;
@property(retain, nonatomic) NSMutableSet *topicsInFlight; // @synthesize topicsInFlight=_topicsInFlight;
@property(retain, nonatomic) FIRMessagingTopicBatch *currentBatch; // @synthesize currentBatch=_currentBatch;
@property(retain, nonatomic) NSMutableArray *topicBatches; // @synthesize topicBatches=_topicBatches;
@property(retain, nonatomic) NSDate *archiveDate; // @synthesize archiveDate=_archiveDate;
@property(nonatomic) __weak NSObject<FIRMessagingPendingTopicsListDelegate> *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)beginUpdateForCurrentBatchTopic:(id)arg1;
- (_Bool)subscriptionErrorIsRecoverable:(id)arg1;
- (void)resumeOperationsIfNeeded;
- (void)addOperationForTopic:(id)arg1 withAction:(long long)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) unsigned long long numberOfBatches;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)init;

@end

@interface FIRMessagingPersistentSyncMessage : NSObject
{
    _Bool _apnsReceived;
    _Bool _mcsReceived;
    NSString *_rmqID;
    long long _expirationTime;
}

@property(nonatomic) long long expirationTime; // @synthesize expirationTime=_expirationTime;
@property(nonatomic) _Bool mcsReceived; // @synthesize mcsReceived=_mcsReceived;
@property(nonatomic) _Bool apnsReceived; // @synthesize apnsReceived=_apnsReceived;
@property(retain, nonatomic) NSString *rmqID; // @synthesize rmqID=_rmqID;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (id)initWithRMQID:(id)arg1 expirationTime:(long long)arg2;
- (id)init;

@end

@interface FIRMessagingPubSub : NSObject <FIRMessagingPendingTopicsListDelegate>
{
    FIRMessagingPubSubCache *_cache;
    FIRMessagingClient *_client;
    FIRMessagingPendingTopicsList *_pendingTopicUpdates;
}

+ (_Bool)isValidTopicWithPrefix:(id)arg1;
+ (id)topicRegex;
+ (_Bool)hasTopicsPrefix:(id)arg1;
+ (id)addPrefixToTopic:(id)arg1;
@property(retain, nonatomic) FIRMessagingPendingTopicsList *pendingTopicUpdates; // @synthesize pendingTopicUpdates=_pendingTopicUpdates;
@property(retain, nonatomic) FIRMessagingClient *client; // @synthesize client=_client;
@property(readonly, nonatomic) FIRMessagingPubSubCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (_Bool)verifyPubSubOptions:(id)arg1;
- (void)restorePendingTopicsList;
- (void)archivePendingTopicsList:(id)arg1;
- (_Bool)pendingTopicsListCanRequestTopicUpdates:(id)arg1;
- (void)pendingTopicsListDidUpdate:(id)arg1;
- (void)pendingTopicsList:(id)arg1 requestedUpdateForTopic:(id)arg2 action:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (void)scheduleSync:(_Bool)arg1;
- (void)unsubscribeFromTopic:(id)arg1;
- (void)subscribeToTopic:(id)arg1;
- (void)unsubscribeWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (void)subscribeWithToken:(id)arg1 topic:(id)arg2 options:(id)arg3 handler:(CDUnknownBlockType)arg4;
- (id)initWithClient:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingPubSubRegistrar : NSObject
{
    FIRMessagingCheckinService *_checkinService;
    NSOperationQueue *_topicOperations;
    NSError *_operationInProgressError;
}

@property(retain, nonatomic) NSError *operationInProgressError; // @synthesize operationInProgressError=_operationInProgressError;
@property(readonly, nonatomic) NSOperationQueue *topicOperations; // @synthesize topicOperations=_topicOperations;
@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
- (void).cxx_destruct;
- (void)updateSubscriptionToTopic:(id)arg1 withToken:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (void)stopAllSubscriptionRequests;
- (id)initWithCheckinService:(id)arg1;
- (id)init;

@end

@interface FIRMessagingReceiver : NSObject <FIRMessagingDataMessageManagerDelegate>
{
    id <FIRMessagingReceiverDelegate> _delegate;
}

+ (id)nextMessageID;
@property(nonatomic) __weak id <FIRMessagingReceiverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)scheduleNotificationForMessage:(id)arg1;
- (void)scheduleIos10NotificationForMessage:(id)arg1 withIdentifier:(id)arg2;
- (void)didDeleteMessagesOnServer;
- (void)didSendDataMessageWithID:(id)arg1;
- (void)willSendDataMessageWithID:(id)arg1 error:(id)arg2;
- (void)didReceiveMessage:(id)arg1 withIdentifier:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingRegistrar : NSObject
{
    _Bool _stopAllSubscriptions;
    FIRMessagingPubSubRegistrar *_pubsubRegistrar;
    FIRMessagingCheckinService *_checkinService;
}

@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(nonatomic) _Bool stopAllSubscriptions; // @synthesize stopAllSubscriptions=_stopAllSubscriptions;
@property(retain, nonatomic) FIRMessagingPubSubRegistrar *pubsubRegistrar; // @synthesize pubsubRegistrar=_pubsubRegistrar;
- (void).cxx_destruct;
- (void)doUpdateSubscriptionForTopic:(id)arg1 token:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)cancelAllRequests;
- (void)updateSubscriptionToTopic:(id)arg1 withToken:(id)arg2 options:(id)arg3 shouldDelete:(_Bool)arg4 handler:(CDUnknownBlockType)arg5;
- (_Bool)hasValidCheckinInfo;
- (_Bool)tryToLoadValidCheckinInfo;
- (id)init;
@property(readonly, nonatomic) NSString *secretToken;
@property(readonly, nonatomic) NSString *deviceAuthID;

@end

@interface FIRMessagingRemoteNotificationsProxy : NSObject
{
    _Bool _didSwizzleMethods;
    _Bool _didSwizzleAppDelegateMethods;
    _Bool _hasSwizzledUserNotificationDelegate;
    _Bool _isObservingUserNotificationDelegateChanges;
    NSMutableDictionary *_originalAppDelegateImps;
    NSMutableDictionary *_swizzledSelectorsByClass;
    id _userNotificationCenter;
    id _currentUserNotificationCenterDelegate;
}

+ (id)sharedProxy;
+ (void)swizzleMethods;
+ (_Bool)canSwizzleMethods;
@property(retain, nonatomic) id currentUserNotificationCenterDelegate; // @synthesize currentUserNotificationCenterDelegate=_currentUserNotificationCenterDelegate;
@property(retain, nonatomic) id userNotificationCenter; // @synthesize userNotificationCenter=_userNotificationCenter;
@property(nonatomic) _Bool isObservingUserNotificationDelegateChanges; // @synthesize isObservingUserNotificationDelegateChanges=_isObservingUserNotificationDelegateChanges;
@property(nonatomic) _Bool hasSwizzledUserNotificationDelegate; // @synthesize hasSwizzledUserNotificationDelegate=_hasSwizzledUserNotificationDelegate;
@property(nonatomic) _Bool didSwizzleAppDelegateMethods; // @synthesize didSwizzleAppDelegateMethods=_didSwizzleAppDelegateMethods;
@property(nonatomic) _Bool didSwizzleMethods; // @synthesize didSwizzleMethods=_didSwizzleMethods;
@property(retain, nonatomic) NSMutableDictionary *swizzledSelectorsByClass; // @synthesize swizzledSelectorsByClass=_swizzledSelectorsByClass;
@property(retain, nonatomic) NSMutableDictionary *originalAppDelegateImps; // @synthesize originalAppDelegateImps=_originalAppDelegateImps;
- (void).cxx_destruct;
- (CDUnknownFunctionPointerType)nonExistantMethodImplementationForClass:(Class)arg1;
- (void)unswizzleSelector:(SEL)arg1 inClass:(Class)arg2;
- (void)swizzleSelector:(SEL)arg1 inClass:(Class)arg2 withImplementation:(CDUnknownFunctionPointerType)arg3 inProtocol:(id)arg4;
- (void)removeImplementationForSelector:(SEL)arg1;
- (void)trackSwizzledSelector:(SEL)arg1 ofClass:(Class)arg2;
- (CDUnknownFunctionPointerType)originalImplementationForSelector:(SEL)arg1;
- (void)saveOriginalImplementation:(CDUnknownFunctionPointerType)arg1 forSelector:(SEL)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)removeUserNotificationCenterDelegateObserver;
- (void)addDelegateObserverToUserNotificationCenter:(id)arg1;
- (void)unswizzleUserNotificationCenterDelegate:(id)arg1;
- (void)swizzleUserNotificationCenterDelegate:(id)arg1;
- (void)listenForDelegateChangesInUserNotificationCenter:(id)arg1;
- (void)swizzleAppDelegateMethods:(id)arg1;
- (void)unswizzleAllMethods;
- (void)swizzleMethodsIfPossible;
- (void)dealloc;
- (id)init;

@end

@interface FIRMessagingRmq2PersistentStore : NSObject
{
    struct sqlite3 *_database;
    NSString *_databaseName;
    unsigned long long _currentDirectory;
}

+ (void)removeDatabase:(id)arg1;
+ (id)pathForDatabase:(id)arg1 inDirectory:(unsigned long long)arg2;
@property(nonatomic) unsigned long long currentDirectory; // @synthesize currentDirectory=_currentDirectory;
@property(retain, nonatomic) NSString *databaseName; // @synthesize databaseName=_databaseName;
- (void).cxx_destruct;
- (void)logErrorAndFinalizeStatement:(struct sqlite3_stmt *)arg1;
- (void)logError;
- (int)lastErrorCode;
- (id)lastErrorMessage;
- (_Bool)updateSyncMessageWithRmqID:(id)arg1 column:(id)arg2 value:(_Bool)arg3 error:(id *)arg4;
- (_Bool)updateSyncMessageViaMCSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)updateSyncMessageViaAPNSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)saveSyncMessageWithRmqID:(id)arg1 expirationTime:(long long)arg2 apnsReceived:(_Bool)arg3 mcsReceived:(_Bool)arg4 error:(id *)arg5;
- (int)deleteExpiredOrFinishedSyncMessages:(id *)arg1;
- (_Bool)deleteSyncMessageWithRmqID:(id)arg1;
- (id)querySyncMessageWithRmqID:(id)arg1;
- (void)scanOutgoingRmqMessagesWithHandler:(CDUnknownBlockType)arg1;
- (id)unackedS2dRmqIds;
- (_Bool)updateLastOutgoingRmqId:(long long)arg1;
- (long long)queryLastRmqId;
- (long long)queryHighestRmqId;
- (int)deleteMessagesFromTable:(id)arg1 withRmqIds:(id)arg2;
- (_Bool)saveMessageWithRmqId:(long long)arg1 tag:(BOOL)arg2 data:(id)arg3 error:(id *)arg4;
- (_Bool)saveUnackedS2dMessageWithRmqId:(id)arg1;
- (void)updateDbWithStringRmqID;
- (void)openDatabase:(id)arg1;
- (void)removeDatabase;
- (void)dropTableWithName:(id)arg1;
- (void)createTableWithName:(id)arg1 command:(id)arg2;
- (_Bool)doesFileExistInDirectory:(unsigned long long)arg1;
- (_Bool)moveToApplicationSupportSubDirectory:(id)arg1;
- (void)dealloc;
- (id)initWithDatabaseName:(id)arg1;

@end

@interface FIRMessagingRmqManager : NSObject <FIRMessagingRmqScanner>
{
    FIRMessagingRmq2PersistentStore *_rmq2Store;
    NSMutableDictionary *_outstandingMessages;
    long long _rmqId;
}

+ (void)removeDatabaseWithName:(id)arg1;
@property(nonatomic) long long rmqId; // @synthesize rmqId=_rmqId;
@property(retain, nonatomic) NSMutableDictionary *outstandingMessages; // @synthesize outstandingMessages=_outstandingMessages;
@property(retain, nonatomic) FIRMessagingRmq2PersistentStore *rmq2Store; // @synthesize rmq2Store=_rmq2Store;
- (void).cxx_destruct;
- (long long)nextRmqId;
- (_Bool)updateSyncMessageViaMCSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)updateSyncMessageViaAPNSWithRmqID:(id)arg1 error:(id *)arg2;
- (_Bool)saveSyncMessageWithRmqID:(id)arg1 expirationTime:(long long)arg2 apnsReceived:(_Bool)arg3 mcsReceived:(_Bool)arg4 error:(id *)arg5;
- (int)deleteExpiredOrFinishedSyncMessages:(id *)arg1;
- (_Bool)deleteSyncMessageWithRmqID:(id)arg1;
- (id)querySyncMessageWithRmqID:(id)arg1;
- (void)removeS2dIds:(id)arg1;
- (int)removeRmqMessagesWithRmqIds:(id)arg1;
- (int)removeRmqMessagesWithRmqId:(id)arg1;
- (void)ackReceivedForRmqId:(id)arg1;
- (void)scanWithRmqMessageHandler:(CDUnknownBlockType)arg1 dataMessageHandler:(CDUnknownBlockType)arg2;
- (id)unackedS2dRmqIds;
- (long long)querylastRmqId;
- (long long)queryHighestRmqId;
- (_Bool)saveS2dMessageWithRmqId:(id)arg1;
- (void)saveLastOutgoingRmqId:(long long)arg1;
- (_Bool)saveMessage:(id)arg1 withRmqId:(long long)arg2 tag:(BOOL)arg3 error:(id *)arg4;
- (_Bool)saveRmqMessage:(id)arg1 error:(id *)arg2;
- (void)loadInitialOutgoingPersistentId;
- (void)loadRmqId;
- (id)initWithDatabaseName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingSecureSocket : NSObject <NSStreamDelegate>
{
    _Bool _isVersionSent;
    _Bool _isVersionReceived;
    _Bool _isInStreamOpen;
    _Bool _isOutStreamOpen;
    BOOL _currentProtoTypeBeingSent;
    id <FIRMessagingSecureSocketDelegate> _delegate;
    unsigned long long _state;
    NSInputStream *_inStream;
    NSOutputStream *_outStream;
    NSMutableData *_inputBuffer;
    unsigned long long _inputBufferLength;
    NSMutableData *_outputBuffer;
    unsigned long long _outputBufferLength;
    FIRMessagingPacketQueue *_packetQueue;
    NSRunLoop *_runLoop;
    NSString *_currentRmqIdBeingSent;
}

@property(nonatomic) BOOL currentProtoTypeBeingSent; // @synthesize currentProtoTypeBeingSent=_currentProtoTypeBeingSent;
@property(retain, nonatomic) NSString *currentRmqIdBeingSent; // @synthesize currentRmqIdBeingSent=_currentRmqIdBeingSent;
@property(retain, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(nonatomic) _Bool isOutStreamOpen; // @synthesize isOutStreamOpen=_isOutStreamOpen;
@property(nonatomic) _Bool isInStreamOpen; // @synthesize isInStreamOpen=_isInStreamOpen;
@property(nonatomic) _Bool isVersionReceived; // @synthesize isVersionReceived=_isVersionReceived;
@property(nonatomic) _Bool isVersionSent; // @synthesize isVersionSent=_isVersionSent;
@property(retain, nonatomic) FIRMessagingPacketQueue *packetQueue; // @synthesize packetQueue=_packetQueue;
@property(nonatomic) unsigned long long outputBufferLength; // @synthesize outputBufferLength=_outputBufferLength;
@property(retain, nonatomic) NSMutableData *outputBuffer; // @synthesize outputBuffer=_outputBuffer;
@property(nonatomic) unsigned long long inputBufferLength; // @synthesize inputBufferLength=_inputBufferLength;
@property(retain, nonatomic) NSMutableData *inputBuffer; // @synthesize inputBuffer=_inputBuffer;
@property(retain, nonatomic) NSOutputStream *outStream; // @synthesize outStream=_outStream;
@property(retain, nonatomic) NSInputStream *inStream; // @synthesize inStream=_inStream;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <FIRMessagingSecureSocketDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)performWrite;
- (unsigned long long)processCurrentInputBuffer:(id)arg1 outOffset:(unsigned long long *)arg2;
- (_Bool)performRead;
- (void)closeStream:(id)arg1;
- (void)openStream:(id)arg1 isVOIPStream:(_Bool)arg2;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)sendData:(id)arg1 withTag:(BOOL)arg2 rmqId:(id)arg3;
- (void)disconnect;
- (void)connectToHost:(id)arg1 port:(unsigned long long)arg2 onRunLoop:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface FIRMessagingSyncMessageManager : NSObject
{
    FIRMessagingRmqManager *_rmqManager;
}

+ (long long)expirationTimeForSyncMessage:(id)arg1;
@property(retain, nonatomic) FIRMessagingRmqManager *rmqManager; // @synthesize rmqManager=_rmqManager;
- (void).cxx_destruct;
- (_Bool)didReceiveSyncMessage:(id)arg1 viaAPNS:(_Bool)arg2 viaMCS:(_Bool)arg3;
- (_Bool)didReceiveMCSSyncMessage:(id)arg1;
- (_Bool)didReceiveAPNSSyncMessage:(id)arg1;
- (void)removeExpiredSyncMessages;
- (id)initWithRmqManager:(id)arg1;
- (id)init;

@end

@interface FIRMessagingTopicOperation : NSOperation
{
    _Bool _isFinished;
    _Bool _isExecuting;
    NSString *_topic;
    long long _action;
    NSString *_token;
    NSDictionary *_options;
    FIRMessagingCheckinService *_checkinService;
    CDUnknownBlockType _completion;
    NSURLSessionDataTask *_dataTask;
}

+ (id)sharedSession;
@property(retain) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) FIRMessagingCheckinService *checkinService; // @synthesize checkinService=_checkinService;
@property(copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(copy, nonatomic) NSString *token; // @synthesize token=_token;
@property(nonatomic) long long action; // @synthesize action=_action;
@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
- (void).cxx_destruct;
- (void)performSubscriptionChange;
- (void)cancel;
- (void)finishWithResult:(long long)arg1 error:(id)arg2;
- (void)start;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setExecuting:(_Bool)arg1;
- (_Bool)isExecuting;
- (_Bool)isAsynchronous;
- (void)dealloc;
- (id)initWithTopic:(id)arg1 action:(long long)arg2 token:(id)arg3 options:(id)arg4 checkinService:(id)arg5 completion:(CDUnknownBlockType)arg6;

@end

@interface GtalkGtalkCoreRoot : GPBRootObject
{
}

@end

@interface GtalkHeartbeatPing : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkHeartbeatAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkErrorInfo : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int code; // @dynamic code;
@property(retain, nonatomic) GtalkExtension *extension; // @dynamic extension;
@property(nonatomic) _Bool hasCode; // @dynamic hasCode;
@property(nonatomic) _Bool hasExtension; // @dynamic hasExtension;
@property(nonatomic) _Bool hasMessage; // @dynamic hasMessage;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *message; // @dynamic message;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkSetting : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GtalkHeartbeatStat : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasIp; // @dynamic hasIp;
@property(nonatomic) _Bool hasTimeout; // @dynamic hasTimeout;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(copy, nonatomic) NSString *ip; // @dynamic ip;
@property(nonatomic) _Bool timeout; // @dynamic timeout;

@end

@interface GtalkHeartbeatConfig : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasIntervalMs; // @dynamic hasIntervalMs;
@property(nonatomic) _Bool hasIp; // @dynamic hasIp;
@property(nonatomic) _Bool hasUploadStat; // @dynamic hasUploadStat;
@property(nonatomic) int intervalMs; // @dynamic intervalMs;
@property(copy, nonatomic) NSString *ip; // @dynamic ip;
@property(nonatomic) _Bool uploadStat; // @dynamic uploadStat;

@end

@interface GtalkLoginRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(nonatomic) int authService; // @dynamic authService;
@property(copy, nonatomic) NSString *authToken; // @dynamic authToken;
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(retain, nonatomic) NSMutableArray *clientEventArray; // @dynamic clientEventArray;
@property(readonly, nonatomic) unsigned long long clientEventArray_Count; // @dynamic clientEventArray_Count;
@property(nonatomic) int compress; // @dynamic compress;
@property(copy, nonatomic) NSString *deviceId; // @dynamic deviceId;
@property(copy, nonatomic) NSString *domain; // @dynamic domain;
@property(nonatomic) unsigned long long gcmStartTimeMs; // @dynamic gcmStartTimeMs;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAuthService; // @dynamic hasAuthService;
@property(nonatomic) _Bool hasAuthToken; // @dynamic hasAuthToken;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasCompress; // @dynamic hasCompress;
@property(nonatomic) _Bool hasDeviceId; // @dynamic hasDeviceId;
@property(nonatomic) _Bool hasDomain; // @dynamic hasDomain;
@property(nonatomic) _Bool hasGcmStartTimeMs; // @dynamic hasGcmStartTimeMs;
@property(nonatomic) _Bool hasHeartbeatStat; // @dynamic hasHeartbeatStat;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasIncludeStreamIds; // @dynamic hasIncludeStreamIds;
@property(nonatomic) _Bool hasLastRmqId; // @dynamic hasLastRmqId;
@property(nonatomic) _Bool hasNetworkType; // @dynamic hasNetworkType;
@property(nonatomic) _Bool hasOnFallback; // @dynamic hasOnFallback;
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasTokenVersionInfo; // @dynamic hasTokenVersionInfo;
@property(nonatomic) _Bool hasUseRmq2; // @dynamic hasUseRmq2;
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(retain, nonatomic) GtalkHeartbeatStat *heartbeatStat; // @dynamic heartbeatStat;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) _Bool includeStreamIds; // @dynamic includeStreamIds;
@property(nonatomic) long long lastRmqId; // @dynamic lastRmqId;
@property(nonatomic) int networkType; // @dynamic networkType;
@property(nonatomic) _Bool onFallback; // @dynamic onFallback;
@property(retain, nonatomic) NSMutableArray *receivedPersistentIdArray; // @dynamic receivedPersistentIdArray;
@property(readonly, nonatomic) unsigned long long receivedPersistentIdArray_Count; // @dynamic receivedPersistentIdArray_Count;
@property(copy, nonatomic) NSString *resource; // @dynamic resource;
@property(retain, nonatomic) NSMutableArray *settingArray; // @dynamic settingArray;
@property(readonly, nonatomic) unsigned long long settingArray_Count; // @dynamic settingArray_Count;
@property(nonatomic) long long status; // @dynamic status;
@property(copy, nonatomic) NSString *tokenVersionInfo; // @dynamic tokenVersionInfo;
@property(nonatomic) _Bool useRmq2; // @dynamic useRmq2;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkLoginResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasHeartbeatConfig; // @dynamic hasHeartbeatConfig;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasServerTimestamp; // @dynamic hasServerTimestamp;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(retain, nonatomic) GtalkHeartbeatConfig *heartbeatConfig; // @dynamic heartbeatConfig;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) long long serverTimestamp; // @dynamic serverTimestamp;
@property(retain, nonatomic) NSMutableArray *settingArray; // @dynamic settingArray;
@property(readonly, nonatomic) unsigned long long settingArray_Count; // @dynamic settingArray_Count;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkBindAccountRequest : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *authToken; // @dynamic authToken;
@property(copy, nonatomic) NSString *domain; // @dynamic domain;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAuthToken; // @dynamic hasAuthToken;
@property(nonatomic) _Bool hasDomain; // @dynamic hasDomain;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasResource; // @dynamic hasResource;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(copy, nonatomic) NSString *resource; // @dynamic resource;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkBindAccountResponse : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) int streamId; // @dynamic streamId;

@end

@interface GtalkStreamErrorStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasText; // @dynamic hasText;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *text; // @dynamic text;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkClose : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GtalkExtension : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *data_p; // @dynamic data_p;
@property(nonatomic) _Bool hasData_p; // @dynamic hasData_p;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) int id_p; // @dynamic id_p;

@end

@interface GtalkMessageStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *body; // @dynamic body;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasBody; // @dynamic hasBody;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasNosave; // @dynamic hasNosave;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasRead; // @dynamic hasRead;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasSubject; // @dynamic hasSubject;
@property(nonatomic) _Bool hasThread; // @dynamic hasThread;
@property(nonatomic) _Bool hasTimestamp; // @dynamic hasTimestamp;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) _Bool nosave; // @dynamic nosave;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) _Bool read; // @dynamic read;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *subject; // @dynamic subject;
@property(copy, nonatomic) NSString *thread; // @dynamic thread;
@property(nonatomic) long long timestamp; // @dynamic timestamp;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkPresenceStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(nonatomic) int capabilitiesFlags; // @dynamic capabilitiesFlags;
@property(nonatomic) int client; // @dynamic client;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) NSMutableArray *extensionArray; // @dynamic extensionArray;
@property(readonly, nonatomic) unsigned long long extensionArray_Count; // @dynamic extensionArray_Count;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasCapabilitiesFlags; // @dynamic hasCapabilitiesFlags;
@property(nonatomic) _Bool hasClient; // @dynamic hasClient;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasPriority; // @dynamic hasPriority;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) int priority; // @dynamic priority;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) int show; // @dynamic show;
@property(copy, nonatomic) NSString *status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkBatchPresenceStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(retain, nonatomic) NSMutableArray *presenceArray; // @dynamic presenceArray;
@property(readonly, nonatomic) unsigned long long presenceArray_Count; // @dynamic presenceArray_Count;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkIqStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) long long accountId; // @dynamic accountId;
@property(retain, nonatomic) GtalkErrorInfo *error; // @dynamic error;
@property(retain, nonatomic) GtalkExtension *extension; // @dynamic extension;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool hasAccountId; // @dynamic hasAccountId;
@property(nonatomic) _Bool hasError; // @dynamic hasError;
@property(nonatomic) _Bool hasExtension; // @dynamic hasExtension;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkAppData : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasKey; // @dynamic hasKey;
@property(nonatomic) _Bool hasValue; // @dynamic hasValue;
@property(copy, nonatomic) NSString *key; // @dynamic key;
@property(copy, nonatomic) NSString *value; // @dynamic value;

@end

@interface GtalkDataMessageStanza : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int actualDelay; // @dynamic actualDelay;
@property(retain, nonatomic) NSMutableArray *appDataArray; // @dynamic appDataArray;
@property(readonly, nonatomic) unsigned long long appDataArray_Count; // @dynamic appDataArray_Count;
@property(copy, nonatomic) NSString *category; // @dynamic category;
@property(retain, nonatomic) GtalkCellTower *cellTower; // @dynamic cellTower;
@property(copy, nonatomic) NSString *clientId; // @dynamic clientId;
@property(nonatomic) _Bool deliveryReceiptRequested; // @dynamic deliveryReceiptRequested;
@property(nonatomic) long long deviceUserId; // @dynamic deviceUserId;
@property(copy, nonatomic) NSString *externalMessageId; // @dynamic externalMessageId;
@property(nonatomic) long long flags; // @dynamic flags;
@property(copy, nonatomic) NSString *from; // @dynamic from;
@property(nonatomic) _Bool fromTrustedServer; // @dynamic fromTrustedServer;
@property(nonatomic) _Bool hasActualDelay; // @dynamic hasActualDelay;
@property(nonatomic) _Bool hasCategory; // @dynamic hasCategory;
@property(nonatomic) _Bool hasCellTower; // @dynamic hasCellTower;
@property(nonatomic) _Bool hasClientId; // @dynamic hasClientId;
@property(nonatomic) _Bool hasDeliveryReceiptRequested; // @dynamic hasDeliveryReceiptRequested;
@property(nonatomic) _Bool hasDeviceUserId; // @dynamic hasDeviceUserId;
@property(nonatomic) _Bool hasExternalMessageId; // @dynamic hasExternalMessageId;
@property(nonatomic) _Bool hasFlags; // @dynamic hasFlags;
@property(nonatomic) _Bool hasFrom; // @dynamic hasFrom;
@property(nonatomic) _Bool hasFromTrustedServer; // @dynamic hasFromTrustedServer;
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasImmediateAck; // @dynamic hasImmediateAck;
@property(nonatomic) _Bool hasLastStreamIdReceived; // @dynamic hasLastStreamIdReceived;
@property(nonatomic) _Bool hasMaxDelay; // @dynamic hasMaxDelay;
@property(nonatomic) _Bool hasPermission; // @dynamic hasPermission;
@property(nonatomic) _Bool hasPersistentId; // @dynamic hasPersistentId;
@property(nonatomic) _Bool hasPkgSignature; // @dynamic hasPkgSignature;
@property(nonatomic) _Bool hasPriority; // @dynamic hasPriority;
@property(nonatomic) _Bool hasQueued; // @dynamic hasQueued;
@property(nonatomic) _Bool hasRawData; // @dynamic hasRawData;
@property(nonatomic) _Bool hasRegId; // @dynamic hasRegId;
@property(nonatomic) _Bool hasRmqId; // @dynamic hasRmqId;
@property(nonatomic) _Bool hasSent; // @dynamic hasSent;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStreamId; // @dynamic hasStreamId;
@property(nonatomic) _Bool hasTo; // @dynamic hasTo;
@property(nonatomic) _Bool hasToken; // @dynamic hasToken;
@property(nonatomic) _Bool hasTtl; // @dynamic hasTtl;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) _Bool immediateAck; // @dynamic immediateAck;
@property(nonatomic) int lastStreamIdReceived; // @dynamic lastStreamIdReceived;
@property(nonatomic) int maxDelay; // @dynamic maxDelay;
@property(copy, nonatomic) NSString *permission; // @dynamic permission;
@property(copy, nonatomic) NSString *persistentId; // @dynamic persistentId;
@property(copy, nonatomic) NSString *pkgSignature; // @dynamic pkgSignature;
@property(nonatomic) int priority; // @dynamic priority;
@property(nonatomic) int queued; // @dynamic queued;
@property(copy, nonatomic) NSData *rawData; // @dynamic rawData;
@property(copy, nonatomic) NSString *regId; // @dynamic regId;
@property(nonatomic) long long rmqId; // @dynamic rmqId;
@property(nonatomic) long long sent; // @dynamic sent;
@property(nonatomic) long long status; // @dynamic status;
@property(nonatomic) int streamId; // @dynamic streamId;
@property(copy, nonatomic) NSString *to; // @dynamic to;
@property(copy, nonatomic) NSString *token; // @dynamic token;
@property(nonatomic) int ttl; // @dynamic ttl;

@end

@interface GtalkTalkMetadata : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool foreground; // @dynamic foreground;
@property(nonatomic) _Bool hasForeground; // @dynamic hasForeground;

@end

@interface GtalkCellTower : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) _Bool hasKnownCongestionStatus; // @dynamic hasKnownCongestionStatus;
@property(copy, nonatomic) NSString *id_p; // @dynamic id_p;
@property(nonatomic) int knownCongestionStatus; // @dynamic knownCongestionStatus;

@end

@interface GtalkClientEvent : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int errorCode; // @dynamic errorCode;
@property(nonatomic) _Bool hasErrorCode; // @dynamic hasErrorCode;
@property(nonatomic) _Bool hasNetworkPort; // @dynamic hasNetworkPort;
@property(nonatomic) _Bool hasNetworkType; // @dynamic hasNetworkType;
@property(nonatomic) _Bool hasNumberDiscardedEvents; // @dynamic hasNumberDiscardedEvents;
@property(nonatomic) _Bool hasTimeConnectionEndedMs; // @dynamic hasTimeConnectionEndedMs;
@property(nonatomic) _Bool hasTimeConnectionEstablishedMs; // @dynamic hasTimeConnectionEstablishedMs;
@property(nonatomic) _Bool hasTimeConnectionStartedMs; // @dynamic hasTimeConnectionStartedMs;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(nonatomic) int networkPort; // @dynamic networkPort;
@property(nonatomic) int networkType; // @dynamic networkType;
@property(nonatomic) unsigned int numberDiscardedEvents; // @dynamic numberDiscardedEvents;
@property(nonatomic) unsigned long long timeConnectionEndedMs; // @dynamic timeConnectionEndedMs;
@property(nonatomic) unsigned long long timeConnectionEstablishedMs; // @dynamic timeConnectionEstablishedMs;
@property(nonatomic) unsigned long long timeConnectionStartedMs; // @dynamic timeConnectionStartedMs;
@property(nonatomic) int type; // @dynamic type;

@end

@interface GtalkGtalkExtensionsRoot : GPBRootObject
{
}

@end

@interface GtalkRosterQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int avatarHeight; // @dynamic avatarHeight;
@property(nonatomic) int avatarWidth; // @dynamic avatarWidth;
@property(copy, nonatomic) NSString *etag; // @dynamic etag;
@property(nonatomic) _Bool hasAvatarHeight; // @dynamic hasAvatarHeight;
@property(nonatomic) _Bool hasAvatarWidth; // @dynamic hasAvatarWidth;
@property(nonatomic) _Bool hasEtag; // @dynamic hasEtag;
@property(nonatomic) _Bool hasNotModified; // @dynamic hasNotModified;
@property(retain, nonatomic) NSMutableArray *itemArray; // @dynamic itemArray;
@property(readonly, nonatomic) unsigned long long itemArray_Count; // @dynamic itemArray_Count;
@property(nonatomic) _Bool notModified; // @dynamic notModified;

@end

@interface GtalkRosterItem : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) int ask; // @dynamic ask;
@property(nonatomic) int display; // @dynamic display;
@property(retain, nonatomic) NSMutableArray *groupArray; // @dynamic groupArray;
@property(readonly, nonatomic) unsigned long long groupArray_Count; // @dynamic groupArray_Count;
@property(nonatomic) _Bool hasAsk; // @dynamic hasAsk;
@property(nonatomic) _Bool hasDisplay; // @dynamic hasDisplay;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasName; // @dynamic hasName;
@property(nonatomic) _Bool hasQuickContact; // @dynamic hasQuickContact;
@property(nonatomic) _Bool hasRejected; // @dynamic hasRejected;
@property(nonatomic) _Bool hasSubscription; // @dynamic hasSubscription;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(copy, nonatomic) NSString *name; // @dynamic name;
@property(nonatomic) _Bool quickContact; // @dynamic quickContact;
@property(nonatomic) _Bool rejected; // @dynamic rejected;
@property(nonatomic) int subscription; // @dynamic subscription;

@end

@interface GtalkRmqLastId : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) long long id_p; // @dynamic id_p;

@end

@interface GtalkRmqAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasId_p; // @dynamic hasId_p;
@property(nonatomic) long long id_p; // @dynamic id_p;

@end

@interface GtalkVCard : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(copy, nonatomic) NSString *fullName; // @dynamic fullName;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasFullName; // @dynamic hasFullName;
@property(nonatomic) _Bool hasModified; // @dynamic hasModified;
@property(nonatomic) _Bool hasPhoto; // @dynamic hasPhoto;
@property(nonatomic) _Bool hasVersion; // @dynamic hasVersion;
@property(nonatomic) _Bool modified; // @dynamic modified;
@property(retain, nonatomic) GtalkPhoto *photo; // @dynamic photo;
@property(copy, nonatomic) NSString *version; // @dynamic version;

@end

@interface GtalkPhoto : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *data_p; // @dynamic data_p;
@property(nonatomic) _Bool hasData_p; // @dynamic hasData_p;
@property(nonatomic) _Bool hasType; // @dynamic hasType;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface GtalkChatRead : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkChatClosed : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasUser; // @dynamic hasUser;
@property(copy, nonatomic) NSString *user; // @dynamic user;

@end

@interface GtalkCapabilities : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *ext; // @dynamic ext;
@property(nonatomic) _Bool hasExt; // @dynamic hasExt;
@property(nonatomic) _Bool hasHash_p; // @dynamic hasHash_p;
@property(nonatomic) _Bool hasNode; // @dynamic hasNode;
@property(nonatomic) _Bool hasVer; // @dynamic hasVer;
@property(copy, nonatomic) NSString *hash_p; // @dynamic hash_p;
@property(copy, nonatomic) NSString *node; // @dynamic node;
@property(copy, nonatomic) NSString *ver; // @dynamic ver;

@end

@interface GtalkSharedStatus : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasInvisible; // @dynamic hasInvisible;
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) _Bool hasStatus; // @dynamic hasStatus;
@property(nonatomic) _Bool hasStatusListContentsMax; // @dynamic hasStatusListContentsMax;
@property(nonatomic) _Bool hasStatusListMax; // @dynamic hasStatusListMax;
@property(nonatomic) _Bool hasStatusMax; // @dynamic hasStatusMax;
@property(nonatomic) _Bool hasStatusMinVersion; // @dynamic hasStatusMinVersion;
@property(nonatomic) _Bool invisible; // @dynamic invisible;
@property(nonatomic) int show; // @dynamic show;
@property(copy, nonatomic) NSString *status; // @dynamic status;
@property(retain, nonatomic) NSMutableArray *statusListArray; // @dynamic statusListArray;
@property(readonly, nonatomic) unsigned long long statusListArray_Count; // @dynamic statusListArray_Count;
@property(nonatomic) int statusListContentsMax; // @dynamic statusListContentsMax;
@property(nonatomic) int statusListMax; // @dynamic statusListMax;
@property(nonatomic) int statusMax; // @dynamic statusMax;
@property(nonatomic) int statusMinVersion; // @dynamic statusMinVersion;

@end

@interface GtalkSharedStatus_StatusList : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool hasShow; // @dynamic hasShow;
@property(nonatomic) int show; // @dynamic show;
@property(retain, nonatomic) NSMutableArray *statusArray; // @dynamic statusArray;
@property(readonly, nonatomic) unsigned long long statusArray_Count; // @dynamic statusArray_Count;

@end

@interface GtalkOtrQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(copy, nonatomic) NSString *etag; // @dynamic etag;
@property(nonatomic) _Bool hasEtag; // @dynamic hasEtag;
@property(nonatomic) _Bool hasNosaveDefault; // @dynamic hasNosaveDefault;
@property(nonatomic) _Bool hasNotModified; // @dynamic hasNotModified;
@property(retain, nonatomic) NSMutableArray *itemArray; // @dynamic itemArray;
@property(readonly, nonatomic) unsigned long long itemArray_Count; // @dynamic itemArray_Count;
@property(nonatomic) _Bool nosaveDefault; // @dynamic nosaveDefault;
@property(nonatomic) _Bool notModified; // @dynamic notModified;

@end

@interface GtalkOtrItem : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool changedByBuddy; // @dynamic changedByBuddy;
@property(nonatomic) _Bool hasChangedByBuddy; // @dynamic hasChangedByBuddy;
@property(nonatomic) _Bool hasJid; // @dynamic hasJid;
@property(nonatomic) _Bool hasNosave; // @dynamic hasNosave;
@property(copy, nonatomic) NSString *jid; // @dynamic jid;
@property(nonatomic) _Bool nosave; // @dynamic nosave;

@end

@interface GtalkIdle : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool away; // @dynamic away;
@property(nonatomic) _Bool hasAway; // @dynamic hasAway;
@property(nonatomic) _Bool hasIdle; // @dynamic hasIdle;
@property(nonatomic) _Bool idle; // @dynamic idle;

@end

@interface GtalkPostAuthBatchQuery : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(nonatomic) _Bool available; // @dynamic available;
@property(copy, nonatomic) NSString *avatarHash; // @dynamic avatarHash;
@property(nonatomic) int capabilitiesExtFlags; // @dynamic capabilitiesExtFlags;
@property(nonatomic) _Bool deviceIdle; // @dynamic deviceIdle;
@property(nonatomic) _Bool hasAvailable; // @dynamic hasAvailable;
@property(nonatomic) _Bool hasAvatarHash; // @dynamic hasAvatarHash;
@property(nonatomic) _Bool hasCapabilitiesExtFlags; // @dynamic hasCapabilitiesExtFlags;
@property(nonatomic) _Bool hasDeviceIdle; // @dynamic hasDeviceIdle;
@property(nonatomic) _Bool hasMobileIndicator; // @dynamic hasMobileIndicator;
@property(nonatomic) _Bool hasOtrEtag; // @dynamic hasOtrEtag;
@property(nonatomic) _Bool hasRosterEtag; // @dynamic hasRosterEtag;
@property(nonatomic) _Bool hasSharedStatusVersion; // @dynamic hasSharedStatusVersion;
@property(nonatomic) _Bool hasVcardQueryStanzaId; // @dynamic hasVcardQueryStanzaId;
@property(nonatomic) _Bool mobileIndicator; // @dynamic mobileIndicator;
@property(copy, nonatomic) NSString *otrEtag; // @dynamic otrEtag;
@property(copy, nonatomic) NSString *rosterEtag; // @dynamic rosterEtag;
@property(nonatomic) int sharedStatusVersion; // @dynamic sharedStatusVersion;
@property(copy, nonatomic) NSString *vcardQueryStanzaId; // @dynamic vcardQueryStanzaId;

@end

@interface GtalkStreamAck : GPBMessage
{
}

+ (id)descriptor;

@end

@interface GtalkSelectiveAck : GPBMessage
{
}

+ (id)descriptor;

// Remaining properties
@property(retain, nonatomic) NSMutableArray *idArray; // @dynamic idArray;
@property(readonly, nonatomic) unsigned long long idArray_Count; // @dynamic idArray_Count;

@end

@interface GADNMRAIDActionMonitor : NSObject
{
    GADNAd *_ad;
    GADNWebAdView *_webAdView;
    GADNExpandActionMonitorConfiguration *_configuration;
    _Bool _isMRAIDAdView;
    GADNObserverCollection *_observers;
    GADNObserverCollection *_SDKReadyObservers;
    GADNScheduler *_updatePositionScheduler;
    struct CGRect _usableInterfaceFrame;
    struct CGRect _creativeWebViewFrame;
    struct CGRect _defaultAdFrame;
    GADNMRAIDResizePresenter *_resizePresenter;
    GADNObserverCollection *_resizeObservers;
    GADNFullScreenAdViewController *_expandablePresenter;
    GADNObserverCollection *_expandableObservers;
    _Bool _visible;
}

- (void).cxx_destruct;
- (void)handleSetOrientationPropertiesAction:(id)arg1;
- (void)handleUnloadAction:(id)arg1;
- (void)handleStorePictureAction:(id)arg1;
- (void)handleOpenCalendarAction:(id)arg1;
- (void)handleAdExpandDidEndEvent:(id)arg1;
- (void)configureMRAIDCloseButtonForExpandable:(id)arg1;
- (void)handleAdWillExpandEvent:(id)arg1;
- (void)handleResizeAction:(id)arg1;
- (void)restoreBannerState;
- (void)notifyCurrentMRAIDState;
- (id)currentMRAIDState;
- (void)updateVisibility;
- (void)notifyOrientationToCreative;
- (void)updatePosition;
- (void)notifyErrorWithMessage:(id)arg1 forAction:(id)arg2;
- (void)notifyDeviceFeatures;
- (void)attachObserversToExpandablePresenter;
- (void)postSDKReadyEvent;
- (void)postSDKReadyEventWhenSwappableViewAddedToWindow;
- (void)didLoadMRAID;
- (void)setReferenceView:(id)arg1;
- (void)dealloc;
- (id)initWithAd:(id)arg1 webAdView:(id)arg2 configuration:(id)arg3;

@end

@interface GADNMediationRewardBasedVideoAdRenderer : NSObject <GADNAdRendering>
{
    GADNServerTransaction *_transaction;
    struct NSDictionary *_adConfiguration;
    id _connector;
    CDUnknownBlockType _renderCompletionHandler;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadCompleted
    GADNInterstitialAd *_rewardBasedVideoAd;
    NSDictionary *_rewardGrantedUserInfo;
    NSString *_shouldRenderTestAdLabel;
}

@property(readonly, nonatomic) NSString *shouldRenderTestAdLabel; // @synthesize shouldRenderTestAdLabel=_shouldRenderTestAdLabel;
@property(readonly, nonatomic) NSDictionary *rewardGrantedUserInfo; // @synthesize rewardGrantedUserInfo=_rewardGrantedUserInfo;
- (void).cxx_destruct;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) GADNTargeting *targeting;
- (void)receivedRewardBasedVideoAdWithError:(id)arg1;
- (void)receivedRewardBasedVideoAdFromConnector:(id)arg1;
- (void)failedToSetUpWithError:(id)arg1;
- (void)requestFromConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNetworkUtilizationMonitor : NSObject
{
    GADNNetworkUtilizationStatistics *_aggregatedStatistics;
    GADNNetworkUtilizationStatistics *_initialStatistics;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
@property(readonly) unsigned long long wifiReceivedByteCount;
@property(readonly) unsigned long long wifiTransmittedByteCount;
@property(readonly) unsigned long long cellularReceivedByteCount;
@property(readonly) unsigned long long cellularTransmittedByteCount;
- (void)updateByteCounts;
- (void)stop;
- (void)start;
- (id)init;

@end

@interface GADNMediaContentAd : GADNAd
{
}

@end

@interface GADNNativeMuteThisAdLoaderOptions : GADNAdLoaderOptions
{
    _Bool _customMuteThisAdRequested;
}

@property(nonatomic) _Bool customMuteThisAdRequested; // @synthesize customMuteThisAdRequested=_customMuteThisAdRequested;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADNOctagonSearchBannerView : GADNOctagonBannerView
{
}

+ (Class)bannerViewClass;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;

@end

@interface GADNViewControllerPresenter : NSObject <GADNPresenting>
{
    UIViewController *_viewController;
    GADNEventContext *_context;
}

- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)canPresent;
@property(readonly, nonatomic) GADNEventContext *context;
- (id)init;
- (id)initWithViewController:(id)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNInAppPurchaseProductCache : NSObject
{
    NSMutableDictionary *_validProducts;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductIdentifier:(id)arg1;
- (id)init;

@end

@interface DFPNOctagonBannerView : GADNOctagonBannerView <GADAppEventDelegate>
{
    id <GADAppEventDelegate> _appEventDelegate;
    id <DFPCustomRenderedBannerViewDelegate> _customRenderedBannerViewDelegate;
}

+ (Class)bannerViewClass;
@property(nonatomic) __weak id <DFPCustomRenderedBannerViewDelegate> customRenderedBannerViewDelegate; // @synthesize customRenderedBannerViewDelegate=_customRenderedBannerViewDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)resize:(struct GADNAdSize)arg1;
- (void)setValidAdSizesWithSizes:(struct GADNAdSize *)arg1;
- (void)recordImpression;
- (void)setAdOptions:(id)arg1;
- (struct CGSize)effectiveContentSize;
@property(readonly, nonatomic) GADNVideoController *videoController;
@property(nonatomic) _Bool enableManualImpressions;
@property(retain, nonatomic) GADNCorrelator *correlator;
@property(copy, nonatomic) NSArray *validAdSizes;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(readonly, nonatomic) DFPNBannerView *bannerView; // @dynamic bannerView;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediationInterstitialAdConfiguration : GADNMediationAdConfiguration
{
}

@end

@interface GADNLogger : NSObject
{
}

@end

@interface GADNAd : NSObject <GADNEventContextSource, GADNMonitorOwner>
{
    GADNEventContext *_context;
    NSMutableArray *_monitors;
    GADNRootViewControllerProvider *_rootViewControllerProvider;
}

@property(readonly, nonatomic) GADNRootViewControllerProvider *rootViewControllerProvider; // @synthesize rootViewControllerProvider=_rootViewControllerProvider;
- (void).cxx_destruct;
- (void)addMonitor:(id)arg1;
@property(readonly, nonatomic) GADNEventContext *context;
- (id)initWithContext:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAdViewMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNInternalNativeAd *_internalNativeAd;
    UIView *_trackedView;
    UITapGestureRecognizer *_singleTap;
    GADGestureRecognizer *_touchGestureRecognizer;
    GADNTouchGestureRecognizer *_touchEventGestureRecognizer;
    GADNVisibilityMonitor *_visibilityMonitor;
    _Bool _handlesClicks;
    id <GADNMediaContentDisplaying> _mediaContent;
    _Bool _hasMediaContentObserver;
    NSString *_adChoicesAssetName;
}

- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleMediaViewClick:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)handleCustomClickGesture:(id)arg1;
- (void)handleUntrackedView:(id)arg1;
- (void)handleTrackedView:(id)arg1;
- (id)initWithInternalNativeAd:(id)arg1 handlesClicks:(_Bool)arg2 mediaContent:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPNBannerViewOptions : GADNAdLoaderOptions
{
    _Bool _enableManualImpressions;
    id <GADAppEventDelegate> _appEventDelegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
}

@property(nonatomic) _Bool enableManualImpressions; // @synthesize enableManualImpressions=_enableManualImpressions;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNWebAdView : GADNView <GADNWebViewControllerDelegate, GADNJavascriptEvaluating>
{
    CDUnknownBlockType _loadCompletionHandler;
    double _loadCompletedTimestamp;
    NSOperationQueue *_eventQueue;
    _Bool _touched;
    GADNActionURLHandler *_actionURLHandler;
    GADNObserverCollection *_bufferObservers;
    GADNEventContext *_context;
    _Bool _shouldRenderTestAdLabel;
    GADNWebViewController *_webViewController;
    id <GADNWebAdViewDelegate> _delegate;
    GADNWebViewConfiguration *_configuration;
}

@property(readonly, nonatomic) GADNWebViewConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) _Bool shouldRenderTestAdLabel; // @synthesize shouldRenderTestAdLabel=_shouldRenderTestAdLabel;
@property(nonatomic) __weak id <GADNWebAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GADNWebViewController *webViewController; // @synthesize webViewController=_webViewController;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)webViewControllerWebContentProcessDidTerminate:(id)arg1;
- (void)webViewController:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webViewController:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webViewController:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)isNavigationValidClick:(long long)arg1;
- (void)dropWebViewController;
- (void)dispatchSDKEvent:(id)arg1 parameters:(id)arg2;
- (void)asyncEvaluateFunction:(id)arg1 parameters:(id)arg2;
- (void)asyncEvaluateScript:(id)arg1;
- (long long)contentInsetAdjustmentBehavior;
- (void)bufferNotificationsUntilAdAvailableToDelegate:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)loadCompletedWithError:(id)arg1;
- (void)loadURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setLoadCompletionHandler:(CDUnknownBlockType)arg1;
- (void)layoutSubviews;
- (void)willMoveToWindow:(id)arg1;
- (id)context;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2 context:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNetworkAdLoader : NSObject
{
}

+ (id)sharedURLSession;
- (void)loadWithServerRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleServerResponse:(id)arg1 body:(id)arg2 serverRequest:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;

@end

@interface DFPNBannerView : GADNBannerView
{
    id <DFPCustomRenderedBannerViewDelegate> _customRenderedBannerViewDelegate;
}

@property(nonatomic) __weak id <DFPCustomRenderedBannerViewDelegate> customRenderedBannerViewDelegate; // @synthesize customRenderedBannerViewDelegate=_customRenderedBannerViewDelegate;
- (void).cxx_destruct;
- (void)setAdOptions:(id)arg1;
- (void)recordImpression;
- (void)resize:(struct GADNAdSize)arg1;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @dynamic appEventDelegate;
@property(retain, nonatomic) GADNCorrelator *correlator; // @dynamic correlator;
@property(nonatomic) _Bool enableManualImpressions; // @dynamic enableManualImpressions;
@property(copy, nonatomic) NSArray *validAdSizes; // @dynamic validAdSizes;
@property(readonly, nonatomic) GADNVideoController *videoController; // @dynamic videoController;

@end

@interface GADNVideoPlayer : NSObject
{
    GADNWebAdView *_adView;
    id <GADNAVPlayerItemProvider> _playerItemProvider;
    GADNVideoConfiguration *_videoConfiguration;
    GADNObserverCollection *_observers;
    double _playerActionTimeoutInterval;
    id <GADNEventContextSource> _loggingContextSource;
    // Error parsing type: AB, name: _hasPostedCanPlayThrough
    _Bool _appActive;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    NSMutableArray *_periodicTimeObservers;
    _Bool _playing;
    _Bool _isVisible;
    _Bool _hasPlaybackStalledAtLeastOnce;
    _Bool _isObservingPlayer;
    _Bool _isObservingPlayerRate;
    _Bool _isObservingPlayerItem;
    _Bool _isObservingPlayerItemLoadedTimeRanges;
    _Bool _loaded;
    long long _numberOfBlocksMomentarilyPausedPlayer;
    NSString *_lastPlayerTimeIntervalString;
    GADNAVPlayerItemLogger *_playerItemLogger;
    NSMutableArray *_playbackStartObservers;
    NSObject<OS_dispatch_queue> *_actionLockQueue;
    NSOperationQueue *_actionOperationQueue;
    NSNumber *_scheduledPlay;
    NSNumber *_scheduledMute;
    NSNumber *_scheduledVolume;
    _Bool _scheduledActionUserInitiated;
    NSObject<OS_dispatch_semaphore> *_actionSemaphore;
}

- (void).cxx_destruct;
- (void)notifyVideoRateChanged;
- (void)notifyVideoPlayerWithNewStatus:(long long)arg1;
- (void)notifyVideoReadyToPlay;
- (void)notifyVideoPlayerWithTime:(CDStruct_198678f7)arg1;
- (void)notifyPlayerMetadata;
- (void)itemDidPlayToEnd:(id)arg1;
- (void)handlePlayerRateChange;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingPlayerItemLoadedTimeRanges;
- (void)observePlayerItemLoadedTimeRanges;
- (void)observePlayerItem;
- (void)observePlayer;
- (void)handlePlayerItemDurationLoadUpdate;
- (void)reattachPlayersCurrentItem;
- (void)optimizePlayerResources;
- (void)playerVisibilityDidChange:(id)arg1;
- (void)removeTimeObserver:(id)arg1;
- (void)addPeriodicTimeObserverForInterval:(CDStruct_198678f7)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)addPlaybackStartListenerUsingBlock:(CDUnknownBlockType)arg1;
- (void)removeOutput:(id)arg1;
- (void)addOutput:(id)arg1;
@property(readonly) _Bool hasPostedCanPlayThrough;
- (void)momentarilyPauseAndExecuteBlock:(CDUnknownBlockType)arg1;
- (struct CGSize)videoSize;
- (void)seekToTime:(double)arg1;
- (void)flushPlayerActionPlaying:(_Bool)arg1 volume:(float)arg2 muted:(_Bool)arg3 userInitiated:(_Bool)arg4 semaphore:(id)arg5;
- (void)flushPlayerAction;
- (void)setVolume:(float)arg1 userInitiated:(_Bool)arg2;
- (void)setMuted:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)pauseUserInitiated:(_Bool)arg1;
- (void)playUserInitiated:(_Bool)arg1;
- (id)createPlayerLayer;
- (void)asyncLoadPlayer;
- (void)dealloc;
- (id)initWithAdView:(id)arg1 playerItemProvider:(id)arg2 visibilityMessageSource:(id)arg3 videoConfiguration:(id)arg4 loggingContextSource:(id)arg5;

@end

@interface GADNMediationInterstitialAdRenderer : GADNMediatedAdRenderer <GADNAdPresenting>
{
    GADNInterstitialAd *_interstitialAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    CDUnknownBlockType _renderCompletionHandler;
    GADNMediatedIntermission *_intermission;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadCompleted
}

- (void).cxx_destruct;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)viewControllerForPresentingModalView;
- (void)reportClick;
- (void)adapterCompletedLoadWithError:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRTBMediationRewardBasedVideoAdRenderer : NSObject <GADNAdPresenting, GADMediationRewardedAdEventDelegate, GADNAdRendering>
{
    id <GADMediationAdapter> _loadingAdapter;
    GADNInterstitialAd *_rewardedAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    id <GADMediationRewardedAd> _mediatedAd;
    GADNMediationRewardedAdConfiguration *_mediatedConfiguration;
    NSDictionary *_rewardGrantedUserInfo;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (void)didFailToPresentWithError:(id)arg1;
- (void)didRewardUserWithReward:(id)arg1;
- (void)didEndVideo;
- (void)didStartVideo;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (id)adEventDelegateForAdapter:(id)arg1 mediatedAd:(id)arg2 adConfiguration:(struct NSDictionary *)arg3 transaction:(id)arg4 renderCompletionHandler:(CDUnknownBlockType)arg5;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNContentSizeMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAd *_ad;
    GADNWebViewController *_webViewController;
    NSObject<OS_dispatch_queue> *_lockQueue;
    double _lastObservedContentHeight;
}

- (void).cxx_destruct;
- (void)updateContentHeight:(double)arg1;
- (void)updateContentHeightWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithWebAdView:(id)arg1 ad:(id)arg2;

@end

@interface GADNRequestConfiguration : NSObject
{
    NSString *_maxAdContentRating;
    NSNumber *_underAgeOfConsent;
    NSNumber *_tagForChildDirectedTreatment;
}

@property(copy, nonatomic) NSNumber *tagForChildDirectedTreatment; // @synthesize tagForChildDirectedTreatment=_tagForChildDirectedTreatment;
@property(copy, nonatomic) NSNumber *underAgeOfConsent; // @synthesize underAgeOfConsent=_underAgeOfConsent;
@property(copy, nonatomic) NSString *maxAdContentRating; // @synthesize maxAdContentRating=_maxAdContentRating;
- (void).cxx_destruct;
- (void)tagForChildDirectedTreatment:(_Bool)arg1;
- (void)tagForUnderAgeOfConsent:(_Bool)arg1;

@end

@interface GADNManualImpressionMonitor : NSObject
{
    NSArray *_manualImpressionURLStrings;
    NSOperationQueue *_observationQueue;
    GADNObserverCollection *_observers;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2;
- (void).cxx_destruct;
- (void)handleManualImpressionInContext:(id)arg1;
- (id)initWithAd:(id)arg1 manualImpressionURLStrings:(id)arg2;

@end

@interface GADNJSCoreJSFunction : GADNJSFunction
{
    JSValue *_functionValue;
}

- (void).cxx_destruct;
- (void)callWithArguments:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithFunctionValue:(id)arg1;

@end

@interface GADNNetwork : NSObject <GADNSignalSource, GADNSignal>
{
    unsigned long long _networkType;
    unsigned long long _lastKnownNetworkType;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_enableCheckingQueue;
    struct __SCNetworkReachability *_networkReachabilityRef;
    CTTelephonyNetworkInfo *_telephonyNetworkInfo;
    NSString *_radioAccessTechnology;
    NSString *_lastKnownRadioAccessTechnology;
    NSString *_userAgentString;
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
@property(copy) NSString *userAgentString;
- (void)setRadioAccessTechnology:(id)arg1;
- (void)setNetworkTypeFromFlags:(unsigned int)arg1;
- (void)setNetworkType:(unsigned long long)arg1;
- (void)enableRadioAccessTechnologyChecking;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCorrelatorAdLoaderOptions : GADNAdLoaderOptions
{
    GADNCorrelator *_correlator;
}

@property(retain, nonatomic) GADNCorrelator *correlator; // @synthesize correlator=_correlator;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNNativeAdAttributionView : UIView
{
    GADNPushTransitionView *_iconView;
    UILabel *_textView;
    UIView *_textPaddingLeft;
    UIView *_textPaddingRight;
    NSArray *_dynamicConstraints;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
@property(readonly, nonatomic) UIView *textView;
@property(readonly, nonatomic) UIView *iconView;
- (void)setAttribution:(id)arg1;
- (id)initWithAttribution:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNComposeViewControllerDelegate : NSObject <MFMessageComposeViewControllerDelegate>
{
}

+ (id)sharedInstance;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNInternalNativeAd : GADNAd
{
    NSDictionary *_assets;
    GADNObserverCollection *_clickConfirmingViewObservers;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    // Error parsing type: AB, name: _viewAwareAPIUsed
    // Error parsing type: AB, name: _customMuteThisAdRequested
    // Error parsing type: AB, name: _customOnePointFiveClickImplementedByPublisher
    _Bool _clickConfirmationRequired;
    double _unconfirmedClickTimestamp;
    NSString *_unconfirmedClickIdentifier;
    // Error parsing type: AB, name: _customClickGestureEnabledByPublisher
    _Bool _customMuteThisAdAvailable;
    Class _adConfigurationAdClass;
    Class _publicAdClass;
    NSString *_adNetworkClassName;
    struct NSDictionary *_adConfiguration;
    GADNOverlayView *_overlayView;
    GADNNativeAssetViewTracker *_assetViewTracker;
    GADNNativeAdContext *_nativeAdContext;
    GADNNativeAdFeatures *_nativeAdFeatures;
    long long _preferredAdChoicesPosition;
    NSString *_customTemplateID;
    GADNNativeAdImage *_adChoicesIcon;
    UIView *_clickConfirmingView;
}

+ (Class)adClassFromSingleNativeAdConfiguration:(struct NSDictionary *)arg1;
@property(readonly, nonatomic) _Bool customMuteThisAdAvailable; // @synthesize customMuteThisAdAvailable=_customMuteThisAdAvailable;
@property(nonatomic) __weak UIView *clickConfirmingView; // @synthesize clickConfirmingView=_clickConfirmingView;
@property(retain, nonatomic) GADNNativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(copy, nonatomic) NSString *customTemplateID; // @synthesize customTemplateID=_customTemplateID;
@property(nonatomic) long long preferredAdChoicesPosition; // @synthesize preferredAdChoicesPosition=_preferredAdChoicesPosition;
@property(readonly, nonatomic) GADNNativeAdFeatures *nativeAdFeatures; // @synthesize nativeAdFeatures=_nativeAdFeatures;
@property(retain, nonatomic) GADNNativeAdContext *nativeAdContext; // @synthesize nativeAdContext=_nativeAdContext;
@property(retain, nonatomic) GADNNativeAssetViewTracker *assetViewTracker; // @synthesize assetViewTracker=_assetViewTracker;
@property(readonly, nonatomic) GADNOverlayView *overlayView; // @synthesize overlayView=_overlayView;
@property(readonly, nonatomic) NSDictionary *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(retain, nonatomic) Class publicAdClass; // @synthesize publicAdClass=_publicAdClass;
@property(readonly, nonatomic) Class adConfigurationAdClass; // @synthesize adConfigurationAdClass=_adConfigurationAdClass;
- (void).cxx_destruct;
- (double)confirmationClickTimeInterval;
- (void)resetUnconfirmedClick;
- (void)handleAssociatedNativeAd:(id)arg1;
- (void)unregisterClickConfirmingView;
- (void)registerClickConfirmingView:(id)arg1;
@property(readonly, nonatomic, getter=isCustomClickGestureEnabled) _Bool customClickGestureEnabled;
@property(nonatomic) _Bool customClickGestureEnabledByPublisher;
@property(copy, nonatomic) NSString *unconfirmedClickIdentifier;
@property(nonatomic) double unconfirmedClickTimestamp;
@property(nonatomic) _Bool clickConfirmationRequired;
@property(readonly, nonatomic, getter=isCustomOnePointFiveClickEnabled) _Bool customOnePointFiveClickEnabled;
@property(nonatomic) _Bool customOnePointFiveClickImplementedByPublisher;
@property(nonatomic) _Bool customMuteThisAdRequested;
@property(nonatomic) _Bool viewAwareAPIUsed;
- (id)assetForKey:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 assets:(id)arg2 adNetworkClassName:(id)arg3 adClass:(Class)arg4 adConfiguration:(struct NSDictionary *)arg5 overlayView:(id)arg6 nativeAdContext:(id)arg7 nativeAdFeatures:(id)arg8;

@end

@interface GADNVideoLoggingContextSource : NSObject <GADNEventContextSource>
{
    GADNEventContext *_context;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) GADNEventContext *context;
- (id)initWithWebAdView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNVideoMetadataMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAdVideoController *_videoController;
}

- (void).cxx_destruct;
- (void)handleVideoMetadataAction:(id)arg1;
- (id)initWithMessageSource:(id)arg1 adVideoController:(id)arg2;

@end

@interface GADNEventLogger : NSObject
{
    GADNObserverCollection *_observers;
    // Error parsing type: AB, name: _enabled
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableDictionary *_eventObserversMap;
    NSMutableArray *_enqueuedEvents;
    GADNScheduler *_scheduler;
    double _flushBufferTimestamp;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _didDropEvents
    NSMutableDictionary *_requestEventsMap;
    _Bool _shouldBatchRequestEvents;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)addEventToRequestMap:(id)arg1;
- (void)addEventsToQueue:(id)arg1;
- (void)handleNotificationName:(id)arg1 context:(id)arg2 userInfo:(id)arg3;
- (_Bool)flushEventsQueue;
- (void)updateScheduler;
- (void)updateEventObservers;
- (void)updateBatchEvents;
- (void)updateLoggingState;
- (void)startScheduler;
- (void)disableLogging;
- (void)enableLogging;
- (_Bool)isNotificationLogged:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
@property(readonly, nonatomic) _Bool enabled;
- (id)init;

@end

@interface GADNAdapterInitializer : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNInitializationStatus *_status;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSDate *_startTimestamp;
    id _configurationObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) GADNInitializationStatus *status;
- (void)initializeAdaptersWithSettings:(id)arg1;
- (id)setUpOperationForAdapter:(id)arg1 data:(id)arg2;
- (Class)adapterForName:(id)arg1;
- (void)fetchSettings;
- (void)adapterDidBecomeReady:(id)arg1;
- (void)updateDescription:(id)arg1 forAdapter:(id)arg2 includingLatency:(_Bool)arg3;
- (void)setState:(long long)arg1 description:(id)arg2 updateLatency:(_Bool)arg3 forAdapter:(id)arg4;
- (double)timeIntervalSinceInitializationStart;
- (id)init;

@end

@interface GADNMediatedMediaContent : NSObject <GADNMediaContentDisplaying>
{
    id _mediatedNativeAd;
    GADNAdVideoController *_videoController;
}

- (void).cxx_destruct;
- (double)aspectRatio;
- (struct CGSize)intrinsicContentSize;
- (id)videoController;
- (id)mediaView;
- (id)initWithMediatedNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNJSCoreNavigator : NSObject <GADNJSCoreNavigatorProtocol>
{
    NSString *_userAgent;
}

@property(readonly, nonatomic) NSString *userAgent; // @synthesize userAgent=_userAgent;
- (void).cxx_destruct;
- (id)init;

@end

@interface GADNRequestStatisticsSignals : NSObject <GADNSignal, GADNSignalSource>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    // Error parsing type: Aq, name: _sequenceNumber
    long long _previousRequestCount;
    NSMutableDictionary *_applicationMetrics;
    NSMutableDictionary *_requestMetricsBySequenceNumber;
    NSMapTable *_adMetricsByAdContext;
    NSMutableDictionary *_unfinalizedAdsBySequenceNumber;
    GADNAd *_appExitingAd;
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)updateRequestTimeMetrics;
- (id)appStatistics;
- (id)adStatistics;
- (void)cleanUpMetricsSentByRequest:(id)arg1;
- (_Bool)hasFinalizedStatisticsForSequenceNumber:(id)arg1;
- (void)setValue:(id)arg1 forRequest:(id)arg2 signal:(id)arg3;
- (void)resetQualitySessionIfNeeded;
- (void)endClickEventsForContext:(id)arg1;
- (void)endClickEventForExitingAd;
- (void)recordClickForAd:(id)arg1;
- (id)knownAdContexts;
- (void)setAds:(id)arg1 forRequest:(id)arg2;
- (void)addServerRequest:(id)arg1;
- (long long)nextSequenceNumber;
- (void)addSynchronizedObserverForName:(id)arg1 fromInstanceOfClass:(Class)arg2 block:(CDUnknownBlockType)arg3;
- (void)observeAdEvents;
- (void)observeAppEvents;
- (void)observeRequests;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNDefaultInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
    SKPaymentTransaction *_paymentTransaction;
}

+ (void)disableDefaultPurchaseFlow;
+ (void)enableDefaultPurchaseFlowWithDelegate:(id)arg1;
@property(readonly, nonatomic) SKPaymentTransaction *paymentTransaction; // @synthesize paymentTransaction=_paymentTransaction;
@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)finishTransaction;

@end

@interface GADNUnifiedNativeAdView : UIView <GADNNativeAdViewOverlayProtocol, GADNEventContextSource>
{
    GADNUnifiedNativeAd *_nativeAd;
    GADNOverlayView *_overlayView;
    GADNNativeAssetViewTracker *_assetViewTracker;
    NSArray *_constraints;
    GADNEventContext *_context;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    UIView *_advertiserView;
    GADNMediaView *_mediaView;
    GADNAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADNAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADNMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)setOverlayView:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)orderViews;
- (void)updateAdChoicesView;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADNUnifiedNativeAd *nativeAd;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNSearchBannerView : GADNBannerView <GADNDynamicHeightSearchBannerViewDelegate>
{
    GADNDynamicHeightSearchBannerView *_dynamicHeightAdView;
}

- (void).cxx_destruct;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerView:(id)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerView:(id)arg1 didReceiveLandingPageURL:(id)arg2;
- (void)bannerViewDidReceiveAd:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)setAdUnitID:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)loadRequest:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADNAdSize)arg2;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNGLSphericalShader : NSObject
{
    double _externalRollMultiplier;
    double _externalPitchMultiplier;
    unsigned int _glProgram;
    int _uniformColorConversionMatrix;
    int _uniformFOVx;
    int _uniformFOVy;
    int _uniformVMat;
    struct __CVOpenGLESTextureCache *_videoTextureCache;
    struct __CVBuffer *_lumaTexture;
    struct __CVBuffer *_chromaTexture;
    union _GLKMatrix4 _orientationOffsetRotationY;
    _Bool _firstRenderingOrientationHandled;
    union _GLKMatrix4 _externalPitchRotation;
    union _GLKMatrix4 _externalRollRotation;
    long long _lastApplicationOrientation;
    NSObject<OS_dispatch_queue> *_lockQueue;
    CMMotionManager *_motionManager;
}

- (void).cxx_destruct;
- (long long)lastApplicationOrientation;
- (void)setLastApplicationOrientation:(long long)arg1;
- (void)updateApplicationOrientation;
- (union _GLKMatrix4)deviceRotationMatrix;
- (void)destroyOpenGLProgram;
- (struct __CVBuffer *)createTextureWithPixelBuffer:(struct __CVBuffer *)arg1 index:(int)arg2 format:(int)arg3 width:(int)arg4 height:(int)arg5;
- (_Bool)setUpOpenGL;
- (void)cleanupTextures;
- (void)displayPixelBuffer:(struct __CVBuffer *)arg1 inViewPortRect:(struct CGRect)arg2;
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
- (void)stopMotionTracking;
- (void)startMotionTracking;
- (void)dealloc;
- (id)init;
- (id)initWithTouchPitchMultiplier:(double)arg1 touchRollMultiplier:(double)arg2;

@end

@interface GADNActionURLHandler : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _bufferActionsPaused;
    NSMutableArray *_bufferedURLRequests;
    id <GADNEventContextSource> _messageSource;
}

- (void).cxx_destruct;
- (void)resumeBufferedActions;
- (void)pauseBufferedActions;
- (void)handleActionURLRequest:(id)arg1;
- (void)dealloc;
- (id)initWithMessageSource:(id)arg1;

@end

@interface GADNMediaView : UIView
{
    id <GADNMediaContentDisplaying> _internalMediaContent;
    GADNMediaContent *_mediaContent;
    UIView *_mediaView;
    GADNObserverCollection *_observers;
}

@property(retain, nonatomic) GADNMediaContent *mediaContent; // @synthesize mediaContent=_mediaContent;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)setInternalMediaContent:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNMediationNativeAdConfiguration : GADNMediationAdConfiguration
{
    NSArray *_options;
}

@property(readonly, nonatomic) NSArray *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)initWithAdConfiguration:(struct NSDictionary *)arg1 targeting:(id)arg2 credentials:(id)arg3 extras:(id)arg4;
- (id)init;
- (id)initWithOptions:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 targeting:(id)arg3 credentials:(id)arg4 extras:(id)arg5;

@end

@interface GADNMultipleAdsAdLoaderOptions : GADNAdLoaderOptions
{
    long long _numberOfAds;
}

@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADNTouchGestureRecognizer : UIGestureRecognizer
{
    NSDate *_lastTouchTimestamp;
    NSDate *_lastTouchBeginTimestamp;
}

@property(readonly, nonatomic) NSDate *lastTouchBeginTimestamp; // @synthesize lastTouchBeginTimestamp=_lastTouchBeginTimestamp;
@property(readonly, nonatomic) NSDate *lastTouchTimestamp; // @synthesize lastTouchTimestamp=_lastTouchTimestamp;
- (void).cxx_destruct;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface GADNOverlayView : UIView <GADNWebViewControllerDelegate, GADNEventContextSource>
{
    GADNJSContext *_JSContext;
    GADNObserverCollection *_JSContextObservers;
    GADNObserverCollection *_overlayViewObservers;
    GADNWebViewController *_overlayWebViewController;
    NSDictionary *_loadOverlayUserInfo;
    NSString *_overlayIdentifier;
    GADNEventContext *_context;
}

- (void).cxx_destruct;
- (void)webViewDidFailWithError:(id)arg1;
- (void)webViewControllerWebContentProcessDidTerminate:(id)arg1;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)handleSendMessageToNativeJSWithUserInfo:(id)arg1;
- (void)handleSendMessageToOverlayWebViewWithUserInfo:(id)arg1;
- (void)handleLoadOverlayWebViewWithUserInfo:(id)arg1;
- (void)handleHideOverlayView;
- (void)handleShowOverlayView;
- (void)addOverlaySubview;
- (void)removeOverlaySubview;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)dealloc;
- (id)initWithContext:(id)arg1 JSContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNInlineInterstitialAdRenderer : NSObject <GADNAdRendering>
{
    GADNAdLoadMonitor *_adLoadMonitor;
}

- (void).cxx_destruct;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNPushTransitionView : UIView
{
    NSArray *_views;
    UIView *_clippingView;
    UIView *_currentView;
    unsigned long long _currentViewIndex;
    double _presentationDuration;
    double _animationDuration;
    long long _animationGroupIdentifier;
}

@property(readonly, nonatomic) long long animationGroupIdentifier; // @synthesize animationGroupIdentifier=_animationGroupIdentifier;
- (void).cxx_destruct;
- (void)animate;
- (void)dispatchAnimation;
- (void)setCurrentView:(id)arg1;
- (void)setPresentationDuration:(double)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setViews:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNMRAIDResizeProperties : NSObject
{
    _Bool _allowOffscreen;
    long long _customClosePosition;
    struct CGSize _size;
    struct CGVector _offset;
}

+ (_Bool)isContentFrameValid:(struct CGRect)arg1 forBounds:(struct CGRect)arg2 allowOffscreen:(_Bool)arg3 closeButtonPosition:(long long)arg4;
@property(nonatomic) _Bool allowOffscreen; // @synthesize allowOffscreen=_allowOffscreen;
@property(nonatomic) long long customClosePosition; // @synthesize customClosePosition=_customClosePosition;
@property(nonatomic) struct CGVector offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADNCustomEventRequest : NSObject
{
    _Bool _userHasLocation;
    _Bool _isTesting;
    long long _userGender;
    NSDate *_userBirthday;
    double _userLatitude;
    double _userLongitude;
    double _userLocationAccuracyInMeters;
    NSString *_userLocationDescription;
    NSArray *_userKeywords;
    NSDictionary *_additionalParameters;
}

@property(readonly, nonatomic) _Bool isTesting; // @synthesize isTesting=_isTesting;
@property(readonly, copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
@property(readonly, copy, nonatomic) NSArray *userKeywords; // @synthesize userKeywords=_userKeywords;
@property(readonly, copy, nonatomic) NSString *userLocationDescription; // @synthesize userLocationDescription=_userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters; // @synthesize userLocationAccuracyInMeters=_userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude; // @synthesize userLongitude=_userLongitude;
@property(readonly, nonatomic) double userLatitude; // @synthesize userLatitude=_userLatitude;
@property(readonly, nonatomic) _Bool userHasLocation; // @synthesize userHasLocation=_userHasLocation;
@property(readonly, copy, nonatomic) NSDate *userBirthday; // @synthesize userBirthday=_userBirthday;
@property(readonly, nonatomic) long long userGender; // @synthesize userGender=_userGender;
- (void).cxx_destruct;
- (id)initWithTargeting:(id)arg1 locationEnabled:(_Bool)arg2 extrasLabel:(id)arg3;

@end

@interface GADNExpandActionMonitor : NSObject
{
    GADNAd *_ad;
    GADNWebAdView *_adView;
    GADNObserverCollection *_observers;
    GADNFullScreenAdViewController *_expandableViewController;
    GADNObserverCollection *_expandableObservers;
    GADNExpandActionMonitorConfiguration *_configuration;
}

- (void).cxx_destruct;
- (void)handleTwoPartExpandAction:(id)arg1;
- (void)handleOnePartExpandAction:(id)arg1;
- (_Bool)createAndPresentExpandable:(id)arg1 context:(id)arg2 notification:(id)arg3;
- (void)expandDidEnd;
- (_Bool)shouldAllowExpandAction;
- (id)initWithAd:(id)arg1 webAdView:(id)arg2 messageSource:(id)arg3 configuration:(id)arg4;

@end

@interface GADNObserverCollection : NSObject
{
    NSMutableSet *_observers;
}

- (void).cxx_destruct;
- (void)addObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;

@end

@interface GADNVideoOptions : GADNAdLoaderOptions
{
    _Bool _startMuted;
    _Bool _customControlsRequested;
    _Bool _clickToExpandRequested;
}

@property(nonatomic) _Bool clickToExpandRequested; // @synthesize clickToExpandRequested=_clickToExpandRequested;
@property(nonatomic) _Bool customControlsRequested; // @synthesize customControlsRequested=_customControlsRequested;
@property(nonatomic) _Bool startMuted; // @synthesize startMuted=_startMuted;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNOpenActionMonitor : NSObject <GADNWebAdViewDelegate>
{
    GADNAd *_ad;
    GADNObserverCollection *_observers;
    _Bool _analyticsLoggingEnabled;
    NSMapTable *_confirmationAlertURLs;
    GADNClickProtection *_clickProtection;
}

- (void).cxx_destruct;
- (void)adView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)adView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)adView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)handleMailAction:(id)arg1;
- (void)handleSMSAction:(id)arg1;
- (void)openSafariViewControllerToURL:(id)arg1;
- (void)handleOpenSafariAction:(id)arg1;
- (void)handleOpenBrowserAction:(id)arg1;
- (void)confirmClickToURL:(id)arg1 title:(id)arg2;
- (void)handleOpenApplicationAction:(id)arg1;
- (void)handleOpenApplicationWithURL:(id)arg1 navigationURL:(id)arg2 sourceURL:(id)arg3;
- (void)confirmURLNavigation:(id)arg1;
- (void)handleClickAction:(id)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2 clickProtection:(id)arg3 analyticsLoggingEnabled:(_Bool)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNDynamicHeightSearchBannerView : UIView <GADNWebViewControllerDelegate>
{
    GADNWebViewController *_adWebView;
    long long _adState;
    NSString *_adUnitID;
    id <GADNDynamicHeightSearchBannerViewDelegate> _delegate;
}

@property(readonly, nonatomic) long long adState; // @synthesize adState=_adState;
@property(nonatomic) __weak id <GADNDynamicHeightSearchBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)handleUserDidTapAdDestinationURL:(id)arg1;
- (void)handleBannerViewDidReceiveAd;
- (void)updateInternalAdViewHeightAndNotifyDelegateWithHeight:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)webViewControllerWebContentProcessDidTerminate:(id)arg1;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (struct CGSize)currentAdSize;
- (void)loadRequest:(id)arg1;
- (void)configureBannerView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAdLifecycleEventPingMonitor : NSObject
{
    NSArray *_adLoadURLStrings;
    NSArray *_onePixelURLStrings;
    NSArray *_clickURLStrings;
    _Bool _analyticsLoggingEnabled;
    GADNObserverCollection *_observers;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadURLsPinged
    // Error parsing type: {atomic_flag="_Value"AB}, name: _onePixelURLsPinged
    // Error parsing type: AB, name: _mediationBannerDidRefresh
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2;
- (void).cxx_destruct;
- (void)handleClickInContext:(id)arg1;
- (void)pingOnePixelURLsInContext:(id)arg1;
- (void)pingAdLoadURLsInContext:(id)arg1;
- (void)handleMediationBannerRefreshInContext:(id)arg1;
- (void)handleOnePixelImpressionInContext:(id)arg1;
- (void)handleAdLoadInContext:(id)arg1;
- (void)pingURLStrings:(id)arg1 analyticsEvent:(id)arg2 context:(id)arg3;
- (id)initWithAd:(id)arg1 adLoadURLStrings:(id)arg2 onePixelURLStrings:(id)arg3 clickURLStrings:(id)arg4 analyticsLoggingEnabled:(_Bool)arg5;

@end

@interface GADNNativeClickConfirmingViewMonitor : NSObject
{
    GADNObserverCollection *_internalNativeAdObservers;
    UIView *_trackedView;
    GADNInternalNativeAd *_internalNativeAd;
    UITapGestureRecognizer *_singleTapGestureRecognizer;
}

- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)handleTap:(id)arg1;
- (void)handleUntrackedView:(id)arg1;
- (void)handleTrackedView:(id)arg1;
- (id)init;
- (id)initWithInternalNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPNCustomRenderedAd : NSObject
{
}

- (void)finishedRenderingAdView:(id)arg1;
- (void)recordImpression;
- (void)recordClick;
@property(readonly, copy, nonatomic) NSURL *adBaseURL;
@property(readonly, copy, nonatomic) NSString *adHTML;

@end

@interface GADNRTBAdapterSignalSource : NSObject <GADNSignalSource, GADNSignal>
{
    id <GADRTBAdapter> _adapter;
    GADNRTBRequestParameters *_requestParameters;
    NSMutableDictionary *_adapterSignals;
}

- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
- (id)adapterSignals;
- (id)initWithRTBAdapter:(id)arg1 targeting:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNOpenDeeplinkMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAd *_ad;
    GADNClickProtection *_clickProtection;
    id <GADNJavascriptEvaluating> _messageSource;
}

- (void).cxx_destruct;
- (void)handleDeeplinkPlusAction:(id)arg1;
- (void)handleOpenDeeplinkAction:(id)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2 clickProtection:(id)arg3;

@end

@interface GADNVideoPlayerGLViewController : GLKViewController <GADNVideoPlayerViewLoading, GADNTouchHandling, GLKViewControllerDelegate>
{
    EAGLContext *_context;
    AVPlayerItemVideoOutput *_videoOutput;
    GADNVideoPlayer *_currentPlayer;
    _Bool _playerPlaybackBegun;
    _Bool _hasDisplayedAtLeastOnePixelBuffer;
    double _displayStartTimeIntervalSince1970;
    double _videoOutputEmptyTimeIntervalThreshold;
    GADNGLSphericalShader *_sphericalShader;
    CDUnknownBlockType _setupCompletionBlock;
    NSObject<OS_dispatch_queue> *_setupCompletionBlockQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    struct __CVBuffer *_pixelBufferForRendering;
}

- (void).cxx_destruct;
- (void)setPixelBufferForRendering:(struct __CVBuffer *)arg1;
- (struct __CVBuffer *)capturePixelBufferForRendering;
- (void)glkViewControllerUpdate:(id)arg1;
- (void)resetVideoOutput;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)executeCompletionBlockWithError:(id)arg1;
- (void)stopRendering;
- (void)setUpOpenGL;
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
- (void)setUpWithPlayer:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)viewDidLoad;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRecursiveAdRenderer : NSObject <GADNAdRendering>
{
    GADNAdSource *_adSource;
}

- (void).cxx_destruct;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNServerResponse : NSObject
{
    NSDictionary *_configuration;
    NSURLResponse *_rawResponse;
    NSData *_rawResponseData;
}

@property(readonly, nonatomic) NSData *rawResponseData; // @synthesize rawResponseData=_rawResponseData;
@property(readonly, nonatomic) NSURLResponse *rawResponse; // @synthesize rawResponse=_rawResponse;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSArray *adConfigurations;
@property(readonly, nonatomic) NSDictionary *common;
- (id)initWithConfiguration:(id)arg1 response:(id)arg2 responseBody:(id)arg3;

@end

@interface GADNURLSessionTransaction : NSObject <GADNEventContextSource>
{
    struct CC_MD5state_st _responseDigestState;
    CDUnknownBlockType _completionHandler;
    NSURLResponse *_response;
    NSMutableData *_responseBody;
    long long _responseLength;
    NSData *_responseDigest;
    NSError *_error;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNEventContext *_context;
    long long _notificationPolicy;
    NSURLRequest *_request;
    NSURL *_redirectURL;
}

@property(readonly, copy, nonatomic) NSURL *redirectURL; // @synthesize redirectURL=_redirectURL;
@property(readonly, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(readonly, nonatomic) long long notificationPolicy; // @synthesize notificationPolicy=_notificationPolicy;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)didCompleteWithError:(id)arg1;
- (void)willRedirectToURL:(id)arg1;
- (void)didReceiveData:(id)arg1;
- (void)didReceiveResponse:(id)arg1;
- (void)willSendRequest;
@property(readonly, copy, nonatomic) NSError *error;
@property(readonly, copy, nonatomic) NSData *responseDigest;
@property(readonly, nonatomic) long long responseLength;
@property(readonly, copy, nonatomic) NSData *responseBody;
@property(readonly, copy, nonatomic) NSURLResponse *response;
@property(readonly, nonatomic) CDUnknownBlockType completionHandler;
- (id)successorWithURLRequest:(id)arg1;
- (id)initWithURLRequest:(id)arg1 parentContext:(id)arg2 response:(id)arg3 responseBody:(id)arg4 requestError:(id)arg5;
- (id)init;
- (id)initWithURLRequest:(id)arg1 parentContext:(id)arg2 notificationPolicy:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediationRewardedAdConfiguration : GADNMediationAdConfiguration
{
}

@end

@interface GADNCanOpenURLsMonitor : NSObject
{
    id <GADNJavascriptEvaluating> _JSContext;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)handleCanOpenURLsAction:(id)arg1;
- (id)initWithJSContext:(id)arg1;

@end

@interface GADNVideoAnimationConfig : GADNAnimationConfig
{
}

- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNStoreKitProductAnimationConfig : GADNAnimationConfig
{
    NSString *_productIdentifier;
    NSString *_dismissalNotificationRequestIdentifier;
}

@property(readonly, copy, nonatomic) NSString *dismissalNotificationRequestIdentifier; // @synthesize dismissalNotificationRequestIdentifier=_dismissalNotificationRequestIdentifier;
@property(readonly, copy, nonatomic) NSString *productIdentifier; // @synthesize productIdentifier=_productIdentifier;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNAnimationConfig : NSObject
{
    struct CGRect _initialFrame;
    struct CGRect _finalFrame;
}

+ (id)animationConfigsFromAnimations:(id)arg1;
@property(nonatomic) struct CGRect finalFrame; // @synthesize finalFrame=_finalFrame;
@property(nonatomic) struct CGRect initialFrame; // @synthesize initialFrame=_initialFrame;

@end

@interface GADNCustomEventInterstitialAdRenderer : NSObject <GADCustomEventInterstitialDelegate, GADNAdPresenting, GADNAdRendering>
{
    GADNServerTransaction *_transaction;
    NSDictionary *_adConfiguration;
    id <GADCustomEventInterstitial> _customEventInterstitial;
    CDUnknownBlockType _renderCompletionHandler;
    GADNInterstitialAd *_interstitialAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    GADNMediatedIntermission *_intermission;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadCompleted
}

- (void).cxx_destruct;
- (void)customEventInterstitial:(id)arg1 didReceiveAd:(id)arg2;
- (void)customEventInterstitialWillLeaveApplication:(id)arg1;
- (void)customEventInterstitialDidDismiss:(id)arg1;
- (void)customEventInterstitialWillDismiss:(id)arg1;
- (void)customEventInterstitialWillPresent:(id)arg1;
- (void)customEventInterstitialWasClicked:(id)arg1;
- (void)customEventInterstitial:(id)arg1 didFailAd:(id)arg2;
- (void)customEventInterstitialDidReceiveAd:(id)arg1;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)customEventCompletedLoadWithInterstitial:(id)arg1 error:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNPresentationMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNWebAdView *_adView;
    id _messageSource;
}

- (void).cxx_destruct;
- (void)handlePresenterWillDismissNotification;
- (void)handlePresenterDidPresentNotification;
- (id)initWithAdView:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNRewardBasedVideoAdController : NSObject
{
    NSMutableDictionary *_connectors;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSDictionary *connectors; // @synthesize connectors=_connectors;
- (void).cxx_destruct;
- (void)removeConnectorForAdapterName:(id)arg1;
- (void)createConnectorForAdapter:(id)arg1 withAdConfiguration:(struct NSDictionary *)arg2 renderer:(id)arg3;
- (id)init;

@end

@interface GADNBlockTimerTarget : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)timerFired:(id)arg1;

@end

@interface GADNMediatedUnifiedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADNMediationNativeAdRenderer : GADNMediatedAdRenderer <GADMAdNetworkConnector>
{
    CDUnknownBlockType _renderCompletionHandler;
    GADNInternalNativeAd *_internalNativeAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadCompleted
}

- (void).cxx_destruct;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)didReceiveNativeAd:(id)arg1 fromAdapter:(id)arg2;
- (id)viewControllerForPresentingModalView;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
@property(readonly, copy, nonatomic) NSDictionary *credentials;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSString *maxAdContentRating;
@property(readonly, nonatomic) id <GADAdNetworkExtras> networkExtras;
@property(readonly, copy, nonatomic) NSString *publisherId;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool testMode;
@property(readonly, nonatomic) NSNumber *underAgeOfConsent;
@property(readonly, nonatomic) NSDate *userBirthday;
@property(readonly, nonatomic) long long userGender;
@property(readonly, nonatomic) _Bool userHasLocation;
@property(readonly, nonatomic) NSArray *userKeywords;
@property(readonly, nonatomic) double userLatitude;
@property(readonly, nonatomic) double userLocationAccuracyInMeters;
@property(readonly, nonatomic) NSString *userLocationDescription;
@property(readonly, nonatomic) double userLongitude;

@end

@interface GADNDeviceOrientationSignals : NSObject <GADNSignal>
{
    long long _statusBarOrientation;
    struct CGSize _standardizedOrientedKeyWindowSize;
    NSString *_supportedInterfaceOrientationsForKeyWindow;
    NSString *_mainWindowSupportedInterfaceOrientations;
    struct CGRect _standardizedMainScreenPortraitBounds;
}

+ (id)signalSource;
@property(readonly, nonatomic) struct CGSize standardizedOrientedKeyWindowSize; // @synthesize standardizedOrientedKeyWindowSize=_standardizedOrientedKeyWindowSize;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
@property(readonly, nonatomic) struct CGSize standardizedPortraitKeyWindowSize;
@property(readonly, nonatomic) struct CGRect standardizedOrientedApplicationFrame;
@property(readonly, nonatomic) struct CGRect standardizedOrientedScreenBounds;
@property(readonly, nonatomic) _Bool orientationLandscape;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRTBMediationNativeAdRenderer : NSObject <GADMediationNativeAdEventDelegate, GADNAdRendering>
{
    id <GADMediationAdapter> _loadingAdapter;
    id <GADMediationNativeAd> _mediatedAd;
    GADNInternalNativeAd *_internalNativeAd;
    GADNMediationNativeAdConfiguration *_mediationConfiguration;
}

- (void).cxx_destruct;
- (void)didUnmuteVideo;
- (void)didMuteVideo;
- (void)didFailToPresentWithError:(id)arg1;
- (void)didEndVideo;
- (void)didPauseVideo;
- (void)didPlayVideo;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (id)adEventDelegateForNativeAd:(id)arg1 adapter:(id)arg2 adConfiguration:(struct NSDictionary *)arg3 transaction:(id)arg4 renderCompletionHandler:(CDUnknownBlockType)arg5;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCustomEventBannerAdRenderer : NSObject <GADCustomEventBannerDelegate, GADNAdRendering>
{
    GADNServerTransaction *_transaction;
    struct NSDictionary *_adConfiguration;
    id <GADCustomEventBanner> _customEventBanner;
    CDUnknownBlockType _renderCompletionHandler;
    GADNBannerAd *_bannerAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (void)customEventBanner:(id)arg1 clickDidOccurInAd:(id)arg2;
- (void)customEventBannerWillLeaveApplication:(id)arg1;
- (void)customEventBannerDidDismissModal:(id)arg1;
- (void)customEventBannerWillDismissModal:(id)arg1;
- (void)customEventBannerWillPresentModal:(id)arg1;
@property(readonly, nonatomic) UIViewController *viewControllerForPresentingModalView;
- (void)customEventBannerWasClicked:(id)arg1;
- (void)customEventBanner:(id)arg1 didFailAd:(id)arg2;
- (void)customEventBanner:(id)arg1 didReceiveAd:(id)arg2;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)customEventCompletedLoadWithAdView:(id)arg1 error:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNDeviceOrientationSignalCache : NSObject
{
    GADNDeviceOrientationSignals *_cachedSignals;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNObserverCollection *_orientationChangeObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(readonly) GADNDeviceOrientationSignals *cachedSignals;
- (void)updateSignals;
- (id)init;

@end

@interface GADNOpenGLMonitor : NSObject
{
    GADNWebAdView *_webAdView;
    GADNFullScreenAdViewController *_presenter;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (id)initWithPresenter:(id)arg1 webAdView:(id)arg2;

@end

@interface GADNAudioSession : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSOperationQueue *_audioSessionQueue;
    _Bool _audioSessionStateSaved;
    NSString *_savedAudioSessionCategory;
    NSString *_savedAudioSessionMode;
    unsigned long long _savedAudioSessionCategoryOption;
    _Bool _enabled;
    _Bool _wasOtherAppAudioInterrupted;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)resumeBackgroundAppAudioIfInterruptedWithQueue:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)setMixable:(_Bool)arg1 userInitiated:(_Bool)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)restoreState;
- (void)disable;
- (void)enable;
- (id)init;

@end

@interface GADNRTBRequestParameters : NSObject
{
    GADNMediationCredentials *_credentials;
    id <GADAdNetworkExtras> _extras;
    struct GADNAdSize _adSize;
}

@property(readonly, nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
@property(readonly, nonatomic) id <GADAdNetworkExtras> extras; // @synthesize extras=_extras;
@property(readonly, nonatomic) GADNMediationCredentials *credentials; // @synthesize credentials=_credentials;
- (void).cxx_destruct;
- (id)initWithTargeting:(id)arg1 RTBAdapter:(id)arg2;

@end

@interface GADNDeviceAudioSignals : NSObject <GADNSignal>
{
    _Bool _isOtherAudioPlaying;
    float _audioVolume;
    NSNumber *_shouldSilenceAudioValue;
    NSArray *_audioRoutePortNames;
}

+ (id)signalSource;
+ (id)sharedVolumeView;
@property(readonly, copy, nonatomic) NSArray *audioRoutePortNames; // @synthesize audioRoutePortNames=_audioRoutePortNames;
@property(readonly, nonatomic) float audioVolume; // @synthesize audioVolume=_audioVolume;
@property(readonly, nonatomic) NSNumber *shouldSilenceAudioValue; // @synthesize shouldSilenceAudioValue=_shouldSilenceAudioValue;
@property(readonly, nonatomic) _Bool isOtherAudioPlaying; // @synthesize isOtherAudioPlaying=_isOtherAudioPlaying;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediatedIntermission : NSObject
{
    id _messageSource;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _postedIntermissionWillEnd
}

- (void).cxx_destruct;
- (void)adapterDidDismiss;
- (void)adapterWillDismiss;
- (void)adapterWillPresent;
- (id)initWithMessageSource:(id)arg1;

@end

@interface GADNNativeAdImage : NSObject
{
    UIImage *_image;
    NSURL *_imageURL;
    double _scale;
    double _aspectRatio;
}

@property(readonly, nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(readonly, nonatomic) double scale; // @synthesize scale=_scale;
@property(readonly, copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)initWithURL:(id)arg1 scale:(double)arg2;
- (id)initWithImage:(id)arg1;

@end

@interface GADNInlineBannerAdRenderer : NSObject <GADNAdRendering>
{
    GADNAdLoadMonitor *_adLoadMonitor;
}

- (void).cxx_destruct;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCloseButton : UIButton
{
    _Bool _useCustomCloseImage;
    _Bool _enabledOnCustomClose;
    long long _preferredPosition;
    struct CGSize _preferredTapSize;
}

@property(nonatomic) struct CGSize preferredTapSize; // @synthesize preferredTapSize=_preferredTapSize;
@property(nonatomic) long long preferredPosition; // @synthesize preferredPosition=_preferredPosition;
@property(nonatomic) _Bool enabledOnCustomClose; // @synthesize enabledOnCustomClose=_enabledOnCustomClose;
@property(nonatomic) _Bool useCustomCloseImage; // @synthesize useCustomCloseImage=_useCustomCloseImage;
- (void)updateImageAndEnabled;
- (struct CGSize)intrinsicContentSize;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNAdData : NSObject
{
    GADNSignalData *_signalData;
    NSDictionary *_signals;
    NSString *_adString;
}

@property(readonly, copy, nonatomic) NSString *adString; // @synthesize adString=_adString;
@property(readonly, copy, nonatomic) NSDictionary *signals; // @synthesize signals=_signals;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithSignalData:(id)arg1 adString:(id)arg2;

@end

@interface GADNFullScreenPropertiesActionMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNFullScreenAdViewController *_viewController;
}

- (void).cxx_destruct;
- (void)handleSetFullScreenPropertiesAction:(id)arg1;
- (id)initWithFullScreenViewController:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNNativeAdFeatures : NSObject
{
    _Bool _publisherClickReportingAllowed;
    _Bool _publisherTouchReportingAllowed;
    _Bool _publisherImpressionReportingAllowed;
    _Bool _publisherRenderAdChoicesAllowed;
    _Bool _publisherOwnedAdViewAllowed;
    _Bool _customOnePointFiveClickWhitelisted;
    _Bool _customClickGestureAllowed;
}

@property(readonly, nonatomic) _Bool customClickGestureAllowed; // @synthesize customClickGestureAllowed=_customClickGestureAllowed;
@property(readonly, nonatomic) _Bool customOnePointFiveClickWhitelisted; // @synthesize customOnePointFiveClickWhitelisted=_customOnePointFiveClickWhitelisted;
@property(readonly, nonatomic) _Bool publisherOwnedAdViewAllowed; // @synthesize publisherOwnedAdViewAllowed=_publisherOwnedAdViewAllowed;
@property(readonly, nonatomic) _Bool publisherRenderAdChoicesAllowed; // @synthesize publisherRenderAdChoicesAllowed=_publisherRenderAdChoicesAllowed;
@property(readonly, nonatomic) _Bool publisherImpressionReportingAllowed; // @synthesize publisherImpressionReportingAllowed=_publisherImpressionReportingAllowed;
@property(readonly, nonatomic) _Bool publisherTouchReportingAllowed; // @synthesize publisherTouchReportingAllowed=_publisherTouchReportingAllowed;
@property(readonly, nonatomic) _Bool publisherClickReportingAllowed; // @synthesize publisherClickReportingAllowed=_publisherClickReportingAllowed;
- (id)initWithAdConfiguration:(id)arg1;

@end

@interface GADNJSCoreConsole : NSObject <GADNJSCoreConsoleProtocol>
{
}

- (void)logErrorMessage:(id)arg1;
- (void)logMessage:(id)arg1;

@end

@interface GADNWebViewJSFunction : GADNJSFunction
{
    NSString *_functionName;
    GADNWebViewJSContext *_webViewJSContext;
    GADNObserverCollection *_observers;
    NSMutableDictionary *_resultHandlers;
}

- (void).cxx_destruct;
- (void)callWithArguments:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)completeWithResultIdentifier:(id)arg1 result:(id)arg2 error:(id)arg3;
- (id)initWithFunctionName:(id)arg1 context:(id)arg2;

@end

@interface GADNFluidCroppingAdView : UIView
{
    UIView *_view;
    GADNObserverCollection *_observers;
    id _messageSource;
    double _contentHeight;
}

@property(nonatomic) double contentHeight; // @synthesize contentHeight=_contentHeight;
- (void).cxx_destruct;
- (void)updateContentHeightValueFromNotification:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithView:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNRefreshMonitor : NSObject
{
    NSOperationQueue *_observationQueue;
    GADNObserverCollection *_observers;
    GADNAd *_ad;
    _Bool _isEnabled;
    _Bool _isVisible;
    _Bool _isIntermissionOngoing;
}

- (void).cxx_destruct;
- (void)updateRefreshActivity;
- (void)handleIntermissionEvent:(_Bool)arg1;
- (void)handleRefreshAction:(id)arg1;
- (void)handleVisibilityNotification:(id)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNImpressionMonitor : NSObject
{
    GADNObserverCollection *_observers;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2;
- (void).cxx_destruct;
- (id)initWithAd:(id)arg1 impressionDefinition:(long long)arg2;

@end

@interface GADNFullScreenAdViewController : UIViewController <GADNPresenting, GADNMonitorOwner>
{
    _Bool _viewWasConfigured;
    _Bool _viewHasAppearedAtLeastOnce;
    _Bool _relinquishScreenCalled;
    UIView *_adView;
    NSMutableArray *_monitors;
    GADNEventContext *_context;
    NSArray *_constraints;
    _Bool _adOrientationsOverridesLockedOrientation;
    _Bool _presented;
    GADNCloseButton *_closeButton;
    unsigned long long _supportedInterfaceOrientations;
    unsigned long long _adOrientations;
    long long _forcedAdOrientation;
    double _orientationUpdateAnimationDuration;
    double _maxBackgroundTimeIntervalWithoutDismissing;
}

@property(nonatomic) double maxBackgroundTimeIntervalWithoutDismissing; // @synthesize maxBackgroundTimeIntervalWithoutDismissing=_maxBackgroundTimeIntervalWithoutDismissing;
@property(readonly, nonatomic) _Bool presented; // @synthesize presented=_presented;
@property(nonatomic) _Bool adOrientationsOverridesLockedOrientation; // @synthesize adOrientationsOverridesLockedOrientation=_adOrientationsOverridesLockedOrientation;
@property(nonatomic) double orientationUpdateAnimationDuration; // @synthesize orientationUpdateAnimationDuration=_orientationUpdateAnimationDuration;
@property(nonatomic) long long forcedAdOrientation; // @synthesize forcedAdOrientation=_forcedAdOrientation;
@property(nonatomic) unsigned long long adOrientations; // @synthesize adOrientations=_adOrientations;
@property(nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
@property(readonly, nonatomic) GADNCloseButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (_Bool)canPresent;
- (void)viewChangedToOrientation:(long long)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)closeButtonPressed:(id)arg1;
- (void)positionView:(id)arg1 atPosition:(long long)arg2;
- (void)positionTestAdLabel;
- (void)positionCloseButton;
- (void)addMonitor:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)contentFitsInSize:(struct CGSize)arg1;
- (void)configureView;
- (void)viewDidLoad;
- (_Bool)shouldAutorotate;
- (_Bool)prefersStatusBarHidden;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithView:(id)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRewardedSignalConfiguration : GADNSignalConfiguration
{
}

@end

@interface GADNBlockInvocation : NSObject
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)invokeBlockWithObject:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface GADNPasteboardConfigurationSource : NSObject
{
    id _foregroundObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)refresh;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADNAdMediaContent : NSObject <GADNMediaContentDisplaying>
{
    struct NSDictionary *_adConfiguration;
    NSDictionary *_videoConfiguration;
    GADNNativeAdImage *_placeholderImage;
    NSDictionary *_videoOptions;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _completionHandlerExecuted
    // Error parsing type: {atomic_flag="_Value"AB}, name: _loadVideoExecuted
    GADNMediaContentAd *_mediaContentAd;
    GADNEventContext *_adViewContext;
    GADNWebAdView *_adView;
    _Bool _mediaLoadedSuccessfully;
    GADNObserverCollection *_observers;
    NSMutableArray *_adViewMonitors;
    GADNAdVideoController *_videoController;
    CDUnknownBlockType _completionHandler;
    struct CGSize _intrinsicVideoSize;
    UIImageView *_placeholderImageView;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _isNativeAdAssociated
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)performPostLoadActions;
- (void)preloadActionsWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)finishLoadingWithError:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (id)videoController;
- (double)aspectRatio;
- (id)mediaView;
- (void)renderVideoDictionary;
- (void)createAndLoadAdViewWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setInternalNativeAd:(id)arg1;
- (void)loadVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithAdConfiguration:(struct NSDictionary *)arg1 placeholderImage:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNSwappableView : GADNView
{
    UIView *_viewToSwap;
    UIView *_snapshotView;
}

- (void).cxx_destruct;
- (void)restoreSwappedView;
- (void)swapViewForImage;
- (void)addSubview:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithViewToSwap:(id)arg1 context:(id)arg2;

@end

@interface GADNDevice : NSObject <GADNSignalSource, GADNSignal>
{
    NSDictionary *_infoPlist;
    NSString *_language;
    NSString *_baseSDKVersion;
    NSObject<OS_dispatch_queue> *_signalsLockQueue;
    NSDictionary *_iTunesMetadata;
    _Bool _canMakePhoneCalls;
    NSString *_systemVersion;
    NSString *_deviceModel;
    NSString *_deviceSubmodel;
    long long _userInterfaceIdiom;
    double _mainScreenDensity;
    struct CGRect _standardizedMainScreenPortraitBounds;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) struct CGRect standardizedMainScreenPortraitBounds; // @synthesize standardizedMainScreenPortraitBounds=_standardizedMainScreenPortraitBounds;
@property(readonly, nonatomic) double mainScreenDensity; // @synthesize mainScreenDensity=_mainScreenDensity;
@property(readonly, nonatomic) long long userInterfaceIdiom; // @synthesize userInterfaceIdiom=_userInterfaceIdiom;
@property(readonly, nonatomic) NSString *deviceSubmodel; // @synthesize deviceSubmodel=_deviceSubmodel;
@property(readonly, nonatomic) NSString *deviceModel; // @synthesize deviceModel=_deviceModel;
@property(readonly, nonatomic) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(readonly, nonatomic) _Bool canMakePhoneCalls; // @synthesize canMakePhoneCalls=_canMakePhoneCalls;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
- (id)canOpenURLStrings:(id)arg1;
- (void)cacheParameters;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAdImageAdLoaderOptions : GADNAdLoaderOptions
{
    _Bool _disableImageLoading;
    _Bool _shouldRequestMultipleImages;
    long long _preferredImageOrientation;
}

@property(nonatomic) long long preferredImageOrientation; // @synthesize preferredImageOrientation=_preferredImageOrientation;
@property(nonatomic) _Bool shouldRequestMultipleImages; // @synthesize shouldRequestMultipleImages=_shouldRequestMultipleImages;
@property(nonatomic) _Bool disableImageLoading; // @synthesize disableImageLoading=_disableImageLoading;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNBrowserViewController : UIViewController <GADNWebViewControllerDelegate, GADNPresenting>
{
    NSURL *_URLToLoad;
    NSURL *_referringURLToLoad;
    GADNWebViewController *_webViewController;
    UIToolbar *_toolbar;
    UIBarButtonItem *_flexibleSpaceButton;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIBarButtonItem *_reloadButton;
    UIBarButtonItem *_safariButton;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_spinnerContainingButton;
    UIActivityIndicatorView *_spinner;
    long long _lastOrientation;
    GADNEventContext *_context;
    GADNAd *_ad;
    unsigned long long _supportedInterfaceOrientations;
}

@property(nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
- (void).cxx_destruct;
- (void)webViewControllerWebContentProcessDidTerminate:(id)arg1;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (_Bool)canPresent;
- (_Bool)shouldAutorotate;
- (void)openMainDocumentURL;
- (void)reload;
- (void)forward;
- (void)back;
- (void)loadURL:(id)arg1 referringURL:(id)arg2;
- (void)doneButtonPressed:(id)arg1;
- (void)refreshToolbar;
- (void)createToolbarButtons;
- (id)buttonWithImage:(id)arg1 name:(id)arg2 width:(double)arg3 enabled:(_Bool)arg4 action:(SEL)arg5;
- (void)updateWebViewOrientationWithNotificationChangeEvent:(_Bool)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (_Bool)prefersStatusBarHidden;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)dealloc;
- (id)initWithAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAdSettings : NSObject
{
    NSMutableDictionary *_nativeAdSettings;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)nativeAdSettings;
- (void)mediaViewUnavailableToRenderMediaContentForAdType:(id)arg1;
- (id)init;

@end

@interface GADNTwoFingersLongPressGestureRecognizer : UIGestureRecognizer
{
    long long _gestureState;
    double _startTimestamp;
    double _endTimestamp;
    NSTimer *_debugGestureTimer;
    NSTimer *_numberOfTouchesTimer;
}

- (void).cxx_destruct;
- (void)invalidateDebugGestureTimers;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;

@end

@interface GADNNativeSignalConfiguration : GADNSignalConfiguration
{
}

@end

@interface GADNNativeAdViewAdOptions : GADNAdLoaderOptions
{
    long long _preferredAdChoicesPosition;
}

@property(nonatomic) long long preferredAdChoicesPosition; // @synthesize preferredAdChoicesPosition=_preferredAdChoicesPosition;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADNBinaryHeap : NSObject
{
    struct __CFBinaryHeap *_heap;
}

- (id)sortedObjects;
- (id)removedMinimum;
- (id)minimum;
@property(readonly, nonatomic) long long count;
- (_Bool)containsObject:(id)arg1;
- (void)addObjectToHeap:(id)arg1;
- (void)dealloc;
- (id)initWithComparator:(CDUnknownFunctionPointerType)arg1;

@end

@interface GADNExtras : NSObject <GADAdNetworkExtras>
{
    NSDictionary *_additionalParameters;
}

@property(copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediatedNativeAdMonitor : NSObject
{
    id _mediatedNativeAd;
    GADNInternalNativeAd *_internalNativeAd;
    GADNObserverCollection *_observers;
    NSObject<OS_dispatch_queue> *_lockQueue;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    UIView *_trackedView;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (id)internalVideoController;
- (void)handleMediatedNativeAdDidEndVideoPlayback;
- (void)handleMediatedNativeAdDidPauseVideo;
- (void)handleMediatedNativeAdDidPlayVideo;
- (void)handleUntrackViewNotification:(id)arg1;
- (void)handleTrackViewNotification:(id)arg1;
- (void)handleWillLeaveApplicationEvent;
- (void)handleDidDismissScreenEvent;
- (void)handleWillDismissScreenEvent;
- (void)handleWillPresentScreenEvent;
- (void)handleThirdPartyClickEvent;
- (void)handleFirstPartyClickEvent:(id)arg1;
- (void)handleThirdParyImpressionEvent;
- (void)handleFirstPartyImpressionEvent;
- (void)dealloc;
- (id)initWithInternalNativeAd:(id)arg1 mediatedNativeAd:(id)arg2 adapterHandlesImpressions:(_Bool)arg3 adapterHandlesClicks:(_Bool)arg4;

@end

@interface GADNURLOpener : NSObject
{
}

+ (id)sharedInstance;
- (void)openDeepLinkURL:(id)arg1 forAd:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)openURL:(id)arg1 forAd:(id)arg2;

@end

@interface GADNNativeAdAttribution : NSObject
{
    NSArray *_icons;
    double _iconPresentationDuration;
    double _iconAnimationDuration;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_backgroundColor;
}

@property(readonly, copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(readonly, copy, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(readonly, copy, nonatomic) UIFont *font; // @synthesize font=_font;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, nonatomic) double iconAnimationDuration; // @synthesize iconAnimationDuration=_iconAnimationDuration;
@property(readonly, nonatomic) double iconPresentationDuration; // @synthesize iconPresentationDuration=_iconPresentationDuration;
@property(readonly, nonatomic) NSArray *icons; // @synthesize icons=_icons;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1 icons:(id)arg2;

@end

@interface GADNOctagonBannerView : UIView <GADAdSizeDelegate>
{
    GADNRequest *_lastRequest;
    _Bool _hasInitialized;
    GADNObserverCollection *_observers;
    _Bool _autoloadEnabled;
    _Bool _hasAutoRefreshed;
    id <GADBannerViewDelegate> _delegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    GADNBannerView *_bannerView;
    struct GADNAdSize _adSize;
}

+ (Class)bannerViewClass;
@property(readonly, nonatomic) GADNBannerView *bannerView; // @synthesize bannerView=_bannerView;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(readonly, nonatomic) _Bool hasAutoRefreshed; // @synthesize hasAutoRefreshed=_hasAutoRefreshed;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
- (void).cxx_destruct;
- (void)adViewIntrinsicContentSizeDidChange:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (void)updateReceivedAdSizeWithPublicUpdate:(_Bool)arg1;
- (void)loadRequest:(id)arg1;
- (void)resize:(struct GADNAdSize)arg1;
- (struct CGSize)sizeForAdSize:(struct GADNAdSize)arg1;
- (struct GADNAdSize)adSizeForSize:(struct CGSize)arg1;
@property(readonly, nonatomic) __weak UIView *mediatedAdView;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
@property(nonatomic) __weak UIViewController *rootViewController;
@property(copy, nonatomic) NSString *adUnitID;
@property(readonly, nonatomic) struct CGSize effectiveContentSize;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)commonInit;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithAdSize:(struct GADNAdSize)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAdSize:(struct GADNAdSize)arg1 origin:(struct CGPoint)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNURLPingData : NSObject
{
    NSURLRequest *_URLRequest;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, copy, nonatomic) NSURLRequest *URLRequest; // @synthesize URLRequest=_URLRequest;
- (void).cxx_destruct;
- (id)initWithRequest:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface GADNWebViewPinger : NSObject
{
    WKWebView *_webView;
    _Bool _receivedValidResponse;
    NSMutableArray *_webViewPingQueue;
}

+ (void)initialize;
+ (_Bool)isAvailable;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)loadFinishedWithError:(id)arg1;
- (void)sendNextPing;
- (void)pingRequest:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNActiveViewReporter : NSObject
{
    GADNActiveViewContext *_activeViewContext;
    _Bool _activeViewContextLoadInProgress;
    _Bool _adViewNeedsActiveViewUpdates;
    _Bool _adDidMakeImpression;
    _Bool _analyticsLoggingEnabled;
    GADNWebAdView *_reportingAdView;
    _Bool _activeViewContextUntracked;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_adFormat;
    NSString *_adEventContextID;
    NSDictionary *_configuration;
    NSDictionary *_visibilityInformation;
    NSDictionary *_mainThreadParameters;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _finishActiveViewStatusExecuted
}

- (void).cxx_destruct;
- (void)updateActiveViewScrollStatus:(id)arg1;
- (void)updateScrollStatusForAdView:(id)arg1;
- (void)updateMainThreadParameters;
- (id)activeViewStateWithUnloaded:(_Bool)arg1 userInfo:(id)arg2;
- (void)convertScrollableContainerInfo:(id)arg1 toParameters:(id)arg2;
- (void)loadActiveViewContext:(CDUnknownBlockType)arg1;
- (void)asynchronouslyLoadActiveViewContext;
- (void)updateActiveViewStatusForAdView:(id)arg1;
- (void)updateActiveViewStatus:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)endActiveViewStatusForActiveViewContext:(id)arg1;
- (void)finishActiveViewStatusUpdate:(id)arg1;
- (void)updateActiveViewStatus:(id)arg1;
- (void)updateActiveViewStatusWithUnloaded:(_Bool)arg1;
- (void)setVisibilityInformation:(id)arg1;
- (void)setAdDidMakeImpression:(_Bool)arg1;
- (void)setAdViewNeedsActiveViewUpdates:(_Bool)arg1;
- (id)initWithAdFormat:(id)arg1 activeViewConfiguration:(id)arg2 reportingAdView:(id)arg3 adEventContextIdentifier:(id)arg4 analyticsLoggingEnabled:(_Bool)arg5;

@end

@interface GADNIntermission : NSObject <GADNPresenterSource>
{
    NSHashTable *_activePresenters;
    NSHashTable *_deactivatingParticipants;
    unsigned long long _activePresentersCount;
    unsigned long long _deactivatingParticipantsCount;
    GADNIntermissionStateMonitor *_stateMonitor;
    GADNObserverCollection *_observers;
    id <GADNEventContextSource> _contextSource;
    GADNAd *_ad;
    GADNAd *_strongAd;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)didEnd;
- (void)willEnd;
- (void)didBegin;
- (void)presenterDidRelinquishScreen:(id)arg1;
- (void)presenterWillRelinquishScreen:(id)arg1;
- (void)presenterWillPresentScreen:(id)arg1;
- (void)cleanUpDeallocatedParticipants;
- (void)presentingObjectDidDeallocate;
- (id)activePresenters;
- (id)initWithAd:(id)arg1;
- (id)initWithAd:(id)arg1 stateMonitor:(id)arg2;

@end

@interface DFPNInterstitial : GADNInterstitial
{
    id <DFPCustomRenderedInterstitialDelegate> _customRenderedInterstitialDelegate;
}

@property(nonatomic) __weak id <DFPCustomRenderedInterstitialDelegate> customRenderedInterstitialDelegate; // @synthesize customRenderedInterstitialDelegate=_customRenderedInterstitialDelegate;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @dynamic appEventDelegate;
@property(retain, nonatomic) GADNCorrelator *correlator; // @dynamic correlator;

@end

@interface GADNInterstitialAd : GADNAd
{
    id <GADNAdPresenting> _adController;
    NSString *_adNetworkClassName;
    GADNAdReward *_reward;
}

@property(retain, nonatomic) GADNAdReward *reward; // @synthesize reward=_reward;
@property(readonly, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(readonly, nonatomic) id <GADNAdPresenting> adController; // @synthesize adController=_adController;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithContext:(id)arg1 adController:(id)arg2 adNetworkClassName:(id)arg3;

@end

@interface GADNVideoPingMonitor : NSObject
{
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasHandledVideoEvent
    NSArray *_URLStrings;
    GADNObserverCollection *_observers;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2;
- (void).cxx_destruct;
- (void)handleVideoEvents:(id)arg1;
- (id)initWithAd:(id)arg1 notificationName:(id)arg2 URLStrings:(id)arg3;

@end

@interface GADNURLSessionTransactionMonitor : NSObject <NSURLSessionDataDelegate>
{
    NSMutableDictionary *_transactionsByTask;
    NSObject<OS_dispatch_group> *_completionGroup;
}

- (void).cxx_destruct;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)invalidateAllTasksWithError:(id)arg1;
- (void)removeTask:(id)arg1;
- (void)addTransaction:(id)arg1 forTask:(id)arg2;
- (void)waitForTransactionsWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNSchedulerTask : NSObject
{
    CDUnknownBlockType _block;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;

@end

@interface GADNScheduler : NSObject
{
    NSMutableArray *_tasks;
    NSTimer *_timer;
    double _interval;
}

@property(readonly, nonatomic) double interval; // @synthesize interval=_interval;
- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)executeBlocks;
- (void)scheduleOnQueue:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithInterval:(double)arg1;
- (id)init;

@end

@interface GADNRTBMediationBannerAdRenderer : NSObject <GADMediationBannerAdEventDelegate, GADNAdRendering>
{
    CDUnknownBlockType _renderCompletionHandler;
    id <GADMediationAdapter> _loadingAdapter;
    GADNBannerAd *_bannerAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    GADNMediationBannerAdConfiguration *_mediationConfiguration;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (void)didFailToPresentWithError:(id)arg1;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (void)adapter:(id)arg1 completedLoadWithMediatedAd:(id)arg2 adConfiguration:(struct NSDictionary *)arg3 transaction:(id)arg4 error:(id)arg5;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCustomEventNativeAdRenderer : NSObject <GADCustomEventNativeAdDelegate, GADNAdRendering>
{
    GADNServerTransaction *_transaction;
    struct NSDictionary *_adConfiguration;
    CDUnknownBlockType _renderCompletionHandler;
    id <GADCustomEventNativeAd> _customEventNative;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _adLoadCompleted
}

- (void).cxx_destruct;
- (void)customEventNativeAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)processMediatedNativeAd:(id)arg1 withCustomEventNativeAd:(id)arg2;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNVideoActionMonitor : NSObject
{
    UIView *_videoContainerView;
    GADNWebAdView *_adView;
    GADNObserverCollection *_observers;
    GADNVideoPlayer *_videoPlayer;
    UIView *_videoPlayerView;
    id <GADNVideoPlayerViewLoading> _videoPlayerViewLoader;
    id <GADNTouchHandling> _videoPlayerViewController;
    struct CGRect _cachedVideoPlayerFrame;
    _Bool _spherical;
    id _messageSource;
    id <GADNAVPlayerItemProvider> _playerItemProvider;
    GADNPrecacheMonitor *_precacheMonitor;
    long long _gcacheLoadRequestIdentifier;
    GADNVideoConfiguration *_videoConfiguration;
    GADNVideoConfiguration *_gcacheVideoConfiguration;
    long long _renderingIdentifier;
    GADNVideoLoggingContextSource *_loggingContextSource;
    NSNumber *_cachedVolume;
    NSNumber *_cachedMuted;
}

- (void).cxx_destruct;
- (void)handlePerformAnimation:(id)arg1;
- (void)handlePrepareAnimation:(id)arg1;
- (void)userTouchMove:(id)arg1;
- (void)seekToTime:(id)arg1;
- (void)pauseVideo:(id)arg1;
- (void)playVideo:(id)arg1;
- (void)loadControl:(id)arg1;
- (void)loadVideo:(id)arg1;
- (void)setVolume:(id)arg1;
- (void)setMute:(id)arg1;
- (void)updateBackground:(id)arg1;
- (void)showVideo:(id)arg1;
- (void)hideVideo:(id)arg1;
- (void)createVideoPlayerView;
- (void)loadVideoFromVideoPlayerItemProvider:(id)arg1;
- (void)loadNetworkVideoURL:(id)arg1;
- (void)loadGCacheVideoURL:(id)arg1;
- (void)loadPrecachedFileURL:(id)arg1;
- (void)setVideoSource:(id)arg1;
- (void)createNewVideo:(id)arg1;
- (void)rotateVideo:(id)arg1;
- (void)positionVideo:(id)arg1;
- (void)handleVideoActionType:(id)arg1 parameters:(id)arg2;
- (void)dealloc;
- (id)initWithVideoContainerView:(id)arg1 webAdView:(id)arg2 messageSource:(id)arg3;

@end

@interface GADNInlineSingleNativeAdRenderer : NSObject <GADNAdRendering>
{
    GADNURLSession *_session;
    struct NSDictionary *_adConfiguration;
    GADNEventContext *_adContext;
    NSMutableDictionary *_assets;
    CDUnknownBlockType _renderCompletionHandler;
    _Bool _disableImageLoading;
    NSArray *_images;
    GADNAdMediaContent *_mediaContent;
    NSSet *_requiredAssets;
    GADNNativeAdAttribution *_attribution;
    GADNWebViewController *_adVerificationWebViewController;
    NSObject<OS_dispatch_group> *_assetLoadingGroup;
}

- (void).cxx_destruct;
- (void)loadImageArray:(id)arg1 loadedImages:(id)arg2;
- (void)loadSingleImage:(id)arg1 assetName:(id)arg2;
- (void)renderAttribution;
- (void)loadAdVerificationWebView;
- (void)renderMediaContent;
- (void)renderImages;
- (void)renderCustomAssets;
- (void)renderMuteAdInfo;
- (void)renderSingleAssets;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)isVideo;
- (void)invalidateAndCancel;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCharacterSets : NSObject
{
    NSCharacterSet *_characterDelimitedSet;
    NSCharacterSet *_spaceDelimitedSet;
}

+ (id)sharedInstance;
@property(readonly) NSCharacterSet *spaceDelimitedSet; // @synthesize spaceDelimitedSet=_spaceDelimitedSet;
@property(readonly) NSCharacterSet *characterDelimitedSet; // @synthesize characterDelimitedSet=_characterDelimitedSet;
- (void).cxx_destruct;
- (id)init;

@end

@interface GADNCrashReporter : NSObject
{
    CDUnknownFunctionPointerType _previousUncaughtExceptionHandler;
    NSString *_signalReportFilePath;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)handleUncaughtException:(id)arg1;
- (void)enableSignalHandling;
- (void)processSignalReport;
- (void)reportUncaughtException:(id)arg1;
- (id)init;

@end

@interface GADNAdPresenter : NSObject <GADNAdPresenting>
{
    GADNAd *_ad;
    id <GADNPresenting> _presenter;
}

- (void).cxx_destruct;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)setAd:(id)arg1;
- (id)initWithPresenter:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAdLoader : NSObject
{
    GADNAdSource *_adSource;
    // Error parsing type: AB, name: _requestInProgress
    NSSet *_adTypes;
    NSArray *_options;
    UIViewController *_rootViewController;
    id <GADAdLoaderDelegate> _delegate;
    NSString *_adUnitID;
}

@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <GADAdLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
- (_Bool)requestInProgress;
- (void)receivePublicAd:(id)arg1;
- (void)finishLoading;
- (void)failedToReceiveAdWithError:(id)arg1;
- (id)validAdSizes;
- (id)customTemplateIDs;
- (void)updateTargeting:(id)arg1;
- (id)adSource;
- (id)publicAdFromInternalAd:(id)arg1 info:(struct NSDictionary *)arg2 error:(id *)arg3;
- (void)adSourceDidLoadAds:(id)arg1 withErrors:(id)arg2 configuration:(struct NSDictionary *)arg3;
- (void)finishRenderingAd:(id)arg1 withRenderedAds:(id)arg2 errors:(id)arg3 configuration:(struct NSDictionary *)arg4;
- (void)loadRequest:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithAdUnitID:(id)arg1 rootViewController:(id)arg2 adTypes:(id)arg3 options:(id)arg4;

@end

@interface GADNInAppStoreMonitor : NSObject
{
    GADNWebAdView *_webAdView;
    GADNAd *_ad;
    GADNClickProtection *_clickProtection;
    GADNObserverCollection *_observers;
    NSMutableDictionary *_cachedStoreProductViewController;
    GADNStoreKitProductInlineRenderer *_inlineRenderer;
}

- (void).cxx_destruct;
- (void)handlePerformAnimation:(id)arg1;
- (void)handlePrepareAnimation:(id)arg1;
- (void)handleFetchInAppStoreAction:(id)arg1;
- (void)openInAppStoreWithProductID:(id)arg1 fallbackURL:(id)arg2 shouldWaitForFetch:(_Bool)arg3;
- (void)handleOpenInAppStoreAction:(id)arg1;
- (id)initWithAd:(id)arg1 webAdView:(id)arg2 messageSource:(id)arg3 clickProtection:(id)arg4;

@end

@interface GADNGMSGMonitor : NSObject
{
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleGMSGNotification:(id)arg1;
- (id)init;

@end

@interface GADNEventConsoleLogger : NSObject
{
    NSOperationQueue *_operationQueue;
    GADNObserverCollection *_settingsUpdateObservers;
    GADNObserverCollection *_loggingObservers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)logEvent:(id)arg1;
- (void)updateEnabled;
- (id)init;

@end

@interface GADNSignalGenerator : NSObject
{
    GADNSignalConfiguration *_configuration;
}

- (void).cxx_destruct;
- (void)generateSignalsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithSignalConfiguration:(id)arg1;

@end

@interface GADNPrecacheMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNWebAdView *_adView;
    id _messageSource;
    GADNObserverCollection *_observers;
    GADNObserverCollection *_resourceBufferObservers;
    GADNResourceBuffer *_resourceBuffer;
    unsigned long long _byteThresholdToNotify;
    GADNVideoConfiguration *_videoConfiguration;
    NSURL *_videoSourceURL;
    NSTimer *_resourceBufferNotifyUpdateTimer;
    long long _lastNotifiedBytes;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)notifyPrecacheEvent:(id)arg1;
- (void)notifyPrecacheCompletedWithError:(id)arg1;
- (void)notifyPrecacheUpdate;
- (void)stopResourceBufferUpdateCheckTimer;
- (void)handleResourceBufferNotification:(id)arg1;
- (void)startPrecachingWithRequest:(id)arg1 fileURL:(id)arg2;
- (void)abort;
- (void)handlePrecacheAction:(id)arg1;
@property(readonly) NSURL *videoSourceURL;
@property(readonly) GADNResourceBuffer *resourceBuffer;
- (void)dealloc;
- (id)initWithWebAdView:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNAppEventMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAd *_ad;
}

- (void).cxx_destruct;
- (void)handleAppEventNotification:(id)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNNativeAssetViewTracker : NSObject
{
    NSMapTable *_adViewToAssetViewsMap;
    NSMapTable *_adViewToNonclickableAssetNamesMap;
    NSMapTable *_adViewToClickableAssetViewsMap;
    NSMapTable *_adViewToNonclickableAssetViewsMap;
    NSMapTable *_adViewToAdChoicesContentViewMap;
}

- (void).cxx_destruct;
- (id)nonclickableAssetViewsForAdView:(id)arg1;
- (id)clickableAssetViewsForAdView:(id)arg1;
- (id)adChoicesContentViewForAdView:(id)arg1;
- (id)nonclickableAssetNamesForAdView:(id)arg1;
- (id)assetViewsForAdView:(id)arg1;
- (void)setAdChoicesContentView:(id)arg1 forAdView:(id)arg2;
- (void)setClickableAssetView:(id)arg1 assetName:(id)arg2 previousAssetViewPointer:(id *)arg3 forAdView:(id)arg4;
- (void)registerClickableAssetViews:(id)arg1 nonclickableAssetViews:(id)arg2 forAdView:(id)arg3;
- (id)init;

@end

@interface GADNDebugOptionsViewController : UIViewController <UIAlertViewDelegate>
{
    GADNAd *_ad;
    GADNEventContext *_context;
    NSString *_adDebugDialogString;
    UIAlertView *_creativeInformationAlertView;
    UIAlertView *_debugOptionsAlertView;
    UIAlertView *_statusAlertView;
    NSURL *_debugDeviceLinkingURL;
    UIButton *_closeButton;
    _Bool _debugSignalStatusFetchInProgress;
    _Bool _inAppPreviewTokenFetchInProgress;
    NSString *_adUnitID;
    _Bool _shouldEnableInAppPreview;
    _Bool _shouldEnableDebugSignal;
    id <GADDebugOptionsViewControllerDelegate> _delegate;
}

+ (id)debugOptionsViewControllerWithAdUnitID:(id)arg1;
@property(nonatomic) __weak id <GADDebugOptionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)closeButtonPressed:(id)arg1;
- (void)finishedDebugFlow;
- (void)showAlertViewWithTitle:(id)arg1;
- (void)showSystemErrorAlertView;
- (void)inAppPreviewSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)linkInAppPreview;
- (void)debugSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)linkDebugSignal;
- (void)createDeviceIdentifierAndlinkDevice;
- (void)linkDevice;
- (id)debugURLRequestForString:(id)arg1;
- (id)debugDeviceQueryParameters;
- (void)showFeatureNotEnabledAlertView;
- (void)creativeInfoAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)debugOptionsAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showCreativeInformationAlertView;
- (void)showDebugOptionsAlertView;
- (void)viewDidLoad;
- (void)updateConfigurationFromSettings;
- (void)dealloc;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithAd:(id)arg1 adUnitID:(id)arg2 debugDialogString:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCustomEventExtras : NSObject <GADAdNetworkExtras>
{
    NSMutableDictionary *_extras;
}

- (void).cxx_destruct;
- (id)allExtras;
- (void)removeAllExtras;
- (id)extrasForLabel:(id)arg1;
- (void)setExtras:(id)arg1 forLabel:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNTestLabel : UILabel
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)drawTextInRect:(struct CGRect)arg1;

@end

@interface GADNNetworkLogger : NSObject
{
    GADNObserverCollection *_observers;
    NSObject<OS_dispatch_queue> *_logQueue;
    long long _maxLineLength;
    NSString *_initialMessage;
    NSString *_logPrefix;
    NSString *_finalMessage;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)logEvent:(id)arg1 context:(id)arg2 userInfo:(id)arg3;
- (void)logMessage:(id)arg1;
- (void)observeEvent:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface GADNUnclickableView : GADNView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface GADNMRAIDResizePresenter : NSObject <GADNPresenting, GADNMonitorOwner>
{
    UIView *_contentView;
    UIView *_pivotView;
    UIView *_cropView;
    UIView *_referenceView;
    _Bool _relinquishCalled;
    GADNObserverCollection *_observers;
    NSMutableArray *_monitors;
    GADNEventContext *_context;
    _Bool _willDismissAfterOrientationChange;
    GADNCloseButton *_closeButton;
    GADNMRAIDResizeProperties *_resizeProperties;
}

@property(retain, nonatomic) GADNMRAIDResizeProperties *resizeProperties; // @synthesize resizeProperties=_resizeProperties;
@property(readonly, nonatomic) _Bool willDismissAfterOrientationChange; // @synthesize willDismissAfterOrientationChange=_willDismissAfterOrientationChange;
@property(readonly, nonatomic) GADNCloseButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (void)handleOrientationChangeEvent;
- (void)didChangeToOrientation:(long long)arg1;
- (void)repositionContentIfNeeded;
- (struct CGRect)contentFrame;
- (void)animateTransparentInterstitialPresentationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)composeTransparentInterstitialViewsForPresentation;
- (struct CGRect)cropViewFrameForOrientation:(long long)arg1;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (_Bool)canPresent;
- (void)addMonitor:(id)arg1;
- (void)closeButtonPressed:(id)arg1;
@property(readonly, nonatomic) GADNEventContext *context;
- (id)init;
- (id)initWithContentView:(id)arg1 resizeProperties:(id)arg2 referenceView:(id)arg3 context:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNStoreKitProductOpener : NSObject <SKStoreProductViewControllerDelegate>
{
    SKStoreProductViewController *_weakStoreKitProductViewController;
    GADNViewControllerPresenter *_presenter;
    _Bool _shouldDismissAfterPresentation;
    _Bool _isPresenting;
    _Bool _isPresented;
    _Bool _dismissed;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)openWithRootViewController:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)initWithStoreKitProductViewController:(id)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNStoreKitProductInlineRenderer : NSObject <SKStoreProductViewControllerDelegate>
{
    GADNStoreKitProductViewController *_storeKitProductViewController;
    _Bool _renderedInline;
    CDUnknownBlockType _dismissNotificationBlock;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)resizeToFrame:(struct CGRect)arg1;
- (void)renderInView:(id)arg1 dismissalCompletionBlock:(CDUnknownBlockType)arg2;
- (id)initWithStoreKitProductViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNCustomCloseActionMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNCloseButton *_closeButton;
    _Bool _customCloseBlocked;
    GADNAd *_ad;
}

- (void).cxx_destruct;
- (void)handleUpdateCustomCloseAction:(id)arg1;
- (id)initWithAd:(id)arg1 closeButton:(id)arg2 messageSource:(id)arg3 customCloseBlocked:(_Bool)arg4;

@end

@interface GADNActiveViewMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNScheduler *_updateActiveViewStatusScheduler;
    GADNActiveViewReporter *_activeViewReporter;
}

- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithAd:(id)arg1 webAdView:(id)arg2 adFormat:(id)arg3 analyticsLoggingEnabled:(_Bool)arg4 activeViewConfiguration:(id)arg5;

@end

@interface GADNDeallocationMonitor : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableArray *_completionBlocks;
}

- (void).cxx_destruct;
- (void)addCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithAssociatedObject:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface GADNAdLoadMonitor : NSObject
{
    GADNObserverCollection *_observers;
    CDUnknownBlockType _completionHandler;
    unsigned long long _unmatchedStartDelayCount;
    _Bool _assetsDidFinishLoad;
    GADNScheduler *_scheduler;
    _Bool _viewRenderedCheckComplete;
    UIView *_monitoredView;
}

- (void).cxx_destruct;
- (void)loadingAndRenderingCompletedWithError:(id)arg1;
- (void)updateLoadStatusWithError:(id)arg1;
- (void)assetsDidFinishLoadWithError:(id)arg1;
- (void)updateViewRenderedStatus;
- (void)handleDelayLoadWithParameters:(id)arg1;
- (id)initWithMessageSource:(id)arg1 view:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GADNScrollMonitor : NSObject
{
    GADNScheduler *_updateScrollStatusScheduler;
    GADNAd *_ad;
    UIView *_monitoredView;
    struct CGRect _lastMonitoredViewBounds;
}

- (void).cxx_destruct;
- (void)updateScrollStatus;
- (id)initWithAd:(id)arg1 view:(id)arg2;

@end

@interface GADNMediatedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADNThreadStop : NSObject
{
}

- (void)stopCurrentRunLoop;

@end

@interface GADNContainerAdView : GADNView
{
    NSArray *_fixedSizeConstraints;
    GADNObserverCollection *_observer;
    UIView *_view;
    id _resizeMessageSource;
}

@property(nonatomic) __weak id resizeMessageSource; // @synthesize resizeMessageSource=_resizeMessageSource;
@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)constrainSubviewToSize:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;

@end

@interface GADNJSCoreInterface : NSObject <GADNJSCoreInterfaceProtocol>
{
    GADNJSCoreJSContext *_JSCoreJSContext;
}

- (void).cxx_destruct;
- (void)notifyWithURLString:(id)arg1;
- (id)init;
- (id)initWithJSCoreJSContext:(id)arg1;

@end

@interface GADNAdapterStatus : NSObject <NSCopying>
{
    NSString *_statusDescription;
    long long _state;
    double _latency;
}

@property(readonly, nonatomic) double latency; // @synthesize latency=_latency;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithState:(long long)arg1 latency:(double)arg2 description:(id)arg3;

@end

@interface GADNInitializationStatus : NSObject <NSCopying>
{
    NSDictionary *_adapterStatusesByClassName;
}

@property(readonly, nonatomic) NSDictionary *adapterStatusesByClassName; // @synthesize adapterStatusesByClassName=_adapterStatusesByClassName;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)statusWithEntry:(id)arg1 forKey:(id)arg2;
- (id)initWithClassNames:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADNTargeting : NSObject <GADNSignalSource, GADNSignal>
{
    NSArray *_categoryExclusions;
    NSString *_contentURLString;
    NSDictionary *_customTargeting;
    NSDictionary *_networkExtrasMap;
    NSString *_publisherProvidedID;
    NSDictionary *_additionalRequestSignals;
    NSMutableDictionary *_signalSources;
    NSArray *_adTypes;
    GADNAdData *_adData;
    NSArray *_keywords;
    GADNLocation *_location;
    long long _gender;
    NSDate *_birthday;
    NSArray *_testDeviceIdentifiers;
    NSNumber *_childDirectedTreatment;
    NSString *_requestAgent;
    UIViewController *_rootViewController;
    NSString *_userIdentifier;
    NSString *_customRewardString;
    NSSet *_nativeAdTypes;
    NSString *_adUnitID;
    struct GADNAdSize _adSize;
}

@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(retain, nonatomic) NSSet *nativeAdTypes; // @synthesize nativeAdTypes=_nativeAdTypes;
@property(nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
@property(copy, nonatomic) NSString *customRewardString; // @synthesize customRewardString=_customRewardString;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) NSString *requestAgent; // @synthesize requestAgent=_requestAgent;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment; // @synthesize childDirectedTreatment=_childDirectedTreatment;
@property(readonly, nonatomic) NSArray *testDeviceIdentifiers; // @synthesize testDeviceIdentifiers=_testDeviceIdentifiers;
@property(readonly, nonatomic) NSDate *birthday; // @synthesize birthday=_birthday;
@property(readonly, nonatomic) long long gender; // @synthesize gender=_gender;
@property(readonly, nonatomic) GADNLocation *location; // @synthesize location=_location;
@property(readonly, nonatomic) NSArray *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) GADNAdData *adData; // @synthesize adData=_adData;
@property(readonly, nonatomic) NSArray *adTypes; // @synthesize adTypes=_adTypes;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
@property(readonly, nonatomic) _Bool testModeEnabled;
- (id)networkExtrasForClass:(Class)arg1;
- (id)networkExtrasForAdapterClass:(Class)arg1;
- (void)setSignalSource:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) NSDictionary *signalSources;
- (id)initWithRequest:(id)arg1 adUnitID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediaContent : NSObject
{
    id <GADNMediaContentDisplaying> _internalMediaContent;
}

@property(retain, nonatomic) id <GADNMediaContentDisplaying> internalMediaContent; // @synthesize internalMediaContent=_internalMediaContent;
- (void).cxx_destruct;
@property(readonly, nonatomic) double aspectRatio;

@end

@interface GADNBackgroundTaskPinger : NSObject
{
    GADNEventContext *_context;
    unsigned long long _backgroundTaskIdentifier;
    NSURL *_URL;
}

- (void).cxx_destruct;
- (void)endBackgroundTask;
- (void)ping;
- (id)initWithURL:(id)arg1 eventContext:(id)arg2;

@end

@interface GADNPinger : NSObject
{
    GADNURLSession *_pingerSession;
    GADNWebViewPinger *_webViewPinger;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNScheduler *_retryScheduler;
    NSMutableSet *_activeRetryURLStrings;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)pingRetryURLs;
- (void)removeURLStringFromPendingRetryRequests:(id)arg1;
- (void)savePendingRetryURLStrings:(id)arg1;
- (id)pendingRetryURLStrings;
- (void)pingRetryURLInternal:(id)arg1;
- (void)storeRetryURL:(id)arg1;
- (void)pingRequest:(id)arg1 context:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)pingURL:(id)arg1 context:(id)arg2 queue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)init;

@end

@interface GADNPersistentStateMonitor : NSObject
{
    GADNObserverCollection *_observers;
    NSMutableDictionary *_state;
}

- (void).cxx_destruct;
- (void)saveState:(id)arg1;
- (id)savedState;
- (id)initWithMessageSource:(id)arg1;

@end

@interface GADNView : UIView <GADNEventContextSource>
{
    struct CGSize _lastSize;
    GADNEventContext *_context;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (void)awakeFromNib;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNVisibilityMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNScheduler *_updateVisibilityStatusScheduler;
    GADNAd *_ad;
    UIView *_monitoredView;
    _Bool _adVisible;
    _Bool _overlayShown;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSDictionary *_previousViewabilityDictionary;
}

- (void).cxx_destruct;
- (void)updateVisibilityStatus;
- (void)setView:(id)arg1;
- (void)dealloc;
- (id)initWithAd:(id)arg1 view:(id)arg2;

@end

@interface GADNVideoController : NSObject <GADNVideoControlling>
{
    id <GADNVideoControlling> _internalVideoController;
    GADNObserverCollection *_collection;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id <GADVideoControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <GADVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)startObservingAdVideoController;
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (void)setInitialStateWithConfigurations:(id)arg1;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setMute:(_Bool)arg1;
- (void)pause;
- (void)play;
@property(retain) id <GADNVideoControlling> internalVideoController;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMRewardedAdNetworkConnector : NSObject <GADMediationRewardedAdEventDelegate, GADNAdPresenting, GADNRewardedConnector>
{
    id <GADMediationAdapter> _rewardedAdAdapter;
    NSString *_adapterClassName;
    GADNInterstitialAd *_rewardedAd;
    id <GADMediationRewardedAd> _mediationRewardedAd;
    GADNMediatedIntermission *_intermission;
    GADNMediationRewardBasedVideoAdRenderer *_renderer;
    NSDictionary *_adConfiguration;
}

@property(copy, nonatomic) NSDictionary *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(nonatomic) __weak GADNMediationRewardBasedVideoAdRenderer *renderer; // @synthesize renderer=_renderer;
- (void).cxx_destruct;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)willDismissFullScreenView;
- (void)reportImpression;
- (void)didRewardUserWithReward:(id)arg1;
- (void)didEndVideo;
- (void)didStartVideo;
- (void)reportClick;
- (void)didDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)rewardedAdDidFailToLoadWithError:(id)arg1;
- (void)rewardedAdDidLoad;
- (void)didFailToPresentWithError:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adapterName;
- (void)requestRewardBasedVideoAd;
- (void)setRewardBasedVideoAd:(id)arg1;
- (id)initWithAdNetworkConfiguration:(id)arg1 adapterClassName:(id)arg2 renderer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAd : NSObject
{
    GADNInternalNativeAd *_internalNativeAd;
    GADNObserverCollection *_adObservers;
    _Bool _mediaContentStatusReported;
    _Bool _mediaContentRendered;
    UIView *_adChoicesContentView;
    id <GADNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
    NSString *_adNetworkClassName;
}

@property(readonly, nonatomic) GADNInternalNativeAd *internalNativeAd; // @synthesize internalNativeAd=_internalNativeAd;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (void)postDidMakeImpressionNotificationWithUserInfo:(id)arg1;
- (void)postDidReceiveUnapprovedClickNotificationWithUserInfo:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *extraAssets;
@property(readonly, nonatomic) UIView *adChoicesContentView;
@property(readonly, nonatomic) id <GADNMediaContentDisplaying> internalMediaContent;
@property(readonly, nonatomic) NSString *adType;
- (void)reportIsMediaContentRendered:(_Bool)arg1;
- (id)init;
- (id)initWithInternalNativeAd:(id)arg1;
- (void)dealloc;

@end

@interface GADNRequestError : NSError
{
}

@end

@interface GADNEventContext : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableDictionary *_userInfo;
    GADNEventContext *_parent;
    NSString *_identifier;
    NSString *_componentName;
}

+ (id)rootContext;
@property(readonly, copy, nonatomic) NSString *componentName; // @synthesize componentName=_componentName;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) GADNEventContext *parent; // @synthesize parent=_parent;
- (void).cxx_destruct;
- (void)setUserInfoObject:(id)arg1 forKey:(id)arg2;
@property(readonly, copy, nonatomic) NSDictionary *userInfo;
- (id)init;
- (id)initWithParent:(id)arg1 component:(id)arg2;

@end

@interface GADNCacheMonitor : NSObject
{
    id _messageSource;
    GADNObserverCollection *_observers;
    GADNJSContext *_reporter;
    NSMutableDictionary *_cacheIDResourceBuffers;
    NSMutableDictionary *_cacheIDResourceBufferObservers;
}

- (void).cxx_destruct;
- (void)notifyCacheID:(id)arg1 responseHeaders:(id)arg2 fileURL:(id)arg3 status:(id)arg4 requestID:(id)arg5 error:(id)arg6;
- (void)handleResourceBuffer:(id)arg1 notification:(id)arg2 cacheID:(id)arg3 requestID:(id)arg4;
- (void)observeResourceBuffer:(id)arg1 cacheID:(id)arg2 requestID:(id)arg3;
- (void)handleRemoveResourceAction:(id)arg1;
- (void)handleCleanupCacheDirectoryAction;
- (void)handleCacheResourceAction:(id)arg1;
- (void)handleCachedResourceStatusCheckAction:(id)arg1;
- (id)initWithMessageSource:(id)arg1 reporter:(id)arg2;

@end

@interface GADNApplication : NSObject <GADNEventContextSource>
{
    _Bool _appDidFinishLaunching;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasRunEarlyActivities
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasRunMainThreadEarlyActivities
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasRunAdditionalEarlyActivities
    GADNObserverCollection *_observers;
    _Bool _debugModeEnabled;
    _Bool _backgroundAdLoadingEnabled;
    NSString *_version;
    NSString *_buildNumber;
    NSString *_mainBundleIdentifier;
    NSString *_inAppPreviewCreativeToken;
    double _backgroundTimeIntervalSinceBoot;
    NSString *_sessionIdentifier;
}

+ (id)sharedInstance;
+ (void)load;
@property(readonly, copy, nonatomic) NSString *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
@property(readonly, nonatomic) double backgroundTimeIntervalSinceBoot; // @synthesize backgroundTimeIntervalSinceBoot=_backgroundTimeIntervalSinceBoot;
@property(copy, nonatomic) NSString *inAppPreviewCreativeToken; // @synthesize inAppPreviewCreativeToken=_inAppPreviewCreativeToken;
@property(nonatomic) _Bool backgroundAdLoadingEnabled; // @synthesize backgroundAdLoadingEnabled=_backgroundAdLoadingEnabled;
@property(nonatomic) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
@property(readonly, copy, nonatomic) NSString *mainBundleIdentifier; // @synthesize mainBundleIdentifier=_mainBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *buildNumber; // @synthesize buildNumber=_buildNumber;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
- (void).cxx_destruct;
- (void)link;
- (void)runAdditionalEarlyActivities;
- (void)runMainThreadEarlyActivities;
- (void)runEarlyActivities;
- (void)runBackgroundEarlyActivitiesWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateApplicationContext;
@property(readonly, nonatomic) _Bool backgroundAdReloadingEnabled;
@property(readonly, nonatomic) _Bool active;
- (void)appDidFinishLaunching;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)updateBackgroundTimeIntervalSinceBoot;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAlert : NSObject <UIAlertViewDelegate, GADNPresenting>
{
    GADNAlert *_retainCycle;
    NSMutableDictionary *_completionHandlersByButtonIndex;
    UIAlertView *_alertView;
    _Bool _alertShown;
    _Bool _alertTappedOrCancelled;
    _Bool _dismissedByUser;
    CDUnknownBlockType _presentationCompletionHandler;
    CDUnknownBlockType _dismissalCompletionHandler;
    GADNEventContext *_context;
    NSString *_cancelButtonTitle;
    CDUnknownBlockType _cancelHandler;
}

@property(copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(id)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (_Bool)canPresent;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancel;
- (void)addButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithTitle:(id)arg1 message:(id)arg2 parentContext:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNVideoConfiguration : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    double _minBufferTimeInterval;
    double _maxBufferTimeInterval;
    double _bufferForPlaybackTimeInterval;
    double _bufferForPlaybackAfterRebufferTimeInterval;
    _Bool _enableAVPlayerPlaybackBuffering;
    _Bool _enableAdvanceBufferingControl;
    _Bool _enableInMemoryVideoBuffer;
    _Bool _videoBufferShouldIgnoreCanPlayThrough;
    long long _precacheMaxBufferBytes;
    double _videoAssetLoaderMaxDownloadWaitTimeInterval;
    long long _videoAssetLoaderMaxContentSizeInBytes;
    long long _videoAssetMaxLoadableChunkSizeInBytes;
    long long _assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
    long long _assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
    double _assetLoadingPlayerItemRefreshInterval;
    long long _assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
    double _precacheUpdateCheckIntervals;
}

@property(readonly, nonatomic) double precacheUpdateCheckIntervals; // @synthesize precacheUpdateCheckIntervals=_precacheUpdateCheckIntervals;
@property(readonly, nonatomic) _Bool videoBufferShouldIgnoreCanPlayThrough; // @synthesize videoBufferShouldIgnoreCanPlayThrough=_videoBufferShouldIgnoreCanPlayThrough;
@property(readonly, nonatomic) long long assetLoadingPlayerItemNoBufferUpdateMaxContentSize; // @synthesize assetLoadingPlayerItemNoBufferUpdateMaxContentSize=_assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
@property(readonly, nonatomic) double assetLoadingPlayerItemRefreshInterval; // @synthesize assetLoadingPlayerItemRefreshInterval=_assetLoadingPlayerItemRefreshInterval;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxDataLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxDataLoadingFailedAttempts=_assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxContentLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxContentLoadingFailedAttempts=_assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
@property(readonly, nonatomic) long long videoAssetMaxLoadableChunkSizeInBytes; // @synthesize videoAssetMaxLoadableChunkSizeInBytes=_videoAssetMaxLoadableChunkSizeInBytes;
@property(readonly, nonatomic) long long videoAssetLoaderMaxContentSizeInBytes; // @synthesize videoAssetLoaderMaxContentSizeInBytes=_videoAssetLoaderMaxContentSizeInBytes;
@property(readonly, nonatomic) double videoAssetLoaderMaxDownloadWaitTimeInterval; // @synthesize videoAssetLoaderMaxDownloadWaitTimeInterval=_videoAssetLoaderMaxDownloadWaitTimeInterval;
@property(readonly, nonatomic) long long precacheMaxBufferBytes; // @synthesize precacheMaxBufferBytes=_precacheMaxBufferBytes;
@property(readonly, nonatomic) _Bool enableInMemoryVideoBuffer; // @synthesize enableInMemoryVideoBuffer=_enableInMemoryVideoBuffer;
@property(readonly, nonatomic) _Bool enableAdvanceBufferingControl; // @synthesize enableAdvanceBufferingControl=_enableAdvanceBufferingControl;
@property(readonly, nonatomic) _Bool enableAVPlayerPlaybackBuffering; // @synthesize enableAVPlayerPlaybackBuffering=_enableAVPlayerPlaybackBuffering;
- (void).cxx_destruct;
- (id)dictionary;
@property(readonly) double bufferForPlaybackAfterRebufferTimeInterval;
@property(readonly) double bufferForPlaybackTimeInterval;
@property(readonly) double maxBufferTimeInterval;
@property(readonly) double minBufferTimeInterval;
- (void)loadDynamicSettingsWithDictionary:(id)arg1;
- (void)loadStaticSettingsWithDictionary:(id)arg1;
- (void)updateDynamicConfigurationWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNInterstitialSignalConfiguration : GADNSignalConfiguration
{
}

@end

@interface GADNContentQueue : NSObject
{
    NSMutableDictionary *_contents;
    NSMutableArray *_sequenceNumbers;
    unsigned long long _size;
}

- (void).cxx_destruct;
- (void)enqueueContent:(id)arg1;
- (void)deduplicate:(id)arg1;
- (id)contentWithHighestScore;
- (id)init;
- (id)initWithQueueSize:(long long)arg1;

@end

@interface GADNInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
}

@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)reportPurchaseStatus:(long long)arg1;
- (id)init;

@end

@interface GADNSafeBrowsingMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNEventContext *_context;
    NSURL *_reportURL;
    _Bool _shouldReportMaliciousAds;
    _Bool _shouldReportBenignAds;
    GADNSafeBrowsingReport *_report;
    UIView *_adView;
}

- (void).cxx_destruct;
- (void)sendReport;
- (void)observeNotificationName:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithAdView:(id)arg1 adRequestTransaction:(id)arg2 baseURL:(id)arg3 monitoredContext:(id)arg4 configuration:(id)arg5;

@end

@interface GADNAVPlayerItemLogger : NSObject
{
    AVPlayerItem *_playerItem;
    id <GADNEventContextSource> _contextSource;
    GADNObserverCollection *_observers;
    _Bool _enabled;
}

- (void).cxx_destruct;
- (void)stopMonitoring;
- (void)startMonitoringOnMainThread;
- (void)startMonitoring;
- (void)dealloc;
- (id)initWithPlayerItem:(id)arg1 eventContextSource:(id)arg2;

@end

@interface GADNFluidContainerAdView : GADNView
{
    UIView *_view;
}

@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (struct CGSize)intrinsicContentSize;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 context:(id)arg2;

@end

@interface GADNWebViewJSContext : GADNJSContext <GADNWebViewControllerDelegate>
{
    GADNWebViewController *_webViewController;
    NSMutableArray *_bufferedScripts;
    CDUnknownBlockType _loadHTMLURLCompletionHandler;
}

+ (void)loadWithRequest:(id)arg1 webViewConfiguration:(id)arg2 eventContext:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void).cxx_destruct;
- (void)webViewControllerWebContentProcessDidTerminate:(id)arg1;
- (void)webViewController:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFailWithError:(id)arg1;
- (void)webViewControllerDidFinishLoad:(id)arg1;
- (void)webViewControllerDidStartLoad:(id)arg1;
- (_Bool)webViewController:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)asyncEvaluateFunction:(id)arg1 parameters:(id)arg2;
- (void)evaluateScript:(id)arg1;
- (id)functionWithName:(id)arg1;
- (void)loadRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadHTMLURLWithCacheControl:(id)arg1;
- (void)loadData:(id)arg1 URLResponse:(id)arg2 error:(id)arg3;
- (void)dealloc;
- (id)initWithEventContext:(id)arg1;
- (id)initBareContextWithConfiguration:(id)arg1 eventContext:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNUnifiedNativeAd : NSObject
{
    GADNObserverCollection *_adObservers;
    _Bool _mediaContentStatusReported;
    _Bool _mediaContentRendered;
    UIView *_adChoicesContentView;
    GADNMediaContent *_mediaContent;
    GADNVideoController *_videoController;
    _Bool _adMutedReported;
    _Bool _customClickGestureEnabledByPublisher;
    id <GADUnifiedNativeAdUnconfirmedClickDelegate> _unconfirmedClickDelegate;
    _Bool _customClickGestureEnabled;
    id <GADUnifiedNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
    NSString *_adNetworkClassName;
    GADNInternalNativeAd *_internalNativeAd;
}

@property(readonly, nonatomic) GADNInternalNativeAd *internalNativeAd; // @synthesize internalNativeAd=_internalNativeAd;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADUnifiedNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)isCustomClickGestureEnabled;
- (void)recordCustomClickGesture;
- (void)enableCustomClickGestures;
- (void)setUnconfirmedClickDelegate:(id)arg1;
- (id)unconfirmedClickDelegate;
- (void)cancelUnconfirmedClick;
- (void)registerClickConfirmingView:(id)arg1;
- (void)didCancelUnconfirmedClick;
- (void)adIsMuted;
- (void)unregisterAdView;
- (void)updateMediaView:(id)arg1;
- (void)updateAdChoicesView:(id)arg1;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)muteThisAdWithReason:(id)arg1;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (void)postDidMakeImpressionNotificationWithUserInfo:(id)arg1;
- (void)postDidReceiveUnapprovedClickNotificationWithUserInfo:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *extraAssets;
@property(readonly, nonatomic) UIView *adChoicesContentView;
- (id)internalMediaContent;
- (void)reportIsMediaContentRendered:(_Bool)arg1;
- (id)init;
- (id)initWithInternalNativeAd:(id)arg1;
@property(readonly, nonatomic, getter=isCustomMuteThisAdAvailable) _Bool customMuteThisAdAvailable;
@property(readonly, nonatomic) GADNNativeAdImage *adChoicesIcon;
@property(readonly, nonatomic) GADNVideoController *videoController;
@property(readonly, nonatomic) GADNMediaContent *mediaContent;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, nonatomic) NSArray *muteThisAdReasons;
@property(readonly, copy, nonatomic) NSString *advertiser;
@property(readonly, copy, nonatomic) NSString *price;
@property(readonly, copy, nonatomic) NSString *store;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, nonatomic) GADNNativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, copy, nonatomic) NSString *headline;
- (void)dealloc;

@end

@interface GADNMediationBannerAdConfiguration : GADNMediationAdConfiguration
{
    struct GADNAdSize _adSize;
}

@property(readonly, nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
- (id)initWithAdConfiguration:(struct NSDictionary *)arg1 targeting:(id)arg2 credentials:(id)arg3 extras:(id)arg4;
- (id)init;
- (id)initWithAdSize:(struct GADNAdSize)arg1 adConfiguration:(struct NSDictionary *)arg2 targeting:(id)arg3 credentials:(id)arg4 extras:(id)arg5;

@end

@interface GADNUnrenderedAd : GADNAd
{
    GADNOperation *_renderingOperation;
}

- (void).cxx_destruct;
- (void)renderWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithContext:(id)arg1 renderingOperation:(id)arg2;

@end

@interface GADNNativeAppInstallAdView : UIView <GADNNativeAdViewOverlayProtocol, GADNEventContextSource>
{
    GADNNativeAppInstallAd *_nativeAppInstallAd;
    GADNOverlayView *_overlayView;
    GADNNativeAssetViewTracker *_assetViewTracker;
    NSArray *_constraints;
    GADNEventContext *_context;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    GADNMediaView *_mediaView;
    GADNAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADNAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADNMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)setOverlayView:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)orderViews;
- (void)updateAdChoicesView;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADNNativeAppInstallAd *nativeAppInstallAd;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAdReward : NSObject
{
    NSString *_type;
    NSDecimalNumber *_amount;
}

@property(readonly, copy, nonatomic) NSDecimalNumber *amount; // @synthesize amount=_amount;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithRewardType:(id)arg1 rewardAmount:(id)arg2;
- (id)initWithRewardDictionary:(id)arg1;
- (id)init;

@end

@interface GADNDelayedRenderer : NSObject <GADNAdRendering>
{
}

- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNJSCoreEnvironment : NSObject <GADNJSCoreEnvironmentProtocol>
{
    NSString *_environment;
    NSString *_platform;
    NSString *_sdkVersion;
    GADNJSCoreNavigator *_navigator;
    GADNJSCoreInterface *_googleAdsJsInterface;
    GADNJSCoreConsole *_console;
    GADNJSCoreTimers *_timers;
    GADNJSCorePinger *_pinger;
    GADNJSCoreLocalStorage *_localStorage;
}

@property(readonly, nonatomic) GADNJSCoreLocalStorage *localStorage; // @synthesize localStorage=_localStorage;
@property(readonly, nonatomic) GADNJSCorePinger *pinger; // @synthesize pinger=_pinger;
@property(readonly, nonatomic) GADNJSCoreTimers *timers; // @synthesize timers=_timers;
@property(readonly, nonatomic) GADNJSCoreConsole *console; // @synthesize console=_console;
@property(readonly, nonatomic) GADNJSCoreInterface *googleAdsJsInterface; // @synthesize googleAdsJsInterface=_googleAdsJsInterface;
@property(readonly, nonatomic) GADNJSCoreNavigator *navigator; // @synthesize navigator=_navigator;
@property(readonly, nonatomic) NSString *sdkVersion; // @synthesize sdkVersion=_sdkVersion;
@property(readonly, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *environment; // @synthesize environment=_environment;
- (void).cxx_destruct;
- (id)init;
- (id)initWithJSCoreJSContext:(id)arg1 eventContext:(id)arg2;

@end

@interface GADNAdExposureMonitor : NSObject
{
    GADNObserverCollection *_observers;
    _Bool _adExposureBegan;
    NSString *_adUnitID;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 useVisibilityNotification:(_Bool)arg3;
- (void).cxx_destruct;
- (void)dealloc;
- (void)endExposure;
- (void)startExposure;
- (id)initWithAd:(id)arg1 adUnitID:(id)arg2 useVisibilityNotification:(_Bool)arg3;

@end

@interface GADNStoreKitProductViewController : SKStoreProductViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface GADNAdVerificationMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNWebAdView *_adView;
    GADNAdVerificationReporter *_adVerificationReporter;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _beginAdSessionExecuted
}

- (void).cxx_destruct;
- (void)trackExpandView:(id)arg1;
- (void)adDidMakeImpression;
- (void)beginAdSession;
- (void)dealloc;
- (id)initWithAd:(id)arg1 monitoredView:(id)arg2 adView:(id)arg3 friendlyObstructionView:(id)arg4 mediaType:(long long)arg5;

@end

@interface GADNDynamicHeightSearchRequest : GADNRequest
{
    NSMutableDictionary *_requestParameters;
    _Bool _adTestEnabled;
    _Bool _clickToCallExtensionEnabled;
    _Bool _locationExtensionEnabled;
    _Bool _plusOnesExtensionEnabled;
    _Bool _sellerRatingsExtensionEnabled;
    _Bool _siteLinksExtensionEnabled;
    _Bool _titleUnderlineHidden;
    _Bool _boldTitleEnabled;
    _Bool _detailedAttributionExtensionEnabled;
    _Bool _longerHeadlinesExtensionEnabled;
    NSString *_query;
    long long _adPage;
    NSString *_channel;
    NSString *_hostLanguage;
    NSString *_locationExtensionTextColor;
    double _locationExtensionFontSize;
    NSString *_CSSWidth;
    long long _numberOfAds;
    NSString *_fontFamily;
    NSString *_attributionFontFamily;
    double _annotationFontSize;
    double _attributionFontSize;
    double _descriptionFontSize;
    double _domainLinkFontSize;
    double _titleFontSize;
    NSString *_adBorderColor;
    NSString *_adSeparatorColor;
    NSString *_annotationTextColor;
    NSString *_attributionTextColor;
    NSString *_backgroundColor;
    NSString *_borderColor;
    NSString *_domainLinkColor;
    NSString *_textColor;
    NSString *_titleLinkColor;
    NSString *_adBorderCSSSelections;
    double _adjustableLineHeight;
    double _attributionBottomSpacing;
    NSString *_borderCSSSelections;
    double _verticalSpacing;
}

@property(nonatomic) _Bool longerHeadlinesExtensionEnabled; // @synthesize longerHeadlinesExtensionEnabled=_longerHeadlinesExtensionEnabled;
@property(nonatomic) _Bool detailedAttributionExtensionEnabled; // @synthesize detailedAttributionExtensionEnabled=_detailedAttributionExtensionEnabled;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(nonatomic) _Bool boldTitleEnabled; // @synthesize boldTitleEnabled=_boldTitleEnabled;
@property(nonatomic) _Bool titleUnderlineHidden; // @synthesize titleUnderlineHidden=_titleUnderlineHidden;
@property(copy, nonatomic) NSString *borderCSSSelections; // @synthesize borderCSSSelections=_borderCSSSelections;
@property(nonatomic) double attributionBottomSpacing; // @synthesize attributionBottomSpacing=_attributionBottomSpacing;
@property(nonatomic) double adjustableLineHeight; // @synthesize adjustableLineHeight=_adjustableLineHeight;
@property(copy, nonatomic) NSString *adBorderCSSSelections; // @synthesize adBorderCSSSelections=_adBorderCSSSelections;
@property(copy, nonatomic) NSString *titleLinkColor; // @synthesize titleLinkColor=_titleLinkColor;
@property(copy, nonatomic) NSString *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSString *domainLinkColor; // @synthesize domainLinkColor=_domainLinkColor;
@property(copy, nonatomic) NSString *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSString *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *attributionTextColor; // @synthesize attributionTextColor=_attributionTextColor;
@property(copy, nonatomic) NSString *annotationTextColor; // @synthesize annotationTextColor=_annotationTextColor;
@property(copy, nonatomic) NSString *adSeparatorColor; // @synthesize adSeparatorColor=_adSeparatorColor;
@property(copy, nonatomic) NSString *adBorderColor; // @synthesize adBorderColor=_adBorderColor;
@property(nonatomic) double titleFontSize; // @synthesize titleFontSize=_titleFontSize;
@property(nonatomic) double domainLinkFontSize; // @synthesize domainLinkFontSize=_domainLinkFontSize;
@property(nonatomic) double descriptionFontSize; // @synthesize descriptionFontSize=_descriptionFontSize;
@property(nonatomic) double attributionFontSize; // @synthesize attributionFontSize=_attributionFontSize;
@property(nonatomic) double annotationFontSize; // @synthesize annotationFontSize=_annotationFontSize;
@property(copy, nonatomic) NSString *attributionFontFamily; // @synthesize attributionFontFamily=_attributionFontFamily;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
@property(copy, nonatomic) NSString *CSSWidth; // @synthesize CSSWidth=_CSSWidth;
@property(nonatomic) _Bool siteLinksExtensionEnabled; // @synthesize siteLinksExtensionEnabled=_siteLinksExtensionEnabled;
@property(nonatomic) _Bool sellerRatingsExtensionEnabled; // @synthesize sellerRatingsExtensionEnabled=_sellerRatingsExtensionEnabled;
@property(nonatomic) _Bool plusOnesExtensionEnabled; // @synthesize plusOnesExtensionEnabled=_plusOnesExtensionEnabled;
@property(nonatomic) _Bool locationExtensionEnabled; // @synthesize locationExtensionEnabled=_locationExtensionEnabled;
@property(nonatomic) _Bool clickToCallExtensionEnabled; // @synthesize clickToCallExtensionEnabled=_clickToCallExtensionEnabled;
@property(nonatomic) double locationExtensionFontSize; // @synthesize locationExtensionFontSize=_locationExtensionFontSize;
@property(copy, nonatomic) NSString *locationExtensionTextColor; // @synthesize locationExtensionTextColor=_locationExtensionTextColor;
@property(copy, nonatomic) NSString *hostLanguage; // @synthesize hostLanguage=_hostLanguage;
@property(copy, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) _Bool adTestEnabled; // @synthesize adTestEnabled=_adTestEnabled;
@property(nonatomic) long long adPage; // @synthesize adPage=_adPage;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (id)CSADynamicHeightSearchRequestURLWithAdUnitID:(id)arg1;
- (id)dynamicHeightAdURLFragmentsWithAdUnitID:(id)arg1;
- (void)parameterHelperSetValue:(id)arg1 forKey:(id)arg2;
- (void)setAdvancedOptionValue:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADNRefreshTimer : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    CDUnknownBlockType _refreshHandler;
    long long _expirationIdentifier;
    double _resumeTimestamp;
    double _refreshInterval;
    double _remainingTimeInterval;
    _Bool _isStarted;
    _Bool _isPaused;
    _Bool _isInvalid;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)forceRefresh;
- (void)expiredWithExpirationIdentifier:(long long)arg1;
- (void)pauseInternal;
- (void)pause;
- (void)resumeInternal;
- (void)resume;
- (void)startInternal;
- (void)start;
- (void)setRefreshHandler:(CDUnknownBlockType)arg1;
- (id)initWithRefreshInterval:(double)arg1 messageSource:(id)arg2;

@end

@interface GADNNativeAdClickAndImpressionMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNInternalNativeAd *_nativeAd;
    GADNNativeAdContext *_nativeAdContext;
}

- (void).cxx_destruct;
- (void)handleConfirmationClick:(double)arg1;
- (void)handleUnconfirmedClickAction:(id)arg1;
- (void)handleAdMutedAction;
- (void)handleImpressionRecordedAction;
- (void)handleClickRecordedAction;
- (void)handleImpression:(id)arg1;
- (void)handleClick:(id)arg1;
- (id)initWithAd:(id)arg1 nativeAdContext:(id)arg2;

@end

@interface GADNFramerateMonitor : NSObject
{
    NSHashTable *_observers;
    CADisplayLink *_displayLink;
    _Bool _hasFirstFrameInfo;
    double _frameDuration;
    double _lastDrawTimestamp;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleRenderForDisplayLink:(id)arg1;
- (long long)droppedFrameCountBetweenLastRenderAndTimestamp:(double)arg1;
- (void)removeFramerateObserver:(id)arg1;
- (void)addFramerateObserver:(id)arg1;
- (void)stopIfNeeded;
- (void)startIfNeeded;
- (void)dealloc;
- (id)init;

@end

@interface GADNRewardBasedVideoAd : NSObject
{
    GADNInterstitialAd *_rewardBasedVideoAd;
    GADNAdSource *_adSource;
    _Bool _requestInProgress;
    GADNObserverCollection *_intermissionObservers;
    GADNObserverCollection *_rewardedAdObservers;
    NSString *_adUnitID;
    GADNObserverCollection *_appSettingsObservers;
    _Bool _isAdPresenting;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_adNetworkClassName;
    NSDictionary *_adMetadata;
    id <GADRewardBasedVideoAdDelegate> _delegate;
    NSString *_userIdentifier;
    NSString *_customRewardString;
}

+ (id)sharedInstance;
@property(copy, nonatomic) NSString *customRewardString; // @synthesize customRewardString=_customRewardString;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property(nonatomic) __weak id <GADRewardBasedVideoAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)stopObservingApplicationConfiguration;
- (void)setUpAdaptersFromApplicationSettings;
- (void)attachAppSettingsObservers;
- (void)attachRewardedEventsObservers;
- (void)attachLifecycleEventObservers;
- (void)setAdMetadata:(id)arg1;
- (id)adMetadata;
- (id)adSource;
- (void)setRewardBasedVideoAd:(id)arg1;
@property(readonly, nonatomic, getter=isReady) _Bool ready;
- (void)adPresentationDidFail;
- (void)setAdNetworkClassName:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
- (void)presentFromRootViewController:(id)arg1;
- (void)adLoadCompletedWithError:(id)arg1;
- (void)adInvalidated;
- (void)loadWithTargeting:(id)arg1;
- (void)removeExistingAd;
- (void)loadRequest:(id)arg1 withAdUnitID:(id)arg2;
- (void)updateTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;

@end

@interface GADNRootViewControllerProvider : NSObject
{
    GADNObserverCollection *_intermissionObservers;
    _Bool _intermissionInProgress;
    UIViewController *_nextViewController;
    UIViewController *_rootViewController;
}

@property(readonly, nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void).cxx_destruct;
- (void)registerIntermissionMessageSource:(id)arg1;
- (void)updateIntermissionInProgress:(_Bool)arg1;
@property(readonly, nonatomic) __weak UIViewController *topViewController;
- (void)updateViewController:(id)arg1;

@end

@interface GADNMediationStatistics : NSObject
{
    NSMutableDictionary *_mediationStatistics;
}

- (void).cxx_destruct;
- (id)mediationStatisticsParameterOrderedByAllocationIDs:(id)arg1;
- (void)endTimingForAllocationID:(id)arg1 exitStatus:(long long)arg2;
- (void)startTimingForAllocationID:(id)arg1;
- (id)init;

@end

@interface GADNContent : NSObject
{
    long long _contentAgeWeight;
    long long _contentLengthWeight;
    long long _contentTotalLength;
    GADNBinaryHeap *_heap;
    long long _maximumShingleCount;
    unsigned long long _minimumParagraphLength;
    unsigned long long _shingleLength;
    NSString *_fingerprint;
    long long _score;
    long long _sequenceNumber;
}

@property(readonly, nonatomic) long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly, nonatomic) long long score; // @synthesize score=_score;
@property(readonly, nonatomic) NSString *fingerprint; // @synthesize fingerprint=_fingerprint;
- (void).cxx_destruct;
- (id)shingleHash;
- (void)updateHeapWithHash:(unsigned int)arg1 shingle:(id)arg2;
- (void)applyRollingHashToTokens:(id)arg1 baseHash:(unsigned int)arg2;
- (void)selectShinglesFromTokens:(id)arg1;
- (void)updateContentWithText:(id)arg1;
- (void)deductServedPenalty;
- (id)initWithSequenceNumber:(long long)arg1;
- (id)init;

@end

@interface GADNAdChoicesView : UIView
{
    UIView *_adChoicesContentView;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
@property(retain, nonatomic) UIView *adChoicesContentView;

@end

@interface GADNNativeContentAd : GADNNativeAd
{
    GADNVideoController *_videoController;
}

- (void).cxx_destruct;
- (void)unregisterAdView;
- (void)updateMediaView:(id)arg1;
- (void)updateAdChoicesView:(id)arg1;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adType;
- (id)adChoicesIcon;
@property(readonly, nonatomic) GADNVideoController *videoController;
@property(readonly, copy, nonatomic) NSString *advertiser;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, nonatomic) GADNNativeAdImage *logo;
@property(readonly, copy, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, copy, nonatomic) NSString *headline;

@end

@interface GADNApplicationVolumeMonitor : NSObject
{
    GADNWebAdView *_webAdView;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)reportCurrentAudioState;
- (id)initWithWebAdView:(id)arg1;

@end

@interface GADNRequest : NSObject <NSCopying>
{
    NSMutableDictionary *_networkExtrasMap;
    unsigned int _previousRequestCount;
    NSNumber *_childDirectedTreatment;
    GADNLocation *_location;
    NSArray *_adTypes;
    GADNAdData *_adData;
    NSArray *_testDevices;
    long long _gender;
    NSDate *_birthday;
    NSArray *_keywords;
    NSString *_contentURL;
    NSString *_requestAgent;
    NSDictionary *_customTargeting;
    NSString *_publisherProvidedID;
    NSArray *_categoryExclusions;
}

+ (void)updateCorrelator;
+ (id)sdkVersion;
+ (void)initialize;
+ (id)request;
@property(copy, nonatomic) NSArray *categoryExclusions; // @synthesize categoryExclusions=_categoryExclusions;
@property(copy, nonatomic) NSString *publisherProvidedID; // @synthesize publisherProvidedID=_publisherProvidedID;
@property(copy, nonatomic) NSDictionary *customTargeting; // @synthesize customTargeting=_customTargeting;
@property(copy, nonatomic) NSArray *adTypes; // @synthesize adTypes=_adTypes;
@property(copy, nonatomic) NSString *requestAgent; // @synthesize requestAgent=_requestAgent;
@property(copy, nonatomic) NSString *contentURL; // @synthesize contentURL=_contentURL;
@property(copy, nonatomic) NSArray *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSDate *birthday; // @synthesize birthday=_birthday;
@property(nonatomic) long long gender; // @synthesize gender=_gender;
@property(copy, nonatomic) NSArray *testDevices; // @synthesize testDevices=_testDevices;
- (void).cxx_destruct;
- (void)setLocationWithDescription:(id)arg1;
- (void)setBirthdayWithMonth:(long long)arg1 day:(long long)arg2 year:(long long)arg3;
- (void)setAdData:(id)arg1;
- (id)adData;
@property(readonly, nonatomic) NSDictionary *additionalSignals;
@property(readonly, nonatomic) NSDictionary *networkExtrasMap;
@property(readonly, nonatomic) GADNLocation *location;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
- (void)setLocationWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;
- (void)tagForChildDirectedTreatment:(_Bool)arg1;
- (void)removeAdNetworkExtrasFor:(Class)arg1;
- (id)adNetworkExtrasFor:(Class)arg1;
- (void)registerAdNetworkExtras:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNIntermissionStateMonitor : NSObject
{
    GADNObserverCollection *_observers;
    _Bool _idleTimerWasOriginallyDisabled;
    _Bool _statusBarWasOriginallyHidden;
    NSOperationQueue *_deactivationQueue;
    _Bool _applicationBackgroundedDueToAdAction;
    id <GADNPresenterSource> _presenterSource;
}

@property(nonatomic) __weak id <GADNPresenterSource> presenterSource; // @synthesize presenterSource=_presenterSource;
- (void).cxx_destruct;
- (void)applicationWillEnterForeground;
- (void)setDeactivationQueueSuspended:(_Bool)arg1;
- (void)intermissionWillEnd;
- (void)intermissionDidBegin;
- (id)init;

@end

@interface GADNNativeAdViewTracker : NSObject
{
    NSMapTable *_adViewToAdMap;
    NSMapTable *_adToAdViewMap;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)adViewForNativeAd:(id)arg1;
- (void)removeAdViewForNativeAd:(id)arg1;
- (void)registerAdView:(id)arg1 assetViewTracker:(id)arg2 forNativeAd:(id)arg3;
- (id)init;

@end

@interface GADNPlaceholderJSContext : NSProxy
{
}

- (id)initWithEventContext:(id)arg1;

@end

@interface GADNJSContext : NSObject <GADNJavascriptEvaluating>
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
- (void)asyncEvaluateFunction:(id)arg1 parameters:(id)arg2;
- (id)initWithEventContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNJSFunction : NSObject
{
}

@end

@interface GADNBannerView : UIView <GADNEventContextSource>
{
    GADNBannerAd *_bannerAd;
    GADNVideoController *_videoController;
    GADNAdSource *_adSource;
    _Bool _requestInProgress;
    struct GADNAdSize _lastRequestedAdSize;
    unsigned int _lastRequestedCorrelationID;
    GADNObserverCollection *_adObservers;
    GADNRefreshTimer *_refreshTimer;
    GADNTargeting *_refreshTargeting;
    struct GADNAdSize _adSize;
    _Bool _hasAdSize;
    NSArray *_adOptions;
    _Bool _intermissionInProgress;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADNCorrelator *_correlator;
    NSString *_adNetworkClassName;
    UIViewController *_rootViewController;
    _Bool _autoloadEnabled;
    _Bool _enableManualImpressions;
    GADNEventContext *_context;
    NSString *_adUnitID;
    id <GADBannerViewDelegate> _delegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    id <GADAppEventDelegate> _appEventDelegate;
    NSArray *_validAdSizes;
}

@property(copy, nonatomic) NSArray *validAdSizes; // @synthesize validAdSizes=_validAdSizes;
@property(nonatomic) _Bool enableManualImpressions; // @synthesize enableManualImpressions=_enableManualImpressions;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
@property(readonly, nonatomic) GADNBannerAd *bannerAd; // @synthesize bannerAd=_bannerAd;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)attachLifecycleEventObservers;
- (void)resize:(struct GADNAdSize)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)intrinsicContentSizeDidChange:(struct CGSize)arg1;
- (void)attachContentSizeObservers;
- (void)refresh;
- (id)adSource;
- (void)setAdOptions:(id)arg1;
- (void)setBannerAd:(id)arg1;
- (void)adLoadCompletedWithError:(id)arg1;
- (void)callBackAdViewDidReceiveAd;
- (void)loadWithTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)shouldLoadRequest:(id *)arg1;
- (_Bool)shouldOverrideInProgressRequest;
- (void)loadAd:(id)arg1 error:(id)arg2 serverResponseConfiguration:(struct NSDictionary *)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)loadAd:(id)arg1 info:(struct NSDictionary *)arg2 error:(id *)arg3;
- (void)loadRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadRequest:(id)arg1;
- (void)updateTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (struct GADNAdSize)adSizeForTargeting;
- (void)updateRefreshTimerWithConfiguration:(struct NSDictionary *)arg1 ad:(id)arg2;
- (void)setAdNetworkClassName:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
@property(nonatomic) __weak UIViewController *rootViewController;
- (void)setCorrelator:(id)arg1;
- (id)correlator;
- (struct CGSize)intrinsicContentSize;
@property(nonatomic) struct GADNAdSize adSize;
- (void)setValidAdSizesWithSizes:(struct GADNAdSize *)arg1;
- (void)commonInit;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithAdSize:(struct GADNAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADNAdSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADNAdSize)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNSafeBrowsingReport : NSObject
{
    NSMutableArray *_resources;
    NSNumber *_lastPreClickResourceIndex;
    NSMutableDictionary *_resourceIndexForCanonicalURL;
    NSMutableDictionary *_requestIndicesForRedirectToURL;
    NSMutableDictionary *_parentTransactionForTransaction;
    NSMutableDictionary *_childTransactionsForTransaction;
    NSMutableDictionary *_requestIPAddresses;
    NSMutableSet *_autoClickResources;
    NSString *_clickString;
    NSSet *_excludedHeaders;
    NSURL *_landingPageURL;
    NSURL *_mainDocumentURL;
    UIImage *_renderedAd;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)createDictionaryWithCompletion:(CDUnknownBlockType)arg1;
- (id)dictionaryForResourceAtIndex:(unsigned long long)arg1;
- (id)parentIndexForRequest:(id)arg1;
- (id)referringResourceForRequest:(id)arg1;
- (id)redirectSourceForRequest:(id)arg1;
- (void)addPlaceholderTransactionForRequest:(id)arg1;
- (void)addTransaction:(id)arg1 parentIndex:(id)arg2;
- (void)addClickThrough:(id)arg1;
- (void)addAutoClickAttempt:(id)arg1;
- (void)addTransaction:(id)arg1;
@property(copy) NSURL *mainDocumentURL;
@property(retain) UIImage *renderedAd;
@property(getter=isAdTouched) _Bool adTouched;
@property(readonly, getter=isMalicious) _Bool malicious;
- (id)initWithRootTransaction:(id)arg1 configuration:(id)arg2;

@end

@interface GADNMediationSizeChangeMonitor : NSObject
{
    GADNCroppingAdView *_croppingView;
    id _delegate;
    GADNObserverCollection *_observers;
}

+ (void)addMonitorToAd:(id)arg1 containerView:(id)arg2 croppingView:(id)arg3 delegate:(id)arg4;
- (void).cxx_destruct;
- (id)initWithContainerView:(id)arg1 croppingView:(id)arg2 delegate:(id)arg3;

@end

@interface GADNAdMetadataMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAd *_ad;
}

- (void).cxx_destruct;
- (void)handleAdMetadataNotification:(id)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNCorrelator : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned int _correlationID;
}

- (void).cxx_destruct;
@property(readonly) unsigned int correlationID;
- (void)reset;
- (id)init;

@end

@interface GADNSignalConfiguration : NSObject
{
    NSString *_adUnitID;
}

@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithAdUnitID:(id)arg1;

@end

@interface GADNMemoryUtilizationMonitor : NSObject
{
    unsigned long long _initiallyAllocatedByteCount;
    unsigned long long _peakAllocatedByteCount;
    unsigned long long _currentlyAllocatedByteCount;
}

@property(readonly, nonatomic) unsigned long long currentlyAllocatedByteCount; // @synthesize currentlyAllocatedByteCount=_currentlyAllocatedByteCount;
@property(readonly, nonatomic) unsigned long long peakAllocatedByteCount; // @synthesize peakAllocatedByteCount=_peakAllocatedByteCount;
@property(readonly, nonatomic) unsigned long long initiallyAllocatedByteCount; // @synthesize initiallyAllocatedByteCount=_initiallyAllocatedByteCount;
- (void)update;
- (id)init;

@end

@interface GADNProductsRequest : NSObject
{
    SKProductsRequest *_request;
    CDUnknownBlockType _completionHandler;
    GADNProductsRequest *_retainCycle;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasCompleted
}

- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)completedWithValidProducts:(id)arg1 invalidProductIDs:(id)arg2 error:(id)arg3;
- (void)startWithProductIdentifiers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNClickProtection : NSObject
{
    _Bool _autoClickEnabled;
    // Error parsing type: AB, name: _touched
    NSString *_debugDialogString;
    GADNAd *_ad;
}

- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)reportBlockedOpenActionWithNavigationURL:(id)arg1 sourceURL:(id)arg2;
- (_Bool)shouldAllowClickAction;
- (id)initWithAd:(id)arg1 view:(id)arg2 autoClickProtectionEnabled:(_Bool)arg3 debugDialogString:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAdContext : NSObject
{
    GADNJSContext *_context;
}

+ (void)JSCoreNativeAdContextWithEventContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)webViewNativeAdContextWithAdConfiguration:(struct NSDictionary *)arg1 eventContext:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)loadWithAdConfiguration:(struct NSDictionary *)arg1 eventContext:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) GADNJSContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)handleOnePointFiveClick:(id)arg1;
- (void)handleImpression:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleClick:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)preprocessNativeAdDictionary:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setJSContext:(id)arg1;

@end

@interface GADNSettings : NSObject
{
    struct sqlite3 *_database;
    NSMutableDictionary *_values;
    NSMutableDictionary *_temporaryValues;
    NSMutableDictionary *_valuesToWrite;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)writeUpdatedValues:(id)arg1;
- (void)writeUpdates;
- (id)dictionaryForKey:(id)arg1;
- (id)arrayForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (double)doubleForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)stringsForKeys:(id)arg1;
- (id)stringForKey:(id)arg1;
- (id)objectForKey:(id)arg1;
- (id)internalObjectForKey:(id)arg1;
- (void)setDictionary:(id)arg1 forKey:(id)arg2;
- (void)setArray:(id)arg1 forKey:(id)arg2;
- (void)setJSONObject:(id)arg1 forKey:(id)arg2;
- (void)addTemporaryEntriesFromDictionary:(id)arg1;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (void)updateValuesWithString:(id)arg1 forKey:(id)arg2;
- (_Bool)openDatabase;
- (void)loadDatabaseValues;
- (void)dealloc;
- (id)init;

@end

@interface GADNAdVerificationNativeMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNWebViewController *_webViewController;
    GADNAdVerificationReporter *_adVerificationReporter;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _beginAdSessionExecuted
}

- (void).cxx_destruct;
- (void)trackExpandView:(id)arg1;
- (void)registerMonitoredView:(id)arg1;
- (void)adDidMakeImpression;
- (void)beginAdSession;
- (void)dealloc;
- (id)initWithAd:(id)arg1 webViewController:(id)arg2 mediaType:(long long)arg3;

@end

@interface GADNRTBMediationInterstitialAdRenderer : NSObject <GADNAdPresenting, GADMediationInterstitialAdEventDelegate, GADNAdRendering>
{
    id <GADMediationAdapter> _loadingAdapter;
    GADNInterstitialAd *_interstitialAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    id <GADMediationInterstitialAd> _mediatedAd;
    GADNMediationInterstitialAdConfiguration *_mediatedConfiguration;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (void)didFailToPresentWithError:(id)arg1;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (id)adEventDelegateForAdapter:(id)arg1 completedLoadWithAd:(id)arg2 adConfiguration:(struct NSDictionary *)arg3 transaction:(id)arg4 renderCompletionHandler:(CDUnknownBlockType)arg5;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNotificationCenter : NSObject
{
    NSNotificationCenter *_notificationCenter;
    NSArray *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)postNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3;
- (id)notificationCenter;
- (void)dealloc;
- (id)init;

@end

@interface GADNSignalData : NSObject
{
    NSString *_signals;
    NSString *_requestIdentifier;
    NSDictionary *_signalDictionary;
}

@property(readonly, nonatomic) NSDictionary *signalDictionary; // @synthesize signalDictionary=_signalDictionary;
@property(readonly, copy, nonatomic) NSString *requestIdentifier; // @synthesize requestIdentifier=_requestIdentifier;
@property(readonly, copy, nonatomic) NSString *signals; // @synthesize signals=_signals;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithSignalString:(id)arg1 signalDictionary:(id)arg2;

@end

@interface GADNActiveViewContext : NSObject
{
    GADNJSContext *_context;
}

+ (void)loadWithEventContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)updateActiveViewWithSignals:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setJSContext:(id)arg1;

@end

@interface GADNResourceBuffer : NSObject <NSURLSessionDataDelegate>
{
    _Bool _removeFileOnDealloc;
    NSOperationQueue *_operationQueue;
    NSURLSession *_session;
    NSURLSessionDataTask *_dataTask;
    GADNURLSessionTransaction *_transaction;
    _Bool _completed;
    NSObject<OS_dispatch_queue> *_lockQueue;
    double _bufferingStartTimeIntervalSinceBoot;
    unsigned long long _bufferedContentSize;
    NSDictionary *_responseHeaders;
    _Bool _valid;
    long long _maxBytes;
    _Bool _responseHeadersReceived;
    _Bool _started;
    NSMutableSet *_notifyBytesObservers;
    NSObject<OS_dispatch_queue> *_fileReadWriteQueue;
    NSURLRequest *_request;
    NSURL *_fileURL;
    NSString *_contentType;
    long long _contentLength;
}

@property(readonly) long long contentLength; // @synthesize contentLength=_contentLength;
@property(readonly, copy) NSString *contentType; // @synthesize contentType=_contentType;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) NSURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
@property(readonly) _Bool started;
@property(readonly) _Bool responseHeadersReceived;
@property long long maxBytes;
@property(readonly) _Bool completed;
@property(readonly) _Bool valid;
- (void)setValid:(_Bool)arg1;
@property(readonly, copy) NSDictionary *responseHeaders;
- (void)setResponseHeaders:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)reset;
- (void)finishWithError:(id)arg1;
- (void)notifyObserversWaitingForNotifyBytes;
- (void)addObserverForNotifyBytes:(unsigned long long)arg1 toCollection:(id)arg2 queue:(id)arg3 usingBlock:(CDUnknownBlockType)arg4;
- (double)networkSpeedInBytesPerSecond;
- (unsigned long long)bufferedContentSize;
- (void)cancelWithError:(id)arg1;
- (void)start;
- (id)dataWithRange:(struct _NSRange)arg1 error:(id *)arg2;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 contentType:(id)arg3 contentLength:(long long)arg4 removeFileOnDealloc:(_Bool)arg5;
- (void)commonInitWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAdVerification : NSObject
{
    Class _GADOMIDPartner;
    Class _GADOMIDSDK;
    Class _GADOMIDAdSessionConfiguration;
    Class _GADOMIDAdSessionContext;
    Class _GADOMIDAdSession;
    Class _GADOMIDAdEvents;
    GADOMIDSDK *_sharedGADOMID;
    GADOMIDPartner *_partner;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)adEventsForSession:(id)arg1;
- (id)adSessionForWebView:(id)arg1 mediaType:(long long)arg2;
@property(readonly, nonatomic) NSString *OMIDVersion;
- (id)init;

@end

@interface GADNServerSideVerificationOptions : NSObject <NSCopying>
{
    NSString *_userIdentifier;
    NSString *_customRewardString;
}

@property(copy, nonatomic) NSString *customRewardString; // @synthesize customRewardString=_customRewardString;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNWiggleGestureRecognizer : UIGestureRecognizer
{
    double _distanceMoved;
    long long _gestureState;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)isMovementInYAxisWithCurrentPoint:(struct CGPoint)arg1 previousPoint:(struct CGPoint)arg2;
- (void)reset;

@end

@interface GADNAdVerificationMonitoredView : NSObject
{
    GADNObserverCollection *_presenterDismissalObserverCollection;
    UIView *_monitoredView;
}

@property(nonatomic) __weak UIView *monitoredView; // @synthesize monitoredView=_monitoredView;
- (void).cxx_destruct;
- (void)addObserverForMonitoredViewDismissal:(id)arg1 dismissalBlock:(CDUnknownBlockType)arg2;
- (id)initWithMonitoredView:(id)arg1;

@end

@interface GADNAdVerificationReporter : NSObject
{
    GADOMIDAdSession *_adSession;
    NSMutableArray *_monitoredViews;
    GADNObserverCollection *_observers;
    UIView *_friendlyObstructionView;
    long long _mediaType;
    UIView *_currentMonitoredView;
    UIView *_webView;
}

- (void).cxx_destruct;
- (void)cleanUpDeallocatedMonitoredViews;
- (void)stopTrackingAdVerificationView:(id)arg1;
- (void)addExpandView:(id)arg1 presenter:(id)arg2;
- (void)setMonitoredView:(id)arg1;
- (void)endAdSession;
- (void)beginAdSession;
- (id)initWithMonitoredView:(id)arg1 webView:(id)arg2 mediaType:(long long)arg3 friendlyObstructionView:(id)arg4;

@end

@interface GADNWebAdViewInterceptor : NSURLProtocol <NSURLConnectionDelegate>
{
    NSURL *_substituteURL;
    NSURLConnection *_connection;
    GADNURLSessionTransaction *_interceptedTransaction;
    NSThread *_clientThread;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void).cxx_destruct;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)stopLoading;
- (void)startLoading;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNURLSession : NSObject
{
    NSURLSession *_session;
    GADNURLSessionTransactionMonitor *_taskMonitor;
    _Bool _valid;
    NSOperationQueue *_lockQueue;
}

- (void).cxx_destruct;
- (void)invalidateAndCancel;
- (void)sendRequest:(id)arg1 withContext:(id)arg2 notificationPolicy:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)dealloc;
- (id)init;
- (id)initWithConfiguration:(id)arg1;

@end

@interface GADNVideoAssetLoader : NSObject
{
    NSURL *_sourceURL;
    GADNResourceBuffer *_mainResourceBuffer;
    GADNVideoConfiguration *_videoConfiguration;
    GADNResourceBuffer *_resourceBuffer;
    long long _resourceBufferStartingByteOffset;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)finishedUsingResourcBuffer:(id)arg1;
- (_Bool)getResourceBuffer:(id *)arg1 startingByteOffset:(long long *)arg2 loadingByteOffset:(long long)arg3 error:(id *)arg4;
- (id)initWithVideoURL:(id)arg1 resourceBuffer:(id)arg2 videoConfiguration:(id)arg3;

@end

@interface GADNAdVideoController : NSObject <GADNVideoControlling, GADNEventContextSource>
{
    GADNWebAdView *_adView;
    _Bool _videoOptionsCustomControlsRequested;
    _Bool _videoOptionsClickToExpandRequested;
    GADNVideoMetadataMonitor *_videoMetadataMonitor;
    GADNVideoOptions *_videoOptions;
    _Bool _videoMuted;
    _Bool _hasVideoContent;
    _Bool _customControlsEnabled;
    _Bool _clickToExpandEnabled;
    long long _videoPlaybackState;
    double _videoDuration;
    double _currentPlaybackTime;
    double _aspectRatio;
}

@property(nonatomic) _Bool clickToExpandEnabled; // @synthesize clickToExpandEnabled=_clickToExpandEnabled;
@property(nonatomic) _Bool customControlsEnabled; // @synthesize customControlsEnabled=_customControlsEnabled;
@property(nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(nonatomic) _Bool hasVideoContent; // @synthesize hasVideoContent=_hasVideoContent;
@property(nonatomic) _Bool videoMuted; // @synthesize videoMuted=_videoMuted;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(nonatomic) long long videoPlaybackState; // @synthesize videoPlaybackState=_videoPlaybackState;
- (void).cxx_destruct;
@property(readonly, nonatomic) GADNEventContext *context;
- (void)setInitialStateWithConfigurations:(id)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (id)initWithMessageSource:(id)arg1 webAdView:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAudioVideoManager : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableSet *_playerIDsPlayingVideo;
    NSMutableSet *_playerIDsPlayingSound;
    NSMutableSet *_playerIDsPlayingUserInitiatedSound;
    NSMapTable *_playerIDsToPlayer;
    _Bool _audioSessionIsApplicationManaged;
    id <GADAudioVideoManagerDelegate> _delegate;
}

@property(nonatomic) _Bool audioSessionIsApplicationManaged; // @synthesize audioSessionIsApplicationManaged=_audioSessionIsApplicationManaged;
@property(nonatomic) __weak id <GADAudioVideoManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)playerWillDealloc:(id)arg1;
- (void)player:(id)arg1 didChangeStateToPlaying:(_Bool)arg2 muted:(_Bool)arg3 userInitiated:(_Bool)arg4;
- (void)player:(id)arg1 willChangeStateToPlaying:(_Bool)arg2 muted:(_Bool)arg3 userInitiated:(_Bool)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)playerWithID:(id)arg1 didChangeStateToPlaying:(_Bool)arg2 muted:(_Bool)arg3 userInitiated:(_Bool)arg4;
- (void)playerWithID:(id)arg1 willChangeStateToPlaying:(_Bool)arg2 muted:(_Bool)arg3 userInitiated:(_Bool)arg4 queue:(id)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)updateAudioSessionAfterAllVideoStopPlayingSound;
- (id)init;

@end

@interface GADNJSCorePinger : NSObject <GADNJSCorePingerProtocol>
{
    GADNEventContext *_eventContext;
}

- (void).cxx_destruct;
- (void)pingURL:(id)arg1;
- (id)init;
- (id)initWithEventContext:(id)arg1;

@end

@interface GADNJSCoreJSContext : GADNJSContext <GADNEventContextSource>
{
    JSVirtualMachine *_virtualMachine;
    GADNEventContext *_eventContext;
    JSContext *_JSContext;
}

+ (void)initialize;
@property(readonly, nonatomic) JSContext *JSContext; // @synthesize JSContext=_JSContext;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_eventContext;
- (void).cxx_destruct;
- (id)functionWithName:(id)arg1;
- (void)asyncEvaluateFunction:(id)arg1 parameters:(id)arg2;
- (void)evaluateScript:(id)arg1;
- (id)initWithEventContext:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNExpandActionMonitorConfiguration : NSObject
{
    _Bool _customCloseBlocked;
    _Bool _analyticsLoggingEnabled;
    GADNClickProtection *_clickProtection;
    GADNFullScreenAdViewController *_presenter;
    GADNSwappableView *_swappableView;
    UIView *_referenceView;
}

@property(readonly, nonatomic) _Bool analyticsLoggingEnabled; // @synthesize analyticsLoggingEnabled=_analyticsLoggingEnabled;
@property(readonly, nonatomic) _Bool customCloseBlocked; // @synthesize customCloseBlocked=_customCloseBlocked;
@property(nonatomic) __weak UIView *referenceView; // @synthesize referenceView=_referenceView;
@property(readonly, nonatomic) __weak GADNSwappableView *swappableView; // @synthesize swappableView=_swappableView;
@property(readonly, nonatomic) __weak GADNFullScreenAdViewController *presenter; // @synthesize presenter=_presenter;
@property(readonly, nonatomic) GADNClickProtection *clickProtection; // @synthesize clickProtection=_clickProtection;
- (void).cxx_destruct;
- (void)setCustomCloseBlocked:(_Bool)arg1;
- (id)initWithSwappableView:(id)arg1 referenceView:(id)arg2 customCloseBlocked:(_Bool)arg3 clickProtection:(id)arg4 analyticsLoggingEnabled:(_Bool)arg5;
- (id)initWithPresenter:(id)arg1 referenceView:(id)arg2 customCloseBlocked:(_Bool)arg3 clickProtection:(id)arg4 analyticsLoggingEnabled:(_Bool)arg5;

@end

@interface GADNDelayedAdRenderingOptions : GADNAdLoaderOptions
{
    id <GADDelayedAdRenderingDelegate> _delegate;
}

@property(nonatomic) __weak id <GADDelayedAdRenderingDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNSDKCoreContext : NSObject
{
    GADNJSContext *_context;
    NSMutableArray *_monitors;
    GADNPersistentStateMonitor *_persistentStateMonitor;
}

+ (void)loadWithEventContext:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)updateSDKCoreConstants:(id)arg1;
- (void)requestSDKCoreConstantsUpdate;
- (void)reloadSavedState;
- (void)activate;
- (void)fetchRemoteConfigurationWithSignals:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)runGcacheWithArguments:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)notifyBlockedOpenActionWithParameters:(id)arg1;
- (void)adDictionaryFromSignals:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)normalizeAdBody:(id)arg1 headers:(id)arg2 statusCode:(long long)arg3 serverRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)setJSContext:(id)arg1;
@property(readonly, nonatomic) id messageSource;

@end

@interface GADNServerTransaction : NSObject
{
    GADNServerRequest *_serverRequest;
    GADNServerResponse *_serverResponse;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) GADNServerResponse *serverResponse;
@property(readonly, nonatomic) GADNServerRequest *serverRequest;
- (id)initWithServerRequest:(id)arg1 serverResponse:(id)arg2;

@end

@interface GADNMediationAdConfiguration : NSObject
{
    struct NSDictionary *_adConfiguration;
    GADNTargeting *_targeting;
    GADNMediationCredentials *_credentials;
    id <GADAdNetworkExtras> _extras;
    GADNRootViewControllerProvider *_viewControllerProvider;
}

@property(retain, nonatomic) GADNRootViewControllerProvider *viewControllerProvider; // @synthesize viewControllerProvider=_viewControllerProvider;
@property(readonly, nonatomic) id <GADAdNetworkExtras> extras; // @synthesize extras=_extras;
@property(readonly, nonatomic) GADNMediationCredentials *credentials; // @synthesize credentials=_credentials;
- (void).cxx_destruct;
@property(readonly, nonatomic) UIViewController *topViewController;
- (id)init;
- (id)userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude;
@property(readonly, nonatomic) double userLatitude;
@property(readonly, nonatomic) _Bool hasUserLocation;
@property(readonly, nonatomic) _Bool isTestRequest;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
@property(readonly, nonatomic) NSString *bidResponse;
- (id)initWithAdConfiguration:(struct NSDictionary *)arg1 targeting:(id)arg2 credentials:(id)arg3 extras:(id)arg4;

@end

@interface GADNShingleHashTuple : NSObject
{
    NSArray *_shingle;
    unsigned long long _hashValue;
}

@property(readonly, nonatomic) unsigned long long hashValue; // @synthesize hashValue=_hashValue;
@property(readonly, nonatomic) NSArray *shingle; // @synthesize shingle=_shingle;
- (void).cxx_destruct;
- (id)initWithShingle:(id)arg1 hashValue:(unsigned long long)arg2;

@end

@interface GADNDebugGestureMonitor : NSObject
{
    UIView *_view;
    GADNAd *_ad;
    NSString *_adUnitID;
    NSString *_debugDialogString;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 view:(id)arg3;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)presentDebugDialog;
- (id)initWithAd:(id)arg1 adView:(id)arg2 adUnitID:(id)arg3 debugDialogString:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNVideoPlayerGLView : UIView <GLKViewDelegate, GADNVideoPlayerViewLoading, GADNTouchHandling>
{
    GADNObserverCollection *_observers;
    GLKView *_glView;
    NSThread *_renderThread;
    CADisplayLink *_displayLink;
    AVPlayerItemVideoOutput *_videoOutput;
    GADNVideoPlayer *_currentPlayer;
    double _nextDisplayTime;
    _Bool _hasDisplayedAtLeastOnePixelBuffer;
    double _displayStartTimeIntervalSince1970;
    double _videoOutputEmptyTimeIntervalThreshold;
    EAGLContext *_context;
    GADNGLSphericalShader *_sphericalShader;
    _Bool _applicationActive;
    _Bool _isSubviewOfVisibleWindow;
    GADNBlockInvocation *_renderThreadBlockInvocation;
    CDUnknownBlockType _setupCompletionBlock;
    NSObject<OS_dispatch_queue> *_setupCompletionBlockQueue;
}

- (void).cxx_destruct;
- (void)setApplicationActive:(_Bool)arg1;
- (void)setApplicationActiveOnRenderThread:(id)arg1;
- (void)renderThreadWillMoveToWindow:(id)arg1;
- (void)willMoveToWindow:(id)arg1;
- (void)executeCompletionBlockWithError:(id)arg1;
- (void)glkView:(id)arg1 drawInRect:(struct CGRect)arg2;
- (void)resumeDisplayLink;
- (void)pauseDisplayLink;
- (void)unscheduleDisplayLink;
- (void)displayLinkCallback:(id)arg1;
- (void)layoutSubviews;
- (void)renderThreadResetVideoOutput;
- (_Bool)renderThreadSetUpWithError:(id *)arg1;
- (id)displayLinkCallbackBlockInvocation;
- (id)renderThreadBlockInvocationWithDisplayLink:(id)arg1;
- (void)stopRenderThread;
- (void)startRenderThread;
- (void)renderThreadUserTouchMovedByVector:(id)arg1;
- (void)handleUserTouchMovedByVector:(struct CGVector)arg1;
- (void)setUpWithPlayer:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNInlineMultipleNativeAdsRenderer : NSObject <GADNAdRendering>
{
    NSMutableDictionary *_renderingResults;
    NSObject<OS_dispatch_group> *_renderingGroup;
    NSMutableArray *_nativeJSContextMonitors;
    NSMutableSet *_renderers;
}

- (void).cxx_destruct;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNPlaceholderWebViewController : NSObject
{
}

- (id)initWithFrame:(struct CGRect)arg1 eventContext:(id)arg2 configuration:(id)arg3;

@end

@interface GADNWebViewController : NSObject <GADNEventContextSource>
{
    GADNEventContext *_context;
    id <GADNWebViewControllerDelegate> _delegate;
    GADNWebViewConfiguration *_configuration;
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (void)initialize;
@property(readonly, nonatomic) GADNWebViewConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <GADNWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) GADNEventContext *context;
- (id)initWithFrame:(struct CGRect)arg1 eventContext:(id)arg2 configuration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, copy, nonatomic) NSURL *mainDocumentURL; // @dynamic mainDocumentURL;
@property(readonly) Class superclass;
@property(readonly, nonatomic) UIView<GADNWebView> *webView; // @dynamic webView;

@end

@interface GADNRewardedEventMonitor : NSObject
{
    GADNAd *_ad;
    GADNObserverCollection *_observers;
    GADNAdReward *_reward;
    NSString *_userIdentifier;
    NSString *_customRewardString;
}

+ (void)addMonitorToAd:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 view:(id)arg3 userIdentifier:(id)arg4 customRewardString:(id)arg5;
- (void).cxx_destruct;
- (void)handleVideoCompleted;
- (void)handleVideoStarted;
- (void)handleRewardGranted:(id)arg1;
- (void)handleVideoAction:(id)arg1;
- (id)initWithAd:(id)arg1 reward:(id)arg2 view:(id)arg3 userIdentifier:(id)arg4 customRewardString:(id)arg5;

@end

@interface GADNDelayPageCloseMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNAd *_ad;
    GADNAd *_strongAd;
    long long _timeoutIdentifier;
}

- (void).cxx_destruct;
- (void)handleDelayPageCloseNotification:(id)arg1;
- (void)handleDelayPageCloseTimeout:(long long)arg1;
- (id)initWithAd:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNJSCoreTimers : NSObject <GADNJSCoreTimersProtocol>
{
    GADNJSCoreJSContext *_JSCoreJSContext;
    int _counter;
    NSMutableDictionary *_timers;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (void)initialize;
- (void).cxx_destruct;
- (id)getClearInterval;
- (id)getClearTimeout;
- (id)JSFunctionForClearTimer;
- (id)getSetInterval;
- (id)getSetTimeout;
- (id)JSFunctionForSetTimerWithRepeats:(_Bool)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithJSCoreJSContext:(id)arg1;

@end

@interface GADNNetworkUtilizationStatistics : NSObject
{
    struct NSDictionary *_transmittedByteCounts;
    struct NSDictionary *_receivedByteCounts;
}

+ (id)currentStatistics;
@property(readonly, nonatomic) NSDictionary *receivedByteCounts; // @synthesize receivedByteCounts=_receivedByteCounts;
@property(readonly, nonatomic) NSDictionary *transmittedByteCounts; // @synthesize transmittedByteCounts=_transmittedByteCounts;
- (void).cxx_destruct;
- (id)minusStatistics:(id)arg1;
- (id)plusStatistics:(id)arg1;
- (id)updatedStatistics;
- (id)init;
- (id)initWithTransmittedByteCounts:(struct NSDictionary *)arg1 receivedByteCounts:(struct NSDictionary *)arg2;

@end

@interface GADNBannerAd : GADNAd
{
    NSString *_adNetworkClassName;
    UIView *_adView;
    GADNAdVideoController *_videoController;
}

@property(readonly, nonatomic) GADNAdVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) UIView *adView; // @synthesize adView=_adView;
@property(readonly, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
- (void).cxx_destruct;
- (void)dealloc;
- (id)initWithContext:(id)arg1 adView:(id)arg2 adNetworkClassName:(id)arg3 videoController:(id)arg4;

@end

@interface GADNSQLStorage : NSObject
{
    struct sqlite3 *_database;
    NSMutableDictionary *_values;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
    NSMutableDictionary *_valuesToWrite;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)writeUpdatedValues;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (_Bool)openDatabaseAtURL:(id)arg1;
- (void)loadDatabaseValues;
- (void)dealloc;
- (id)init;

@end

@interface GADNMuteThisAdReason : NSObject
{
    NSString *_reasonDescription;
    NSURL *_muteThisAdURL;
}

@property(readonly, nonatomic) NSURL *muteThisAdURL; // @synthesize muteThisAdURL=_muteThisAdURL;
@property(readonly, nonatomic) NSString *reasonDescription; // @synthesize reasonDescription=_reasonDescription;
- (void).cxx_destruct;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADNSignals : NSObject
{
    NSMutableDictionary *_signalSources;
    NSMutableArray *_mainQueueSignalUpdateBlocks;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)runMainQueueSignalUpdateBlocks;
- (void)updatedSignalsWithSignalSources:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updatedSignalsWithKeys:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createSignalDictionaryWithTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)dictionaryWithSignals:(id)arg1;
- (id)init;

@end

@interface GADNNativeExpressAdView : UIView
{
    _Bool _autoloadEnabled;
    GADNVideoController *_videoController;
    NSString *_adUnitID;
    UIViewController *_rootViewController;
    id <GADNativeExpressAdViewDelegate> _delegate;
    NSString *_adNetworkClassName;
    struct GADNAdSize _adSize;
}

@property(readonly, nonatomic) __weak NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADNativeExpressAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(readonly, nonatomic) GADNVideoController *videoController; // @synthesize videoController=_videoController;
- (void).cxx_destruct;
- (void)setAdOptions:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)initWithAdSize:(struct GADNAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADNAdSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADNAdSize)arg2;

@end

@interface GADNBlockSignalSource : NSObject <GADNSignalSource>
{
    NSObject<OS_dispatch_queue> *_queue;
    CDUnknownBlockType _signalBlock;
}

- (void).cxx_destruct;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
- (id)initWithQueue:(id)arg1 signalBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeCustomTemplateAd : GADNNativeAd
{
    GADNObserverCollection *_observers;
    GADNVideoController *_videoController;
    GADNMediaView *_mediaView;
    CDUnknownBlockType _customClickHandler;
    CDUnknownBlockType _deprecatedCustomClickHandler;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)handleNativeAdCustomClick:(id)arg1;
@property(copy) CDUnknownBlockType customClickHandler;
- (void)recordImpression;
- (void)performClickOnAssetWithKey:(id)arg1 customClickHandler:(CDUnknownBlockType)arg2;
- (void)performClickOnAssetWithKey:(id)arg1;
@property(readonly, nonatomic) NSArray *availableAssetKeys;
@property(readonly, nonatomic) GADNVideoController *videoController;
@property(readonly, nonatomic) GADNMediaView *mediaView;
- (id)adType;
@property(readonly, nonatomic) NSString *templateID;
- (id)stringForKey:(id)arg1;
- (id)imageForKey:(id)arg1;
- (id)description;
- (id)initWithInternalNativeAd:(id)arg1;

@end

@interface GADNVideoPlayerView : UIView <GADNVideoPlayerViewLoading>
{
    GADNVideoPlayer *_player;
    AVPlayerLayer *_playerLayer;
}

- (void).cxx_destruct;
- (void)setFrame:(struct CGRect)arg1;
- (void)setUpWithPlayer:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNAdLoaderOptions : NSObject <NSCopying>
{
}

- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNInAppPurchaseTransactionReporter : NSObject
{
    _Bool _reportingEnabled;
    _Bool _wasDisabled;
}

+ (id)sharedInstance;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)reportTransactionInformationArray:(id)arg1;
@property(readonly, nonatomic) _Bool shouldBeEnabled;
- (void)disableReporting;
- (void)enableReporting;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMainWindowView : UIView
{
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)moveToMainWindow;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)didMoveToWindow;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADNNativeContentAdView : UIView <GADNNativeAdViewOverlayProtocol, GADNEventContextSource>
{
    GADNNativeContentAd *_nativeContentAd;
    GADNOverlayView *_overlayView;
    GADNNativeAssetViewTracker *_assetViewTracker;
    NSArray *_constraints;
    GADNEventContext *_context;
    UIView *_headlineView;
    UIView *_bodyView;
    UIView *_imageView;
    UIView *_logoView;
    UIView *_callToActionView;
    UIView *_advertiserView;
    GADNMediaView *_mediaView;
    GADNAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADNAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADNMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *logoView; // @synthesize logoView=_logoView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
@property(readonly, nonatomic) GADNEventContext *context; // @synthesize context=_context;
- (void).cxx_destruct;
- (void)setOverlayView:(id)arg1;
- (void)setConstraints:(id)arg1;
- (void)orderViews;
- (void)updateAdChoicesView;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADNNativeContentAd *nativeContentAd;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNetworkVideoPlayerItem : NSObject <GADNAVPlayerItemProvider>
{
    AVPlayerItem *_playerItem;
    NSURL *_videoURL;
}

- (void).cxx_destruct;
- (id)videoURL;
- (id)playerItem;
- (id)initWithVideoURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNContentHashingController : NSObject <GADNSignalSource, GADNSignal>
{
    GADNContentQueue *_contentQueue;
    GADNScheduler *_scheduler;
    NSObject<OS_dispatch_queue> *_serialQueue;
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (void)getSignalUpdateQueue:(id *)arg1 signalCreationBlock:(CDUnknownBlockType *)arg2;
- (void)stopContentHashing;
- (void)startContentHashing;
- (id)fingerprintWithServedPenaltyDeduction;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNOperation : NSObject
{
    CDUnknownBlockType _operationBlock;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasStarted
    NSObject<OS_dispatch_group> *_completionGroup;
    id _result;
    NSError *_error;
    _Bool _timedOut;
    CDUnknownBlockType _completionBlock;
    double _timeout;
}

@property(readonly, nonatomic) _Bool timedOut; // @synthesize timedOut=_timedOut;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (id)resultAfterWaitingWithError:(id *)arg1;
- (void)waitForCompletion;
- (void)start;
- (void)dealloc;
- (id)init;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface GADNJSContextController : NSObject
{
    GADNSDKCoreContext *_activeSDKCoreContext;
    GADNSDKCoreContext *_nextSDKCoreContext;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableArray *_SDKCoreLoadCompletionHandlers;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _SDKCoreContextLoadInProgress
    GADNObserverCollection *_SDKCoreObservers;
    GADNObserverCollection *_observers;
    NSMutableDictionary *_SDKCoreContextReferencedIDs;
    _Bool _activeViewContextLoadInProgress;
    NSMutableArray *_activeViewLoadCompletionHandlers;
    double _lastSDKCoreRetryTime;
    long long _consecutiveSDKCoreTimeouts;
    GADNActiveViewContext *_activeViewContext;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) GADNActiveViewContext *activeViewContext; // @synthesize activeViewContext=_activeViewContext;
- (void).cxx_destruct;
- (void)setActiveViewContext:(id)arg1;
- (void)refreshActiveViewContext;
- (void)asyncActiveViewContext:(CDUnknownBlockType)arg1;
- (void)handleRefreshAction:(id)arg1;
- (void)refreshSDKCoreContext;
- (void)asyncSDKCoreContext:(CDUnknownBlockType)arg1;
- (void)setSDKCoreContext:(id)arg1;
- (id)activeSDKCoreContext;
- (void)updateActiveSDKCoreContext;
- (void)handleSDKCoreProcessDidTerminate:(id)arg1;
- (void)buildAdURLDidTimeOut:(id)arg1;
- (void)buildAdURLDidComplete;
@property(readonly, nonatomic) GADNSDKCoreContext *SDKCoreContext;
- (id)init;

@end

@interface GADNAssetLoadingVideoPlayerItem : NSObject <GADNAVPlayerItemProvider, AVAssetResourceLoaderDelegate>
{
    NSURL *_videoURL;
    GADNVideoAssetLoader *_assetLoader;
    GADNVideoConfiguration *_videoConfiguration;
    AVPlayerItem *_playerItem;
    NSTimer *_playerItemCheckSourceTimer;
    _Bool _loadingEnabled;
    AVAssetResourceLoadingRequest *_loadingRequest;
    GADNResourceBuffer *_resourceBuffer;
    long long _resourceBufferStartingByteOffset;
    GADNVideoPlayer *_player;
    id _playbackProgressObserver;
    float _videoBitRateInBitsPerSecond;
    double _playerItemCachingStartTimeInterval;
    double _playerItemCurrentTimeInterval;
    long long _loadedContentSizeWithNoBufferUpdate;
    long long _numberOfFailedResourceBuffer;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (_Bool)loadDataRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)loadContentRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)prepareForLoadingByteOffset:(long long)arg1;
- (void)processLoadingRequest;
- (void)handlePlayerItemUpdates;
- (void)loadPlayerItemData;
- (void)stopPlayerItemCheckSourceTimer;
- (void)startPlayerItemCheckSourceTimer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)playerItem;
- (id)videoURL;
- (void)setPlayer:(id)arg1;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1 assetLoader:(id)arg2 videoConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNNativeAdMediaAdLoaderOptions : GADNAdLoaderOptions
{
    long long _mediaAspectRatio;
}

@property(nonatomic) long long mediaAspectRatio; // @synthesize mediaAspectRatio=_mediaAspectRatio;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNStatelessActionHandler : NSObject
{
    GADNObserverCollection *_observers;
    NSOperationQueue *_observationQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleTouchAction:(id)arg1;
- (void)handleLogMessageAction:(id)arg1;
- (void)handlePingURLAction:(id)arg1;
- (id)init;

@end

@interface GADNMediationCredentials : NSObject
{
    NSDictionary *_settings;
    long long _format;
}

@property(readonly, nonatomic) long long format; // @synthesize format=_format;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAdFormat:(long long)arg1 credentials:(id)arg2;

@end

@interface GADNMediationServerConfiguration : NSObject
{
    NSMutableSet *_credentials;
}

- (void).cxx_destruct;
- (void)addMediationCredentials:(id)arg1;
@property(readonly, nonatomic) NSArray *credentials;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADNWKScriptMessageHandler : NSObject
{
    GADNWebKitWebViewController *_webViewController;
}

- (void).cxx_destruct;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (id)initWithWebViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNWebKitWebViewController : GADNWebViewController
{
    WKWebView *_webView;
    GADNWebViewConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURL *_lastMainDocumentURL;
    CDUnknownBlockType _completionHandler;
}

+ (_Bool)isAvailable;
+ (void)initialize;
- (void).cxx_destruct;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)didFinishLoadCompletelyWithError:(id)arg1;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)asyncEvaluateJavaScriptFromString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)loadRequest:(id)arg1;
- (void)resetLoadState;
- (void)loadDynamicContentSize;
- (void)loadViewport;
- (void)loadMRAID:(id)arg1;
- (void)addUserScript:(id)arg1 injectionTime:(long long)arg2 forMainFrameOnly:(_Bool)arg3;
- (void)updateLastMainDocumentURL:(id)arg1;
- (id)mainDocumentURL;
- (id)configuration;
- (id)webView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 eventContext:(id)arg2 configuration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNStubsForFIRAnalytics : NSObject
{
    NSString *_googleAppID;
    NSString *_analyticsAppID;
    NSString *_appInstanceID;
    NSString *_adEventID;
    NSString *_origin;
}

@property(readonly, copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(readonly, copy, nonatomic) NSString *adEventID; // @synthesize adEventID=_adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID; // @synthesize appInstanceID=_appInstanceID;
@property(readonly, copy, nonatomic) NSString *analyticsAppID; // @synthesize analyticsAppID=_analyticsAppID;
@property(readonly, copy, nonatomic) NSString *googleAppID; // @synthesize googleAppID=_googleAppID;
- (void).cxx_destruct;
- (void)setAnalyticsEnabled:(_Bool)arg1;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;

@end

@interface GADNStubsForAPMAnalytics : NSObject
{
}

+ (void)startWithAppID:(id)arg1 origin:(id)arg2 options:(id)arg3;

@end

@interface GADNAnalytics : NSObject
{
    id _adExposureReporter;
    id _analyticsIdentifiers;
    id _analytics;
    id _screenViewReporter;
    // Error parsing type: AB, name: _analyticsEnabled
    NSOperationQueue *_operationQueue;
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateAnalyticsEnabled;
- (void)startAnalyticsEnabledMonitoring;
- (_Bool)analyticsEnabled;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logEventWithName:(id)arg1 adEventID:(id)arg2 parameters:(id)arg3;
- (id)appIDOrigin;
- (id)adEventID;
- (id)appInstanceID;
- (id)googleAppID;
- (_Bool)validateAnalytics;
- (id)initWithAPMFramework;
- (id)initWithFIRFramework;
- (void)startAppMeasurement;

@end

@interface GADNViewHierarchyTraverser : NSObject
{
    _Bool _traversing;
    long long _sequenceNumber;
    NSObject<OS_dispatch_queue> *_SDKLowPrioritySerialQueue;
}

- (void).cxx_destruct;
- (void)setTraversing:(_Bool)arg1;
- (void)traverseView:(id)arg1 traversalBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADNOrientationMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNWebAdView *_adView;
    GADNFullScreenAdViewController *_viewController;
    _Bool _orientationNotifiedToTheAdViewAtLeastOnce;
    long long _lastOrientation;
}

- (void).cxx_destruct;
- (void)handleOrientationDidChangeNotification:(long long)arg1;
- (void)handleForceOrientationAction:(id)arg1;
- (id)initWithAdView:(id)arg1 viewController:(id)arg2;

@end

@interface GADNJSCoreLocalStorage : NSObject <GADNJSCoreLocalStorageProtocol>
{
}

- (void)clear;
- (void)removeItemForKey:(id)arg1;
- (void)setItemForKey:(id)arg1 item:(id)arg2;
- (id)itemForKey:(id)arg1;

@end

@interface GADNBannerSignalConfiguration : GADNSignalConfiguration
{
    struct GADNAdSize _adSize;
}

@property(nonatomic) struct GADNAdSize adSize; // @synthesize adSize=_adSize;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithAdUnitID:(id)arg1 adSize:(struct GADNAdSize)arg2;

@end

@interface GADNWebViewControllerStash : NSObject
{
    NSMutableSet *_webViewControllers;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)webViewConfigurationForMainDocumentURL:(id)arg1 context:(id *)arg2;
- (void)removeWebViewController:(id)arg1;
- (void)addWebViewController:(id)arg1;
- (id)init;

@end

@interface GADNSearchRequest : GADNRequest
{
    NSString *_query;
    UIColor *_backgroundColor;
    UIColor *_gradientFrom;
    UIColor *_gradientTo;
    UIColor *_headerColor;
    UIColor *_descriptionTextColor;
    UIColor *_anchorTextColor;
    NSString *_fontFamily;
    unsigned long long _headerTextSize;
    UIColor *_borderColor;
    unsigned long long _borderType;
    unsigned long long _borderThickness;
    NSString *_customChannels;
    unsigned long long _callButtonColor;
}

@property(nonatomic) unsigned long long callButtonColor; // @synthesize callButtonColor=_callButtonColor;
@property(copy, nonatomic) NSString *customChannels; // @synthesize customChannels=_customChannels;
@property(nonatomic) unsigned long long borderThickness; // @synthesize borderThickness=_borderThickness;
@property(nonatomic) unsigned long long borderType; // @synthesize borderType=_borderType;
@property(copy, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) unsigned long long headerTextSize; // @synthesize headerTextSize=_headerTextSize;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(copy, nonatomic) UIColor *anchorTextColor; // @synthesize anchorTextColor=_anchorTextColor;
@property(copy, nonatomic) UIColor *descriptionTextColor; // @synthesize descriptionTextColor=_descriptionTextColor;
@property(copy, nonatomic) UIColor *headerColor; // @synthesize headerColor=_headerColor;
@property(readonly, copy, nonatomic) UIColor *gradientTo; // @synthesize gradientTo=_gradientTo;
@property(readonly, copy, nonatomic) UIColor *gradientFrom; // @synthesize gradientFrom=_gradientFrom;
@property(readonly, copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (id)additionalSignals;
- (void)setBackgroundGradientFrom:(id)arg1 toColor:(id)arg2;
- (void)setBackgroundSolid:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADNNativeAppInstallAd : GADNNativeAd
{
    GADNVideoController *_videoController;
}

- (void).cxx_destruct;
- (void)unregisterAdView;
- (void)updateMediaView:(id)arg1;
- (void)updateAdChoicesView:(id)arg1;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adType;
- (id)adChoicesIcon;
@property(readonly, nonatomic) GADNVideoController *videoController;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *price;
@property(readonly, copy, nonatomic) NSString *store;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, nonatomic) GADNNativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, copy, nonatomic) NSString *headline;

@end

@interface GADNServerRequest : NSObject <GADNEventContextSource>
{
    GADNEventContext *_context;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSDictionary *_RTBAdapters;
    GADNServerRequest *_parentServerRequest;
    GADNTargeting *_targeting;
    NSURLRequest *_URLRequest;
    NSURL *_baseURL;
    NSDictionary *_signals;
}

@property(readonly, copy, nonatomic) NSDictionary *signals; // @synthesize signals=_signals;
@property(copy, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(copy, nonatomic) NSURLRequest *URLRequest; // @synthesize URLRequest=_URLRequest;
@property(retain, nonatomic) GADNTargeting *targeting; // @synthesize targeting=_targeting;
@property(retain, nonatomic) GADNServerRequest *parentServerRequest; // @synthesize parentServerRequest=_parentServerRequest;
- (void).cxx_destruct;
- (_Bool)updateAdReferences:(id *)arg1;
- (void)updateSignals;
@property(readonly, nonatomic) NSDictionary *RTBAdapters;
- (void)clearRTBAdapters;
- (void)updateRTBAdapters;
- (id)initWithContext:(id)arg1;
@property(readonly, nonatomic) GADNEventContext *context;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNStatusBarMonitor : NSObject
{
    UIViewController *_viewController;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)updateStatusBar;
- (id)initWithViewController:(id)arg1;

@end

@interface GADNOnePixelImpressionMonitor : NSObject
{
    GADNObserverCollection *_observers;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _didPostImpression
}

- (void).cxx_destruct;
- (void)postImpressionNotificationForAd:(id)arg1;
- (id)initWithAd:(id)arg1;

@end

@interface GADNStaticSignal : NSObject <GADNSignal>
{
    NSDictionary *_dictionary;
}

- (void).cxx_destruct;
- (void)addSignalEntriesToMutableDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediationRewardedAdRenderer : NSObject <GADNAdPresenting, GADNAdRendering, GADMediationRewardedAdEventDelegate>
{
    GADNInterstitialAd *_rewardedAd;
    id <GADMediationRewardedAd> _mediationRewardedAd;
    CDUnknownBlockType _renderCompletionHandler;
    NSDictionary *_rewardGrantedUserInfo;
    GADNMediationRewardedAdConfiguration *_mediatedConfiguration;
    GADNTargeting *_targeting;
    GADNEventContext *_context;
    struct NSDictionary *_adConfiguration;
    Class _adapterClass;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (id)underAgeOfConsent;
- (id)maxAdContentRating;
- (_Bool)adMuted;
- (float)adVolume;
- (id)userKeywords;
- (id)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (_Bool)userHasLocation;
- (id)userBirthday;
- (long long)userGender;
- (id)childDirectedTreatment;
- (id)networkExtras;
- (_Bool)testMode;
- (id)credentials;
- (id)publisherId;
- (void)willDismissFullScreenView;
- (void)reportImpression;
- (void)didEndVideo;
- (void)didStartVideo;
- (void)reportClick;
- (void)didRewardUserWithReward:(id)arg1;
- (void)didDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)didFailToPresentWithError:(id)arg1;
- (void)rewardedAdDidFailToLoadWithError:(id)arg1;
- (void)rewardedAdDidLoad:(id)arg1;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)viewControllerForPresentingModalView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNScreenNameReporter : NSObject
{
    GADNObserverCollection *_observers;
    _Bool _hasSetScreenName;
    NSString *_adScreenName;
    NSString *_previousScreenName;
    NSString *_previousScreenClass;
}

- (void).cxx_destruct;
- (void)setScreenName;
- (id)initWithPresenter:(id)arg1 adScreenName:(id)arg2;

@end

@interface GADNMediatedAdRenderer : NSObject <GADNAdRendering, GADMAdNetworkConnector>
{
    GADNServerTransaction *_transaction;
    struct NSDictionary *_adConfiguration;
    id <GADMAdNetworkAdapter> _adapter;
}

- (void).cxx_destruct;
- (void)adapter:(id)arg1 clickDidOccurInBanner:(id)arg2;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapter:(id)arg1 didReceiveInterstitial:(id)arg2;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (id)viewControllerForPresentingModalView;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (_Bool)adMuted;
- (float)adVolume;
@property(readonly, nonatomic) NSArray *userKeywords;
@property(readonly, nonatomic) NSString *userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude;
@property(readonly, nonatomic) double userLatitude;
@property(readonly, nonatomic) _Bool userHasLocation;
@property(readonly, nonatomic) NSDate *userBirthday;
@property(readonly, nonatomic) long long userGender;
@property(readonly, nonatomic) NSNumber *underAgeOfConsent;
@property(readonly, nonatomic) NSString *maxAdContentRating;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
@property(readonly, nonatomic) id <GADAdNetworkExtras> networkExtras;
@property(readonly, nonatomic) _Bool testMode;
@property(readonly, copy, nonatomic) NSDictionary *credentials;
@property(readonly, copy, nonatomic) NSString *publisherId;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)dealloc;
- (Class)mainAdapterClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRemoteConfigurationSource : NSObject
{
    GADNObserverCollection *_observers;
    _Bool _isConfigurationUpdatePublisherInitiated;
    _Bool _adMobAppIDChanged;
    _Bool _refreshIsInProgress;
    NSDate *_lastConfigurationRefreshTimestamp;
    _Bool _remoteConfigRefreshedSinceAppStart;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _didRefreshSinceAppStart;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool didRefreshSinceAppStart; // @synthesize didRefreshSinceAppStart=_didRefreshSinceAppStart;
- (void).cxx_destruct;
- (void)processRemoteConfigurationResult:(id)arg1 error:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)refreshWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)refreshIfNeeded;
- (void)refresh;
- (void)refreshFromPublisherRequest;
- (id)init;

@end

@interface DFPNRequest : GADNRequest
{
}


// Remaining properties
@property(copy, nonatomic) NSArray *categoryExclusions; // @dynamic categoryExclusions;
@property(copy, nonatomic) NSDictionary *customTargeting; // @dynamic customTargeting;
@property(copy, nonatomic) NSString *publisherProvidedID; // @dynamic publisherProvidedID;
@end

@interface GADNAdSource : NSObject
{
    // Error parsing type: AB, name: _invalidated
}

- (void)asyncLoadAdWithServerRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadAdWithTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)callCompletionHandlerWithInvalidatedError:(CDUnknownBlockType)arg1;
- (void)renderServerTransactions:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (_Bool)invalidated;
- (void)invalidateAndCancel;

@end

@interface GADNRewardedAd : NSObject
{
    GADNInterstitialAd *_rewardedAd;
    GADNAdSource *_adSource;
    _Bool _requestInProgress;
    GADNObserverCollection *_intermissionObservers;
    GADNObserverCollection *_rewardedObservers;
    _Bool _isAdPresenting;
    id <GADRewardedAdDelegate> _delegate;
    _Bool _hasBeenUsed;
    NSString *_adUnitID;
    GADNAdReward *_reward;
    GADNServerSideVerificationOptions *_serverSideVerificationOptions;
}

@property(copy, nonatomic) GADNServerSideVerificationOptions *serverSideVerificationOptions; // @synthesize serverSideVerificationOptions=_serverSideVerificationOptions;
@property(readonly, nonatomic) GADNAdReward *reward; // @synthesize reward=_reward;
@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)attachLifecycleEventObservers;
- (void)attachRewardedCallbackObservers;
- (id)adSource;
- (void)setRewardedAd:(id)arg1;
@property(readonly, nonatomic, getter=isReady) _Bool ready;
- (void)adPresentationDidFailWithError:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
- (void)presentFromRootViewController:(id)arg1 delegate:(id)arg2;
- (void)loadWithTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithAdUnitID:(id)arg1;

@end

@interface GADNSKStoreProductViewControllerDelegate : NSObject <SKStoreProductViewControllerDelegate>
{
}

+ (id)sharedInstance;
- (void)productViewControllerDidFinish:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNRTBAdapterManager : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableSet *_registeredClassNames;
    NSMutableSet *_setUpRTBClassNames;
    NSMutableDictionary *_adUnitToAdapterNames;
    GADNObserverCollection *_observers;
    NSMutableDictionary *_adapterNameToAdapterConfiguration;
    NSMutableDictionary *_mediationCredentials;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)credentialsForAdapterClass:(Class)arg1 adUnitID:(id)arg2;
- (id)registeredAdapterNamesForAdUnitID:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1 configuration:(id)arg2;
- (void)updateAdapter:(Class)arg1 configuration:(id)arg2;
- (void)updateAdUnitAdapterConfiguration:(id)arg1;
- (void)updateRTBAdapters;
- (id)init;

@end

@interface GADNUIWebViewDelegateProxy : NSObject
{
    id <UIWebViewDelegate> _webViewDelegate;
}

@property(nonatomic) __weak id <UIWebViewDelegate> webViewDelegate; // @synthesize webViewDelegate=_webViewDelegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)init;
- (id)initWithWebViewDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNMediationBannerAdRenderer : GADNMediatedAdRenderer
{
    GADNBannerAd *_bannerAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _clickEventReceived
    CDUnknownBlockType _renderCompletionHandler;
    GADNCroppingAdView *_croppingView;
    GADNMediatedIntermission *_intermission;
}

- (void).cxx_destruct;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (id)viewControllerForPresentingModalView;
- (void)reportClick;
- (void)renderWithServerTransaction:(id)arg1 adConfiguration:(struct NSDictionary *)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)adapterCompletedLoadWithAdView:(id)arg1 error:(id)arg2;

@end

@interface GADNLocationService : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    GADNLocation *_location;
    NSObject<OS_dispatch_queue> *_locationDataQueue;
    _Bool _featureEnabled;
    _Bool _publisherAuthorized;
    GADNObserverCollection *_observers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)setPublisherAuthorized:(_Bool)arg1;
- (void)setFeatureEnabled:(_Bool)arg1;
- (void)updateLocation;
- (void)disable;
- (void)startUpdatingLocation;
@property(readonly, copy, nonatomic) GADNLocation *location;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNGCache : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableDictionary *_filePathsToResourceBuffers;
    GADNObserverCollection *_cacheMonitorObservers;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)cacheMonitorDidCompleteCaching:(id)arg1;
- (void)cacheMonitorDidStartCaching:(id)arg1;
- (void)loadGCacheURL:(id)arg1 withSDKCoreContext:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)loadGCacheURL:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADNMobileAds : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _applicationMuted;
    float _applicationVolume;
    NSString *_googleMobileAdsAppID;
    GADNAudioVideoManager *_audioVideoManager;
    GADNRequestConfiguration *_requestConfiguration;
}

+ (id)sharedInstance;
+ (void)enableBackgroundAdLoading;
+ (void)disableSDKCrashReporting;
+ (void)disableAutomatedInAppPurchaseReporting;
+ (void)configureWithApplicationID:(id)arg1;
+ (void)initialize;
@property(readonly, nonatomic) GADNRequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
@property(readonly, nonatomic) GADNAudioVideoManager *audioVideoManager; // @synthesize audioVideoManager=_audioVideoManager;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initializationStatus;
@property(readonly, copy, nonatomic) NSString *googleMobileAdsAppID;
- (void)setGoogleMobileAdsAppID:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1;
- (_Bool)isSDKVersionAtLeastMajor:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
@property(nonatomic) _Bool applicationMuted;
@property(nonatomic) float applicationVolume;
@property(readonly, nonatomic) NSString *extendedVersion;
@property(readonly, copy, nonatomic) NSString *version;
- (id)init;

@end

@interface GADNMRewardBasedVideoAdNetworkConnector : NSObject <GADMRewardBasedVideoAdNetworkConnector, GADNAdPresenting, GADNRewardedConnector>
{
    id <GADMRewardBasedVideoAdNetworkAdapter> _adapter;
    NSString *_adapterClassName;
    GADNInterstitialAd *_rewardedAd;
    GADNMediatedIntermission *_intermission;
    _Bool _firstRequestAfterSetup;
    GADNMediationRewardBasedVideoAdRenderer *_renderer;
    NSDictionary *_adConfiguration;
}

@property(nonatomic) _Bool firstRequestAfterSetup; // @synthesize firstRequestAfterSetup=_firstRequestAfterSetup;
@property(copy, nonatomic) NSDictionary *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(nonatomic) __weak GADNMediationRewardBasedVideoAdRenderer *renderer; // @synthesize renderer=_renderer;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool testMode;
@property(readonly, nonatomic) NSArray *userKeywords;
@property(readonly, nonatomic) NSString *userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude;
@property(readonly, nonatomic) double userLatitude;
- (id)userLocation;
@property(readonly, nonatomic) _Bool userHasLocation;
@property(readonly, nonatomic) NSDate *userBirthday;
@property(readonly, nonatomic) long long userGender;
@property(readonly, nonatomic) NSNumber *underAgeOfConsent;
@property(readonly, nonatomic) NSString *maxAdContentRating;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
@property(readonly, nonatomic) id <GADAdNetworkExtras> networkExtras;
@property(readonly, copy, nonatomic) NSDictionary *credentials;
@property(readonly, copy, nonatomic) NSString *publisherId;
- (void)presentFromViewController:(id)arg1;
- (_Bool)canPresent;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapter:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidCloseRewardBasedVideoAd:(id)arg1;
- (void)adapterDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterDidOpenRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadRewardBasedVideoAdwithError:(id)arg2;
- (void)adapterDidReceiveRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didFailToSetUpRewardBasedVideoAdWithError:(id)arg2;
- (void)adapterDidSetUpRewardBasedVideoAd:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adapterName;
- (void)requestRewardBasedVideoAd;
- (void)setRewardBasedVideoAd:(id)arg1;
- (void)setUpAdapter;
- (id)initWithAdNetworkConfiguration:(id)arg1 adapterClassName:(id)arg2 renderer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNWebViewConfiguration : NSObject <NSCopying>
{
    _Bool _mediaPlaybackRequiresUserAction;
    _Bool _GMSGScriptHandlerEnabled;
    _Bool _collectDynamicContentSize;
    _Bool _scrollEnabled;
    _Bool _resizeScriptEnabled;
    _Bool _loadOnIframeScriptEnabled;
    _Bool _networkNotificationsEnabled;
    _Bool _scalesPageToFit;
    unsigned long long _dataDetectorType;
    NSString *_webViewClassKey;
    NSString *_MRAIDURLString;
}

@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property(nonatomic) _Bool networkNotificationsEnabled; // @synthesize networkNotificationsEnabled=_networkNotificationsEnabled;
@property(readonly, nonatomic) _Bool loadOnIframeScriptEnabled; // @synthesize loadOnIframeScriptEnabled=_loadOnIframeScriptEnabled;
@property(readonly, nonatomic) _Bool resizeScriptEnabled; // @synthesize resizeScriptEnabled=_resizeScriptEnabled;
@property(nonatomic) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) _Bool collectDynamicContentSize; // @synthesize collectDynamicContentSize=_collectDynamicContentSize;
@property(copy, nonatomic) NSString *MRAIDURLString; // @synthesize MRAIDURLString=_MRAIDURLString;
@property(readonly, nonatomic) _Bool GMSGScriptHandlerEnabled; // @synthesize GMSGScriptHandlerEnabled=_GMSGScriptHandlerEnabled;
@property(copy, nonatomic) NSString *webViewClassKey; // @synthesize webViewClassKey=_webViewClassKey;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction; // @synthesize mediaPlaybackRequiresUserAction=_mediaPlaybackRequiresUserAction;
@property(nonatomic) unsigned long long dataDetectorType; // @synthesize dataDetectorType=_dataDetectorType;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithConfiguration:(id)arg1;

@end

@interface GADNLocation : NSObject <NSCopying>
{
    double _timestamp;
    NSDictionary *_dictionaryRepresentation;
    NSString *_locationDescription;
    double _latitude;
    double _longitude;
    double _accuracy;
}

@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) _Bool precise;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *locationDescription;
- (id)initWithDictionary:(id)arg1;
- (id)initWithLocationDescription:(id)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;

@end

@interface GADNAnimateViewActionMonitor : NSObject
{
    GADNObserverCollection *_observers;
    GADNWebAdView *_weakAdView;
}

- (void).cxx_destruct;
- (void)handleAnimations:(id)arg1 withDuration:(double)arg2 requestIdentifier:(id)arg3;
- (void)handleAnimationNotification:(id)arg1;
- (id)initWithWebAdView:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNUIKitWebViewController : GADNWebViewController
{
    UIWebView *_webView;
    GADNWebViewConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURL *_lastMainDocumentURL;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _shouldSetDataDetectorTypes
    CDUnknownBlockType _completionHandler;
}

+ (_Bool)isAvailable;
+ (void)initialize;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)didFinishLoadCompletelyWithError:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadDynamicContentSize;
- (void)updateLastMainDocumentURL:(id)arg1;
- (void)asyncEvaluateJavaScriptFromString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)loadRequest:(id)arg1;
- (void)resetLoadState;
- (id)mainDocumentURL;
- (id)configuration;
- (id)webView;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 eventContext:(id)arg2 configuration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADNInterstitial : NSObject
{
    GADNInterstitialAd *_interstitialAd;
    GADNAdSource *_adSource;
    _Bool _requestInProgress;
    GADNObserverCollection *_adObservers;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_adNetworkClassName;
    GADNCorrelator *_correlator;
    GADNInterstitial *_retainCycle;
    unsigned int _lastRequestedCorrelationID;
    GADNTargeting *_refreshTargeting;
    _Bool _hasBeenUsed;
    NSString *_adUnitID;
    id <GADInterstitialDelegate> _delegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    id <GADAppEventDelegate> _appEventDelegate;
}

@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(readonly, nonatomic) _Bool hasBeenUsed; // @synthesize hasBeenUsed=_hasBeenUsed;
@property(nonatomic) __weak id <GADInterstitialDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)setAdUnitID:(id)arg1;
- (id)init;
- (void)attachLifecycleEventObservers;
- (void)adInvalidated;
- (id)adSource;
- (void)setInterstitialAd:(id)arg1;
@property(readonly, nonatomic) _Bool isReady;
- (void)adPresentationDidFail;
- (void)presentFromRootViewController:(id)arg1;
- (void)adLoadCompletedWithError:(id)arg1;
- (void)refreshAfterDelay;
- (_Bool)refreshAllowedWithRefreshAd:(id)arg1;
- (void)loadWithTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)updateTargeting:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadRequest:(id)arg1;
- (_Bool)shouldOverrideInProgressRequest;
- (void)setCorrelator:(id)arg1;
- (id)correlator;
- (void)setAdNetworkClassName:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
- (void)dealloc;
- (id)initWithAdUnitID:(id)arg1;

@end

@interface GADNClosePresenterActionMonitor : NSObject
{
    id <GADNPresenting> _presenter;
    GADNObserverCollection *_observers;
}

- (void).cxx_destruct;
- (void)handleCloseNotification;
- (id)initWithPresenter:(id)arg1 messageSource:(id)arg2;

@end

@interface GADNCroppingAdView : GADNView
{
    UIView *_view;
    id _messageSource;
    GADNObserverCollection *_observers;
    struct CGSize _contentSize;
}

@property(nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;
- (void).cxx_destruct;
- (void)updateAdSizeFromNotification:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)mediationBannerInnerRefreshWithView:(id)arg1;
- (void)setUpSubview:(id)arg1;
- (void)dealloc;
- (id)initWithView:(id)arg1 size:(struct CGSize)arg2 context:(id)arg3 messageSource:(id)arg4;

@end

@interface GADMRewardBasedVideoAdNetworkConnector : NSObject <GADMRewardBasedVideoAdNetworkConnector, GADOMediationAdRequestInternal, GADMediationRewardedAdEventDelegate>
{
    id <GADMRewardBasedVideoAdNetworkAdapter> _adapter;
    id <GADMediationAdapter> _rewardedAdAdapter;
    NSDictionary *_networkData;
    _Bool _isLocationShared;
    id <GADMediationRewardedAd> _mediationRewardedAd;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasReportedImpression
    GADOMConfig *_mediationConfig;
    GADOMAdNetworkConfig *_adNetworkConfig;
    NSArray *_adNetworkConfigsFromAppConfiguration;
    GADOAd *_ad;
    id <GADOMRewardBasedVideoAdConnectorDelegate> _delegate;
    GADORequest *_request;
}

@property(copy, nonatomic) GADORequest *request; // @synthesize request=_request;
@property(nonatomic) __weak id <GADOMRewardBasedVideoAdConnectorDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADOAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSArray *adNetworkConfigsFromAppConfiguration; // @synthesize adNetworkConfigsFromAppConfiguration=_adNetworkConfigsFromAppConfiguration;
@property(retain, nonatomic) GADOMAdNetworkConfig *adNetworkConfig; // @synthesize adNetworkConfig=_adNetworkConfig;
@property(retain, nonatomic) GADOMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
- (void).cxx_destruct;
- (id)userKeywords;
- (id)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (id)userLocation;
- (_Bool)userHasLocation;
- (id)userBirthday;
- (long long)userGender;
- (id)underAgeOfConsent;
- (id)maxAdContentRating;
- (id)childDirectedTreatment;
- (id)networkExtras;
- (_Bool)testMode;
- (id)credentials;
- (id)publisherId;
- (void)willDismissFullScreenView;
- (void)reportImpression;
- (void)didPauseVideo;
- (void)didEndVideo;
- (void)didStartVideo;
- (void)reportClick;
- (void)didRewardUserWithReward:(id)arg1;
- (void)didDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)didFailToPresentWithError:(id)arg1;
- (void)rewardedAdDidFailToLoadWithError:(id)arg1;
- (void)rewardedAdDidLoad;
- (void)adapter:(id)arg1 didReceiveAdMetadataChange:(id)arg2;
- (void)adapterDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidCloseRewardBasedVideoAd:(id)arg1;
- (void)adapterDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)adapterDidOpenRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapter:(id)arg1 didFailToLoadRewardBasedVideoAdwithError:(id)arg2;
- (void)adapterDidReceiveRewardBasedVideoAd:(id)arg1;
- (void)adapter:(id)arg1 didFailToSetUpRewardBasedVideoAdWithError:(id)arg2;
- (void)adapterDidSetUpRewardBasedVideoAd:(id)arg1;
- (id)userRequestAgent;
- (id)currentAdapterName;
- (id)adapterNames;
- (id)extras;
- (id)inlineAd;
- (void)pingVideoCompleteURLs;
- (void)pingFillURLsWithFillStatus:(id)arg1;
- (void)pingRewardedUserURLsWithReward:(id)arg1 userIdentifier:(id)arg2 customRewardString:(id)arg3;
- (void)pingVideoStartPlayingURLs;
- (void)pingImpressionURLs;
- (void)pingClickURLs;
- (void)pingURLs:(id)arg1 defaultTemplate:(id)arg2 fillStatus:(id)arg3 eventType:(id)arg4;
- (void)presentRewardBasedVideoAdFromRootViewController:(id)arg1;
- (void)stopLoadingRewardBasedVideoAd;
- (void)requestRewardBasedVideoAd;
- (void)setUpWithMultipleAdNetworkConfigs;
- (void)setUpWithAdNetworkConfig;
- (void)setUpAdapter;
- (void)askAdapterToStopBeingDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMAdapterInitializer : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADOInitializationStatus *_status;
    NSObject<OS_dispatch_group> *_completionGroup;
    NSDate *_startTimestamp;
    id _configurationObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) GADOInitializationStatus *status;
- (void)initializeAdaptersWithSettings:(id)arg1;
- (id)setUpOperationForAdapter:(id)arg1 data:(id)arg2;
- (Class)startableAdapterForName:(id)arg1;
- (void)fetchSettings;
- (void)adapterDidBecomeReady:(id)arg1;
- (void)updateDescription:(id)arg1 forAdapter:(id)arg2 includingLatency:(_Bool)arg3;
- (void)setState:(long long)arg1 description:(id)arg2 updateLatency:(_Bool)arg3 forAdapter:(id)arg4;
- (double)timeIntervalSinceInitializationStart;
- (id)init;

@end

@interface GADOGCacheURLLoader : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)requestGCacheURLLoad:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)prefetchGCacheURL:(id)arg1;
- (void)loadGCacheURL:(id)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface GADOActiveViewMonitor : NSObject <GADOViewMonitorDelegate, GADOViewBoundsMonitorDelegate>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADOViewMonitor *_viewMonitor;
    GADOViewBoundsMonitor *_scrollMonitor;
    id <GADOActiveViewMonitorDelegate> _delegate;
    struct CGRect _monitoredViewVisibleBounds;
    _Bool _monitoredViewVisible;
    NSString *_adFormat;
    NSDictionary *_activeViewConfiguration;
    _Bool _overlayShown;
    UIView *_monitoredView;
}

@property(readonly, nonatomic) __weak UIView *monitoredView; // @synthesize monitoredView=_monitoredView;
- (void).cxx_destruct;
- (void)viewBoundsChanged:(id)arg1;
- (void)viewMonitorDidRefresh:(id)arg1;
@property __weak id <GADOActiveViewMonitorDelegate> delegate;
- (id)activeViewScrollState;
- (id)activeViewStateWithID:(unsigned long long)arg1 isMRAIDEnabled:(_Bool)arg2 unloaded:(_Bool)arg3;
- (id)scrollableSuperviewBoundsForView:(id)arg1;
- (void)stopMonitoring;
- (void)startMonitoring;
- (void)sample;
- (void)handleOverlayHidden;
- (void)handleOverlayShown;
- (id)init;
- (id)initWithView:(id)arg1 adFormat:(id)arg2 isScrollAware:(_Bool)arg3 activeViewConfiguration:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInjectedSettings : NSObject
{
    NSMutableDictionary *_settings;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id _foregroundObserver;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)refresh;
- (void)addEntriesFromDictionary:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADOAdLoaderConfiguration : NSObject
{
    NSDictionary *_adClassRequestParameters;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADOAdConfiguration *_adConfiguration;
    NSSet *_adTypeClasses;
    NSSet *_adTypes;
}

@property(readonly, copy, nonatomic) NSSet *adTypes; // @synthesize adTypes=_adTypes;
@property(readonly, copy, nonatomic) NSSet *adTypeClasses; // @synthesize adTypeClasses=_adTypeClasses;
- (void).cxx_destruct;
@property(copy) NSDictionary *adClassRequestParameters;
- (id)requestParameters;
@property(readonly, copy, nonatomic) NSDictionary *options;
- (id)initWithAdTypes:(id)arg1 options:(id)arg2;

@end

@interface GADOActiveViewGMSGHandler : GADOGMSGHandler
{
    id <GADOActiveViewGMSGHandlerDelegate> _delegate;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADOActiveViewGMSGHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveActiveViewUntrackActiveViewNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveActiveViewTrackActiveViewNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveActiveViewVisibilityChangedNotification:(id)arg2;

@end

@interface GADMAdNetworkAdapter : NSObject
{
}

+ (_Bool)classImplementsCurrentAdapterAPI:(Class)arg1;
+ (_Bool)classIsAdapterClass:(Class)arg1;
+ (id)availableAdapterNamesInSet:(id)arg1;

@end

@interface GADOLocationService : NSObject <CLLocationManagerDelegate>
{
    CLLocationManager *_locationManager;
    GADOLocation *_location;
    NSObject<OS_dispatch_queue> *_locationDataQueue;
    _Bool _featureEnabled;
    _Bool _publisherAuthorized;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)setPublisherAuthorized:(_Bool)arg1;
- (void)setFeatureEnabled:(_Bool)arg1;
- (void)updateLocation;
- (void)disable;
- (void)startUpdatingLocation;
@property(readonly, copy, nonatomic) GADOLocation *location;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOTiming : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned long long _startTimestamp;
    unsigned long long _endTimestamp;
    _Bool _explicitEnd;
    NSString *_category;
}

@property(nonatomic) _Bool explicitEnd; // @synthesize explicitEnd=_explicitEnd;
@property(readonly, copy, nonatomic) NSString *category; // @synthesize category=_category;
- (void).cxx_destruct;
- (id)elapsedMillisecondsString;
- (unsigned long long)elapsedMilliseconds;
- (unsigned long long)endTimestamp;
- (unsigned long long)startTimestamp;
- (void)end;
- (void)start;
- (id)dictionaryRepresentation;
- (id)init;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithCategory:(id)arg1;

@end

@interface GADOPushTransitionView : UIView
{
    NSArray *_views;
    UIView *_clippingView;
    UIView *_currentView;
    unsigned long long _currentViewIndex;
    double _presentationDuration;
    double _animationDuration;
    long long _animationGroupIdentifier;
}

@property(readonly, nonatomic) long long animationGroupIdentifier; // @synthesize animationGroupIdentifier=_animationGroupIdentifier;
- (void).cxx_destruct;
- (void)animate;
- (void)dispatchAnimation;
- (void)setCurrentView:(id)arg1;
- (void)setPresentationDuration:(double)arg1;
- (void)setAnimationDuration:(double)arg1;
- (void)setViews:(id)arg1;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADODelayPageCloseGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 didReceiveDelayPageCloseAction:(id)arg2;

@end

@interface GADOAssetLoadingVideoPlayerItem : NSObject <AVAssetResourceLoaderDelegate>
{
    NSURL *_videoURL;
    GADOVideoAssetLoader *_assetLoader;
    GADOVideoConfiguration *_videoConfiguration;
    AVPlayerItem *_playerItem;
    NSTimer *_playerItemCheckSourceTimer;
    _Bool _loadingEnabled;
    AVAssetResourceLoadingRequest *_loadingRequest;
    GADOResourceCache *_resourceCache;
    long long _resourceCacheStartingByteOffset;
    GADOVideoPlayer *_player;
    id _playbackProgressObserver;
    float _videoBitRateInBitsPerSecond;
    double _playerItemCachingStartTimeInterval;
    double _playerItemCurrentTimeInterval;
    long long _loadedContentSizeWithNoBufferUpdate;
    long long _numberOfFailedResourceCache;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (_Bool)loadDataRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)loadContentRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)prepareForLoadingByteOffset:(long long)arg1;
- (void)processLoadingRequest;
- (void)handlePlayerItemUpdates;
- (void)loadPlayerItemData;
- (void)stopPlayerItemCheckSourceTimer;
- (void)startPlayerItemCheckSourceTimer;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)playerItem;
- (id)videoURL;
- (void)setPlayer:(id)arg1;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1 assetLoader:(id)arg2 videoConfiguration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADORTBAdapterManager : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableSet *_registeredClassNames;
    NSMutableSet *_setUpRTBClassNames;
    NSMutableDictionary *_adUnitToAdapterNames;
    NSMutableDictionary *_adapterNameToAdapterConfiguration;
    NSMutableDictionary *_mediationCredentials;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)credentialsForAdapterClass:(Class)arg1 adUnitID:(id)arg2;
- (id)registeredAdapterNamesForAdUnitID:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1 configuration:(id)arg2;
- (void)updateAdapter:(Class)arg1 configuration:(id)arg2;
- (void)updateAdUnitAdapterConfiguration:(id)arg1;
- (void)updateRTBAdapters;
- (void)dealloc;
- (id)init;

@end

@interface GADOMediationNativeAdVideoController : NSObject <GADOVideoControlling>
{
    id <NSObject> _mediatedNativeAdDidPlayVideoObserver;
    id <NSObject> _mediatedNativeAdDidPauseVideoObserver;
    id <NSObject> _mediatedNativeAdDidEndVideoPlaybackObserver;
    _Bool _hasVideoContent;
    long long _videoPlaybackState;
}

@property(nonatomic) long long videoPlaybackState; // @synthesize videoPlaybackState=_videoPlaybackState;
@property(nonatomic) _Bool hasVideoContent; // @synthesize hasVideoContent=_hasVideoContent;
- (void).cxx_destruct;
- (void)stopObservingMediatedNativeAd;
- (void)observeMediatedNativeAd:(id)arg1;
- (_Bool)clickToExpandEnabled;
- (_Bool)customControlsEnabled;
- (double)aspectRatio;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (void)dealloc;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1;
- (id)initWithMediatedNativeContentAd:(id)arg1;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOTimingManager : NSObject
{
    NSString *_identifier;
    NSString *_userDefaultsKey;
    NSMutableDictionary *_timings;
    NSObject<OS_dispatch_queue> *_savingQueue;
}

- (void).cxx_destruct;
- (void)removeTimingForCategory:(id)arg1;
- (id)timingForCategory:(id)arg1;
- (id)addTimingWithCategory:(id)arg1;
- (void)addTiming:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)savePersistentTimings;
- (void)loadPersistentTimings;
- (void)applicationWillTerminate:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *categories;
@property(readonly, copy, nonatomic) NSArray *timings;
- (void)dealloc;
- (id)init;

@end

@interface GADOUIKitWebViewDelegateProxy : NSObject
{
    id <UIWebViewDelegate> _webViewDelegate;
}

@property(nonatomic) __weak id <UIWebViewDelegate> webViewDelegate; // @synthesize webViewDelegate=_webViewDelegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)init;
- (id)initWithWebViewDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdPreprocessor : NSObject <GADOSlotAdLoadDelegate>
{
    GADOSlot *_slot;
    CDUnknownBlockType _completionHandler;
    NSString *_nativeAdJSON;
}

- (void).cxx_destruct;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)callAndClearCompletionHandlerWithAdConfiguration:(id)arg1 slot:(id)arg2 error:(id)arg3;
- (id)environmentJSONString;
- (void)handlePreprocessorNotification:(id)arg1;
- (void)handleJavaScriptLoadedNotification:(id)arg1;
- (void)preprocessNativeAdJSON:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)init;
- (id)initWithAdUnitID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOImpressionMonitor : NSObject <GADOViewMonitorDelegate>
{
    long long _impressionDefinition;
    UIView *_monitoredView;
    GADOViewMonitor *_viewMonitor;
    id <GADOImpressionMonitorDelegate> _delegate;
}

@property(nonatomic) __weak id <GADOImpressionMonitorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)viewMonitorDidRefresh:(id)arg1;
- (void)startImpressionDefinitionVisible;
- (void)startImpressionDefinitionAdLoaded;
- (void)startMonitoring;
- (void)stopMonitoring;
- (void)didMonitorImpression;
- (id)init;
- (id)initWithView:(id)arg1 impressionDefinition:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOContentQueue : NSObject
{
    NSMutableDictionary *_contents;
    NSMutableArray *_sequenceNumbers;
    unsigned long long _size;
}

- (void).cxx_destruct;
- (void)enqueueContent:(id)arg1;
- (void)deduplicate:(id)arg1;
- (id)contentWithSequenceNumber:(unsigned long long)arg1;
- (id)contentWithHighestScore;
- (id)init;
- (id)initWithQueueSize:(unsigned long long)arg1;

@end

@interface GADOSDKCoreController : NSObject <GADOSDKCoreWebViewNotification, GADOSDKCoreGMSGHandlerDelegate>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableArray *_pendingActiveWebViewLoadDelegates;
    NSMutableArray *_activeViewSDKCoreWebViews;
    unsigned long long _lastWebViewRefreshTimestamp;
    unsigned long long _requestID;
    unsigned long long _activeViewUnloadCacheMaxSize;
    _Bool _activeViewRequestedSDKCoreReload;
    GADOSDKCoreWebView *_activeViewSDKCoreWebView;
    _Bool _useNewWebViewsForActiveViewProcessing;
    double _activeViewSamplingInterval;
    _Bool _SDKCoreUpdateHandled;
    NSMutableDictionary *_pendingJavaScriptBlocks;
    NSMutableDictionary *_pendingJavaScriptBlockExecutionCompletionHandlers;
    NSMutableDictionary *_pendingJavaScriptCompletionHandlers;
    NSMutableDictionary *_pendingBuildAdURLDelegates;
    double _SDKCoreJavaScriptCompletionBlockTimeoutInterval;
    _Bool _hasReportedSDKCoreStateAtLeastOnce;
    _Bool _refreshPaused;
    NSString *_SDKCoreWebViewExperimentID;
    GADOWebViewConfiguration *_webViewConfiguration;
    NSArray *_activeViewMonitorRefreshIntervals;
    GADOSDKCoreWebView *_activeSDKCoreWebView;
}

+ (id)sharedInstance;
@property(retain, nonatomic) GADOSDKCoreWebView *activeSDKCoreWebView; // @synthesize activeSDKCoreWebView=_activeSDKCoreWebView;
@property(copy) NSArray *activeViewMonitorRefreshIntervals; // @synthesize activeViewMonitorRefreshIntervals=_activeViewMonitorRefreshIntervals;
- (void).cxx_destruct;
- (void)SDKCoreGMSGHandlerDidReceiveResumeSDKCoreRefreshAction:(id)arg1;
- (void)SDKCoreGMSGHandlerDidReceivePauseSDKCoreRefreshAction:(id)arg1;
- (void)SDKCoreGMSGHandler:(id)arg1 didReceiveResultActionWithRequestID:(id)arg2 arguments:(id)arg3;
- (void)SDKCoreGMSGHandlerDidReceiveSDKCoreUpdateNotification:(id)arg1;
- (void)SDKCoreGMSGHandler:(id)arg1 didReceiveInvalidAdWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 loadAdWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 loadAdURLWithRequestID:(id)arg2 parameters:(id)arg3;
- (void)SDKCoreGMSGHandler:(id)arg1 didLoadSDKConstants:(id)arg2;
- (void)handleSDKCoreUpdate;
- (void)executePendingJavaScriptBlocks;
- (id)nextRequestID;
@property double SDKCoreJavaScriptCompletionBlockTimeoutInterval;
@property double activeViewSamplingInterval;
- (void)observeSDKCoreWebViewForSDKCoreLoadRequestCompleted;
- (void)didFinishLoadingSDKCoreInSDKCoreWebView:(id)arg1;
- (void)asynchronouslyRequestURLForDelegate:(id)arg1;
- (void)mainThreadRequestURLForDelegate:(id)arg1 requestID:(id)arg2 backgroundParameters:(id)arg3;
- (id)adRequestParameterJSONFromParameters:(id)arg1;
- (void)refreshActiveWebViewSDKCore;
- (void)attemptToRefreshActiveWebViewSDKCore;
- (void)postJavaScriptNotification:(id)arg1 userInfo:(id)arg2;
- (void)executeExportedJavaScriptCommand:(id)arg1 parameters:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)executeJavaScriptFromBlockWhenReady:(CDUnknownBlockType)arg1 withCompletionBlock:(CDUnknownBlockType)arg2;
- (void)buildAdURL:(id)arg1;
- (void)finishedUsingSDKCoreWebViewForActiveViewProcessing:(id)arg1;
- (id)SDKCoreWebViewForActiveViewProcessing;
- (void)dealloc;
- (id)init;
- (void)setSDKCoreWebViewExperiment;
- (void)removeFinishedActiveViewWebViews;
- (void)cacheRunningActiveViewWebView:(id)arg1;

@end

@interface GADOAlert : NSObject <UIAlertViewDelegate, GADOIntermitting>
{
    GADOAlert *_retainCycle;
    NSMutableDictionary *_completionHandlersByButtonIndex;
    UIAlertView *_alertView;
    _Bool _alertShown;
    _Bool _alertTappedOrCancelled;
    GADOSlot *_slot;
    CDUnknownBlockType _presentationCompletionHandler;
    CDUnknownBlockType _dismissalCompletionHandler;
    GADOIntermission *_intermission;
    NSString *_cancelButtonTitle;
    CDUnknownBlockType _cancelHandler;
}

@property(copy, nonatomic) CDUnknownBlockType cancelHandler; // @synthesize cancelHandler=_cancelHandler;
@property(copy, nonatomic) NSString *cancelButtonTitle; // @synthesize cancelButtonTitle=_cancelButtonTitle;
@property(readonly, nonatomic) GADOIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertViewCancel:(id)arg1;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(id)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)addButtonWithTitle:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)initWithTitle:(id)arg1 message:(id)arg2 slot:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOClickTracker : NSObject
{
    unsigned long long _backgroundTaskID;
    _Bool _hasTracked;
    id <GADOClickTrackerDelegate> _delegate;
}

@property(readonly, nonatomic) _Bool hasTracked; // @synthesize hasTracked=_hasTracked;
@property(nonatomic) __weak id <GADOClickTrackerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)URLTrackingDidEnd:(id)arg1 success:(_Bool)arg2;
- (void)trackURL:(id)arg1;
- (void)reset;
- (void)dealloc;
- (id)init;

@end

@interface GADOAdMetadataGMSGHandler : GADOGMSGHandler
{
    GADOSlot *_slot;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didChangeAdMetadataNotification:(id)arg2;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADOInstreamAdConfiguration : NSObject
{
    GADORequest *_request;
    NSString *_adUnitID;
    long long _videoAspectRatio;
}

@property(readonly, nonatomic) long long videoAspectRatio; // @synthesize videoAspectRatio=_videoAspectRatio;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(copy, nonatomic) GADORequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)initWithAdUnitID:(id)arg1 videoAspectRatio:(long long)arg2;

@end

@interface GADOViewHierarchyTraverser : NSObject
{
    _Bool _traversing;
    long long _sequenceNumber;
    NSObject<OS_dispatch_queue> *_SDKLowPrioritySerialQueue;
}

- (void).cxx_destruct;
- (void)setTraversing:(_Bool)arg1;
- (void)traverseView:(id)arg1 traversalBlock:(CDUnknownBlockType)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADOMRTBBannerAdapter : NSObject <GADMediationBannerAdEventDelegate, GADMAdNetworkAdapter>
{
    GADMAdNetworkConnector *_connector;
    id <GADMediationBannerAd> _mediatedAd;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)didFailToPresentWithError:(id)arg1;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (_Bool)adapter:(id)arg1 completedLoadForConnector:(id)arg2 withMediatedAd:(id)arg3 error:(id)arg4;
- (void)changeAdSizeTo:(struct GADOAdSize)arg1;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOViewController : UIViewController <GADOIntermitting>
{
    id _appForegroundObserver;
    _Bool _viewDidAppear;
    GADOIntermission *_intermission;
    unsigned long long _supportedInterfaceOrientations;
    GADOSlot *_slot;
    GADOViewController *_retainCycle;
    id <GADOOverlayPresenting> _presenter;
    CDUnknownBlockType _dismissalCompletion;
}

@property(nonatomic) _Bool viewDidAppear; // @synthesize viewDidAppear=_viewDidAppear;
@property(copy, nonatomic) CDUnknownBlockType dismissalCompletion; // @synthesize dismissalCompletion=_dismissalCompletion;
@property(retain, nonatomic) id <GADOOverlayPresenting> presenter; // @synthesize presenter=_presenter;
@property(retain, nonatomic) GADOViewController *retainCycle; // @synthesize retainCycle=_retainCycle;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
@property(readonly, nonatomic) GADOIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)recordDismissal;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)viewChangedToOrientation:(long long)arg1;
- (_Bool)shouldAutorotate;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)finishDismissal;
- (void)finishAppearing;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)addToCurrentIntermission;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setSupportedOrientations:(unsigned long long)arg1;
- (void)dealloc;
- (void)commonInit;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADONativeAppInstallAd : GADONativeAd <GADMediatedNativeAppInstallAd, GADOLoadable, GADONativeAdMediaDisplaying, GADONativeAdSourceAttributing, GADOOverlayViewSource>
{
    _Bool _disableImageLoading;
    NSArray *_nativeAdImages;
    NSMutableArray *_availableNativeAdImages;
    GADOOverlayView *_overlayView;
    GADOVideoController *_videoController;
    GADONativeAdAttribution *_attribution;
    NSString *_headline;
    NSString *_callToAction;
    GADONativeAdImage *_icon;
    NSString *_body;
    NSString *_store;
    NSString *_price;
    NSDecimalNumber *_starRating;
    GADONativeAdImage *_adChoicesIcon;
    id <GADOMediaContentDisplaying> _mediaContent;
    UIView *_adChoicesContentView;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
@property(retain, nonatomic) UIView *adChoicesContentView; // @synthesize adChoicesContentView=_adChoicesContentView;
@property(retain, nonatomic) id <GADOMediaContentDisplaying> mediaContent; // @synthesize mediaContent=_mediaContent;
@property(readonly, nonatomic) GADONativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating; // @synthesize starRating=_starRating;
@property(readonly, copy, nonatomic) NSString *price; // @synthesize price=_price;
@property(readonly, copy, nonatomic) NSString *store; // @synthesize store=_store;
@property(readonly, copy, nonatomic) NSString *body; // @synthesize body=_body;
- (void).cxx_destruct;
- (id)overlayView;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSArray *images;
@property(readonly, nonatomic) GADONativeAdImage *icon;
@property(readonly, copy, nonatomic) NSString *callToAction;
@property(readonly, copy, nonatomic) NSString *headline;
- (id)requiredAssets;
- (void)unregisterAdView;
- (void)registerAdViewForUnifiedNativeAd:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (_Bool)canRegisterAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (void)setSlot:(id)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADONativeAppInstallAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOLogger : NSObject
{
}

+ (id)sharedInstance;
- (void)logPublicMessage:(id)arg1;
- (void)waitForLogging;
- (void)setLogLevelThreshold:(long long)arg1;

@end

@interface GADOUnifiedNativeAdView : UIView
{
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
    GADOUnifiedNativeAd *_nativeAd;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    UIView *_advertiserView;
    GADOMediaView *_mediaView;
    GADOAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADOAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADOMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
@property(retain, nonatomic) GADOUnifiedNativeAd *nativeAd; // @synthesize nativeAd=_nativeAd;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface DFPOBannerViewOptions : GADOAdLoaderOptions
{
    _Bool _enableManualImpressions;
    id <GADAppEventDelegate> _appEventDelegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
}

@property(nonatomic) _Bool enableManualImpressions; // @synthesize enableManualImpressions=_enableManualImpressions;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADOBrowserViewController : GADOViewController
{
    NSURL *_URLToLoad;
    NSURL *_referringURLToLoad;
    GADOAdViewDelegate *_adViewDelegate;
    GADOAdView *_adView;
    UIToolbar *_toolbar;
    UIBarButtonItem *_flexibleSpaceButton;
    UIBarButtonItem *_backButton;
    UIBarButtonItem *_forwardButton;
    UIBarButtonItem *_reloadButton;
    UIBarButtonItem *_safariButton;
    UIBarButtonItem *_doneButton;
    UIBarButtonItem *_spinnerContainingButton;
    UIActivityIndicatorView *_spinner;
}

@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIBarButtonItem *spinnerContainingButton; // @synthesize spinnerContainingButton=_spinnerContainingButton;
@property(retain, nonatomic) UIBarButtonItem *doneButton; // @synthesize doneButton=_doneButton;
@property(retain, nonatomic) UIBarButtonItem *safariButton; // @synthesize safariButton=_safariButton;
@property(retain, nonatomic) UIBarButtonItem *reloadButton; // @synthesize reloadButton=_reloadButton;
@property(retain, nonatomic) UIBarButtonItem *forwardButton; // @synthesize forwardButton=_forwardButton;
@property(retain, nonatomic) UIBarButtonItem *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) UIBarButtonItem *flexibleSpaceButton; // @synthesize flexibleSpaceButton=_flexibleSpaceButton;
@property(retain, nonatomic) UIToolbar *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) GADOAdView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) GADOAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(retain, nonatomic) NSURL *referringURLToLoad; // @synthesize referringURLToLoad=_referringURLToLoad;
@property(retain, nonatomic) NSURL *URLToLoad; // @synthesize URLToLoad=_URLToLoad;
- (void).cxx_destruct;
- (void)openInSafari;
- (void)reload;
- (void)stop;
- (void)forward;
- (void)back;
- (void)load:(id)arg1 referringURL:(id)arg2;
- (void)doneButtonPressed:(id)arg1;
- (void)refreshToolbar;
- (void)createToolbarButtons;
- (id)buttonWithImage:(id)arg1 name:(id)arg2 width:(long long)arg3 enabled:(_Bool)arg4 action:(SEL)arg5;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;

@end

@interface GADOSchedulerTask : NSObject
{
    CDUnknownBlockType _block;
    NSObject<OS_dispatch_queue> *_queue;
}

@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;

@end

@interface GADOScheduler : NSObject
{
    long long _taskID;
    NSMutableDictionary *_blocks;
    double _interval;
    NSTimer *_timer;
}

- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)executeBlocks;
- (void)unscheduleTaskWithID:(long long)arg1;
- (long long)taskIDScheduledOnQueue:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)description;
- (void)dealloc;
- (id)initWithInterval:(double)arg1;
- (id)init;

@end

@interface GADOCSITimeRecorder : NSObject
{
    NSMutableDictionary *_completedVariables;
    NSMutableDictionary *_ongoingVariables;
    NSMutableArray *_experimentIDs;
    NSMutableDictionary *_customizedParameters;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_action;
}

+ (double)currentTime;
@property(readonly, nonatomic) NSDictionary *customizedParameters; // @synthesize customizedParameters=_customizedParameters;
@property(readonly, nonatomic) NSArray *experimentIDs; // @synthesize experimentIDs=_experimentIDs;
@property(copy, nonatomic) NSString *action; // @synthesize action=_action;
- (void).cxx_destruct;
- (void)setCustomizedParameterValue:(id)arg1 forKey:(id)arg2;
- (void)removeExperimentID:(id)arg1;
- (void)addExperimentID:(id)arg1;
- (void)removeCompletedVariableForKey:(id)arg1;
- (void)addCompletedVariable:(id)arg1 forKey:(id)arg2;
- (void)addCompletedVariable:(id)arg1;
@property(readonly) NSDictionary *completedVariables;
@property(readonly) NSDictionary *ongoingVariables;
- (void)cancelTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)endTimingVariableWithName:(id)arg1 key:(id)arg2;
- (double)durationAfterCommonEndTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)startTimingVariableWithName:(id)arg1 key:(id)arg2;
- (void)cancelTimingVariableWithName:(id)arg1;
- (long long)durationAfterEndTimingVariableWithName:(id)arg1;
- (void)endTimingVariableWithName:(id)arg1;
- (void)startTimingVariableWithName:(id)arg1;
- (id)init;
- (id)initWithAction:(id)arg1;

@end

@interface GADOCharacterSets : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSCharacterSet *_characterDelimitedSet;
    NSCharacterSet *_spaceDelimitedSet;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCharacterSets;
@property(readonly, copy) NSCharacterSet *spaceDelimitedSet;
@property(readonly, copy) NSCharacterSet *characterDelimitedSet;
- (id)init;

@end

@interface GADONativeAdTapGestureRecognizer : UITapGestureRecognizer
{
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
}

@property(retain, nonatomic) GADONativeAdViewPolicy *nativeAdViewPolicy; // @synthesize nativeAdViewPolicy=_nativeAdViewPolicy;
- (void).cxx_destruct;

@end

@interface GADORequestError : NSError
{
}

@end

@interface GADOAdLoadResults : NSObject
{
    long long _requestedAdCount;
    long long _returnedAdCount;
    long long _nextIndex;
    NSMutableDictionary *_adLoadResults;
    GADOAdLoader *_adLoader;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)handleLoadResult:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)insertAdLoadResult:(id)arg1 atIndex:(long long)arg2;
- (void)setReturnedAdCount:(long long)arg1;
- (id)init;
- (id)initWithAdLoader:(id)arg1 requestedAdCount:(long long)arg2;

@end

@interface GADORewardBasedVideoAd : NSObject <GADOMRewardBasedVideoAdConnectorDelegate, GADOSDKCoreControllerDelegate, GADOAdFetcherDelegate, GADOInterstitialAdClickDelegate, GADOInterstitialRewardBasedVideoAdDelegate>
{
    GADOInterstitial *_interstitial;
    id _configurationObserver;
    long long _adRequestID;
    NSDictionary *_adMetadata;
    NSDictionary *_RTBAdapters;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _adBeingPresented;
    long long _setAdBeingPresentedCallCounter;
    _Bool _ready;
    _Bool _requestInProgress;
    _Bool _adUnitExposureBegan;
    id <GADRewardBasedVideoAdDelegate> _delegate;
    NSString *_adNetworkClassName;
    NSString *_userIdentifier;
    NSString *_customRewardString;
    GADORequest *_request;
    NSString *_adUnitID;
    NSString *_requestID;
    GADOAdFetcher *_adFetcher;
    GADOMConfig *_mediationConfig;
    NSMutableArray *_pendingAdNetworkConfigurations;
    NSMutableArray *_allocationIDs;
    GADOMAdNetworkConfig *_requestingConfiguration;
    GADMRewardBasedVideoAdNetworkConnector *_receivedConnector;
    NSMutableDictionary *_pendingSetUpConnectorsTimestamp;
    NSMutableDictionary *_connectors;
    GADOAd *_ad;
    GADOSlotStatistics *_adStatistics;
    id <GADORewardedAdInternalDelegate> _internalDelegate;
}

+ (id)sharedInstance;
@property(nonatomic) __weak id <GADORewardedAdInternalDelegate> internalDelegate; // @synthesize internalDelegate=_internalDelegate;
@property(nonatomic) _Bool adUnitExposureBegan; // @synthesize adUnitExposureBegan=_adUnitExposureBegan;
@property(readonly, nonatomic) GADOSlotStatistics *adStatistics; // @synthesize adStatistics=_adStatistics;
@property(retain, nonatomic) GADOAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSMutableDictionary *connectors; // @synthesize connectors=_connectors;
@property(retain, nonatomic) NSMutableDictionary *pendingSetUpConnectorsTimestamp; // @synthesize pendingSetUpConnectorsTimestamp=_pendingSetUpConnectorsTimestamp;
@property(retain, nonatomic) GADMRewardBasedVideoAdNetworkConnector *receivedConnector; // @synthesize receivedConnector=_receivedConnector;
@property(retain, nonatomic) GADOMAdNetworkConfig *requestingConfiguration; // @synthesize requestingConfiguration=_requestingConfiguration;
@property(retain, nonatomic) NSMutableArray *allocationIDs; // @synthesize allocationIDs=_allocationIDs;
@property(readonly, nonatomic) NSMutableArray *pendingAdNetworkConfigurations; // @synthesize pendingAdNetworkConfigurations=_pendingAdNetworkConfigurations;
@property(retain, nonatomic) GADOMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
@property(nonatomic) _Bool requestInProgress; // @synthesize requestInProgress=_requestInProgress;
@property(retain, nonatomic) GADOAdFetcher *adFetcher; // @synthesize adFetcher=_adFetcher;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(retain, nonatomic) GADORequest *request; // @synthesize request=_request;
@property(copy, nonatomic) NSString *customRewardString; // @synthesize customRewardString=_customRewardString;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(readonly, nonatomic, getter=isReady) _Bool ready; // @synthesize ready=_ready;
@property(nonatomic) __weak id <GADRewardBasedVideoAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setAdMetadata:(id)arg1;
- (id)adMetadata;
- (void)failedToLoadAdWithError:(id)arg1;
- (void)didFailToLoadWithError:(id)arg1;
- (void)adLoadedSuccessfully;
- (void)loadAd:(id)arg1;
- (void)presentFromRootViewController:(id)arg1;
- (void)setAdBeingPresentedWithTimeout;
- (void)loadRequest:(id)arg1 withAdUnitID:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)resetFillStatus;
- (void)mediation_connectorDidFailToReceiveAd:(id)arg1 withError:(id)arg2;
- (void)mediation_connectorDidReceiveAd:(id)arg1;
- (void)mediation_connectorWillStartRequestingAd;
- (void)mediation_adapterDidFailToSetUpWithNetworkConfig:(id)arg1;
- (void)connector:(id)arg1 didFailToPresentRewardedAdWithError:(id)arg2;
- (void)connector:(id)arg1 didReceiveAdMetadataChange:(id)arg2;
- (void)connectorDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)connectorWillLeaveApplication:(id)arg1;
- (void)connectorDidCloseRewardBasedVideoAd:(id)arg1;
- (void)connectorDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)connectorDidOpenRewardBasedVideoAd:(id)arg1;
- (void)connector:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)connector:(id)arg1 didFailToReceiveRewardBasedVideoAdWithError:(id)arg2;
- (void)connectorDidReceiveClick:(id)arg1;
- (void)connectorDidReceiveRewardBasedVideoAd:(id)arg1;
- (void)connector:(id)arg1 didFailToSetUpRewardBasedVideoAdWithError:(id)arg2;
- (void)connectorDidSetUpRewardBasedVideoAd:(id)arg1;
- (void)pingNoFillURLs;
- (id)decodedJSONResponseFromAd:(id)arg1 error:(id *)arg2;
- (void)requestAdFromConnector:(id)arg1 configuration:(id)arg2;
- (void)removeStaleConnectors;
- (void)buildPendingAdRequestConnectorsList;
- (void)setUpAdaptersForAdNetworkConfigs;
- (void)setUpAdaptersForAdNetworkConfigsFromAppConfiguration:(id)arg1;
- (void)makeNextAdRequest;
- (void)presentMediatedRewardBasedVideoAdFromViewController:(id)arg1;
- (void)processMediationAd:(id)arg1;
@property(readonly, nonatomic) GADMRewardBasedVideoAdNetworkConnector *requestingConnector;
- (void)setUpAdaptersFromApplicationConfiguration;
- (void)stopObservingApplicationConfiguration;
- (void)startObservingApplicationConfiguration;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)loadAdURLWithParameters:(id)arg1;
- (long long)requestedAdType;
- (id)backgroundRequestParameters;
- (_Bool)requiresBackgroundSingalCollection;
- (id)requestParameters;
- (id)adLoadActionTimeRecorder;
- (void)fetchAdForRequest:(id)arg1 withAdUnitID:(id)arg2;
- (void)interstitial:(id)arg1 didChangeAdMetadata:(id)arg2 withInfo:(id)arg3;
- (void)interstitialDidCompletePlayingRewardBasedVideoAd:(id)arg1;
- (void)interstitial:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)interstitialDidStartPlayingRewardBasedVideoAd:(id)arg1;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)loadInterstitialWithAdRequest:(id)arg1;
- (void)loadInterstitialWithAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOStoreKitProductViewController : SKStoreProductViewController
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface GADOOrientationGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveForcedOrientationAction:(id)arg2;

@end

@interface GADOAdAppViewController : GADOViewController
{
    _Bool _viewWasConfigured;
    NSURL *_URLToLoad;
    NSString *_HTMLToLoad;
    NSURL *_HTMLBaseURLToLoad;
    _Bool _viewHasAppearedAtLeastOnce;
    _Bool _orientationNotifiedToTheAdViewAtLeastOnce;
    _Bool _useCustomClose;
    _Bool _adOrientationsOverridesLockedOrientation;
    long long _customClosePosition;
    GADOAdView *_adView;
    UIViewController *_hostViewController;
    long long _forcedAdOrientation;
    UIButton *_closeButton;
    unsigned long long _adOrientations;
    double _orientationUpdateAnimationDuration;
    GADOAdAppAdViewDelegate *_adViewDelegate;
}

@property(retain, nonatomic) GADOAdAppAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(nonatomic) _Bool adOrientationsOverridesLockedOrientation; // @synthesize adOrientationsOverridesLockedOrientation=_adOrientationsOverridesLockedOrientation;
@property(nonatomic) double orientationUpdateAnimationDuration; // @synthesize orientationUpdateAnimationDuration=_orientationUpdateAnimationDuration;
@property(nonatomic) unsigned long long adOrientations; // @synthesize adOrientations=_adOrientations;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) long long forcedAdOrientation; // @synthesize forcedAdOrientation=_forcedAdOrientation;
@property(readonly, nonatomic) UIViewController *hostViewController; // @synthesize hostViewController=_hostViewController;
@property(retain, nonatomic) GADOAdView *adView; // @synthesize adView=_adView;
@property(nonatomic) long long customClosePosition; // @synthesize customClosePosition=_customClosePosition;
@property(nonatomic) _Bool useCustomClose; // @synthesize useCustomClose=_useCustomClose;
- (void).cxx_destruct;
- (void)loadHTML:(id)arg1 baseURL:(id)arg2;
- (void)load:(id)arg1;
- (void)viewChangedToOrientation:(long long)arg1;
- (void)didRotateFromInterfaceOrientation:(long long)arg1;
- (void)configureView;
- (void)positionTestAdLabel;
- (void)positionView:(id)arg1 ForPosition:(long long)arg2 size:(struct CGSize)arg3;
- (void)positionMRAIDCloseButton;
- (void)positionCloseButton;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)didReturnToApplication;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)closeButtonPressed:(id)arg1;
- (_Bool)isLoaded;
- (void)updateCloseButtonVisibilityAndImage;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface GADOOverlayProxy : NSObject <GADOIntermitting>
{
    GADOIntermission *_intermission;
    UIViewController *_viewController;
    GADOSlot *_slot;
    GADOOpener *_opener;
}

+ (id)overlayProxyForViewController:(id)arg1;
@property(retain, nonatomic) GADOOpener *opener; // @synthesize opener=_opener;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
@property(readonly, nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(readonly, nonatomic) GADOIntermission *intermission; // @synthesize intermission=_intermission;
- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)init;
- (id)initWithViewController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOClearcutJSCoreCommandExecutor : NSObject <GADOClearcutCommandExecuting>
{
    JSVirtualMachine *_virtualMachine;
    JSContext *_context;
}

- (void).cxx_destruct;
- (void)handleNetworkIOWithParameters:(id)arg1 successCallback:(id)arg2 failureCallback:(id)arg3;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (id)initWithScript:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdChoicesView : UIView
{
    UIView *_adChoicesContentView;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)setAdChoicesContentView:(id)arg1;

@end

@interface GADOMediaContent : NSObject <GADOSlotAdEventDelegate, GADOSlotAdLoadDelegate, GADOSlotDelegate, GADOMediaContentDisplaying>
{
    NSDictionary *_configuration;
    GADORequest *_request;
    GADONativeAdImage *_placeholderImage;
    UIImageView *_placeholderImageView;
    _Bool _hasLoaded;
    CDUnknownBlockType _completionHandler;
    GADOVideoOptions *_videoOptions;
    id <GADOMediaContentDelegate> _delegate;
    GADOSlot *_slot;
}

+ (id)videoSupportURL;
@property(readonly, nonatomic) GADOSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) __weak id <GADOMediaContentDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (struct CGRect)frameInInterface;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)handleJavaScriptLoadedNotification:(id)arg1;
- (void)notifyVideoLoadCompletedWithError:(id)arg1;
@property(readonly, nonatomic) GADOAdViewVideoController *videoController;
- (id)mediaView;
- (void)loadVideoConfiguration;
- (void)loadRequest;
- (void)loadVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (void)commonInit;
- (id)initWithRequest:(id)arg1 videoOptions:(id)arg2;
- (id)initWithVideoDictionary:(id)arg1 placeholderImage:(id)arg2 videoOptions:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediatedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADOMRAIDResizeProperties : NSObject
{
    _Bool _allowOffscreen;
    long long _customClosePosition;
    struct CGSize _size;
    struct CGVector _offset;
}

+ (_Bool)isContentFrameValid:(struct CGRect)arg1 forBounds:(struct CGRect)arg2 allowOffscreen:(_Bool)arg3 closeButtonPosition:(long long)arg4;
+ (unsigned long long)autoresizingMaskForClosePosition:(long long)arg1;
+ (struct CGRect)closeButtonRectForPosition:(long long)arg1 contentFrame:(struct CGRect)arg2;
@property(nonatomic) _Bool allowOffscreen; // @synthesize allowOffscreen=_allowOffscreen;
@property(nonatomic) long long customClosePosition; // @synthesize customClosePosition=_customClosePosition;
@property(nonatomic) struct CGVector offset; // @synthesize offset=_offset;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADOResourceCache : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURLConnection *_connection;
    NSURLRequest *_request;
    NSString *_cacheID;
    _Bool _removeFileOnDealloc;
    double _cachingStartTimeIntervalSinceBoot;
    id <GADOResourceCacheDelegate> _delegate;
    NSURL *_fileURL;
    NSMutableDictionary *_responseHeaders;
    long long _cacheContentSize;
    long long _maxBytes;
    _Bool _responseHeadersReceived;
    _Bool _started;
    _Bool _completed;
    NSString *_contentType;
    long long _contentLength;
    _Bool _valid;
}

@property(readonly, copy, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(readonly, copy, nonatomic) NSString *cacheID; // @synthesize cacheID=_cacheID;
- (void).cxx_destruct;
@property(readonly) _Bool valid;
@property long long maxBytes;
@property(readonly) long long contentLength;
@property(readonly, copy) NSString *contentType;
@property(readonly) _Bool completed;
@property(readonly) _Bool responseHeadersReceived;
@property(readonly) _Bool started;
@property __weak id <GADOResourceCacheDelegate> delegate;
@property(readonly, copy) NSDictionary *responseHeaders;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)appendDataToFile:(id)arg1;
- (void)addResponseHeaders:(id)arg1;
- (void)cachingDidCompleteWithError:(id)arg1;
- (id)dataWithRange:(struct _NSRange)arg1 error:(id *)arg2;
- (double)networkSpeedInBytesPerSecond;
- (long long)cachedContentSize;
- (void)cancelWithError:(id)arg1;
- (void)start;
- (void)dealloc;
- (id)init;
- (id)initWithURLRequest:(id)arg1 cacheID:(id)arg2 error:(id *)arg3;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 contentType:(id)arg3 contentLength:(long long)arg4 removeFileOnDealloc:(_Bool)arg5;
- (id)initWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;
- (void)commonInitWithRequest:(id)arg1 fileURL:(id)arg2 removeFileOnDealloc:(_Bool)arg3;

@end

@interface GADOOpener : NSObject <MFMessageComposeViewControllerDelegate, UIAlertViewDelegate>
{
    NSMapTable *_confirmationAlertURLs;
    NSMutableSet *_allowedAppURLs;
    GADOStoreKitProduct *_storeKitProduct;
    GADOStoreKitProductOpener *_storeKitProductOpener;
    _Bool _didOpenAnotherApplication;
    UIViewController *_viewController;
    NSURL *_referringURL;
    GADOAdView *_adView;
    GADOSlot *_slot;
    NSURLRequest *_navigationRequest;
    GADOAutoClickProtection *_autoClickProtection;
}

@property(retain, nonatomic) GADOAutoClickProtection *autoClickProtection; // @synthesize autoClickProtection=_autoClickProtection;
@property(copy, nonatomic) NSURLRequest *navigationRequest; // @synthesize navigationRequest=_navigationRequest;
@property(nonatomic) _Bool didOpenAnotherApplication; // @synthesize didOpenAnotherApplication=_didOpenAnotherApplication;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
@property(nonatomic) __weak GADOAdView *adView; // @synthesize adView=_adView;
@property(copy, nonatomic) NSURL *referringURL; // @synthesize referringURL=_referringURL;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
@property(readonly, nonatomic) __weak UIViewController *topViewController;
- (void)openCalendarWithDictionary:(id)arg1;
- (void)openSmsComposer:(id)arg1;
- (void)openEmailComposer:(id)arg1;
- (void)presentComposerController:(id)arg1 forURL:(id)arg2;
- (void)openAppLink:(id)arg1 withEventID:(id)arg2;
- (void)willLeaveApplication;
- (_Bool)shouldOpenURL:(id)arg1;
- (void)openApp:(id)arg1;
- (void)openPromptToStorePictureAtURL:(id)arg1;
- (void)openWebAppWithResizeProperties:(id)arg1;
- (void)expandToWebAppWithSupportedOrientations:(unsigned long long)arg1 usingCustomClose:(_Bool)arg2;
- (void)openWebAppWithHTML:(id)arg1 baseURL:(id)arg2 supportedOrientations:(unsigned long long)arg3 usingCustomClose:(_Bool)arg4;
- (void)openWebApp:(id)arg1 supportedOrientations:(unsigned long long)arg2 usingCustomClose:(_Bool)arg3;
- (id)overlayWithOrientations:(unsigned long long)arg1 useCustomClose:(_Bool)arg2;
- (void)configureOverlay:(id)arg1 orientations:(unsigned long long)arg2 usingCustomClose:(_Bool)arg3;
- (void)openSafariViewControllerToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)openWebViewBrowserToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)openBrowserToURL:(id)arg1 supportedOrientations:(unsigned long long)arg2;
- (void)fetchInAppStoreWithProductID:(id)arg1 requestID:(id)arg2;
- (void)openInAppStoreWithProductID:(id)arg1 fallbackURL:(id)arg2 shouldWaitForFetch:(_Bool)arg3;
- (void)confirmClickToURL:(id)arg1 message:(id)arg2;
- (id)confirmationMessageForURL:(id)arg1;
- (_Bool)shouldPerformOpenAction;
- (_Bool)shouldPerformOpenActionWithOrientations:(unsigned long long)arg1;
- (void)didClickURL:(id)arg1;
- (void)disableAutoCollapseForResize;
- (_Bool)canOpenContent:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOBannerPool : NSObject
{
    NSMutableArray *_bannerPool;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) long long count;
- (void)removeEntry:(id)arg1;
- (id)nextEntry;
- (void)addEntry:(id)arg1;
- (id)init;

@end

@interface GADODynamicHeightSearchBannerView : UIView <GADOWebViewDelegate>
{
    GADOWebView *_adWebView;
    long long _adState;
    NSString *_adUnitID;
    id <GADODynamicHeightSearchBannerViewDelegate> _delegate;
}

@property(readonly, nonatomic) long long adState; // @synthesize adState=_adState;
@property(nonatomic) __weak id <GADODynamicHeightSearchBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)handleUserDidTapAdDestinationURL:(id)arg1;
- (void)handleBannerViewDidReceiveAd;
- (void)updateInternalAdViewHeightAndNotifyDelegateWithHeight:(double)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)webViewProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (struct CGSize)currentAdSize;
- (void)loadRequest:(id)arg1;
- (void)configureBannerView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOBlockInvocation : NSObject
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)invokeBlockWithObject:(id)arg1;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface GADONativeCustomTemplateAd : GADONativeAd <GADOMediatedNativeCustomTemplateAd, GADOLoadable>
{
    _Bool _disableImageLoading;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSDictionary *_optionalImages;
    NSDictionary *_requiredImages;
    NSMutableDictionary *_imageAssets;
    NSDictionary *_stringAssets;
    GADOMediaContent *_mediaContent;
    GADOMediaView *_mediaView;
    NSMutableSet *_availableAssetKeys;
    GADOVideoController *_videoController;
    CDUnknownBlockType _customClickHandler;
    CDUnknownBlockType _deprecatedCustomClickHandler;
    NSString *_templateID;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) NSString *templateID; // @synthesize templateID=_templateID;
- (void).cxx_destruct;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)loadImageAssetsWithImageDictionary:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2;
- (void)beginObservingVideoClickNotifications;
- (void)handleVideoClickNotifications;
- (void)handleNativeAdCustomClick:(id)arg1;
@property(readonly, nonatomic) GADOMediaView *mediaView;
- (id)stringForKey:(id)arg1;
- (id)imageForKey:(id)arg1;
@property(readonly, nonatomic) NSArray *availableAssetKeys;
- (id)requiredAssets;
@property(copy) CDUnknownBlockType customClickHandler;
- (void)recordImpression;
- (void)performClickOnAssetWithKey:(id)arg1 customClickHandler:(CDUnknownBlockType)arg2;
- (void)performClickOnAssetWithKey:(id)arg1;
- (id)adFormatTemplateID;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)setSlot:(id)arg1;
- (void)removeCustomClickObserver;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADONativeCustomTemplateAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOViewBoundsMonitor : NSObject
{
    UIView *_monitoredView;
    id <GADOViewBoundsMonitorDelegate> _delegate;
    GADOScheduler *_updateViewBoundsScheduler;
    struct CGRect _monitoredViewBounds;
}

- (void).cxx_destruct;
- (void)updateViewBounds;
- (void)stopMonitoring;
- (void)startMonitoringWithSamplingInterval:(double)arg1;
- (id)init;
- (id)initWithView:(id)arg1 delegate:(id)arg2;

@end

@interface GADOBrowserAdViewDelegate : GADOAdViewDelegate
{
}

- (id)browserControllerForAdView:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)handlesClicks;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;

@end

@interface GADOWebView : UIView <GADOWebView>
{
    struct CGSize _lastContentSize;
    id <GADOWebViewDelegate> _delegate;
    id <GADOWebViewContentSizeDelegate> _contentSizeDelegate;
    UIView<GADOWebView> *_webView;
}

@property(retain, nonatomic) UIView<GADOWebView> *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <GADOWebViewContentSizeDelegate> contentSizeDelegate; // @synthesize contentSizeDelegate=_contentSizeDelegate;
@property(nonatomic) __weak id <GADOWebViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)didFailLoadWithError:(id)arg1;
- (void)didFinishLoad;
- (void)didStartLoad;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (_Bool)contentSizeUpdatesSynchronously;
@property(readonly, nonatomic) UIScrollView *scrollView;
@property(readonly, copy, nonatomic) NSURL *URL;
- (_Bool)isLoading;
- (void)goForward;
- (void)goBack;
- (_Bool)canGoForward;
- (_Bool)canGoBack;
- (void)reload;
- (void)stopLoading;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isOpaque;
- (void)setOpaque:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)dealloc;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

@end

@interface GADOVersionedCache : NSObject <GADOResourceCacheDelegate>
{
    NSString *_cacheID;
    NSURL *_cacheURL;
    NSString *_userDefaultsKey;
    GADOResourceCache *_resourceCache;
    CDUnknownBlockType _completionBlock;
    _Bool _loading;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_newVersion;
    NSData *_cacheData;
    NSString *_version;
}

- (void).cxx_destruct;
@property(readonly) NSString *version;
@property(readonly) NSData *cacheData;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resetState;
- (void)executeCompletionBlock:(CDUnknownBlockType)arg1 onMainThreadWithError:(id)arg2;
- (void)resetStateAndNotifyCompletionBlockWithError:(id)arg1;
- (void)updateWithURL:(id)arg1 version:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)initWithCacheID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdAppAdViewDelegate : GADOAdViewDelegate
{
    GADOAdAppViewController *_adAppViewController;
}

- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)initWithAdAppViewController:(id)arg1;

@end

@interface GADOBannerAdViewDelegate : GADOAdViewDelegate <GADODelayLoadDelegate>
{
    _Bool _loadDelayed;
    _Bool _loadFinished;
    GADOSlot *_slot;
}

@property(readonly, nonatomic, getter=isLoadFinished) _Bool loadFinished; // @synthesize loadFinished=_loadFinished;
@property(readonly, nonatomic, getter=isLoadDelayed) _Bool loadDelayed; // @synthesize loadDelayed=_loadDelayed;
@property(readonly, nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)loadHandlerDidCancel:(id)arg1;
- (void)loadHandlerDidChangeDelay:(id)arg1 from:(long long)arg2 to:(long long)arg3;
- (void)adViewDidMuteAd:(id)arg1;
- (void)adView:(id)arg1 didReceiveUnconfirmedClickWithClickInfo:(id)arg2;
- (void)adViewDidRecordClick:(id)arg1;
- (void)adViewDidRecordImpression:(id)arg1;
- (void)adView:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)adView:(id)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)init;
- (id)initWithSlot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdViewResourceRequest : NSObject
{
    NSArray *_equalityHints;
    NSURL *_URL;
    NSURL *_mainDocumentURL;
    NSString *_method;
    NSDictionary *_headers;
    NSData *_body;
}

@property(readonly, copy, nonatomic) NSData *body; // @synthesize body=_body;
@property(readonly, copy, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(readonly, copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(readonly, copy, nonatomic) NSURL *mainDocumentURL; // @synthesize mainDocumentURL=_mainDocumentURL;
@property(readonly, copy, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)dictionaryRepresentationExcludingHeaders:(id)arg1;
- (id)resourceRequestWithHeaders:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;
- (id)description;
- (id)initWithRequest:(id)arg1;
- (id)initWithResourceRequest:(id)arg1;
- (id)initWithURL:(id)arg1 mainDocumentURL:(id)arg2 method:(id)arg3 headers:(id)arg4 body:(id)arg5 equalityHints:(id)arg6;

@end

@interface GADOAudioVideoManager : NSObject
{
    NSMutableSet *_playingVideos;
    NSMutableSet *_soundVideos;
    NSMutableSet *_userInitiatedSoundVideos;
    long long _numLoadedPlayer;
    _Bool _audioSessionIsApplicationManaged;
    id <GADAudioVideoManagerDelegate> _delegate;
}

@property(nonatomic) _Bool audioSessionIsApplicationManaged; // @synthesize audioSessionIsApplicationManaged=_audioSessionIsApplicationManaged;
@property(nonatomic) __weak id <GADAudioVideoManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)updateAudioSessionAfterAllVideoStopPlayingSound;
- (void)playerDidStopPlayingSound:(id)arg1;
- (void)playerWillStartPlayingSound:(id)arg1 userInitiated:(_Bool)arg2;
- (void)playerDidPauseVideo:(id)arg1;
- (void)playerWillStartPlayingVideo:(id)arg1 userInitiated:(_Bool)arg2;
- (void)playerDidUnload:(id)arg1;
- (void)playerWillLoad:(id)arg1;
- (long long)numLoadedPlayer;
- (id)init;

@end

@interface GADOShingleHashTuple : NSObject
{
    NSArray *_shingle;
    unsigned long long _hashValue;
}

@property(readonly, nonatomic) unsigned long long hashValue; // @synthesize hashValue=_hashValue;
@property(readonly, copy, nonatomic) NSArray *shingle; // @synthesize shingle=_shingle;
- (void).cxx_destruct;
- (id)init;
- (id)initWithShingle:(id)arg1 hashValue:(unsigned long long)arg2;

@end

@interface GADOStoreKitProduct : NSObject
{
    long long _productID;
    NSMutableArray *_fetchCompletionBlocks;
    _Bool _isUsed;
    SKStoreProductViewController *_controller;
    _Bool _isFetchInProgress;
    _Bool _fetchSucceeded;
}

- (void).cxx_destruct;
- (void)finishFetchingAndNotifyCompletionBlockWithResult:(_Bool)arg1 error:(id)arg2;
- (void)fetchInAppStoreWithCompletionBlock:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) long long productID;
- (id)init;
- (id)initWithProductID:(long long)arg1;

@end

@interface GADOStoreKitProductOpener : NSObject <SKStoreProductViewControllerDelegate>
{
    GADOStoreKitProduct *_storeKitProduct;
    SKStoreProductViewController *_weakController;
    _Bool _isPresenting;
    _Bool _isPresented;
    _Bool _shouldDismissAfterPresentation;
    _Bool _dismissed;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)openWithRootViewController:(id)arg1 slot:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly) _Bool dismissed;
- (id)initWithStoreKitProduct:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOStoreKitProductInlineRenderer : NSObject <SKStoreProductViewControllerDelegate>
{
    GADOStoreKitProduct *_storeKitProduct;
    _Bool _renderedInline;
    CDUnknownBlockType _dismissNotificationBlock;
}

- (void).cxx_destruct;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)dismiss;
- (void)resizeToFrame:(struct CGRect)arg1;
- (void)renderInView:(id)arg1 dismissalCompletionBlock:(CDUnknownBlockType)arg2;
- (id)initWithStoreKitProduct:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOConfiguration : NSObject <NSCoding, NSCopying>
{
    NSMutableDictionary *_parameters;
    NSMutableDictionary *_priorities;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id <GADOConfigurationDelegate> _delegate;
}

- (void).cxx_destruct;
- (void)addEntriesFromDictionary:(id)arg1 priorities:(id)arg2;
- (void)addEntriesFromDictionary:(id)arg1 priority:(long long)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 priority:(long long)arg3;
- (void)didUpdate;
- (_Bool)updatedBySettingValue:(id)arg1 withPriority:(long long)arg2 forKey:(id)arg3;
- (id)objectForKeyedSubscript:(id)arg1;
@property __weak id <GADOConfigurationDelegate> delegate;
- (void)encodeWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface GADONativeAdAttribution : NSObject
{
    NSArray *_loadingImages;
    NSMutableArray *_availableImages;
    CDUnknownBlockType _assetCompletionHandler;
    NSArray *_icons;
    double _iconPresentationDuration;
    double _iconAnimationDuration;
    NSString *_text;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_backgroundColor;
}

@property(readonly, copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(readonly, copy, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(readonly, copy, nonatomic) UIFont *font; // @synthesize font=_font;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, nonatomic) double iconAnimationDuration; // @synthesize iconAnimationDuration=_iconAnimationDuration;
@property(readonly, nonatomic) double iconPresentationDuration; // @synthesize iconPresentationDuration=_iconPresentationDuration;
@property(readonly, nonatomic) NSArray *icons; // @synthesize icons=_icons;
- (void).cxx_destruct;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)failedLoadingNativeAdImageWithError:(id)arg1;
- (void)finishedLoadingNativeAdImage:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADOContent : NSObject
{
    long long _contentAgeWeight;
    long long _contentLengthWeight;
    unsigned long long _contentTotalLength;
    GADOBinaryHeap *_heap;
    unsigned long long _maximumShingleCount;
    unsigned long long _minimumParagraphLength;
    unsigned long long _shingleLength;
    NSString *_fingerprint;
    long long _score;
    unsigned long long _sequenceNumber;
}

@property(readonly, nonatomic) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly, nonatomic) long long score; // @synthesize score=_score;
@property(readonly, nonatomic) NSString *fingerprint; // @synthesize fingerprint=_fingerprint;
- (void).cxx_destruct;
- (id)shingleHash;
- (void)updateHeapWithHash:(unsigned long long)arg1 shingle:(id)arg2;
- (void)applyRollingHashToTokens:(id)arg1 baseHash:(unsigned long long)arg2;
- (void)selectShinglesFromTokens:(id)arg1;
- (void)updateContentWithText:(id)arg1;
- (void)deductServedPenalty;
- (id)initWithSequenceNumber:(unsigned long long)arg1;
- (id)init;

@end

@interface GADOMWebViewRenderedChecker : NSObject
{
    GADOWebView *_webView;
    id <GADOMWebViewRenderedCheckerDelegate> _delegate;
}

@property(nonatomic) __weak id <GADOMWebViewRenderedCheckerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak GADOWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (double)percentOfImage:(id)arg1 ofColor:(id)arg2;
- (void)checkIsContentRenderedInWebView;
- (id)init;
- (id)initWithWebView:(id)arg1 delegate:(id)arg2;

@end

@interface GADORTBRequestParameters : NSObject
{
    GADOMediationCredentials *_credentials;
    id <GADAdNetworkExtras> _extras;
    struct GADOAdSize _adSize;
}

@property(readonly, nonatomic) struct GADOAdSize adSize; // @synthesize adSize=_adSize;
@property(readonly, nonatomic) id <GADAdNetworkExtras> extras; // @synthesize extras=_extras;
@property(readonly, nonatomic) GADOMediationCredentials *credentials; // @synthesize credentials=_credentials;
- (void).cxx_destruct;
- (id)initWithRequest:(id)arg1 adFormat:(long long)arg2 adSize:(struct GADOAdSize)arg3 adUnitID:(id)arg4 RTBAdapter:(id)arg5;

@end

@interface GADONotification : NSObject
{
    NSString *_name;
    NSDictionary *_parameters;
}

+ (_Bool)isNotificationURL:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)description;
- (id)initWithNotificationURL:(id)arg1;
- (id)initWithName:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface GADOMobileAds : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_googleMobileAdsAppID;
    _Bool _applicationMuted;
    float _applicationVolume;
    GADOAudioVideoManager *_audioVideoManager;
    GADORequestConfiguration *_requestConfiguration;
}

+ (void)enableBackgroundAdLoading;
+ (void)disableSDKCrashReporting;
+ (void)disableAutomatedInAppPurchaseReporting;
+ (void)configureWithApplicationID:(id)arg1;
+ (id)sharedInstance;
@property(readonly, nonatomic) GADORequestConfiguration *requestConfiguration; // @synthesize requestConfiguration=_requestConfiguration;
@property(retain, nonatomic) GADOAudioVideoManager *audioVideoManager; // @synthesize audioVideoManager=_audioVideoManager;
@property(nonatomic) _Bool applicationMuted; // @synthesize applicationMuted=_applicationMuted;
@property(nonatomic) float applicationVolume; // @synthesize applicationVolume=_applicationVolume;
- (void).cxx_destruct;
- (void)startWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initializationStatus;
@property(readonly, copy, nonatomic) NSString *googleMobileAdsAppID;
- (void)setGoogleMobileAdsAppID:(id)arg1;
- (void)registerMediationAdapterClassName:(id)arg1;
- (_Bool)isSDKVersionAtLeastMajor:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
@property(readonly, nonatomic) float clampedApplicationVolume;
- (id)init;

@end

@interface GADOWiggleGestureRecognizer : UIGestureRecognizer
{
    double _distanceMoved;
    long long _gestureState;
}

- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)isMovementInYAxisWithCurrentPoint:(struct CGPoint)arg1 previousPoint:(struct CGPoint)arg2;
- (void)reset;

@end

@interface GADORequestConfiguration : NSObject
{
    NSString *_maxAdContentRating;
    NSNumber *_underAgeOfConsent;
    NSNumber *_tagForChildDirectedTreatment;
}

@property(copy, nonatomic) NSNumber *tagForChildDirectedTreatment; // @synthesize tagForChildDirectedTreatment=_tagForChildDirectedTreatment;
@property(copy, nonatomic) NSNumber *underAgeOfConsent; // @synthesize underAgeOfConsent=_underAgeOfConsent;
@property(retain, nonatomic) NSString *maxAdContentRating; // @synthesize maxAdContentRating=_maxAdContentRating;
- (void).cxx_destruct;
- (void)tagForChildDirectedTreatment:(_Bool)arg1;
- (void)tagForUnderAgeOfConsent:(_Bool)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADOStatisticsCore : NSObject
{
    NSMutableDictionary *_statistics;
    NSString *_userDefaultsKey;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_writeQueue;
}

- (void).cxx_destruct;
- (void)removeObjectForKey:(id)arg1;
- (void)appendDictionary:(id)arg1 toArrayForKey:(id)arg2;
- (void)appendString:(id)arg1 toArrayForKey:(id)arg2;
- (id)arrayForKey:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)savePersistentStatistics;
- (void)applicationWillTerminate:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *statistics;
- (void)dealloc;
- (id)init;

@end

@interface GADONativeAdImage : NSObject
{
    _Bool _required;
    UIImage *_image;
    NSURL *_imageURL;
    double _scale;
}

+ (id)nativeAdImagesFromImageConfigurationArray:(id)arg1 options:(id)arg2;
@property(nonatomic) _Bool required; // @synthesize required=_required;
@property(nonatomic) double scale; // @synthesize scale=_scale;
@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)loadImageWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)description;
- (id)init;
- (id)initWithDictionary:(id)arg1;
- (id)initWithURL:(id)arg1 scale:(double)arg2;
- (id)initWithImage:(id)arg1;

@end

@interface GADOInterstitial : NSObject <GADORewardBasedVideoAdGMSGHandlerDelegate, GADOAdMediationDelegate, GADOSlotAdEventDelegate, GADOSlotAdLoadDelegate, GADOSlotDelegate, GADOSlotAdResponseDelegate>
{
    NSError *_alreadyUsedError;
    GADOInterstitialOwner *_interstitialOwner;
    GADOClearcutLogger *_logger;
    GADOBufferedClearcutLogger *_bufferedLogger;
    _Bool _isMediated;
    _Bool _adUnitExposureBegan;
    _Bool _hasBeenUsed;
    NSString *_adUnitID;
    id <GADInterstitialDelegate> _delegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    GADOInterstitialViewController *_viewController;
    GADOSlot *_slot;
}

@property(readonly, nonatomic) GADOSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADOInterstitialViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(nonatomic) _Bool hasBeenUsed; // @synthesize hasBeenUsed=_hasBeenUsed;
@property(nonatomic) __weak id <GADInterstitialDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)setAdUnitID:(id)arg1;
- (id)init;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (_Bool)canPresentFullScreen;
- (_Bool)canFitAdSize:(struct CGSize)arg1 inWindowSize:(struct CGSize)arg2 withThreshold:(double)arg3;
- (void)presentFromRootViewController:(id)arg1;
- (void)adPresentationDidFail;
@property(readonly, nonatomic) _Bool isReady;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
- (void)loadRequest:(id)arg1;
- (void)loadSlotFromCacheEntry:(id)arg1;
- (void)createSlot;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slotDidReceiveAdClick:(id)arg1;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (_Bool)slotShouldReloadCurrentRequest:(id)arg1;
- (void)slotDidLoadMRAIDAd:(id)arg1;
- (void)setMediated;
- (void)cancel;
- (void)dealloc;
- (id)initWithAdUnitID:(id)arg1;
- (void)rootObjectLoggerChanged;
- (void)interstitialAdIsDismissed;
- (void)interstitialAdIsPresented;
- (void)interstitialAdLoadFailedWithError:(id)arg1;
- (void)interstitialAdLoadSucceeded;
- (void)interstitialAdLoadStarted;
- (void)interstitialCreatedSlot:(id)arg1;
- (void)slot:(id)arg1 didChangeAdMetadata:(id)arg2 withInfo:(id)arg3;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveVideoCompleteNotification:(id)arg1;
- (void)rewardBasedVideoAdGMSGHandlerDidReceiveStartVideoNotification:(id)arg1;
- (void)rewardBasedVideoAdGMSGHandler:(id)arg1 didReceiveRewardNotificationWithRewardItem:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADONetwork : NSObject
{
    unsigned long long _networkType;
    unsigned long long _lastKnownNetworkType;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_enableCheckingQueue;
    struct __SCNetworkReachability *_networkReachabilityRef;
    id <NSObject> _radioAccessTechnologyChangeObserver;
    CTTelephonyNetworkInfo *_telephonyNetworkInfo;
    NSString *_radioAccessTechnology;
    NSString *_lastKnownRadioAccessTechnology;
    NSString *_userAgentString;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(copy) NSString *userAgentString;
- (void)setRadioAccessTechnology:(id)arg1;
- (void)setNetworkTypeFromFlags:(unsigned int)arg1;
- (void)setNetworkType:(unsigned long long)arg1;
- (id)requestDictionary;
- (void)enableRadioAccessTechnologyChecking;
- (void)dealloc;
- (id)init;

@end

@interface GADOWebViewConfiguration : NSObject <NSCopying>
{
    _Bool _mediaPlaybackRequiresUserAction;
    _Bool _scalesPageToFit;
    _Bool _GMSGScriptHandlerEnabled;
    _Bool _resizeScriptEnabled;
    _Bool _loadOnIframeScriptEnabled;
    unsigned long long _dataDetectorType;
    NSString *_webViewClassKey;
}

@property(readonly, nonatomic) _Bool loadOnIframeScriptEnabled; // @synthesize loadOnIframeScriptEnabled=_loadOnIframeScriptEnabled;
@property(readonly, nonatomic) _Bool resizeScriptEnabled; // @synthesize resizeScriptEnabled=_resizeScriptEnabled;
@property(readonly, nonatomic) _Bool GMSGScriptHandlerEnabled; // @synthesize GMSGScriptHandlerEnabled=_GMSGScriptHandlerEnabled;
@property(copy, nonatomic) NSString *webViewClassKey; // @synthesize webViewClassKey=_webViewClassKey;
@property(nonatomic) _Bool scalesPageToFit; // @synthesize scalesPageToFit=_scalesPageToFit;
@property(nonatomic) _Bool mediaPlaybackRequiresUserAction; // @synthesize mediaPlaybackRequiresUserAction=_mediaPlaybackRequiresUserAction;
@property(nonatomic) unsigned long long dataDetectorType; // @synthesize dataDetectorType=_dataDetectorType;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;
- (id)initWithConfiguration:(id)arg1;

@end

@interface GADOInterstitialPoolRefillOnDismissPolicy : GADOInterstitialPoolGroupRefillPolicy
{
    id _dismissalObserver;
}

- (void).cxx_destruct;
- (void)interstitialPoolDidAddEntry:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADOBannerView : UIView <GADOAdMediationDelegate, GADOSlotAdEventDelegate, GADOSlotAdLoadDelegate, GADOSlotDelegate, GADOSlotAdKeyDelegate, GADOSlotAdResponseDelegate>
{
    _Bool _hasLoadedAd;
    _Bool _hasInitialized;
    _Bool _isMediated;
    NSDictionary *_viewHierarchy;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _setAdSizeAndReloadWasCalled;
    GADOClearcutLogger *_logger;
    GADOBufferedClearcutLogger *_bufferedLogger;
    GADOAdExposureMonitor *_adExposureMonitor;
    GADOAdConfiguration *_adConfiguration;
    NSString *_adUnitID;
    NSDictionary *_bannerKey;
    _Bool _autoloadEnabled;
    UIViewController *_rootViewController;
    id <GADBannerViewDelegate> _delegate;
    id <GADAdSizeDelegate> _adSizeDelegate;
    id <GADInAppPurchaseDelegate> _inAppPurchaseDelegate;
    GADOVideoController *_videoController;
    UIView *_rootAdView;
    GADOSlot *_slot;
}

@property(retain, nonatomic) GADOSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) UIView *rootAdView; // @synthesize rootAdView=_rootAdView;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
@property(nonatomic) __weak id <GADInAppPurchaseDelegate> inAppPurchaseDelegate; // @synthesize inAppPurchaseDelegate=_inAppPurchaseDelegate;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @synthesize adSizeDelegate=_adSizeDelegate;
@property(nonatomic) __weak id <GADBannerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
- (void).cxx_destruct;
- (id)videoOptions;
- (void)processAdOptions;
- (void)resetVideoController;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (void)didMoveToWindow;
- (void)loadRequest:(id)arg1;
- (id)viewHierarchyInformationForSlot:(id)arg1;
- (void)cacheViewHierarchyInformationForSlot:(id)arg1;
- (id)topNonContainerViewController;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (void)layoutSubviewsIfNeeded;
- (void)slot:(id)arg1 contentSizeDidChange:(struct CGSize)arg2;
- (struct CGRect)frameInInterface;
- (void)slot:(id)arg1 didReceiveAdView:(id)arg2;
- (_Bool)slotShouldReloadCurrentRequest:(id)arg1;
- (id)requestParametersForRequest:(id)arg1;
- (void)setAdOptions:(id)arg1;
- (void)setAlpha:(double)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
@property(readonly, nonatomic) __weak UIView *mediatedAdView;
@property(readonly, nonatomic) _Bool hasAutoRefreshed;
@property(readonly, nonatomic) __weak GADOAdView *adView;
@property(nonatomic) struct GADOAdSize adSize;
- (void)setAdSizeFromExternalCGSize:(struct CGSize)arg1;
- (void)setMediated;
@property(copy, nonatomic) NSDictionary *bannerKey;
@property(copy, nonatomic) NSString *adUnitID;
- (void)commonLayoutSubviews;
- (void)layoutSubviews;
- (struct CGSize)intrinsicContentSize;
- (void)setBounds:(struct CGRect)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setAdSize:(struct GADOAdSize)arg1 andReload:(_Bool)arg2;
- (void)dealloc;
- (id)initWithAdSize:(struct GADOAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADOAdSize)arg1;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADOAdSize)arg2;
- (void)commonInitWithAdSize:(struct GADOAdSize)arg1;
- (void)rootObjectLoggerChanged;
- (void)bannerAdLoadFailedWithError:(id)arg1;
- (void)bannerAdLoadSucceeded;
- (void)bannerAdLoadStarted;
- (void)bannerCreatedSlot:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOSlot : NSObject <GADOActiveViewMonitorDelegate, GADOAdViewActiveViewMonitoring, GADOSDKCoreControllerDelegate, GADOImpressionMonitorDelegate, GADOMRAIDEventHandling, GADOAdFetcherDelegate>
{
    long long _state;
    unsigned long long _activeViewID;
    GADOImpressionMonitor *_impressionMonitor;
    GADOMAdManager *_mediationManager;
    NSDictionary *_RTBAdapters;
    _Bool _slotHasAttemptedAnAdRequestAtLeastOnce;
    GADOClearcutLogger *_logger;
    _Bool _isListeningToDeviceOrientationChangeEvent;
    struct CGRect _usableInterfaceFrame;
    struct CGRect _creativeWebViewFrame;
    struct CGRect _creativeAdFrame;
    GADOAd *_pendingCustomRenderingAd;
    GADOCSITimeRecorder *_adLoadActionTimeRecorder;
    GADOActiveViewMonitor *_activeViewMonitor;
    unsigned long long _measurementReceivers;
    _Bool _viewHasMadeImpression;
    _Bool _monitoredViewVisible;
    GADOCSI *_CSI;
    _Bool _hasAutoRefreshed;
    _Bool _reloadable;
    _Bool _manualImpressionsEnabled;
    id <GADOSlotDelegate> _slotDelegate;
    id <GADOSlotAdLoadDelegate> _adLoadDelegate;
    id <GADOSlotAdEventDelegate> _adEventDelegate;
    id <GADOSlotAdResponseDelegate> _adResponseDelegate;
    id <GADOSlotAdKeyDelegate> _adKeyDelegate;
    NSString *_adUnitID;
    GADOAd *_ad;
    GADOAdType *_adType;
    long long _RTBAdFormat;
    GADORequest *_loadingRequest;
    GADOCorrelator *_correlator;
    NSNumber *_timeLastLoaded;
    GADOAdView *_adView;
    GADOSlotStatistics *_slotStats;
    GADOIntermission *_intermission;
    id _placement;
    GADOMIDAdSession *_adSession;
    GADOBannerAdViewDelegate *_adViewDelegate;
    GADOAd *_loadingAd;
    GADOAdFetcher *_adFetcher;
    NSDictionary *_applicationStatistics;
    NSSet *_pendingAdStatistics;
    NSTimer *_reloadTimer;
    double _reloadInterval;
    NSString *_requestID;
    GADORequest *_nextRequest;
    GADOSDKCoreWebView *_SDKCoreWebView;
    UIView *_activeViewMonitoredView;
    struct CGSize _newAdSize;
}

+ (void)initialize;
@property(retain, nonatomic) UIView *activeViewMonitoredView; // @synthesize activeViewMonitoredView=_activeViewMonitoredView;
@property(retain, nonatomic) GADOSDKCoreWebView *SDKCoreWebView; // @synthesize SDKCoreWebView=_SDKCoreWebView;
@property(nonatomic) struct CGSize newAdSize; // @synthesize newAdSize=_newAdSize;
@property(copy, nonatomic) GADORequest *nextRequest; // @synthesize nextRequest=_nextRequest;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(nonatomic) double reloadInterval; // @synthesize reloadInterval=_reloadInterval;
@property(retain, nonatomic) NSTimer *reloadTimer; // @synthesize reloadTimer=_reloadTimer;
@property(copy, nonatomic) NSSet *pendingAdStatistics; // @synthesize pendingAdStatistics=_pendingAdStatistics;
@property(copy, nonatomic) NSDictionary *applicationStatistics; // @synthesize applicationStatistics=_applicationStatistics;
@property(retain, nonatomic) GADOAdFetcher *adFetcher; // @synthesize adFetcher=_adFetcher;
@property(retain, nonatomic) GADOAd *loadingAd; // @synthesize loadingAd=_loadingAd;
@property(retain, nonatomic) GADOBannerAdViewDelegate *adViewDelegate; // @synthesize adViewDelegate=_adViewDelegate;
@property(retain, nonatomic) GADOMIDAdSession *adSession; // @synthesize adSession=_adSession;
@property(readonly, nonatomic) GADOCSI *CSI; // @synthesize CSI=_CSI;
@property(nonatomic) __weak id placement; // @synthesize placement=_placement;
@property(nonatomic) __weak GADOIntermission *intermission; // @synthesize intermission=_intermission;
@property(readonly, nonatomic) GADOSlotStatistics *slotStats; // @synthesize slotStats=_slotStats;
@property(readonly, nonatomic) GADOAdView *adView; // @synthesize adView=_adView;
@property(retain, nonatomic) NSNumber *timeLastLoaded; // @synthesize timeLastLoaded=_timeLastLoaded;
@property(retain, nonatomic) GADOCorrelator *correlator; // @synthesize correlator=_correlator;
@property(copy, nonatomic) GADORequest *loadingRequest; // @synthesize loadingRequest=_loadingRequest;
@property(nonatomic) long long RTBAdFormat; // @synthesize RTBAdFormat=_RTBAdFormat;
@property(retain, nonatomic) GADOAdType *adType; // @synthesize adType=_adType;
@property(readonly, nonatomic) GADOAd *ad; // @synthesize ad=_ad;
@property(nonatomic) _Bool manualImpressionsEnabled; // @synthesize manualImpressionsEnabled=_manualImpressionsEnabled;
@property(nonatomic) _Bool reloadable; // @synthesize reloadable=_reloadable;
@property(nonatomic) _Bool hasAutoRefreshed; // @synthesize hasAutoRefreshed=_hasAutoRefreshed;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <GADOSlotAdKeyDelegate> adKeyDelegate; // @synthesize adKeyDelegate=_adKeyDelegate;
@property(nonatomic) __weak id <GADOSlotAdResponseDelegate> adResponseDelegate; // @synthesize adResponseDelegate=_adResponseDelegate;
@property(nonatomic) __weak id <GADOSlotAdEventDelegate> adEventDelegate; // @synthesize adEventDelegate=_adEventDelegate;
@property(nonatomic) __weak id <GADOSlotAdLoadDelegate> adLoadDelegate; // @synthesize adLoadDelegate=_adLoadDelegate;
@property(nonatomic) __weak id <GADOSlotDelegate> slotDelegate; // @synthesize slotDelegate=_slotDelegate;
- (void).cxx_destruct;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (void)resetLogger;
- (void)makeRootLoggingObject;
- (struct GADOAdSize)adSizeForMultiSizeAd;
- (void)setViewForAdUsingView:(id)arg1;
- (_Bool)validateAdResponseWithAdSize:(struct GADOAdSize)arg1 andValidAdSizes:(id)arg2;
- (void)processCustomRenderingAdResponse:(id)arg1;
- (void)renderPendingCustomRenderingAd;
- (_Bool)isMRAIDEnabled;
- (void)sendCSIAdLoadTimings;
- (void)pingManualTrackingURLs;
- (void)pingDownloadedImpressionURLs;
- (void)pingImpressionURLs;
- (void)pingClickURLs;
- (void)startImpressionMonitoring;
- (void)processStandardAdResponse:(id)arg1;
- (void)finishedLoadingAdResponse:(id)arg1;
- (id)gestureClickURLWithURL:(id)arg1;
- (_Bool)isGoogleAdURL:(id)arg1;
- (void)cancelPendingAndFutureActions;
- (void)cancelPendingActions;
- (void)cancelLoad;
- (void)invalidate;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithoutAdView;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 webViewConfiguration:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1 webViewConfiguration:(id)arg2 createAdView:(_Bool)arg3;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)resetRequestState;
- (void)interstitialViewWillDisappear;
- (void)interstitialViewWillAppear;
- (void)ownerViewDidMoveToWindow:(id)arg1;
- (void)mediatedAdNetworkAutoRefreshed;
- (void)logRequestTestAdInstructions;
- (void)loadNextRequestWithAutoRefresh:(_Bool)arg1;
- (void)loadRequest:(id)arg1;
- (_Bool)shouldMakeRequest:(id)arg1;
- (_Bool)isMakingRequest;
- (void)adDidRelinquishFullScreen:(id)arg1;
- (void)adWillPresentFullScreen:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillBecomeInactive:(id)arg1;
- (void)scheduleAdReloadTimer;
- (void)deactivateReloadTimer;
- (void)reloadCurrentRequest;
- (void)setAdType:(id)arg1 andReloadRequest:(_Bool)arg2;
- (_Bool)canEnableActiveViewMonitoring;
- (id)adFormat;
- (id)activeViewScrollJSCommandWithParams:(id)arg1;
- (id)activeViewJSCommandWithParams:(id)arg1;
- (void)activeViewMonitorDidScroll:(id)arg1;
- (void)activeViewMonitorDidRefresh:(id)arg1;
- (void)activeViewMonitorWillUnload;
- (void)executeJavaScriptCommand:(id)arg1;
- (void)unloadActiveViewMonitor;
- (void)finishActiveViewReporting;
- (void)startActiveViewReporting;
- (void)startActiveViewReportingIfEnabled;
- (void)createActiveViewMonitor;
- (_Bool)monitoredViewIsSubviewOfDeviceScreen;
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
@property(nonatomic) _Bool viewHasMadeImpression;
@property(readonly, nonatomic) _Bool monitoredViewVisible;
- (id)viewControllerForPresentingModalView;
- (void)processMediationAdResponse:(id)arg1;
- (void)presentMediatedInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBeingMediated;
- (_Bool)isSelfMediatedRewardedRequest;
- (_Bool)isMediating;
- (_Bool)changeAdTypeTo:(id)arg1;
- (id)adNetworkClassName;
@property(retain, nonatomic) GADMAdNetworkConnector *mediationConnector;
- (id)backgroundRequestParameters;
- (_Bool)requiresBackgroundSingalCollection;
- (void)loadAdURLWithParameters:(id)arg1;
- (id)requestParameters;
- (id)requestParametersForRequest:(id)arg1;
- (void)invalidJavaScriptRequest;
- (void)failedJavaScriptFile;
- (long long)requestedAdType;
- (id)adLoadActionTimeRecorder;
- (void)adDidLoadVideoWithSize:(struct CGSize)arg1;
- (void)adWillLeaveApplication;
- (void)adDidDismissScreen;
- (void)adWillDismissScreen;
- (void)adWillPresentScreen;
- (void)adWasClicked;
- (void)adFinishedLoadingContent;
- (void)adFailedToReceiveContentWithError:(id)arg1;
- (void)startedProcessingAd:(id)arg1;
- (void)adFetchingFailedWithResponseCode:(long long)arg1 error:(id)arg2;
- (void)adFetchingSucceeded;
- (void)adFetchingStartedWithURL:(id)arg1;
- (void)adURLBuildRequestCompleted;
- (void)adURLBuildRequestStarted;
- (void)adLoadingFromSecretAdURL:(id)arg1;
- (void)adLoadingFromInlineAd:(id)arg1;
- (void)adLoadingStarted;
- (void)createdAdView:(id)arg1;
- (void)processAdResponse:(id)arg1;
- (void)applicationVolumeDidChange:(id)arg1;
- (void)postVolumeNotification;
- (void)updateContentSize:(struct CGSize)arg1;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (void)invalidateState;
- (void)resetState;
- (void)willLeaveAppDueToClick;
- (void)didLoadAd;
- (void)didMakeAdImpression;
- (void)didLoadAdHTMLInWebView;
- (void)willLoadAdHTMLInWebView;
- (void)willStartAdRendering;
- (void)didReceiveValidAd;
- (void)didFailToReceiveAdWithError:(id)arg1 shouldCancelPendingActions:(_Bool)arg2;
- (void)willProcessMediationResponse;
- (void)didFetchAdContent;
- (void)willFetchAdContent;
- (void)didReceiveAdURL;
- (void)didFailToRetrieveSDKCoreWithError:(id)arg1;
- (void)willRequestAdURL;
- (void)setState:(long long)arg1;
@property(readonly, nonatomic) long long state;
- (void)loadAdNetworkJavaScriptRequest:(id)arg1;
- (void)didChangeDeviceOrientation;
- (void)addCreativeOrientationChangeObserver:(id)arg1 selector:(SEL)arg2;
- (void)endListeningToDeviceOrientationChangeEvent;
- (void)beginListeningToDeviceOrientationChangeEvent;
- (void)unloadAdView:(id)arg1;
- (void)handleError:(id)arg1 action:(id)arg2;
- (id)forcedAdOrientation;
- (void)updatePositionFromView:(id)arg1;
- (void)updateVisibility:(_Bool)arg1;
- (void)MRAIDAdDidUnload;
- (void)MRAIDAdDidLoad;
- (void)SDKDidBecomeReady;
- (void)notifyDeviceFeatures;
- (void)notifyOrientationToMRAIDCreative;
- (id)creativePositionDictionaryForActiveViewBounds:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOPlaceholderView : UIView
{
    id _keyWindowObserver;
}

- (void).cxx_destruct;
- (void)moveToMainWindow;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)didMoveToWindow;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInit;

@end

@interface GADOApplication : NSObject <GADOConfigurationDelegate, GADOStatisticDictionaryDelegate>
{
    GADOAd *_backgroundingAd;
    id <NSObject> _appBecameActiveObserver;
    id <NSObject> _appWillEnterForegroundObserver;
    id <NSObject> _appWillResignActiveObserver;
    GADOContentQueue *_contentQueue;
    GADOScheduler *_scheduler;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSArray *_availableAdapterNames;
    unsigned long long _activeViewID;
    NSString *_version;
    NSString *_mainBundleIdentifier;
    _Bool _appFinishedLaunching;
    _Bool _hasRunAdditionalEarlyActivities;
    _Bool _backgroundLoadingEnabled;
    _Bool _needsConfigurationUpdate;
    _Bool _isConfigurationUpdatePublisherInitiated;
    GADOConfiguration *_configuration;
    NSMutableSet *_adRequesters;
    unsigned long long _mainWindowSupportedInterfaceOrientations;
    _Bool _debugModeEnabled;
    NSString *_sessionIdentifier;
    GADOStatisticDictionary *_statistics;
    GADOStatisticDictionary *_nativeAdStatistics;
    NSString *_inAppPreviewCreativeToken;
    NSString *_UUIDString;
    NSObject<OS_dispatch_queue> *_notificationSerialQueue;
    NSObject<OS_dispatch_queue> *_statisticsSerialQueue;
    unsigned long long _sequenceNumber;
    NSMutableSet *_adStatistics;
}

+ (id)sharedInstance;
+ (void)load;
@property(readonly, nonatomic) NSMutableSet *adStatistics; // @synthesize adStatistics=_adStatistics;
@property(nonatomic) unsigned long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *statisticsSerialQueue; // @synthesize statisticsSerialQueue=_statisticsSerialQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notificationSerialQueue; // @synthesize notificationSerialQueue=_notificationSerialQueue;
@property(readonly, nonatomic) NSString *UUIDString; // @synthesize UUIDString=_UUIDString;
@property(copy, nonatomic) NSString *inAppPreviewCreativeToken; // @synthesize inAppPreviewCreativeToken=_inAppPreviewCreativeToken;
@property(nonatomic) _Bool debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
@property(readonly, copy, nonatomic) GADOStatisticDictionary *nativeAdStatistics; // @synthesize nativeAdStatistics=_nativeAdStatistics;
@property(readonly, copy, nonatomic) GADOStatisticDictionary *statistics; // @synthesize statistics=_statistics;
@property(readonly, copy, nonatomic) NSString *sessionIdentifier; // @synthesize sessionIdentifier=_sessionIdentifier;
- (void).cxx_destruct;
- (void)openURL:(id)arg1 strictUniversalLink:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)openURL:(id)arg1;
- (long long)topViewControllerOrientation;
- (_Bool)supportsOrientations:(unsigned long long)arg1;
- (unsigned long long)mainWindowSupportedInterfaceOrientations;
- (_Bool)isSplitScreenEnabled;
- (id)parameters;
- (unsigned long long)nextActiveViewID;
- (void)GADOLinkCategories;
- (void)didUpdateStatisticDictionary:(id)arg1;
- (id)notificationQueue;
- (id)pendingAdStatistics;
@property(readonly, copy, nonatomic) UIViewController *topViewController;
- (id)mainWindow;
- (id)placeholderView;
- (id)iTunesMetadata;
- (id)iTunesMetadataPath;
@property(readonly, nonatomic) _Bool backgroundReloadingEnabled;
@property(readonly, nonatomic) _Bool backgroundLoadingEnabled;
- (void)enableBackgroundAdLoading;
@property(readonly, nonatomic) _Bool active;
- (void)appDidFinishLaunching;
@property(readonly, copy, nonatomic) NSString *mainBundleIdentifier;
@property(readonly, copy, nonatomic) NSString *version;
- (void)runAdditionalEarlyActivities;
- (void)runEarlyActivities;
- (void)dealloc;
- (id)init;
- (void)stopContentHashing;
- (void)startContentHashing;
- (id)fingerprintWithServedPenaltyDeduction;
- (void)configurationDidUpdate:(id)arg1;
- (void)loadServerSideConfigurationIfNeeded;
- (void)loadServerSideConfigurationForPublisherRequest;
- (void)refreshServerSideConfiguration;
- (id)javaScriptForRequestingServerSideConfiguration;
@property(readonly, nonatomic) GADOConfiguration *configuration;
- (void)createConfiguration;
- (void)updateAvailableAdapterNamesWithPotentialAdapterNames:(id)arg1;
- (void)setAvailableAdapterNames:(id)arg1;
@property(readonly, copy) NSArray *availableAdapterNames;
- (id)nextRequestStatisticsDictionaryForSlot:(id)arg1;
- (id)timeSinceFirstAdRequestInMilliseconds;
- (id)nextSequenceNumberAsString;
- (void)incrementSequenceNumber;
- (void)incrementTotalAdClickCount;
- (long long)currentAdRequestCount;
- (void)requesterDidEndRequest:(id)arg1;
- (void)requesterWillBeginRequest:(id)arg1;
- (void)updateTimeInSession;
- (void)incrementTotalAdRequestCountInCurrentSession;
- (void)decrementTotalAdRequestCount;
- (void)incrementTotalAdRequestCount;
- (void)didNotSendAdStatistics:(id)arg1;
- (void)willResignActive;
- (void)resetTimeInSession;
- (void)resetPreqsInSession;
- (void)sendForegroundPing;
- (void)willEnterForeground;
- (void)didBecomeActive;
- (void)willLeaveApplicationDueToClickOnAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOCSIGMSGHandler : GADOGMSGHandler
{
    id <GADOCSIGMSGHandlerDelegate> _CSIDelegate;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADOCSIGMSGHandlerDelegate> CSIDelegate; // @synthesize CSIDelegate=_CSIDelegate;
- (void).cxx_destruct;
- (id)CSI;
- (void)adView:(id)arg1 didReceiveExtraAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveExperimentAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveTickAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCSINotification:(id)arg2;

@end

@interface GADOCSI : NSObject
{
    GADOCSIConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_lockQueue;
    long long _requestCount;
    NSMutableDictionary *_timeRecorders;
    NSMutableDictionary *_timestamps;
    NSString *_GWSQueryID;
}

+ (id)sharedInstance;
@property(copy) NSString *GWSQueryID; // @synthesize GWSQueryID=_GWSQueryID;
- (void).cxx_destruct;
- (long long)timestampForLabel:(id)arg1;
- (void)setTimestamp:(long long)arg1 forLabel:(id)arg2;
- (void)recordTimestampForLabel:(id)arg1;
- (id)timeRecorderForAction:(id)arg1;
- (void)sendReport;
- (id)init;

@end

@interface GADOTestLabel : UILabel
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)drawTextInRect:(struct CGRect)arg1;

@end

@interface GADOInterstitialCacheEntry : NSObject <GADOSlotDelegate, GADOAdMediationDelegate, GADOSlotAdLoadDelegate, GADOSlotAdResponseDelegate>
{
    GADOCSITimeRecorder *_timeRecorder;
    _Bool _loaded;
    GADOSlot *_slot;
    NSError *_error;
}

+ (void)sendCSIPingForTimeRecorder:(id)arg1;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) _Bool loaded; // @synthesize loaded=_loaded;
@property(readonly, nonatomic) GADOSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (_Bool)slot:(id)arg1 shouldLoadRequest:(id)arg2 error:(id *)arg3;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (void)slotDidMoveToPlacement;
- (void)dealloc;
- (id)initWithRequest:(id)arg1 adUnitID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMAdManager : NSObject <GADOMSlotDelegate, GADOMConnectorDelegate>
{
    NSMutableArray *_adNetworkConfigQueue;
    GADMAdNetworkConnector *_lastConnectorNotifiedForAClick;
    id _lastMediatedInterstitial;
    long long _pendingActionGroup;
    NSMutableArray *_failedAdapterNamesAndDurations;
    _Bool _fillStatusPingsSent;
    _Bool _requestInProgress;
    GADOMConfig *_config;
    GADOAdType *_adType;
    GADMAdNetworkConnector *_requestingConnector;
    GADMAdNetworkConnector *_receivedConnector;
    GADOSlot *_slot;
    NSTimer *_adNetworkTimeoutTimer;
}

@property(retain, nonatomic) NSTimer *adNetworkTimeoutTimer; // @synthesize adNetworkTimeoutTimer=_adNetworkTimeoutTimer;
@property(nonatomic) _Bool requestInProgress; // @synthesize requestInProgress=_requestInProgress;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADMAdNetworkConnector *receivedConnector; // @synthesize receivedConnector=_receivedConnector;
@property(retain, nonatomic) GADMAdNetworkConnector *requestingConnector; // @synthesize requestingConnector=_requestingConnector;
@property(retain, nonatomic) GADOAdType *adType; // @synthesize adType=_adType;
@property(retain, nonatomic) GADOMConfig *config; // @synthesize config=_config;
- (void).cxx_destruct;
- (id)mediationTimeRecorder;
- (void)endCSITimingWithFailedAdapter:(id)arg1;
- (void)endCSITimingWithSucceededAdapter:(id)arg1;
- (void)startCSITiming;
- (_Bool)connectorShouldReturnMediatedAd:(id)arg1;
- (void)adRequestFailedFromConnector:(id)arg1 withError:(id)arg2;
- (void)updateAdapterTimingsForConnector:(id)arg1 error:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withMediatedAd:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withInterstitial:(id)arg2;
- (void)adRequestReturnsFromConnector:(id)arg1 withView:(id)arg2;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)changeAdTypeTo:(id)arg1;
- (void)mediateForAdType:(id)arg1 config:(id)arg2;
- (_Bool)shouldProcessResponseFromConnector:(id)arg1;
- (void)adNetworkTimeoutHandler:(id)arg1;
- (void)resetRequestingState;
- (void)notifyDelegateOfFailureToReceiveWithError:(id)arg1;
- (void)reportNoFill;
- (id)dequeueAdNetworkConfig;
- (void)makeAdRequest;
- (void)cancelPendingActions;
- (void)cancel;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOModalOverlayPresenter : NSObject <GADOOverlayPresenting>
{
    GADOViewController *_presentedViewController;
    _Bool _statusBarWasHidden;
    id <NSObject> _appForegroundObserver;
}

@property(nonatomic) __weak GADOViewController *presentedViewController; // @synthesize presentedViewController=_presentedViewController;
- (void).cxx_destruct;
- (void)hideStatusBar;
- (void)appDidEnterForeground:(id)arg1;
- (void)forceUpdateViewControllerOrientation:(id)arg1;
- (void)updateViewControllerOrientation:(id)arg1;
- (void)setNeedsUpdateOrientation;
- (void)dismissWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
- (id)presentationViewController;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMAdNetworkConfig : NSObject
{
    NSString *_networkID;
    NSDictionary *_credentials;
    NSDictionary *_extras;
    NSDictionary *_ad;
    NSArray *_adapterList;
    Class _adapterClass;
    Class _RTBAdapterClass;
    NSString *_allocationID;
    NSArray *_impressionURLs;
    NSArray *_clickURLs;
    NSArray *_fillURLs;
    NSArray *_videoStartURLs;
    NSArray *_videoCompleteURLs;
    NSArray *_rewardedUserURLs;
    NSString *_responseType;
    NSArray *_slotSizes;
    double _timeout;
    NSString *_bidResponse;
}

+ (Class)mainAdapterClass;
@property(readonly, copy, nonatomic) NSString *bidResponse; // @synthesize bidResponse=_bidResponse;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, copy, nonatomic) NSArray *slotSizes; // @synthesize slotSizes=_slotSizes;
@property(readonly, copy, nonatomic) NSString *responseType; // @synthesize responseType=_responseType;
@property(readonly, copy, nonatomic) NSArray *rewardedUserURLs; // @synthesize rewardedUserURLs=_rewardedUserURLs;
@property(readonly, copy, nonatomic) NSArray *videoCompleteURLs; // @synthesize videoCompleteURLs=_videoCompleteURLs;
@property(readonly, copy, nonatomic) NSArray *videoStartURLs; // @synthesize videoStartURLs=_videoStartURLs;
@property(readonly, copy, nonatomic) NSArray *fillURLs; // @synthesize fillURLs=_fillURLs;
@property(readonly, copy, nonatomic) NSArray *clickURLs; // @synthesize clickURLs=_clickURLs;
@property(readonly, copy, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(readonly, copy, nonatomic) NSString *allocationID; // @synthesize allocationID=_allocationID;
@property(readonly, nonatomic) Class RTBAdapterClass; // @synthesize RTBAdapterClass=_RTBAdapterClass;
@property(readonly, nonatomic) Class adapterClass; // @synthesize adapterClass=_adapterClass;
@property(readonly, copy, nonatomic) NSArray *adapterList; // @synthesize adapterList=_adapterList;
@property(readonly, copy, nonatomic) NSDictionary *ad; // @synthesize ad=_ad;
@property(readonly, copy, nonatomic) NSDictionary *extras; // @synthesize extras=_extras;
@property(readonly, copy, nonatomic) NSDictionary *credentials; // @synthesize credentials=_credentials;
@property(readonly, copy, nonatomic) NSString *networkID; // @synthesize networkID=_networkID;
- (void).cxx_destruct;
- (id)adNetworkClassName;
- (_Bool)setError:(id *)arg1 withErrorCode:(long long)arg2 errorMessage:(id)arg3;
- (id)errorMessageForMissingAdapterClasses:(id)arg1;
- (id)description;
- (_Bool)resolveAdNetworkClassForCustomEventWithError:(id *)arg1;
@property(readonly, copy, nonatomic) NSString *publisherID;
- (id)initWithDictionary:(id)arg1 adFormat:(long long)arg2 error:(id *)arg3;

@end

@interface GADORequest : NSObject <NSCopying>
{
    NSMutableDictionary *_networkExtrasMap;
    _Bool _autoRefresh;
    _Bool _instreamAdRequest;
    NSArray *_testDevices;
    NSArray *_keywords;
    NSString *_contentURL;
    NSString *_requestAgent;
    long long _gender;
    NSDate *_birthday;
    GADOLocation *_location;
    NSNumber *_childDirectedTreatment;
    NSDictionary *_customTargeting;
    NSDictionary *_privateMediationExtras;
    NSArray *_formatParameters;
    long long _responseType;
    NSDictionary *_adConfigurationParameters;
    NSString *_origin;
    NSString *_instreamAdVideoOrientation;
}

+ (id)sdkVersion;
+ (id)extendedSDKVersionNumber;
+ (long long)requestTypeFromString:(id)arg1;
+ (void)initialize;
+ (id)request;
+ (id)requestWithMediationAdRequest:(id)arg1;
@property(nonatomic) NSString *instreamAdVideoOrientation; // @synthesize instreamAdVideoOrientation=_instreamAdVideoOrientation;
@property(nonatomic) _Bool instreamAdRequest; // @synthesize instreamAdRequest=_instreamAdRequest;
@property(nonatomic) _Bool autoRefresh; // @synthesize autoRefresh=_autoRefresh;
@property(copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(copy, nonatomic) NSDictionary *adConfigurationParameters; // @synthesize adConfigurationParameters=_adConfigurationParameters;
@property(nonatomic) long long responseType; // @synthesize responseType=_responseType;
@property(copy, nonatomic) NSArray *formatParameters; // @synthesize formatParameters=_formatParameters;
@property(copy, nonatomic) NSDictionary *privateMediationExtras; // @synthesize privateMediationExtras=_privateMediationExtras;
@property(copy, nonatomic) NSDictionary *customTargeting; // @synthesize customTargeting=_customTargeting;
@property(copy, nonatomic) NSNumber *childDirectedTreatment; // @synthesize childDirectedTreatment=_childDirectedTreatment;
@property(copy, nonatomic) GADOLocation *location; // @synthesize location=_location;
@property(copy, nonatomic) NSDate *birthday; // @synthesize birthday=_birthday;
@property(nonatomic) long long gender; // @synthesize gender=_gender;
@property(copy, nonatomic) NSString *requestAgent; // @synthesize requestAgent=_requestAgent;
@property(copy, nonatomic) NSString *contentURL; // @synthesize contentURL=_contentURL;
@property(copy, nonatomic) NSArray *keywords; // @synthesize keywords=_keywords;
@property(copy, nonatomic) NSArray *testDevices; // @synthesize testDevices=_testDevices;
- (void).cxx_destruct;
- (void)setLocationWithDescription:(id)arg1;
- (void)setBirthdayWithMonth:(long long)arg1 day:(long long)arg2 year:(long long)arg3;
@property(readonly, nonatomic) _Bool cacheable;
- (id)parameters;
- (id)threadSafeParameters;
- (_Bool)isATestDevice;
- (void)tagForChildDirectedTreatment:(_Bool)arg1;
- (void)setLocationWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;
- (id)contentURLString;
- (id)birthdayString;
- (id)genderString;
- (id)networkExtrasAdditionalParameters;
- (void)removeAdNetworkExtrasFor:(Class)arg1;
- (id)adNetworkExtrasFor:(Class)arg1;
- (void)registerAdNetworkExtras:(id)arg1;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;
- (id)init;
- (void)configureNetworkExtrasWithMediationAdRequest:(id)arg1;
- (void)addAdapterListWithMediationAdRequest:(id)arg1;

@end

@interface GADOSDKCoreGMSGHandler : GADOGMSGHandler <GADOAdFetcherDelegate, GADOResourceCacheDelegate>
{
    NSMutableDictionary *_adFetchers;
    NSMutableDictionary *_resourceCaches;
    NSMutableSet *_SDKCoreRefreshPauseIDs;
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADOSDKCoreWebView *_SDKCoreWebView;
    id <GADOSDKCoreGMSGHandlerDelegate> _delegate;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak id <GADOSDKCoreGMSGHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak GADOSDKCoreWebView *SDKCoreWebView; // @synthesize SDKCoreWebView=_SDKCoreWebView;
- (void).cxx_destruct;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resourceCacheDidReceiveResponse:(id)arg1;
- (void)resourceCacheDidStartCaching:(id)arg1;
- (void)notifyCacheDictionary:(id)arg1 fileDictionary:(id)arg2 requestID:(id)arg3 error:(id)arg4;
- (void)notifyResourceCache:(id)arg1 status:(id)arg2 cachingInProgress:(_Bool)arg3 error:(id)arg4;
- (id)requestIDForResourceCache:(id)arg1;
- (void)adFetcher:(id)arg1 didFailToFetchAd:(id)arg2 withError:(id)arg3 responseCode:(unsigned long long)arg4;
- (void)adFetcher:(id)arg1 didFetchAd:(id)arg2;
- (_Bool)isFetchInProgressForFetchRequestID:(id)arg1;
- (void)removeAdFetcherForFetchRequestID:(id)arg1;
- (void)setAdFetcher:(id)arg1 forFetchRequestID:(id)arg2;
- (id)fetchRequestIDForAdFetcher:(id)arg1;
- (void)failedToFetchAd:(id)arg1 forRequestID:(id)arg2 withError:(id)arg3 responseCode:(long long)arg4;
- (void)fetchedAd:(id)arg1 forFetchRequestID:(id)arg2 responseCode:(long long)arg3;
- (void)adView:(id)arg1 didReceiveSDKCoreRefreshAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCleanupCacheDirectoryAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveResourceStatusCheckAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveRemoveResourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveCacheResourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveResultAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSDKCoreSaveState:(id)arg2;
- (void)adView:(id)arg1 didReceiveAppSettings:(id)arg2;
- (void)adView:(id)arg1 didReceiveFetchAdAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSDKCoreReloadRequestWithParameters:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadAdAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveloadSDKConstantsAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveInvalidAdRequestAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveloadAdURLAction:(id)arg2;
- (id)resourceCacheForFileURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOStatisticDictionary : NSObject
{
    NSMutableDictionary *_statistics;
    _Bool _allowDictionaryModification;
    _Bool _hasEnqueuedNotificationBlock;
    id <GADOStatisticDictionaryDelegate> _delegate;
    NSLock *_delegateLock;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSMutableDictionary *_arrayMaxSize;
}

@property(retain, nonatomic) NSMutableDictionary *arrayMaxSize; // @synthesize arrayMaxSize=_arrayMaxSize;
@property(nonatomic) _Bool hasEnqueuedNotificationBlock; // @synthesize hasEnqueuedNotificationBlock=_hasEnqueuedNotificationBlock;
@property(nonatomic) _Bool allowDictionaryModification; // @synthesize allowDictionaryModification=_allowDictionaryModification;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(retain, nonatomic) NSLock *delegateLock; // @synthesize delegateLock=_delegateLock;
@property(nonatomic) __weak id <GADOStatisticDictionaryDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)removeAllObjects;
- (void)resizeArray:(id)arg1 toMaxSize:(long long)arg2;
- (id)dictionary;
- (void)setMaxSize:(long long)arg1 forArrayWithKey:(id)arg2;
- (void)addObject:(id)arg1 toArrayWithKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)decrementNumberForKey:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (void)incrementNumberForKey:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (void)addNumber:(id)arg1 toNumberForKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)addEntriesFromDictionary:(id)arg1 shouldNotifyDelegate:(_Bool)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 shouldNotifyDelegate:(_Bool)arg3;
- (void)dispatchAsyncShouldNotifyDelegate:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)enqueueNotificationBlock;
- (void)didFinishModifying;
- (id)description;
- (id)init;
- (id)initWithDelegate:(id)arg1;
- (id)initWithQueueLabel:(const char *)arg1 delegate:(id)arg2;

@end

@interface GADOMediaView : UIView <GADOMediaContentDelegate>
{
    UIView *_mediaView;
    id <GADOMediaContentDisplaying> _mediaContent;
}

- (void).cxx_destruct;
- (void)mediaContent:(id)arg1 didLoadVideoWithSize:(struct CGSize)arg2;
- (void)didMoveToWindow;
- (void)setMediaContent:(id)arg1;
- (struct CGSize)intrinsicContentSize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOWKScriptMessageHandler : NSObject
{
    GADOWebKitWebView *_webView;
}

- (void).cxx_destruct;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOWebKitWebView : GADOWebView
{
    _Bool _isMRAIDLoaded;
    _Bool _isViewportLoaded;
    _Bool _scalesPageToFit;
    id <GADOWebKitWebViewMRAIDDelegate> _MRAIDDelegate;
}

+ (_Bool)isAvailable;
+ (void)initialize;
@property(nonatomic) __weak id <GADOWebKitWebViewMRAIDDelegate> MRAIDDelegate; // @synthesize MRAIDDelegate=_MRAIDDelegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4;
- (void)webViewWebContentProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (_Bool)contentSizeUpdatesSynchronously;
- (void)loadRequest:(id)arg1;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)loadUserScripts;
- (void)loadViewport;
- (void)loadMRAID;
- (void)addUserScript:(id)arg1 injectionTime:(long long)arg2;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMConfig : NSObject
{
    NSMutableArray *_adNetworkConfigs;
    _Bool _allowPublisherRenderedAttribution;
    _Bool _viewAwareAPIAllowed;
    _Bool _customClickGestureAllowed;
    NSDictionary *_RTBAdapters;
    double _refreshInterval;
    long long _bannerAnimationType;
    double _adNetworkTimeout;
    double _finalAdNetworkTimeout;
    long long _impressionDefinition;
    NSArray *_impressionURLs;
    NSArray *_downloadedImpressionURLs;
    NSArray *_clickURLs;
    NSArray *_noFillURLs;
    NSString *_qdata;
    NSString *_appKey;
    NSArray *_rewards;
    NSString *_defaultSlotSize;
    NSString *_defaultAdSize;
}

@property(readonly, copy, nonatomic) NSString *defaultAdSize; // @synthesize defaultAdSize=_defaultAdSize;
@property(readonly, copy, nonatomic) NSString *defaultSlotSize; // @synthesize defaultSlotSize=_defaultSlotSize;
@property(copy, nonatomic) NSArray *rewards; // @synthesize rewards=_rewards;
@property(copy, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
@property(copy, nonatomic) NSString *qdata; // @synthesize qdata=_qdata;
@property(copy, nonatomic) NSArray *noFillURLs; // @synthesize noFillURLs=_noFillURLs;
@property(copy, nonatomic) NSArray *clickURLs; // @synthesize clickURLs=_clickURLs;
@property(copy, nonatomic) NSArray *downloadedImpressionURLs; // @synthesize downloadedImpressionURLs=_downloadedImpressionURLs;
@property(copy, nonatomic) NSArray *impressionURLs; // @synthesize impressionURLs=_impressionURLs;
@property(nonatomic) _Bool customClickGestureAllowed; // @synthesize customClickGestureAllowed=_customClickGestureAllowed;
@property(readonly, nonatomic) _Bool viewAwareAPIAllowed; // @synthesize viewAwareAPIAllowed=_viewAwareAPIAllowed;
@property(readonly, nonatomic) _Bool allowPublisherRenderedAttribution; // @synthesize allowPublisherRenderedAttribution=_allowPublisherRenderedAttribution;
@property(readonly, nonatomic) long long impressionDefinition; // @synthesize impressionDefinition=_impressionDefinition;
@property(readonly, nonatomic) double finalAdNetworkTimeout; // @synthesize finalAdNetworkTimeout=_finalAdNetworkTimeout;
@property(readonly, nonatomic) double adNetworkTimeout; // @synthesize adNetworkTimeout=_adNetworkTimeout;
@property(nonatomic) long long bannerAnimationType; // @synthesize bannerAnimationType=_bannerAnimationType;
@property(nonatomic) double refreshInterval; // @synthesize refreshInterval=_refreshInterval;
@property(readonly, copy, nonatomic) NSDictionary *RTBAdapters; // @synthesize RTBAdapters=_RTBAdapters;
@property(readonly, copy, nonatomic) NSArray *adNetworkConfigs; // @synthesize adNetworkConfigs=_adNetworkConfigs;
- (void).cxx_destruct;
- (void)clearRTBAdapters;
- (id)mediationAdapterForClass:(Class)arg1;
- (_Bool)parseConfig:(id)arg1 error:(id *)arg2;
- (_Bool)parseSettingsConfig:(id)arg1 error:(id *)arg2;
- (id)description;
- (id)init;
- (id)initWithAppKey:(id)arg1 configDict:(id)arg2 error:(id *)arg3;

@end

@interface GADOSDKCoreWebView : NSObject <GADOActiveViewGMSGHandlerDelegate, GADOAdViewDelegate>
{
    long long _state;
    _Bool _hasSDKCoreLoadedAtLeastOnce;
    NSMutableArray *_pendingJSCommands;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSObject<OS_dispatch_queue> *_commandQueue;
    NSMutableSet *_SDKCoreObservers;
    GADOAdViewDelegate *_adViewDelegate;
    GADOAdView *_adView;
    GADOActiveViewGMSGHandler *_activeViewGMSGHandler;
    NSMapTable *_activeViewObservers;
    NSMutableSet *_runningActiveViewObserverIdentifiers;
    GADOCSI *_CSI;
    GADOSDKCoreGMSGHandler *_SDKCoreGMSGHandler;
}

@property(retain, nonatomic) GADOSDKCoreGMSGHandler *SDKCoreGMSGHandler; // @synthesize SDKCoreGMSGHandler=_SDKCoreGMSGHandler;
- (void).cxx_destruct;
- (_Bool)isActiveViewRunning;
- (void)clearAllActiveViewInstances;
- (void)removeActiveViewObserverForActiveViewID:(unsigned long long)arg1;
- (void)setActiveViewObserver:(id)arg1 forActiveViewID:(unsigned long long)arg2;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)willRefreshSDKCore;
- (void)dispatchPendingJavaScriptCommands;
- (void)enqueueJavaScriptCommand:(id)arg1;
@property _Bool hasSDKCoreLoadedAtLeastOnce;
@property long long state;
- (void)notifyAllObserversOnlyOnceThatSDKCoreRequestIsFinished;
- (void)refreshSDKCoreAndNotifyObserver:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserverForOneTimeNotification:(id)arg1;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1;
- (void)activeViewGMSGHandler:(id)arg1 didReceiveVisibilityNotification:(_Bool)arg2 forActiveViewID:(unsigned long long)arg3;
- (void)activeViewGMSGHandler:(id)arg1 didReceiveUntrackNotificationForActiveViewID:(unsigned long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediatedAd : NSObject
{
    NSMutableArray *_clickHandlers;
    NSMutableArray *_impressionHandlers;
    NSMutableArray *_downloadedImpressionHandlers;
    NSString *_adNetworkClassName;
}

@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
- (void).cxx_destruct;
- (void)addDownloadedImpressionHandler:(CDUnknownBlockType)arg1;
- (void)addImpressionHandler:(CDUnknownBlockType)arg1;
- (void)addClickHandler:(CDUnknownBlockType)arg1;
- (void)reportDownloadedImpression;
- (void)reportImpression;
- (void)reportClick;
- (id)loadableAdForAdLoader:(id)arg1;
- (id)init;

@end

@interface GADOAutoClickProtection : NSObject
{
    NSArray *_reportingURLStringTemplates;
    _Bool _enabled;
}

@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)reportSpamOpenActionWithNavigationURLString:(id)arg1;
- (void)reportSpamOpenActionWithAdDebugDialogString:(id)arg1 navigationURLString:(id)arg2;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAutoClickProtectionEnabled:(_Bool)arg1;

@end

@interface GADOCSIVariableTiming : NSObject
{
    NSString *_name;
    double _start;
    double _length;
}

@property(nonatomic) double length; // @synthesize length=_length;
@property(nonatomic) double start; // @synthesize start=_start;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)resigningActive;
@property(readonly, nonatomic) _Bool isValid;
- (void)dealloc;
- (id)initWithName:(id)arg1 startTime:(double)arg2;
- (id)init;

@end

@interface GADOVideoAssetLoader : NSObject
{
    NSURL *_sourceURL;
    GADOResourceCache *_mainResourceCache;
    GADOVideoConfiguration *_videoConfiguration;
    GADOResourceCache *_resourceCache;
    long long _resourceCacheStartingByteOffset;
    unsigned long long _downloadedBytes;
    unsigned long long _videoSizeInBytes;
    NSString *_contentType;
    GADOClearcutLogger *_logger;
}

+ (void)initialize;
- (void).cxx_destruct;
- (void)finishedUsingResourceCache:(id)arg1;
- (_Bool)getResourceCache:(id *)arg1 startingByteOffset:(long long *)arg2 loadingByteOffset:(long long)arg3 error:(id *)arg4;
- (void)resetEventLogger;
- (void)dealloc;
- (id)initWithVideoURL:(id)arg1 resourceCache:(id)arg2 videoConfiguration:(id)arg3;

@end

@interface GADMAdNetworkConnector : NSObject <GADOMInternalAdNetworkConnector, GADOMediationAdRequestInternal>
{
    NSDictionary *_strippedCredentials;
    _Bool _isLocationShared;
    _Bool _hasReportedImpression;
    NSMutableArray *_retainedObjects;
    _Bool _didNetworkRefresh;
    _Bool _clicked;
    GADOMAdNetworkConfig *_networkConfig;
    GADOMAdManager *_adManager;
    GADOMConfig *_mediationConfig;
    GADOAdLoaderConfiguration *_adLoaderConfiguration;
    id <GADMAdNetworkAdapter> _adapter;
}

@property(nonatomic, getter=isClicked) _Bool clicked; // @synthesize clicked=_clicked;
@property(nonatomic) _Bool didNetworkRefresh; // @synthesize didNetworkRefresh=_didNetworkRefresh;
@property(retain, nonatomic) id <GADMAdNetworkAdapter> adapter; // @synthesize adapter=_adapter;
@property(retain, nonatomic) GADOAdLoaderConfiguration *adLoaderConfiguration; // @synthesize adLoaderConfiguration=_adLoaderConfiguration;
@property(retain, nonatomic) GADOMConfig *mediationConfig; // @synthesize mediationConfig=_mediationConfig;
@property(nonatomic) __weak GADOMAdManager *adManager; // @synthesize adManager=_adManager;
@property(retain, nonatomic) GADOMAdNetworkConfig *networkConfig; // @synthesize networkConfig=_networkConfig;
- (void).cxx_destruct;
- (void)adapter:(id)arg1 clickDidOccurInBanner:(id)arg2;
- (void)adapter:(id)arg1 didReceiveInterstitial:(id)arg2;
- (_Bool)adMuted;
- (float)adVolume;
- (void)reportFill;
- (void)reportManualImpression;
- (void)reportDownloadedImpression;
- (void)reportImpression;
- (void)reportClick;
- (void)pingMediationURLs:(id)arg1 defaultURL:(id)arg2 durations:(id)arg3 exitCodes:(id)arg4 fillStatus:(id)arg5 eventType:(id)arg6;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (double)croppedContentThreshold;
- (struct CGSize)adSize;
- (id)underAgeOfConsent;
- (id)maxAdContentRating;
- (id)childDirectedTreatment;
- (id)userKeywords;
- (id)userLocationDescription;
- (double)userLocationAccuracyInMeters;
- (double)userLongitude;
- (double)userLatitude;
- (_Bool)userHasLocation;
- (id)userLocation;
- (id)userBirthday;
- (long long)userGender;
- (id)viewControllerForPresentingModalView;
- (id)networkExtrasForClass:(Class)arg1;
- (id)networkExtras;
- (_Bool)testMode;
- (id)credentials;
- (id)publisherId;
- (id)slot;
- (id)userRequestAgent;
- (id)currentAdapterName;
- (id)adapterNames;
- (id)extras;
- (id)inlineAd;
- (void)dealloc;
- (void)askAdapterToStopBeingDelegate;
- (void)getAdFromAdapterWithType:(id)arg1;
- (id)adapterVersion;
- (void)retainAdapterObject:(id)arg1;
- (void)setUpAdapter;
- (id)initWithConfig:(id)arg1 networkConfig:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOVideoLoader : NSObject <AVAssetResourceLoaderDelegate>
{
    NSURL *_sourceURL;
    GADOGCacheURLLoader *_gcacheURLLoader;
    _Bool _hasNotifiedVideoLoadingStarted;
    _Bool _hasNotifiedVideoLoadingFailed;
    NSMutableArray *_pendingRequests;
    AVURLAsset *_cachedResourceAsset;
    _Bool _isObservingResourceCache;
    GADOResourceCache *_resourceCache;
    GADOVideoPlayer *_player;
    GADOVideoConfiguration *_configuration;
    GADOAssetLoadingVideoPlayerItem *_assetLoadingPlayerItem;
    _Bool _hasBeenUsed;
    AVPlayerItem *_playerItem;
    id <GADOVideoLoaderDelegate> _delegate;
}

@property(readonly, nonatomic) _Bool hasBeenUsed; // @synthesize hasBeenUsed=_hasBeenUsed;
@property(nonatomic) __weak id <GADOVideoLoaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) AVPlayerItem *playerItem; // @synthesize playerItem=_playerItem;
- (void).cxx_destruct;
- (void)resourceCacheDidUpdateCacheNotification:(id)arg1;
- (void)stopObservingResourceCacheUpdates;
- (void)observeResourceCacheUpdates;
- (void)resourceLoader:(id)arg1 didCancelLoadingRequest:(id)arg2;
- (_Bool)processAssetResourceLoadingRequest:(id)arg1 withError:(id *)arg2;
- (_Bool)resourceLoader:(id)arg1 shouldWaitForLoadingOfRequestedResource:(id)arg2;
- (void)notifyVideoLoaderFailedToLoadURL:(id)arg1 withError:(id)arg2;
- (void)notifyVideoLoaderDidStartLoadingURL:(id)arg1;
- (void)loadWithResourceCache:(id)arg1;
- (void)loadAdvanceControlVideoURL:(id)arg1 resourceCache:(id)arg2;
- (void)loadGCacheURL:(id)arg1;
- (void)loadStandardURL:(id)arg1;
- (void)cancel;
- (void)dealloc;
- (void)loadURL:(id)arg1 resourceCache:(id)arg2 configuration:(id)arg3;
- (id)initWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOFramerateMonitor : NSObject
{
    NSHashTable *_observers;
    CADisplayLink *_displayLink;
    _Bool _hasFirstFrameInfo;
    double _frameDuration;
    double _lastDrawTimestamp;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)handleRenderForDisplayLink:(id)arg1;
- (long long)droppedFrameCountBetweenLastRenderAndTimestamp:(double)arg1;
- (void)removeFramerateObserver:(id)arg1;
- (void)addFramerateObserver:(id)arg1;
- (void)stopIfNeeded;
- (void)startIfNeeded;
- (void)dealloc;
- (id)init;

@end

@interface GADMAdapterGoogleAdMobAds : NSObject <GADMRewardBasedVideoAdNetworkAdapter, GADORewardBasedVideoAdClickDelegate, GADRewardBasedVideoAdDelegate, GADAppEventDelegate, GADMAdNetworkAdapter, GADOInterstitialAdClickDelegate, GADNativeAppInstallAdLoaderDelegate, GADNativeContentAdLoaderDelegate, GADNativeCustomTemplateAdLoaderDelegate>
{
    GADOBannerView *_bannerView;
    GADOInterstitial *_interstitial;
    GADORewardBasedVideoAd *_rewardBasedVideoAd;
    GADOAdLoader *_adLoader;
    GADMAdNetworkConnector<GADMAdNetworkConnector> *_connector;
    id <GADMRewardBasedVideoAdNetworkConnector> _rewardBasedVideoAdNetworkConnector;
    id <GADAppEventDelegate> _appEventDelegate;
    id _manualImpressionObserver;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)adLoader:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeCustomTemplateAd:(id)arg2;
- (id)nativeCustomTemplateIDsForAdLoader:(id)arg1;
- (void)adLoader:(id)arg1 didReceiveNativeContentAd:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeAppInstallAd:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveNativeAd:(id)arg2;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)changeAdSizeTo:(struct GADOAdSize)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getNativeAdWithAdTypes:(id)arg1 options:(id)arg2;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id)arg1;
- (void)dealloc;
- (id)request;
- (void)rewardBasedVideoAdDidReceiveAdClick:(id)arg1;
- (void)rewardBasedVideoAdMetadataDidChange:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)rewardBasedVideoAd:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)rewardBasedVideoAdWillLeaveApplication:(id)arg1;
- (void)rewardBasedVideoAdDidClose:(id)arg1;
- (void)rewardBasedVideoAdDidCompletePlaying:(id)arg1;
- (void)rewardBasedVideoAdDidStartPlaying:(id)arg1;
- (void)rewardBasedVideoAdDidOpen:(id)arg1;
- (void)rewardBasedVideoAdDidReceiveAd:(id)arg1;
- (void)presentRewardBasedVideoAdWithRootViewController:(id)arg1;
- (void)stopLoadingRewardBasedVideoAd;
- (void)requestRewardBasedVideoAd;
- (void)setUp;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediationCredentials : NSObject
{
    NSDictionary *_settings;
    long long _format;
}

@property(readonly, nonatomic) long long format; // @synthesize format=_format;
@property(readonly, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)initWithAdFormat:(long long)arg1 credentials:(id)arg2;

@end

@interface GADOMediationServerConfiguration : NSObject
{
    NSMutableSet *_credentials;
}

- (void).cxx_destruct;
- (void)addMediationCredentials:(id)arg1;
@property(readonly, nonatomic) NSArray *credentials;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADOURLProtocol : NSURLProtocol <NSURLConnectionDelegate>
{
    NSURL *_substituteURL;
    NSURLConnection *_connection;
    NSThread *_clientThread;
    NSString *_adRequestIdentifier;
    NSArray *_requestIdentifiers;
}

+ (id)canonicalRequestForRequest:(id)arg1;
+ (_Bool)canInitWithRequest:(id)arg1;
- (void).cxx_destruct;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)stopLoading;
- (void)startLoading;
- (void)configureMRAIDLocationWithRequest:(id)arg1;
- (id)initWithRequest:(id)arg1 cachedResponse:(id)arg2 client:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOSearchBannerView : GADOBannerView <GADODynamicHeightSearchBannerViewDelegate>
{
    GADODynamicHeightSearchBannerView *_dynamicHeightAdView;
}

@property(retain, nonatomic) GADODynamicHeightSearchBannerView *dynamicHeightAdView; // @synthesize dynamicHeightAdView=_dynamicHeightAdView;
- (void).cxx_destruct;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerView:(id)arg1 didUpdateDesiredContentSize:(struct CGSize)arg2;
- (void)bannerView:(id)arg1 didReceiveLandingPageURL:(id)arg2;
- (void)bannerViewDidReceiveAd:(id)arg1;
- (void)setAdUnitID:(id)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)loadRequest:(id)arg1;
- (void)commonInitWithAdSize:(struct GADOAdSize)arg1;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOSearchRequest : GADORequest
{
    NSString *_query;
    UIColor *_backgroundColor;
    UIColor *_gradientFrom;
    UIColor *_gradientTo;
    UIColor *_headerColor;
    UIColor *_descriptionTextColor;
    UIColor *_anchorTextColor;
    NSString *_fontFamily;
    unsigned long long _headerTextSize;
    UIColor *_borderColor;
    unsigned long long _borderType;
    unsigned long long _borderThickness;
    NSString *_customChannels;
    unsigned long long _callButtonColor;
}

@property(nonatomic) unsigned long long callButtonColor; // @synthesize callButtonColor=_callButtonColor;
@property(copy, nonatomic) NSString *customChannels; // @synthesize customChannels=_customChannels;
@property(nonatomic) unsigned long long borderThickness; // @synthesize borderThickness=_borderThickness;
@property(nonatomic) unsigned long long borderType; // @synthesize borderType=_borderType;
@property(copy, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic) unsigned long long headerTextSize; // @synthesize headerTextSize=_headerTextSize;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(copy, nonatomic) UIColor *anchorTextColor; // @synthesize anchorTextColor=_anchorTextColor;
@property(copy, nonatomic) UIColor *descriptionTextColor; // @synthesize descriptionTextColor=_descriptionTextColor;
@property(copy, nonatomic) UIColor *headerColor; // @synthesize headerColor=_headerColor;
@property(copy, nonatomic) UIColor *gradientTo; // @synthesize gradientTo=_gradientTo;
@property(copy, nonatomic) UIColor *gradientFrom; // @synthesize gradientFrom=_gradientFrom;
@property(copy, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (_Bool)cacheable;
- (void)setBackgroundGradientFrom:(id)arg1 toColor:(id)arg2;
- (void)setBackgroundSolid:(id)arg1;
- (id)threadSafeParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;

@end

@interface GADOMediatedBannerAd : GADOMediatedAd
{
    GADOMAdNetworkConnectorBanner *_connector;
    UIView *_view;
}

@property(readonly, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (id)loadableAdForAdLoader:(id)arg1;
- (id)initWithView:(id)arg1 bannerConnector:(id)arg2;

@end

@interface GADOProductsRequest : NSObject
{
    SKProductsRequest *_request;
    CDUnknownBlockType _completionHandler;
    GADOProductsRequest *_retainCycle;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasCompleted
}

- (void).cxx_destruct;
- (void)request:(id)arg1 didFailWithError:(id)arg2;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)completedWithValidProducts:(id)arg1 invalidProductIDs:(id)arg2 error:(id)arg3;
- (void)startWithProductIdentifiers:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOClickTrackerCollection : NSObject <GADOClickTrackerDelegate>
{
    NSMutableSet *_trackers;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableSet *trackers; // @synthesize trackers=_trackers;
- (void).cxx_destruct;
- (void)trackerDidFinishTracking:(id)arg1;
- (void)cleanupTrackers;
- (void)trackURL:(id)arg1;
- (void)trackURLs:(id)arg1;
- (void)dealloc;
- (id)init;
- (void)trackMediationURLsFromTemplates:(id)arg1 defaultTemplate:(id)arg2 networkID:(id)arg3 allocationID:(id)arg4 qData:(id)arg5 appKey:(id)arg6 refresh:(_Bool)arg7 durations:(id)arg8 exitCodes:(id)arg9 fillStatus:(id)arg10 eventType:(id)arg11 analyticsLoggingEnabled:(_Bool)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdFetcher : NSObject <GADOURLConnectionDelegate>
{
    _Bool _hasStartedFetch;
    _Bool _hasNotifiedDelegate;
    NSString *_signedInAdsToken;
    NSUUID *_currentNetworkRequestIdentifier;
    _Bool _adConnectionHasCompleted;
    NSRecursiveLock *_recursiveLock;
    GADOAd *_ad;
    GADORequest *_request;
    id <GADOAdFetcherDelegate> _delegate;
    GADOTiming *_timer;
    GADOURLConnection *_adConnection;
}

@property(nonatomic) _Bool adConnectionHasCompleted; // @synthesize adConnectionHasCompleted=_adConnectionHasCompleted;
@property(retain, nonatomic) GADOURLConnection *adConnection; // @synthesize adConnection=_adConnection;
@property(retain, nonatomic) GADOTiming *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak id <GADOAdFetcherDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADORequest *request; // @synthesize request=_request;
@property(retain, nonatomic) GADOAd *ad; // @synthesize ad=_ad;
@property(retain, nonatomic) NSRecursiveLock *recursiveLock; // @synthesize recursiveLock=_recursiveLock;
- (void).cxx_destruct;
- (void)connection:(id)arg1 loadDidFail:(id)arg2 httpStatusCode:(long long)arg3;
- (void)connection:(id)arg1 loadDidFinish:(id)arg2 baseURL:(id)arg3;
- (void)connection:(id)arg1 loadDidReceiveCachedResponse:(id)arg2;
- (_Bool)connection:(id)arg1 loadShouldUseCacheForResponse:(id)arg2;
- (void)connection:(id)arg1 willPerformRedirect:(id)arg2;
- (id)connection:(id)arg1 shouldRedirectToURL:(id)arg2;
- (unsigned long long)adResponseTypeFromHeaders:(id)arg1 requestError:(id *)arg2;
- (void)processHTTPHeaders:(id)arg1;
- (void)resourceFailedToLoadWithError:(id)arg1 responseCode:(unsigned long long)arg2;
- (void)markFetchComplete;
- (void)markFetchStart;
- (void)completedURLConnection;
- (_Bool)startFetchWithRequestURL:(id)arg1 responseHeaders:(id)arg2 error:(id *)arg3;
- (id)logComponents;
- (_Bool)fetchRequestURL:(id)arg1 delegate:(id)arg2 responseHeaders:(id)arg3 responseAd:(id)arg4 error:(id *)arg5;
- (_Bool)fetchRequestURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;
- (_Bool)fetchRemainingContentForAd:(id)arg1 headers:(id)arg2 delegate:(id)arg3 error:(id *)arg4;
- (void)cancel;
- (void)dealloc;
- (id)init;

@end

@interface GADOMediationRewardedAdConfiguration : GADOMediationAdConfiguration
{
    GADMRewardBasedVideoAdNetworkConnector *_rewardedConnector;
    _Bool _isLocationShared;
}

- (void).cxx_destruct;
- (_Bool)hasUserLocation;
- (id)childDirectedTreatment;
- (id)extras;
- (id)bidResponse;
- (id)initWithConnector:(id)arg1 credentials:(id)arg2;
- (id)init;
- (id)initWithRewardedConnector:(id)arg1 credentials:(id)arg2;

@end

@interface GADOVideoMetadataGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveVideoMetadataAction:(id)arg2;

@end

@interface GADOServerSideVerificationOptions : NSObject <NSCopying>
{
    NSString *_userIdentifier;
    NSString *_customRewardString;
}

@property(copy, nonatomic) NSString *customRewardString; // @synthesize customRewardString=_customRewardString;
@property(copy, nonatomic) NSString *userIdentifier; // @synthesize userIdentifier=_userIdentifier;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADORewardedAd : NSObject <GADRewardBasedVideoAdDelegate, GADORewardedAdInternalDelegate, GADRewardBasedVideoAdDelegatePreview>
{
    GADORewardBasedVideoAd *_rewardBasedVideoAd;
    CDUnknownBlockType _completionHandler;
    id <GADRewardedAdDelegate> _delegate;
    id <GADRewardedAdMetadataDelegate> _adMetadataDelegate;
    NSString *_adUnitID;
    GADOServerSideVerificationOptions *_serverSideVerificationOptions;
}

@property(copy, nonatomic) GADOServerSideVerificationOptions *serverSideVerificationOptions; // @synthesize serverSideVerificationOptions=_serverSideVerificationOptions;
@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (void)rewardBasedVideoAdMetadataDidChange:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didFailToPresentRewardedAdWithError:(id)arg2;
- (void)rewardBasedVideoAdDidClose:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didRewardUserWithReward:(id)arg2;
- (void)rewardBasedVideoAdDidOpen:(id)arg1;
- (void)rewardBasedVideoAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)rewardBasedVideoAdDidReceiveAd:(id)arg1;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName;
@property(readonly, nonatomic) GADOAdReward *reward;
- (void)setAdMetadataDelegate:(id)arg1;
- (id)adMetadataDelegate;
- (id)adMetadata;
- (void)setAdMetadata:(id)arg1;
@property(readonly, nonatomic, getter=isReady) _Bool ready;
- (void)presentFromRootViewController:(id)arg1 delegate:(id)arg2;
- (void)loadRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)initWithAdUnitID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInterstitialPool : NSObject
{
    NSMutableArray *_entries;
    GADORequest *_request;
    id <GADOInterstitialPoolDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_adUnitID;
}

@property(readonly, copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
- (void).cxx_destruct;
- (id)nextEntry;
- (void)fill;
- (void)addCacheEntryWithTimeout:(double)arg1 maxCount:(long long)arg2;
- (void)scheduleTimeout:(double)arg1 cacheEntry:(id)arg2;
- (void)removeObject:(id)arg1;
@property __weak id <GADOInterstitialPoolDelegate> delegate;
@property(copy) GADORequest *request;
- (id)initWithRequest:(id)arg1 adUnitID:(id)arg2;
- (id)init;

@end

@interface GADOInstreamNativeAd : GADONativeAd <GADOLoadable, GADONativeAdMediaDisplaying, GADONativeAdSourceAttributing, GADOOverlayViewSource>
{
    GADOMediaContent *_mediaContent;
    GADOVideoController *_videoController;
}

+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
- (void).cxx_destruct;
- (id)videoController;
- (id)mediaContent;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setRootViewController:(id)arg1;
- (void)setAdUnitID:(id)arg1;
- (id)overlayView;
- (id)adChoicesContentView;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInterstitialPoolRefillOnPopPolicy : NSObject <GADOInterstitialPoolRefilling>
{
}

- (void)interstitialPoolDidRemoveEntry:(id)arg1;
- (void)interstitialPoolDidAddEntry:(id)arg1;
- (void)addPool:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOBufferedClearcutLogger : NSObject
{
    long long _bufferedCommandSize;
    NSMutableArray *_bufferedCommands;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)reportBufferedEventsToLogger:(id)arg1;
- (void)bufferParameters:(id)arg1;
- (void)bufferEvent:(id)arg1;
- (id)init;

@end

@interface GADOAdReward : NSObject
{
    NSString *_type;
    NSDecimalNumber *_amount;
}

@property(readonly, copy, nonatomic) NSDecimalNumber *amount; // @synthesize amount=_amount;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithRewardType:(id)arg1 rewardAmount:(id)arg2;
- (id)initWithRewardDictionary:(id)arg1;
- (id)init;

@end

@interface GADODynamicHeightSearchRequest : GADORequest
{
    NSMutableDictionary *_requestParameters;
    _Bool _adTestEnabled;
    _Bool _clickToCallExtensionEnabled;
    _Bool _locationExtensionEnabled;
    _Bool _plusOnesExtensionEnabled;
    _Bool _sellerRatingsExtensionEnabled;
    _Bool _siteLinksExtensionEnabled;
    _Bool _titleUnderlineHidden;
    _Bool _boldTitleEnabled;
    _Bool _detailedAttributionExtensionEnabled;
    _Bool _longerHeadlinesExtensionEnabled;
    NSString *_query;
    long long _adPage;
    NSString *_channel;
    NSString *_hostLanguage;
    NSString *_locationExtensionTextColor;
    double _locationExtensionFontSize;
    NSString *_CSSWidth;
    long long _numberOfAds;
    NSString *_fontFamily;
    NSString *_attributionFontFamily;
    double _annotationFontSize;
    double _attributionFontSize;
    double _descriptionFontSize;
    double _domainLinkFontSize;
    double _titleFontSize;
    NSString *_adBorderColor;
    NSString *_adSeparatorColor;
    NSString *_annotationTextColor;
    NSString *_attributionTextColor;
    NSString *_backgroundColor;
    NSString *_borderColor;
    NSString *_domainLinkColor;
    NSString *_textColor;
    NSString *_titleLinkColor;
    NSString *_adBorderCSSSelections;
    double _adjustableLineHeight;
    double _attributionBottomSpacing;
    NSString *_borderCSSSelections;
    double _verticalSpacing;
}

@property(nonatomic) _Bool longerHeadlinesExtensionEnabled; // @synthesize longerHeadlinesExtensionEnabled=_longerHeadlinesExtensionEnabled;
@property(nonatomic) _Bool detailedAttributionExtensionEnabled; // @synthesize detailedAttributionExtensionEnabled=_detailedAttributionExtensionEnabled;
@property(nonatomic) double verticalSpacing; // @synthesize verticalSpacing=_verticalSpacing;
@property(nonatomic) _Bool boldTitleEnabled; // @synthesize boldTitleEnabled=_boldTitleEnabled;
@property(nonatomic) _Bool titleUnderlineHidden; // @synthesize titleUnderlineHidden=_titleUnderlineHidden;
@property(copy, nonatomic) NSString *borderCSSSelections; // @synthesize borderCSSSelections=_borderCSSSelections;
@property(nonatomic) double attributionBottomSpacing; // @synthesize attributionBottomSpacing=_attributionBottomSpacing;
@property(nonatomic) double adjustableLineHeight; // @synthesize adjustableLineHeight=_adjustableLineHeight;
@property(copy, nonatomic) NSString *adBorderCSSSelections; // @synthesize adBorderCSSSelections=_adBorderCSSSelections;
@property(copy, nonatomic) NSString *titleLinkColor; // @synthesize titleLinkColor=_titleLinkColor;
@property(copy, nonatomic) NSString *textColor; // @synthesize textColor=_textColor;
@property(copy, nonatomic) NSString *domainLinkColor; // @synthesize domainLinkColor=_domainLinkColor;
@property(copy, nonatomic) NSString *borderColor; // @synthesize borderColor=_borderColor;
@property(copy, nonatomic) NSString *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(copy, nonatomic) NSString *attributionTextColor; // @synthesize attributionTextColor=_attributionTextColor;
@property(copy, nonatomic) NSString *annotationTextColor; // @synthesize annotationTextColor=_annotationTextColor;
@property(copy, nonatomic) NSString *adSeparatorColor; // @synthesize adSeparatorColor=_adSeparatorColor;
@property(copy, nonatomic) NSString *adBorderColor; // @synthesize adBorderColor=_adBorderColor;
@property(nonatomic) double titleFontSize; // @synthesize titleFontSize=_titleFontSize;
@property(nonatomic) double domainLinkFontSize; // @synthesize domainLinkFontSize=_domainLinkFontSize;
@property(nonatomic) double descriptionFontSize; // @synthesize descriptionFontSize=_descriptionFontSize;
@property(nonatomic) double attributionFontSize; // @synthesize attributionFontSize=_attributionFontSize;
@property(nonatomic) double annotationFontSize; // @synthesize annotationFontSize=_annotationFontSize;
@property(copy, nonatomic) NSString *attributionFontFamily; // @synthesize attributionFontFamily=_attributionFontFamily;
@property(copy, nonatomic) NSString *fontFamily; // @synthesize fontFamily=_fontFamily;
@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
@property(copy, nonatomic) NSString *CSSWidth; // @synthesize CSSWidth=_CSSWidth;
@property(nonatomic) _Bool siteLinksExtensionEnabled; // @synthesize siteLinksExtensionEnabled=_siteLinksExtensionEnabled;
@property(nonatomic) _Bool sellerRatingsExtensionEnabled; // @synthesize sellerRatingsExtensionEnabled=_sellerRatingsExtensionEnabled;
@property(nonatomic) _Bool plusOnesExtensionEnabled; // @synthesize plusOnesExtensionEnabled=_plusOnesExtensionEnabled;
@property(nonatomic) _Bool locationExtensionEnabled; // @synthesize locationExtensionEnabled=_locationExtensionEnabled;
@property(nonatomic) _Bool clickToCallExtensionEnabled; // @synthesize clickToCallExtensionEnabled=_clickToCallExtensionEnabled;
@property(nonatomic) double locationExtensionFontSize; // @synthesize locationExtensionFontSize=_locationExtensionFontSize;
@property(copy, nonatomic) NSString *locationExtensionTextColor; // @synthesize locationExtensionTextColor=_locationExtensionTextColor;
@property(copy, nonatomic) NSString *hostLanguage; // @synthesize hostLanguage=_hostLanguage;
@property(copy, nonatomic) NSString *channel; // @synthesize channel=_channel;
@property(nonatomic) _Bool adTestEnabled; // @synthesize adTestEnabled=_adTestEnabled;
@property(nonatomic) long long adPage; // @synthesize adPage=_adPage;
@property(copy, nonatomic) NSString *query; // @synthesize query=_query;
- (void).cxx_destruct;
- (id)CSADynamicHeightSearchRequestURLWithAdUnitID:(id)arg1;
- (id)dynamicHeightAdURLFragmentsWithAdUnitID:(id)arg1;
- (void)parameterHelperSetValue:(id)arg1 forKey:(id)arg2;
- (void)setAdvancedOptionValue:(id)arg1 forKey:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADOBannerCache : NSObject
{
    NSMutableDictionary *_previousBannerCache;
    NSMutableDictionary *_currentBannerCache;
    NSMutableArray *_recentlyAccessedKeysInCurrentCache;
    UIViewController *_currentRootViewController;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCacheWithBannerView:(id)arg1 newKey:(id)arg2;
- (void)addBannerEntryToCurrentCache:(id)arg1 key:(id)arg2;
- (id)bannerEntryFromPreviousCache:(id)arg1;
- (void)loadRequest:(id)arg1 bannerView:(id)arg2;
- (id)cacheEntryForBannerView:(id)arg1 key:(id)arg2;
- (id)cacheEntryForBannerView:(id)arg1 request:(id)arg2;
- (id)init;

@end

@interface GADOCachedURLResponse : NSObject
{
    NSCachedURLResponse *_cachedURLResponse;
    NSDate *_expirationDate;
    NSURL *_destinationURL;
}

@property(copy, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) NSData *data;
@property(readonly, copy, nonatomic) NSURLResponse *response;
- (id)initWithResponse:(id)arg1 data:(id)arg2 expirationDate:(id)arg3 destinationURL:(id)arg4;

@end

@interface GADOCSIReporter : NSObject
{
    GADOCSIConfiguration *_configuration;
}

- (void).cxx_destruct;
- (id)URLForTimeRecorder:(id)arg1;
- (void)reportTimeRecorder:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface GADOURLPingData : NSObject
{
    NSArray *_logComponents;
    NSString *_URLString;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, copy, nonatomic) NSString *URLString; // @synthesize URLString=_URLString;
@property(readonly, nonatomic) NSArray *logComponents; // @synthesize logComponents=_logComponents;
- (void).cxx_destruct;
- (id)initWithURLString:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface GADOWebViewPinger : NSObject
{
    WKWebView *_webView;
    _Bool _receivedValidResponse;
    NSMutableArray *_webViewPingQueue;
}

+ (void)initialize;
+ (_Bool)isAvailable;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)loadFinishedWithError:(id)arg1;
- (void)sendNextPing;
- (void)pingURLString:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOCrashReporter : NSObject
{
    CDUnknownFunctionPointerType _previousUncaughtExceptionHandler;
    NSString *_signalReportFilePath;
    _Bool _reportingEnabled;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)handleUncaughtException:(id)arg1;
- (void)reportUncaughtException:(id)arg1;
- (id)SDKRelatedSymbols;
- (void)enableSignalHandling;
- (void)processSignalReport;
- (id)init;

@end

@interface GADOAdViewVideoController : NSObject <GADOVideoControlling>
{
    GADOAdView *_adView;
    _Bool _videoOptionsCustomControlsRequested;
    _Bool _videoOptionsClickToExpandRequested;
    _Bool _videoMuted;
    _Bool _hasVideoContent;
    _Bool _customControlsEnabled;
    _Bool _clickToExpandEnabled;
    long long _videoPlaybackState;
    double _videoDuration;
    double _currentPlaybackTime;
    double _aspectRatio;
}

@property(nonatomic) _Bool clickToExpandEnabled; // @synthesize clickToExpandEnabled=_clickToExpandEnabled;
@property(nonatomic) _Bool customControlsEnabled; // @synthesize customControlsEnabled=_customControlsEnabled;
@property(nonatomic) double aspectRatio; // @synthesize aspectRatio=_aspectRatio;
@property(nonatomic) _Bool hasVideoContent; // @synthesize hasVideoContent=_hasVideoContent;
@property(nonatomic) _Bool videoMuted; // @synthesize videoMuted=_videoMuted;
@property(nonatomic) double currentPlaybackTime; // @synthesize currentPlaybackTime=_currentPlaybackTime;
@property(nonatomic) double videoDuration; // @synthesize videoDuration=_videoDuration;
@property(nonatomic) long long videoPlaybackState; // @synthesize videoPlaybackState=_videoPlaybackState;
- (void).cxx_destruct;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (void)pause;
- (void)play;
- (void)setMute:(_Bool)arg1;
- (id)initWithAdView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOURLConnectionRedirect : NSObject
{
    NSURLResponse *_response;
    NSURLRequest *_request;
}

@property(readonly, copy, nonatomic) NSURLRequest *request; // @synthesize request=_request;
@property(readonly, copy, nonatomic) NSURLResponse *response; // @synthesize response=_response;
- (void).cxx_destruct;
- (id)initWithResponse:(id)arg1 request:(id)arg2;

@end

@interface GADOURLConnection : NSObject <NSURLConnectionDataDelegate>
{
    _Bool _isInProgress;
    _Bool _allowCache;
    NSURL *_sourceURL;
    NSURL *_destinationURL;
    id <GADOURLConnectionDelegate> _delegate;
    NSURLConnection *_connection;
    NSURLResponse *_response;
    NSMutableData *_receivedData;
}

+ (void)clearCache;
+ (id)cacheKeyForURL:(id)arg1;
+ (id)defaultCachePath;
+ (id)memoryCache;
@property(retain, nonatomic) NSMutableData *receivedData; // @synthesize receivedData=_receivedData;
@property(retain, nonatomic) NSURLResponse *response; // @synthesize response=_response;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) __weak id <GADOURLConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool allowCache; // @synthesize allowCache=_allowCache;
@property(copy, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(copy, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
@property(nonatomic) _Bool isInProgress; // @synthesize isInProgress=_isInProgress;
- (void).cxx_destruct;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (_Bool)tryToStoreResponseAndData;
- (id)cachedResponseForURL:(id)arg1;
- (void)dealloc;
- (void)cancel;
- (void)stop;
- (_Bool)startWithRequestURL:(id)arg1 delegate:(id)arg2 error:(id *)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediationNativeAdMediaContent : NSObject <GADOMediaContentDisplaying>
{
    UIView *_mediaView;
    GADOMediationNativeAdVideoController *_videoController;
}

@property(readonly, nonatomic) GADOMediationNativeAdVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, nonatomic) UIView *mediaView; // @synthesize mediaView=_mediaView;
- (void).cxx_destruct;
- (void)loadVideoWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1;
- (id)initWithMediatedNativeContentAd:(id)arg1;
- (id)initWithMediatedNativeAppInstallAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADONativeAd : NSObject <GADMediatedNativeAd, GADOSlotAdEventDelegate, GADONativeAdSourceAttributing, GADONativeAdMediaDisplaying>
{
    _Bool _hasRecordedImpression;
    _Bool _hasRecordedDownloadedImpression;
    NSSet *_impressionTrackingURLs;
    NSMutableSet *_requestedAssets;
    NSMutableSet *_completedAssets;
    _Bool _failedToLoadARequiredAsset;
    _Bool _assetLoadingStarted;
    NSMutableArray *_assetLoadCompletionHandlers;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _clickConfirmationRequired;
    double _unconfirmedClickTimestamp;
    NSString *_unconfirmedClickIdentifier;
    _Bool _customOnePointFiveClickWhitelisted;
    _Bool _customMuteThisAdRequested;
    _Bool _customOnePointFiveClickImplemented;
    // Error parsing type: AB, name: _customClickGestureEnabledByPublisher
    _Bool _publisherRenderAdChoicesAllowed;
    _Bool _publisherClickReportingAllowed;
    _Bool _publisherTouchReportingAllowed;
    _Bool _publisherImpressionReportingAllowed;
    _Bool _viewAwareAPIAllowed;
    _Bool _viewAwareAPIUsed;
    _Bool _customMuteThisAdAvailable;
    _Bool _customClickGestureAllowed;
    id <GADNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
    NSDictionary *_extraAssets;
    NSString *_adNetworkClassName;
    NSString *_adUnitID;
    NSDictionary *_adConfiguration;
    GADMediatedNativeAd *_mediatedNativeAd;
    GADOSlot *_slot;
    NSSet *_thirdPartyClickTrackingURLs;
    NSString *_googleClickTrackingURLString;
    NSArray *_clickActions;
    NSDictionary *_activeViewConfigurations;
    long long _attributionCorner;
    NSString *_debugSignalInformation;
    NSDictionary *_statistics;
    GADONativeClickConfirmingViewMonitor *_clickConfirmingViewMonitor;
    id <GADONativeAdUnconfirmedClickDelegate> _unconfirmedClickDelegate;
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
    NSURL *_defaultMuteURL;
    NSArray *_muteReasons;
}

+ (id)supportHTMLURL;
+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
@property(nonatomic) _Bool customClickGestureAllowed; // @synthesize customClickGestureAllowed=_customClickGestureAllowed;
@property(readonly, nonatomic) _Bool customMuteThisAdAvailable; // @synthesize customMuteThisAdAvailable=_customMuteThisAdAvailable;
@property(readonly, nonatomic) NSArray *muteReasons; // @synthesize muteReasons=_muteReasons;
@property(readonly, nonatomic) NSURL *defaultMuteURL; // @synthesize defaultMuteURL=_defaultMuteURL;
@property(nonatomic) _Bool viewAwareAPIUsed; // @synthesize viewAwareAPIUsed=_viewAwareAPIUsed;
@property(nonatomic) _Bool viewAwareAPIAllowed; // @synthesize viewAwareAPIAllowed=_viewAwareAPIAllowed;
@property(nonatomic) __weak GADONativeAdViewPolicy *nativeAdViewPolicy; // @synthesize nativeAdViewPolicy=_nativeAdViewPolicy;
@property(nonatomic) __weak id <GADONativeAdUnconfirmedClickDelegate> unconfirmedClickDelegate; // @synthesize unconfirmedClickDelegate=_unconfirmedClickDelegate;
@property(readonly, nonatomic) GADONativeClickConfirmingViewMonitor *clickConfirmingViewMonitor; // @synthesize clickConfirmingViewMonitor=_clickConfirmingViewMonitor;
@property(readonly, nonatomic) NSDictionary *statistics; // @synthesize statistics=_statistics;
@property(readonly, nonatomic) _Bool publisherImpressionReportingAllowed; // @synthesize publisherImpressionReportingAllowed=_publisherImpressionReportingAllowed;
@property(readonly, nonatomic) _Bool publisherTouchReportingAllowed; // @synthesize publisherTouchReportingAllowed=_publisherTouchReportingAllowed;
@property(readonly, nonatomic) _Bool publisherClickReportingAllowed; // @synthesize publisherClickReportingAllowed=_publisherClickReportingAllowed;
@property(nonatomic) _Bool publisherRenderAdChoicesAllowed; // @synthesize publisherRenderAdChoicesAllowed=_publisherRenderAdChoicesAllowed;
@property(copy, nonatomic) NSString *debugSignalInformation; // @synthesize debugSignalInformation=_debugSignalInformation;
@property(readonly, nonatomic) long long attributionCorner; // @synthesize attributionCorner=_attributionCorner;
@property(copy, nonatomic) NSDictionary *activeViewConfigurations; // @synthesize activeViewConfigurations=_activeViewConfigurations;
@property(copy, nonatomic) NSArray *clickActions; // @synthesize clickActions=_clickActions;
@property(copy, nonatomic) NSString *googleClickTrackingURLString; // @synthesize googleClickTrackingURLString=_googleClickTrackingURLString;
@property(copy, nonatomic) NSSet *thirdPartyClickTrackingURLs; // @synthesize thirdPartyClickTrackingURLs=_thirdPartyClickTrackingURLs;
@property(retain, nonatomic) GADOSlot *slot; // @synthesize slot=_slot;
@property(retain, nonatomic) GADMediatedNativeAd *mediatedNativeAd; // @synthesize mediatedNativeAd=_mediatedNativeAd;
@property(readonly, copy, nonatomic) NSDictionary *adConfiguration; // @synthesize adConfiguration=_adConfiguration;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(copy, nonatomic) NSDictionary *extraAssets; // @synthesize extraAssets=_extraAssets;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slotDidMuteAd:(id)arg1;
- (void)slot:(id)arg1 didReceiveUnconfirmedClickWithClickInfo:(id)arg2;
- (void)slotDidRecordClick:(id)arg1;
- (void)slotDidRecordImpression:(id)arg1;
- (void)slotWillLeaveApplication:(id)arg1;
- (void)slotDidDismissScreen:(id)arg1;
- (void)slotWillDismissScreen:(id)arg1;
- (void)slotWillPresentScreen:(id)arg1;
@property(readonly, nonatomic, getter=isCustomClickGestureEnabled) _Bool customClickGestureEnabled;
@property(nonatomic) _Bool customClickGestureEnabledByPublisher;
- (void)confirmClick;
- (double)confirmationClickTimeInterval;
- (void)cancelUnconfirmedClick;
- (void)resetUnconfirmedClick;
- (void)unregisterClickConfirmingView;
- (void)registerClickConfirmingView:(id)arg1;
@property(readonly, nonatomic, getter=isCustomOnePointFiveClickEnabled) _Bool customOnePointFiveClickEnabled;
- (double)unconfirmedClickTimestamp;
- (_Bool)clickConfirmationRequired;
- (id)unconfirmedClickIdentifier;
@property(nonatomic) _Bool customOnePointFiveClickImplemented;
- (void)pingDownloadedImpressionURLs;
- (void)unregisterAdView;
- (void)registerAdViewForUnifiedNativeAd:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)reportDidUnloadFromView:(id)arg1;
- (void)reportDidLoadInView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)reportIsMediaContentRendered:(_Bool)arg1;
- (id)videoController;
- (id)mediaContent;
- (id)adChoicesContentView;
- (void)callAndClearAssetLoadCompletionHandlersWithError:(id)arg1;
- (void)addAssetWithNameToRequestedAssets:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)shouldLoadAssets;
- (void)failedToLoadAssetWithName:(id)arg1;
- (void)finishedLoadingAssetWithName:(id)arg1;
- (void)notifyLoadingDelegateIfAllRequestedAssetsHaveLoaded;
- (id)requiredAssets;
- (_Bool)hasRecordedImpression;
- (void)recordImpressionWithEnvironment:(id)arg1;
- (void)performClickOnView:(id)arg1 assetName:(id)arg2 environment:(id)arg3;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (id)adChoicesIcon;
- (id)advertiser;
- (id)logo;
- (id)starRating;
- (id)images;
- (id)price;
- (id)store;
- (id)body;
- (id)icon;
- (id)callToAction;
- (id)headline;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)gadNativeAd_commonInit;
- (void)dealloc;
- (id)init;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
- (void)mediatedNativeAdDidDismissScreen:(id)arg1;
- (void)mediatedNativeAdWillDismissScreen:(id)arg1;
- (void)mediatedNativeAdWillPresentScreen:(id)arg1;
- (void)mediatedNativeAdDidRecordClick:(id)arg1;
- (void)mediatedNativeAdDidRecordImpression:(id)arg1;
- (void)stopObservingMediatedNativeAd;
- (void)observeNotificationsFromMediatedNativeAd;
- (id)mediatedNativeAdDelegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOBinaryHeap : NSObject
{
    struct __CFBinaryHeap *_heap;
}

- (id)sortedObjects;
- (id)removedMinimum;
- (id)minimum;
@property(readonly, nonatomic) unsigned long long count; // @dynamic count;
- (_Bool)containsObject:(id)arg1;
- (void)addObject:(id)arg1;
- (void)dealloc;
- (id)initWithComparator:(CDUnknownFunctionPointerType)arg1;
- (id)init;

@end

@interface GADOVideoConfiguration : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    double _minBufferTimeInterval;
    double _maxBufferTimeInterval;
    double _bufferForPlaybackTimeInterval;
    double _bufferForPlaybackAfterRebufferTimeInterval;
    _Bool _enableAVPlayerPlaybackBuffering;
    _Bool _enableAdvanceBufferingControl;
    _Bool _enableInMemoryVideoBuffer;
    _Bool _videoBufferShouldIgnoreCanPlayThrough;
    long long _precacheMaxBufferBytes;
    double _videoAssetLoaderMaxDownloadWaitTimeInterval;
    long long _videoAssetLoaderMaxContentSizeInBytes;
    long long _videoAssetMaxLoadableChunkSizeInBytes;
    long long _assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
    long long _assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
    double _assetLoadingPlayerItemRefreshInterval;
    long long _assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
    double _precacheUpdateCheckIntervals;
}

@property(readonly, nonatomic) double precacheUpdateCheckIntervals; // @synthesize precacheUpdateCheckIntervals=_precacheUpdateCheckIntervals;
@property(readonly, nonatomic) _Bool videoBufferShouldIgnoreCanPlayThrough; // @synthesize videoBufferShouldIgnoreCanPlayThrough=_videoBufferShouldIgnoreCanPlayThrough;
@property(readonly, nonatomic) long long assetLoadingPlayerItemNoBufferUpdateMaxContentSize; // @synthesize assetLoadingPlayerItemNoBufferUpdateMaxContentSize=_assetLoadingPlayerItemNoBufferUpdateMaxContentSize;
@property(readonly, nonatomic) double assetLoadingPlayerItemRefreshInterval; // @synthesize assetLoadingPlayerItemRefreshInterval=_assetLoadingPlayerItemRefreshInterval;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxDataLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxDataLoadingFailedAttempts=_assetLoadingPlayerItemMaxDataLoadingFailedAttempts;
@property(readonly, nonatomic) long long assetLoadingPlayerItemMaxContentLoadingFailedAttempts; // @synthesize assetLoadingPlayerItemMaxContentLoadingFailedAttempts=_assetLoadingPlayerItemMaxContentLoadingFailedAttempts;
@property(readonly, nonatomic) long long videoAssetMaxLoadableChunkSizeInBytes; // @synthesize videoAssetMaxLoadableChunkSizeInBytes=_videoAssetMaxLoadableChunkSizeInBytes;
@property(readonly, nonatomic) long long videoAssetLoaderMaxContentSizeInBytes; // @synthesize videoAssetLoaderMaxContentSizeInBytes=_videoAssetLoaderMaxContentSizeInBytes;
@property(readonly, nonatomic) double videoAssetLoaderMaxDownloadWaitTimeInterval; // @synthesize videoAssetLoaderMaxDownloadWaitTimeInterval=_videoAssetLoaderMaxDownloadWaitTimeInterval;
@property(readonly, nonatomic) long long precacheMaxBufferBytes; // @synthesize precacheMaxBufferBytes=_precacheMaxBufferBytes;
@property(readonly, nonatomic) _Bool enableInMemoryVideoBuffer; // @synthesize enableInMemoryVideoBuffer=_enableInMemoryVideoBuffer;
@property(readonly, nonatomic) _Bool enableAdvanceBufferingControl; // @synthesize enableAdvanceBufferingControl=_enableAdvanceBufferingControl;
@property(readonly, nonatomic) _Bool enableAVPlayerPlaybackBuffering; // @synthesize enableAVPlayerPlaybackBuffering=_enableAVPlayerPlaybackBuffering;
- (void).cxx_destruct;
@property(readonly) double bufferForPlaybackAfterRebufferTimeInterval;
@property(readonly) double bufferForPlaybackTimeInterval;
@property(readonly) double maxBufferTimeInterval;
@property(readonly) double minBufferTimeInterval;
- (void)loadDynamicSettingsWithDictionary:(id)arg1;
- (void)loadStaticSettingsWithDictionary:(id)arg1;
- (void)updateDynamicConfigurationWithDictionary:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADOAdVerification : NSObject
{
    Class _GADOMIDPartner;
    Class _GADOMIDSDK;
    Class _GADOMIDAdSessionConfiguration;
    Class _GADOMIDAdSessionContext;
    Class _GADOMIDAdSession;
    Class _GADOMIDAdEvents;
    GADOMIDSDK *_sharedOMID;
    GADOMIDPartner *_partner;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)adEventsForSession:(id)arg1;
- (id)adSessionForWebView:(id)arg1;
- (id)OMIDVersion;
- (id)init;

@end

@interface GADONativeClickConfirmingViewMonitor : NSObject
{
    GADONativeAd *_nativeAd;
    UITapGestureRecognizer *_singleTap;
    id _clickConfirmingViewObserver;
    NSObject<OS_dispatch_queue> *_lockQueue;
    UIView *_clickConfirmingView;
}

- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)setClickConfirmingView:(id)arg1;
@property(readonly, nonatomic) __weak UIView *clickConfirmingView;
- (void)handleTap:(id)arg1;
- (void)handleAssociatedNativeAd:(id)arg1;
- (void)untrackClickConfirmingView;
- (void)trackClickConfirmingView:(id)arg1;
- (id)initWithNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMRAIDInterceptor : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSString *_bannerImplementationURLString;
    NSString *_expandedBannerImplementationURLString;
    NSString *_interstitialImplementationURLString;
    NSSet *_implementationURLStrings;
    _Bool _enabled;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
@property(copy) NSString *interstitialImplementationURLString;
@property(copy) NSString *expandedBannerImplementationURLString;
@property(copy) NSString *bannerImplementationURLString;
- (_Bool)shouldRedirectURL:(id)arg1;
- (_Bool)canRedirect;
- (void)updateImplementationURLStrings;
- (_Bool)URLisImplementationURL:(id)arg1;
- (void)setEnabled:(_Bool)arg1;
- (id)init;
- (id)MRAIDURLStringForAdView:(id)arg1;

@end

@interface GADOAdURLStash : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSMutableDictionary *_adViewResourceCollections;
    NSMutableDictionary *_mainDocumentURLAdViewKeys;
    NSMutableDictionary *_adViewLoadingFrameCount;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)internalAdViewForMainDocumentURL:(id)arg1;
- (id)adViewForMainDocumentURL:(id)arg1;
- (_Bool)hasLoadingAd;
- (id)responseBodyForRequest:(id)arg1;
- (_Bool)shouldInterceptRequestWithMainDocumentURL:(id)arg1;
- (void)removeInformationForAdViewKey:(id)arg1 canonicalMainDocumentURL:(id)arg2;
- (void)adView:(id)arg1 didAttemptAutoClickRequest:(id)arg2;
- (void)adView:(id)arg1 didClickThroughToURL:(id)arg2;
- (void)adViewDidFinishLayout:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (void)removeAdView:(id)arg1;
- (void)adView:(id)arg1 request:(id)arg2 didReceiveData:(id)arg3;
- (void)adView:(id)arg1 request:(id)arg2 willReceiveResponse:(id)arg3;
- (void)adView:(id)arg1 willLoadRequest:(id)arg2;
- (void)adView:(id)arg1 willLoadURLRequest:(id)arg2;
- (id)collectionForAdView:(id)arg1;
- (void)adViewWillLoadRootContent:(id)arg1;
- (id)init;

@end

@interface GADODebugOptionsViewController : UIViewController <UIAlertViewDelegate>
{
    NSString *_adDebugDialogString;
    UIAlertView *_creativeInformationAlertView;
    UIAlertView *_debugOptionsAlertView;
    UIAlertView *_statusAlertView;
    NSURL *_debugDeviceLinkingURL;
    UIButton *_closeButton;
    _Bool _debugSignalStatusFetchInProgress;
    _Bool _inAppPreviewTokenFetchInProgreen;
    NSString *_adUnitID;
    _Bool _shouldEnableInAppPreview;
    _Bool _shouldEnableDebugSignal;
    id <GADDebugOptionsViewControllerDelegate> _delegate;
    NSString *_adDebugSignalsString;
}

+ (id)debugOptionsViewControllerWithAdUnitID:(id)arg1;
@property(copy, nonatomic) NSString *adDebugSignalsString; // @synthesize adDebugSignalsString=_adDebugSignalsString;
@property(copy, nonatomic) NSString *adDebugDialogString; // @synthesize adDebugDialogString=_adDebugDialogString;
@property(nonatomic) __weak id <GADDebugOptionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)closeButtonPressed;
- (void)finishedDebugFlow;
- (void)showAlertViewWithTitle:(id)arg1;
- (void)showSystemErrorAlertView;
- (void)inAppPreviewSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)startInAppPreviewLinking;
- (void)debugSignalStatusReceivedResponse:(id)arg1 data:(id)arg2;
- (void)startDebugSignalLinking;
- (void)createDeviceIdentifierAndStartDeviceLinking;
- (void)startDeviceLinking;
- (id)debugURLRequestForString:(id)arg1;
- (id)debugDeviceQueryParameters;
- (void)showFeatureNotEnabledAlertView;
- (void)creativeInfoAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)debugOptionsAlertViewClickedButtonAtIndex:(long long)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)showCreativeInformationAlertView;
- (void)showDebugOptionsAlertView;
- (void)viewDidLoad;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithAdUnitID:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMRTBNativeAdapter : NSObject <GADMediationNativeAdEventDelegate, GADMAdNetworkAdapter>
{
    GADMAdNetworkConnector *_connector;
    id <GADMediationNativeAd> _mediatedAd;
    _Bool _handlesUserClicks;
    _Bool _handlesUserImpressions;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)didUnmuteVideo;
- (void)didMuteVideo;
- (void)didEndVideo;
- (void)didPauseVideo;
- (void)didPlayVideo;
- (void)didFailToPresentWithError:(id)arg1;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (_Bool)adapter:(id)arg1 completedLoadForConnector:(id)arg2 withMediatedAd:(id)arg3 error:(id)arg4;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)getNativeAdWithAdTypes:(id)arg1 options:(id)arg2;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAudioSession : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _audioSessionStateSaved;
    NSString *_savedAudioSessionCategory;
    NSString *_savedAudioSessionMode;
    unsigned long long _savedAudioSessionCategoryOption;
    _Bool _enabled;
    _Bool _wasOtherAppAudioInterrupted;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)resumeBackgroundAppAudioIfInterrupted;
- (void)setMixable:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)restoreState;
- (void)disable;
- (void)enable;
- (id)init;

@end

@interface GADONativeContentAdView : UIView
{
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
    UIView *_headlineView;
    UIView *_bodyView;
    UIView *_imageView;
    UIView *_logoView;
    UIView *_callToActionView;
    UIView *_advertiserView;
    GADOMediaView *_mediaView;
    GADOAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADOAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADOMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *logoView; // @synthesize logoView=_logoView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADONativeContentAd *nativeContentAd;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GADOMUtilities : NSObject
{
}

+ (id)mediationURLFrom:(id)arg1 adLocationID:(id)arg2 adNetworkRefresh:(_Bool)arg3 allocationID:(id)arg4 adNetworkID:(id)arg5 qData:(id)arg6 sessionID:(id)arg7 sequenceNumber:(id)arg8 exitCodes:(id)arg9 durations:(id)arg10 fillStatus:(id)arg11;

@end

@interface GADOSupplementalAdAppViewController : GADOAdAppViewController
{
}

- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)finishDismissal;
- (void)finishAppearing;

@end

@interface GADOInAppPurchaseTransactionReporter : NSObject
{
    _Bool _reportingEnabled;
    _Bool _wasDisabled;
}

+ (id)sharedInstance;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)reportTransactionInformationArray:(id)arg1;
@property(readonly, nonatomic) _Bool shouldBeEnabled;
- (void)disableReporting;
- (void)enableReporting;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMessageComposeDelegateProxy : NSObject <MFMessageComposeViewControllerDelegate>
{
    GADOMessageComposeDelegateProxy *_strongSelf;
    id <MFMessageComposeViewControllerDelegate> _messageComposeDelegate;
    MFMessageComposeViewController *_messageComposeViewController;
}

+ (id)associatedDelegateProxyForController:(id)arg1;
@property(retain, nonatomic) MFMessageComposeViewController *messageComposeViewController; // @synthesize messageComposeViewController=_messageComposeViewController;
@property(nonatomic) __weak id <MFMessageComposeViewControllerDelegate> messageComposeDelegate; // @synthesize messageComposeDelegate=_messageComposeDelegate;
- (void).cxx_destruct;
- (void)stopProxying;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (id)initInternal;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdExposureMonitor : NSObject <GADOViewMonitorDelegate>
{
    NSString *_adUnitID;
    UIView *_monitoredView;
    GADOViewMonitor *_viewMonitor;
    _Bool _adUnitExposureBegan;
    id _SDKCoreConstantsObserver;
    _Bool _viewMonitorDidStartMonitoring;
}

- (void).cxx_destruct;
- (void)viewMonitorDidRefresh:(id)arg1;
- (void)finishMonitoring;
- (void)startMonitoring;
- (void)dealloc;
- (id)initWithView:(id)arg1 adUnitID:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMAdNetworkConnectorNativeAd : GADMAdNetworkConnector
{
}

- (void)logIncorrectAdapterNotificationImplementation;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidGetAdClick:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)didReceiveNativeAd:(id)arg1 fromAdapter:(id)arg2;
- (void)getAdFromAdapterWithType:(id)arg1;

@end

@interface GADONetworkUtilizationMonitor : NSObject
{
    GADONetworkUtilizationStatistics *_aggregatedStatistics;
    GADONetworkUtilizationStatistics *_initialStatistics;
    id _becomeActiveObserver;
    id _resignActiveObserver;
}

- (void).cxx_destruct;
@property(readonly) unsigned long long wifiReceivedByteCount;
@property(readonly) unsigned long long wifiTransmittedByteCount;
@property(readonly) unsigned long long cellularReceivedByteCount;
@property(readonly) unsigned long long cellularTransmittedByteCount;
- (void)updateByteCounts;
- (void)stop;
- (void)start;
- (void)dealloc;
- (id)init;

@end

@interface GADOClearcutTimerCommandExecutor : NSObject <GADOClearcutCommandExecuting>
{
    id <GADOClearcutCommandExecuting> _executor;
    double _beaconTimeInterval;
    NSTimer *_timer;
}

- (void).cxx_destruct;
- (void)sendBeacon;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (void)dealloc;
- (id)initWithClearcutCommandExecutor:(id)arg1 timeInterval:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOVideoPlayerGMSGHandler : GADOGMSGHandler
{
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveSkipAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSeekToCurrentTimeAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePauseVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePlayVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadControlVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveLoadVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSetVolumeAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveMutedVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveBackgroundAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveShowVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveHideVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveSetVideoSourceAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveNewVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePositionVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceivePrecacheAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveVideoAction:(id)arg2;

@end

@interface GADONativeMuteThisAdLoaderOptions : GADOAdLoaderOptions
{
    _Bool _customMuteThisAdRequested;
}

@property(nonatomic) _Bool customMuteThisAdRequested; // @synthesize customMuteThisAdRequested=_customMuteThisAdRequested;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADMAdapterCustomEvents : NSObject <GADMAdNetworkAdapter, GADCustomEventBannerDelegate, GADCustomEventInterstitialDelegate, GADCustomEventNativeAdDelegate>
{
    id <GADMAdNetworkConnector> _connector;
    id <GADCustomEventBanner> _customEventBanner;
    id <GADCustomEventInterstitial> _customEventInterstitial;
    id <GADCustomEventNativeAd> _customEventNativeAd;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(retain, nonatomic) id <GADCustomEventNativeAd> customEventNativeAd; // @synthesize customEventNativeAd=_customEventNativeAd;
@property(retain, nonatomic) id <GADCustomEventInterstitial> customEventInterstitial; // @synthesize customEventInterstitial=_customEventInterstitial;
@property(retain, nonatomic) id <GADCustomEventBanner> customEventBanner; // @synthesize customEventBanner=_customEventBanner;
@property(nonatomic) __weak id <GADMAdNetworkConnector> connector; // @synthesize connector=_connector;
- (void).cxx_destruct;
- (void)customEventInterstitial:(id)arg1 didReceiveAd:(id)arg2;
- (void)customEventBanner:(id)arg1 clickDidOccurInAd:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedUnifiedNativeAd:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)customEventNativeAd:(id)arg1 didReceiveMediatedNativeAd:(id)arg2;
- (void)customEventInterstitialWillLeaveApplication:(id)arg1;
- (void)customEventInterstitialDidDismiss:(id)arg1;
- (void)customEventInterstitialWillDismiss:(id)arg1;
- (void)customEventInterstitialWillPresent:(id)arg1;
- (void)customEventInterstitialWasClicked:(id)arg1;
- (void)customEventInterstitial:(id)arg1 didFailAd:(id)arg2;
- (void)customEventInterstitialDidReceiveAd:(id)arg1;
- (void)customEventBannerWillLeaveApplication:(id)arg1;
- (void)customEventBannerDidDismissModal:(id)arg1;
- (void)customEventBannerWillDismissModal:(id)arg1;
- (void)customEventBannerWillPresentModal:(id)arg1;
@property(readonly, nonatomic) UIViewController *viewControllerForPresentingModalView;
- (void)customEventBannerWasClicked:(id)arg1;
- (void)customEventBanner:(id)arg1 didFailAd:(id)arg2;
- (void)customEventBanner:(id)arg1 didReceiveAd:(id)arg2;
- (void)callBackToConnectorWithError:(id)arg1 isInterstitial:(_Bool)arg2;
- (void)dealloc;
- (_Bool)handlesUserImpressions;
- (_Bool)handlesUserClicks;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getNativeAdWithAdTypes:(id)arg1 options:(id)arg2;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (id)customEventWithCredentials:(id)arg1 isInterstitial:(_Bool)arg2;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAnimateViewGMSGHandler : GADOGMSGHandler
{
    GADOStoreKitProductInlineRenderer *_inlineStorKitProductRenderer;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)renderStoreKitProductInlineWithAdView:(id)arg1 animationData:(id)arg2;
- (void)performAdView:(id)arg1 animations:(id)arg2;
- (void)prepareAdView:(id)arg1 animations:(id)arg2;
- (void)adView:(id)arg1 didReceiveAnimateViewNotification:(id)arg2;

@end

@interface GADOCustomEventRequest : NSObject
{
    _Bool _userHasLocation;
    _Bool _isTesting;
    double _userLatitude;
    double _userLongitude;
    double _userLocationAccuracyInMeters;
    NSString *_userLocationDescription;
    NSArray *_userKeywords;
    NSDictionary *_additionalParameters;
    long long _userGender;
    NSDate *_userBirthday;
}

@property(readonly, copy, nonatomic) NSDate *userBirthday; // @synthesize userBirthday=_userBirthday;
@property(readonly, nonatomic) long long userGender; // @synthesize userGender=_userGender;
@property(readonly, nonatomic) _Bool isTesting; // @synthesize isTesting=_isTesting;
@property(readonly, copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
@property(readonly, copy, nonatomic) NSArray *userKeywords; // @synthesize userKeywords=_userKeywords;
@property(readonly, copy, nonatomic) NSString *userLocationDescription; // @synthesize userLocationDescription=_userLocationDescription;
@property(readonly, nonatomic) double userLocationAccuracyInMeters; // @synthesize userLocationAccuracyInMeters=_userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude; // @synthesize userLongitude=_userLongitude;
@property(readonly, nonatomic) double userLatitude; // @synthesize userLatitude=_userLatitude;
@property(readonly, nonatomic) _Bool userHasLocation; // @synthesize userHasLocation=_userHasLocation;
- (void).cxx_destruct;
- (id)initWithConnector:(id)arg1;

@end

@interface GADONativeAdImageAdLoaderOptions : GADOAdLoaderOptions
{
    _Bool _disableImageLoading;
    _Bool _shouldRequestMultipleImages;
    long long _preferredImageOrientation;
}

@property(nonatomic) long long preferredImageOrientation; // @synthesize preferredImageOrientation=_preferredImageOrientation;
@property(nonatomic) _Bool shouldRequestMultipleImages; // @synthesize shouldRequestMultipleImages=_shouldRequestMultipleImages;
@property(nonatomic) _Bool disableImageLoading; // @synthesize disableImageLoading=_disableImageLoading;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADOMuteThisAdReason : NSObject
{
    NSString *_reasonDescription;
    NSURL *_muteThisAdURL;
}

@property(readonly, nonatomic) NSURL *muteThisAdURL; // @synthesize muteThisAdURL=_muteThisAdURL;
@property(readonly, nonatomic) NSString *reasonDescription; // @synthesize reasonDescription=_reasonDescription;
- (void).cxx_destruct;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADONativeAdViewAdOptions : GADOAdLoaderOptions
{
    long long _preferredAdChoicesPosition;
}

@property(nonatomic) long long preferredAdChoicesPosition; // @synthesize preferredAdChoicesPosition=_preferredAdChoicesPosition;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADODelayPageLoadGMSGHandler : GADOGMSGHandler
{
    long long _delayCount;
    id <GADODelayLoadDelegate> _delegate;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)handleDelayLoadWithParameters:(id)arg1;
- (void)adView:(id)arg1 delayPageLoadWithArguments:(id)arg2;
- (_Bool)shouldHandleNotificationSynchronously;
- (id)initWithDelegate:(id)arg1;
- (id)init;

@end

@interface GADOMediationNativeAdConfiguration : GADOMediationAdConfiguration
{
    NSArray *_options;
}

@property(readonly, nonatomic) NSArray *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)initWithConnector:(id)arg1 credentials:(id)arg2;
- (id)init;
- (id)initWithOptions:(id)arg1 connector:(id)arg2 credentials:(id)arg3;

@end

@interface GADOGCacheGMSGHandler : GADOGMSGHandler
{
    GADOGCacheURLLoader *_gcacheURLLoader;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveStartCacheAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveGCacheAction:(id)arg2;
- (id)init;

@end

@interface GADOAdViewActiveViewReporter : NSObject
{
    _Bool _reporting;
    id <GADOAdViewActiveViewMonitoring> _observer;
}

@property(readonly, nonatomic) _Bool reporting; // @synthesize reporting=_reporting;
@property(nonatomic) __weak id <GADOAdViewActiveViewMonitoring> observer; // @synthesize observer=_observer;
- (void).cxx_destruct;
- (void)dealloc;
- (void)stop;
- (void)start;

@end

@interface GADOInstreamNativeAdLoaderDelegate : NSObject <GADOInstreamNativeAdLoaderDelegate>
{
    CDUnknownBlockType _block;
}

- (void).cxx_destruct;
- (void)adLoaderDidFinishLoading:(id)arg1;
- (void)adLoader:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adLoader:(id)arg1 didReceiveInstreamNativeAd:(id)arg2;
- (id)initWithAdLoadCompletionBlock:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInstreamAd : NSObject
{
    GADOMediaContent *_mediaContent;
    GADOMediaView *_mediaView;
    GADOMediaView *_weakMediaView;
    _Bool _used;
    GADOInstreamNativeAd *_nativeAd;
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
    GADOInstreamAdVideoController *_videoController;
}

+ (void)loadAdWithConfiguration:(id)arg1 rootViewController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) GADOInstreamAdVideoController *videoController; // @synthesize videoController=_videoController;
- (void).cxx_destruct;
- (void)presentInView:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithInstreamNativeAd:(id)arg1;

@end

@interface GADOClearcut : NSObject <GADOClearcutCommandExecuting>
{
    id <GADOClearcutCommandExecuting> _commandExecutor;
    GADOVersionedCache *_versionedCache;
    _Bool _isUpdating;
    long long _clearcutID;
    NSString *_appUniqueID;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateCommandExecutorWithConfig:(id)arg1 script:(id)arg2;
- (void)resetUpdateCheckingState;
- (id)nextUniqueID;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (_Bool)isLoaded;
- (void)updateIfNeeded;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOPinger : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADOScheduler *_scheduler;
    long long _maximumRetryURLCount;
    long long _URLRetryCount;
    NSMutableArray *_retryGroupKeys;
    NSMutableSet *_pingedURLs;
    GADOWebViewPinger *_webViewPinger;
    _Bool _reloadRequired;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)removeRetryURLString:(id)arg1 retryGroupKey:(id)arg2;
- (void)storeRetryURLString:(id)arg1 retryGroupKey:(id)arg2;
- (void)start;
- (void)pingWithRetryGroupKey:(id)arg1 URL:(id)arg2 retryURLString:(id)arg3;
- (void)pingRetryURLs;
- (void)sendPing:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)pingURLString:(id)arg1 queue:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface GADOVideoAnimationData : GADOAnimationData
{
    struct CGRect _initialVideoFrame;
    struct CGRect _finalVideoFrame;
}

@property(nonatomic) struct CGRect finalVideoFrame; // @synthesize finalVideoFrame=_finalVideoFrame;
@property(nonatomic) struct CGRect initialVideoFrame; // @synthesize initialVideoFrame=_initialVideoFrame;
- (id)initWithAnimation:(id)arg1;

@end

@interface GADOStoreKitProductAnimationData : GADOAnimationData
{
    NSString *_productIdentifier;
    NSString *_dismissalNotificationRequestIdentifier;
    struct CGRect _initialStoreKitFrame;
    struct CGRect _finalStoreKitFrame;
}

@property(nonatomic) struct CGRect finalStoreKitFrame; // @synthesize finalStoreKitFrame=_finalStoreKitFrame;
@property(nonatomic) struct CGRect initialStoreKitFrame; // @synthesize initialStoreKitFrame=_initialStoreKitFrame;
@property(copy, nonatomic) NSString *dismissalNotificationRequestIdentifier; // @synthesize dismissalNotificationRequestIdentifier=_dismissalNotificationRequestIdentifier;
@property(copy, nonatomic) NSString *productIdentifier; // @synthesize productIdentifier=_productIdentifier;
- (void).cxx_destruct;
- (id)initWithAnimation:(id)arg1;

@end

@interface GADOAnimationData : NSObject
{
}

+ (id)animationsDataFromAnimations:(id)arg1;

@end

@interface GADOExtras : NSObject <GADAdNetworkExtras>
{
    NSDictionary *_additionalParameters;
}

@property(copy, nonatomic) NSDictionary *additionalParameters; // @synthesize additionalParameters=_additionalParameters;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMemoryUtilizationMonitor : NSObject
{
    unsigned long long _initiallyAllocatedByteCount;
    unsigned long long _peakAllocatedByteCount;
    unsigned long long _currentlyAllocatedByteCount;
}

@property(readonly, nonatomic) unsigned long long currentlyAllocatedByteCount; // @synthesize currentlyAllocatedByteCount=_currentlyAllocatedByteCount;
@property(readonly, nonatomic) unsigned long long peakAllocatedByteCount; // @synthesize peakAllocatedByteCount=_peakAllocatedByteCount;
@property(readonly, nonatomic) unsigned long long initiallyAllocatedByteCount; // @synthesize initiallyAllocatedByteCount=_initiallyAllocatedByteCount;
- (void)update;
- (id)init;

@end

@interface GADOMRTBRewardedAdapter : NSObject <GADMediationRewardedAdEventDelegate, GADMRewardBasedVideoAdNetworkAdapter>
{
    GADMRewardBasedVideoAdNetworkConnector *_connector;
    id <GADMediationAdapter> _adapter;
    id <GADMediationRewardedAd> _mediatedAd;
    GADOMediationRewardedAdConfiguration *_mediationConfiguration;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)willDismissFullScreenView;
- (void)reportImpression;
- (void)didFailToPresentWithError:(id)arg1;
- (void)stopBeingDelegate;
- (void)didRewardUserWithReward:(id)arg1;
- (void)didEndVideo;
- (void)didStartVideo;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (_Bool)adapter:(id)arg1 completedLoadForConnector:(id)arg2 withMediatedAd:(id)arg3 error:(id)arg4;
- (void)dropAdapterObjectsAsynchronously;
- (void)presentRewardBasedVideoAdWithRootViewController:(id)arg1;
- (void)requestRewardBasedVideoAd;
- (void)setUp;
- (id)initWithRewardBasedVideoAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInterstitialOwner : NSObject
{
    _Bool _isSlotCreated;
    _Bool _isInterstitialCloseDelayed;
    _Bool _isDismissed;
    GADOInterstitial *_weakInterstitial;
    GADOInterstitial *_presentedInterstitial;
    GADOInterstitial *_pageCloseDelayedInterstitial;
    double _delayPageCloseTimeoutInterval;
}

- (void).cxx_destruct;
- (void)interstitialDelayPageCloseStopped;
- (void)interstitialDelayPageCloseStarted;
- (void)stopObserving;
- (void)observeInterstitial:(id)arg1;
- (void)moveAdViewToPlaceholderWindow:(id)arg1;
- (void)interstitialIsDismissed;
- (void)interstitialWillBePresented;
- (void)interstitialDidCreateSlot;
- (void)dealloc;
- (id)initWithInterstitial:(id)arg1;

@end

@interface GADOAdLoader : NSObject <GADOAdMediationDelegate, GADOSlotAdLoadDelegate, GADOSlotAdResponseDelegate, GADOSlotDelegate>
{
    GADOSlot *_slot;
    GADOAdLoadResults *_adLoadResults;
    NSSet *_adTypes;
    _Bool _loading;
    id <GADAdLoaderDelegate> _delegate;
    NSString *_adUnitID;
    GADOAdLoaderConfiguration *_adLoaderConfiguration;
    UIViewController *_rootViewController;
    NSMutableArray *_appEventAdLoaders;
    NSMutableArray *_adPreprocessors;
    NSMutableArray *_loadableAds;
}

@property(readonly, nonatomic) NSMutableArray *loadableAds; // @synthesize loadableAds=_loadableAds;
@property(readonly, nonatomic) NSMutableArray *adPreprocessors; // @synthesize adPreprocessors=_adPreprocessors;
@property(readonly, nonatomic) NSMutableArray *appEventAdLoaders; // @synthesize appEventAdLoaders=_appEventAdLoaders;
@property(readonly, nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(retain, nonatomic) GADOAdLoaderConfiguration *adLoaderConfiguration; // @synthesize adLoaderConfiguration=_adLoaderConfiguration;
@property(readonly, nonatomic, getter=isLoading) _Bool loading; // @synthesize loading=_loading;
@property(readonly, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(nonatomic) __weak id <GADAdLoaderDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 didFailToLoadAdContentWithError:(id)arg2;
- (void)slotFinishedLoadingAdContent:(id)arg1;
- (id)validAdSizes;
- (struct CGRect)frame;
- (struct CGRect)bounds;
- (void)loadAssetsForAd:(id)arg1 index:(long long)arg2;
- (void)slot:(id)arg1 willProcessMediatedAdResponse:(id)arg2;
- (void)preprocessAdJSON:(id)arg1 atIndex:(long long)arg2;
- (_Bool)slot:(id)arg1 shouldProcessAdResponse:(id)arg2 error:(id *)arg3;
- (void)finishLoading;
- (void)adDidFinishLoadingAssets:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)handleFailedRequestWithRequestError:(id)arg1 isFinalResult:(_Bool)arg2;
- (void)loadRequest:(id)arg1;
- (id)init;
- (id)initWithAdUnitID:(id)arg1 rootViewController:(id)arg2 adTypes:(id)arg3 options:(id)arg4;
- (void)ad:(id)arg1 processMediatedAd:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (id)adLoaderConfigurationForAd:(id)arg1 networkConfiguration:(id)arg2;
- (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOCustomEventExtras : NSObject <GADAdNetworkExtras>
{
    NSMutableDictionary *_extras;
}

- (void).cxx_destruct;
- (id)allExtras;
- (void)removeAllExtras;
- (id)extrasForLabel:(id)arg1;
- (void)setExtras:(id)arg1 forLabel:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediationAdConfiguration : NSObject
{
    GADMAdNetworkConnector *_connector;
    GADOMediationCredentials *_credentials;
    GADOSlot *_slot;
    UIViewController *_rootViewController;
}

@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
@property(readonly, nonatomic) GADOMediationCredentials *credentials; // @synthesize credentials=_credentials;
- (void).cxx_destruct;
@property(readonly, nonatomic) double userLocationAccuracyInMeters;
@property(readonly, nonatomic) double userLongitude;
@property(readonly, nonatomic) double userLatitude;
@property(readonly, nonatomic) _Bool hasUserLocation;
- (id)userLocation;
@property(readonly, nonatomic) _Bool isTestRequest;
@property(readonly, nonatomic) NSNumber *childDirectedTreatment;
@property(readonly, nonatomic) UIViewController *topViewController;
@property(readonly, nonatomic) id <GADAdNetworkExtras> extras;
@property(readonly, nonatomic) NSString *bidResponse;
- (id)init;
- (id)initWithConnector:(id)arg1 credentials:(id)arg2;

@end

@interface GADOCorrelator : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    unsigned int _correlationID;
}

- (void).cxx_destruct;
@property(readonly) unsigned int correlationID;
- (void)reset;
- (id)init;

@end

@interface GADOAdViewResource : NSObject
{
    NSMutableArray *_children;
    NSMutableData *_content;
    NSObject<OS_dispatch_queue> *_networkAddressQueue;
    NSString *_networkAddress;
    GADOAdViewResourceRequest *_request;
    long long _sequenceNumber;
    GADOAdViewResource *_parent;
    long long _type;
    NSHTTPURLResponse *_response;
}

@property(readonly, copy, nonatomic) NSData *content; // @synthesize content=_content;
@property(copy, nonatomic) NSHTTPURLResponse *response; // @synthesize response=_response;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSArray *children; // @synthesize children=_children;
@property(readonly, nonatomic) __weak GADOAdViewResource *parent; // @synthesize parent=_parent;
@property(readonly, nonatomic) long long sequenceNumber; // @synthesize sequenceNumber=_sequenceNumber;
@property(readonly, copy, nonatomic) GADOAdViewResourceRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)dictionaryRepresentationExcludingHeaders:(id)arg1;
- (id)description;
- (void)addRequestHeaders:(id)arg1;
- (void)appendContent:(id)arg1;
- (void)addChild:(id)arg1;
- (id)initWithRequest:(id)arg1 sequenceNumber:(long long)arg2;

@end

@interface GADOInterstitialAd : GADOAd
{
}

@end

@interface GADOAdType : NSObject
{
    _Bool _isRewardBasedVideoAd;
    _Bool _isInterstitial;
    struct GADOAdSize _adSize;
}

+ (id)interstitialAdType;
+ (id)bannerAdTypeForSize:(struct GADOAdSize)arg1;
@property(nonatomic) struct GADOAdSize adSize; // @synthesize adSize=_adSize;
@property(readonly, nonatomic) _Bool isInterstitial; // @synthesize isInterstitial=_isInterstitial;
- (id)description;
- (_Bool)isValid;
- (_Bool)isRewardBasedVideoAd;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)initForRewardBasedVideoAd;
- (id)initForInterstitial;
- (id)initWithAdSize:(struct GADOAdSize)arg1;
- (id)init;

@end

@interface GADMAdapterHTML : NSObject <GADMAdNetworkAdapter, GADOMWebViewRenderedCheckerDelegate, GADOWebViewDelegate>
{
    unsigned long long _checkRenderingCount;
    NSTimer *_checkRenderingTimer;
    GADOMWebViewRenderedChecker *_webViewRenderedChecker;
    GADOWebView *_webView;
    NSURL *_passbackURL;
    id <GADMAdNetworkConnector> _connector;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(nonatomic) id <GADMAdNetworkConnector> connector; // @synthesize connector=_connector;
- (void).cxx_destruct;
- (void)webViewProcessDidTerminate:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)isPassbackRequest:(id)arg1;
- (_Bool)isPath:(id)arg1 equivalentToPath:(id)arg2;
- (id)stripTrailingSlashFromPath:(id)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)createWebViewWithSize:(struct GADOAdSize)arg1;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (void)webView:(id)arg1 isRendered:(_Bool)arg2;
- (id)errorWithCode:(long long)arg1 text:(id)arg2;
- (void)stopRenderingTimer;
- (void)startRenderingTimer;
- (void)failInterstitialRequest;
- (void)clearWebView;
- (void)dealloc;
- (id)init;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOCSIConfiguration : NSObject
{
    NSString *_cachedUserAgentString;
    _Bool _reportingEnabled;
    NSString *_server;
    NSString *_serviceName;
    long long _version;
}

+ (id)defaultConfiguration;
@property(nonatomic) long long version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(copy, nonatomic) NSString *server; // @synthesize server=_server;
@property(nonatomic) _Bool reportingEnabled; // @synthesize reportingEnabled=_reportingEnabled;
- (void).cxx_destruct;
- (void)setReportingProbability:(float)arg1;
- (id)init;
- (id)initWithServiceName:(id)arg1;

@end

@interface GADOMultipleAdsAdLoaderOptions : GADOAdLoaderOptions
{
    long long _numberOfAds;
}

@property(nonatomic) long long numberOfAds; // @synthesize numberOfAds=_numberOfAds;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADOMailComposeDelegateProxy : NSObject
{
    GADOMailComposeDelegateProxy *_strongSelf;
    id <MFMailComposeViewControllerDelegate> _mailComposeDelegate;
    MFMailComposeViewController *_mailComposeViewController;
}

+ (id)associatedDelegateProxyForController:(id)arg1;
@property(retain, nonatomic) MFMailComposeViewController *mailComposeViewController; // @synthesize mailComposeViewController=_mailComposeViewController;
@property(nonatomic) __weak id <MFMailComposeViewControllerDelegate> mailComposeDelegate; // @synthesize mailComposeDelegate=_mailComposeDelegate;
- (void).cxx_destruct;
- (void)stopProxying;
- (void)mailComposeController:(id)arg1 didFinishWithResult:(long long)arg2 error:(id)arg3;
- (id)initInternal;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADONativeExpressAdView : UIView
{
    _Bool _autoloadEnabled;
    GADOVideoController *_videoController;
    NSString *_adUnitID;
    UIViewController *_rootViewController;
    id <GADNativeExpressAdViewDelegate> _delegate;
    NSString *_adNetworkClassName;
    struct GADOAdSize _adSize;
}

@property(readonly, nonatomic) __weak NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(nonatomic, getter=isAutoloadEnabled) _Bool autoloadEnabled; // @synthesize autoloadEnabled=_autoloadEnabled;
@property(nonatomic) __weak id <GADNativeExpressAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) struct GADOAdSize adSize; // @synthesize adSize=_adSize;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
- (void).cxx_destruct;
- (void)setAdOptions:(id)arg1;
- (void)loadRequest:(id)arg1;
- (id)initWithAdSize:(struct GADOAdSize)arg1 origin:(struct CGPoint)arg2;
- (id)initWithAdSize:(struct GADOAdSize)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 adSize:(struct GADOAdSize)arg2;

@end

@interface GADOMAdNetworkConnectorBanner : GADMAdNetworkConnector <GADOImpressionMonitorDelegate>
{
    GADOImpressionMonitor *_impressionMonitor;
    _Bool _didNetworkReturn;
    NSMutableArray *_queuedAppEvents;
}

@property(nonatomic) _Bool didNetworkReturn; // @synthesize didNetworkReturn=_didNetworkReturn;
@property(readonly, nonatomic) NSMutableArray *queuedAppEvents; // @synthesize queuedAppEvents=_queuedAppEvents;
- (void).cxx_destruct;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)getAdFromAdapterWithType:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOUnclickableView : UIView
{
}

- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;

@end

@interface GADOTransparentOverlayPresenter : NSObject <GADOOverlayPresenting>
{
    GADOViewController *_presentedViewController;
    UIView *_pivotView;
    UIView *_cropView;
    id _orientationChangeListener;
    id _placementDisappearanceObserver;
}

+ (struct CGRect)frameWithSize:(struct CGSize)arg1 centeredInFrame:(struct CGRect)arg2;
@property(retain, nonatomic) id placementDisappearanceObserver; // @synthesize placementDisappearanceObserver=_placementDisappearanceObserver;
@property(retain, nonatomic) id orientationChangeListener; // @synthesize orientationChangeListener=_orientationChangeListener;
@property(retain, nonatomic) UIView *cropView; // @synthesize cropView=_cropView;
@property(retain, nonatomic) UIView *pivotView; // @synthesize pivotView=_pivotView;
@property(nonatomic) __weak GADOViewController *presentedViewController; // @synthesize presentedViewController=_presentedViewController;
- (void).cxx_destruct;
- (void)setNeedsUpdateOrientation;
- (void)animateTransparentInterstitialPresentationWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)composeTransparentInterstitialViewsForPresentation;
- (void)updateTransparentInterstitialOrientation;
- (struct CGRect)pivotedApplicationFrameForOrientation:(long long)arg1;
- (struct CGAffineTransform)transformForOrientation:(long long)arg1;
- (id)presentationViewController;
- (void)dismissWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic, getter=isReadyToPresent) _Bool readyToPresent;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMAdNetworkConnectorInterstitial : GADMAdNetworkConnector
{
    _Bool _calledWillDismissInterstitial;
}

@property(nonatomic) _Bool calledWillDismissInterstitial; // @synthesize calledWillDismissInterstitial=_calledWillDismissInterstitial;
- (void)adapter:(id)arg1 didFailInterstitial:(id)arg2;
- (void)adapter:(id)arg1 didReceiveInterstitial:(id)arg2;
- (void)adapterDidDismissFullScreenModal:(id)arg1;
- (void)adapterWillDismissFullScreenModal:(id)arg1;
- (void)adapterWillPresentFullScreenModal:(id)arg1;
- (void)adapter:(id)arg1 clickDidOccurInBanner:(id)arg2;
- (void)adapter:(id)arg1 didReceiveAdView:(id)arg2;
- (void)adapterWillLeaveApplication:(id)arg1;
- (void)adapterDidDismissInterstitial:(id)arg1;
- (void)adapterWillDismissInterstitial:(id)arg1;
- (void)adapterWillPresentInterstitial:(id)arg1;
- (void)adapter:(id)arg1 didFailAd:(id)arg2;
- (void)adapterDidReceiveInterstitial:(id)arg1;
- (void)getAdFromAdapterWithType:(id)arg1;

@end

@interface GADOVideoPlayer : NSObject <GADOVideoLoaderDelegate>
{
    _Bool _isBuffering;
    _Bool _hasPostedCanPlayThrough;
    _Bool _isObserving;
    _Bool _isObservingPlayerItem;
    _Bool _isObservingPlayerItemLoadedTimeRanges;
    id _timeObserver;
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    GADOAdView *_adView;
    GADOVideoLoader *_videoLoader;
    GADOVideoConfiguration *_configuration;
    NSMutableArray *_periodicTimeObservers;
    NSURL *_sourceURL;
    _Bool _playerToAudioVideoManagerReportingDisabled;
    _Bool _playing;
    _Bool _playbackStalled;
    _Bool _hasPlaybackStalledAtLeastOnce;
    float _volume;
    _Bool _muted;
    id _applicationForegroundObserver;
    id _applicationInactiveObserver;
    _Bool _isAppActive;
    id <GADOVideoPlayerDelegate> _delegate;
    GADOClearcutLogger *_logger;
}

@property(retain, nonatomic) GADOClearcutLogger *logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) _Bool hasPostedCanPlayThrough; // @synthesize hasPostedCanPlayThrough=_hasPostedCanPlayThrough;
@property(nonatomic) __weak id <GADOVideoPlayerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)videoLoader:(id)arg1 didFailToLoadURL:(id)arg2 withError:(id)arg3;
- (void)videoLoader:(id)arg1 didStartedLoadingURL:(id)arg2;
- (void)notifyVideoRateChanged;
- (void)notifyVideoPlayerWithNewStatus:(long long)arg1;
- (void)notifyVideoReadyToPlay;
- (void)notifyVideoPlayerWithTime:(CDStruct_198678f7)arg1;
- (void)itemDidPlayToEnd:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopObservingPlayerItemLoadedTimeRanges;
- (void)stopObservingPlayerItem;
- (void)stopObservingPlayer;
- (void)observePlayerItemLoadedTimeRanges;
- (void)observePlayerItem;
- (void)observePlayer;
- (void)resetLogger;
- (void)videoIsReadyToPlay;
- (void)removeTimeObserver:(id)arg1;
- (void)addPeriodicTimeObserverForInterval:(CDStruct_198678f7)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)handlePlayerItemDurationLoadUpdate;
- (struct CGSize)videoSize;
- (void)setVolume:(float)arg1 userInitiated:(_Bool)arg2;
- (void)seekToTime:(double)arg1;
- (void)setMuted:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)setAudioMixVolume:(float)arg1;
- (void)pause;
- (void)pauseNativePlayerUserInitiated:(_Bool)arg1;
- (void)play;
- (void)playNativePlayerUserInitiated:(_Bool)arg1;
- (void)load;
- (void)setSourceURL:(id)arg1 resourceCache:(id)arg2 videoConfiguration:(id)arg3;
@property(readonly, copy, nonatomic) NSURL *sourceURL;
- (void)didStopBuffering;
- (void)willStartBuffering;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;
- (id)init;
- (void)videoStatusUpdated:(long long)arg1;
- (void)videoLoadingFailedWithURL:(id)arg1 error:(id)arg2;
- (void)videoPlayedToTime:(CDStruct_198678f7)arg1 duration:(CDStruct_198678f7)arg2;
- (void)videoStartedPlaying;
- (void)videoReadyToPlayWithURL:(id)arg1;
- (void)videoLoadingStartedWithURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPOInterstitial : GADOInterstitial <DFPOCustomRenderedAdEventHandler>
{
    unsigned int _previousCorrelationID;
    _Bool _customAdRenderingEnabled;
    id <GADAppEventDelegate> _appEventDelegate;
    id <DFPCustomRenderedInterstitialDelegate> _customRenderedInterstitialDelegate;
}

@property(nonatomic, getter=isCustomAdRenderingEnabled) _Bool customAdRenderingEnabled; // @synthesize customAdRenderingEnabled=_customAdRenderingEnabled;
@property(nonatomic) __weak id <DFPCustomRenderedInterstitialDelegate> customRenderedInterstitialDelegate; // @synthesize customRenderedInterstitialDelegate=_customRenderedInterstitialDelegate;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 willLoadAdWithRequest:(id)arg2;
- (_Bool)slotShouldPreemptInProgressRequest:(id)arg1;
- (void)slot:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)presentFromRootViewController:(id)arg1;
- (_Bool)slot:(id)arg1 notifyPublisherToRenderCustomRenderingAd:(id)arg2 error:(id *)arg3;
@property(retain, nonatomic) GADOCorrelator *correlator;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;

// Remaining properties
@property(readonly, copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DFPOBannerView : GADOBannerView <GADOLoadable, DFPOCustomRenderedAdEventHandler>
{
    unsigned int _previousCorrelationID;
    id <GADAppEventDelegate> _appEventDelegate;
    NSArray *_validAdSizes;
    id <DFPCustomRenderedBannerViewDelegate> _customRenderedBannerViewDelegate;
}

+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (_Bool)canConvertToInstreamAd;
+ (id)requiredDelegateProtocol;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
@property(nonatomic) __weak id <DFPCustomRenderedBannerViewDelegate> customRenderedBannerViewDelegate; // @synthesize customRenderedBannerViewDelegate=_customRenderedBannerViewDelegate;
@property(copy, nonatomic) NSArray *validAdSizes; // @synthesize validAdSizes=_validAdSizes;
@property(nonatomic) __weak id <GADAppEventDelegate> appEventDelegate; // @synthesize appEventDelegate=_appEventDelegate;
- (void).cxx_destruct;
- (void)slot:(id)arg1 willLoadAdWithRequest:(id)arg2;
- (_Bool)slotShouldPreemptInProgressRequest:(id)arg1;
- (_Bool)slot:(id)arg1 notifyPublisherToRenderCustomRenderingAd:(id)arg2 error:(id *)arg3;
- (void)slot:(id)arg1 didReceiveAppEvent:(id)arg2 withInfo:(id)arg3;
- (void)slot:(id)arg1 willResizeToAdSize:(struct GADOAdSize)arg2;
- (void)setAdOptions:(id)arg1;
- (void)setValidAdSizesWithSizes:(struct GADOAdSize *)arg1;
- (void)recordImpression;
- (void)resize:(struct GADOAdSize)arg1;
@property(nonatomic) _Bool enableManualImpressions;
@property(retain, nonatomic) GADOCorrelator *correlator;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordCustomAdImpression;
- (void)recordClick;

// Remaining properties
@property(nonatomic) __weak id <GADAdSizeDelegate> adSizeDelegate; // @dynamic adSizeDelegate;
@property(copy, nonatomic) NSString *adUnitID; // @dynamic adUnitID;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(readonly, nonatomic) GADOVideoController *videoController; // @dynamic videoController;

@end

@interface GADMAdURLAdapter : NSObject <GADOSDKCoreControllerDelegate, GADOInterstitialAdClickDelegate, GADMAdNetworkAdapter>
{
    _Bool _shouldRespondToSDKCore;
    GADOBannerView *_banner;
    GADOInterstitial *_interstitial;
    id <GADOMInternalAdNetworkConnector> _connector;
    NSString *_requestID;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
@property(nonatomic) _Bool shouldRespondToSDKCore; // @synthesize shouldRespondToSDKCore=_shouldRespondToSDKCore;
@property(copy, nonatomic) NSString *requestID; // @synthesize requestID=_requestID;
@property(nonatomic) __weak id <GADOMInternalAdNetworkConnector> connector; // @synthesize connector=_connector;
@property(retain, nonatomic) GADOInterstitial *interstitial; // @synthesize interstitial=_interstitial;
@property(retain, nonatomic) GADOBannerView *banner; // @synthesize banner=_banner;
- (void).cxx_destruct;
- (void)reportInterstitialLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)reportBannerLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)reportAdLoadFailureWithCode:(long long)arg1 errorMessage:(id)arg2;
- (void)interstitialDidReceiveAdClick:(id)arg1;
- (void)interstitialWillLeaveApplication:(id)arg1;
- (void)interstitialDidDismissScreen:(id)arg1;
- (void)interstitialWillDismissScreen:(id)arg1;
- (void)interstitialWillPresentScreen:(id)arg1;
- (void)interstitial:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)interstitialDidReceiveAd:(id)arg1;
- (void)adViewWillLeaveApplication:(id)arg1;
- (void)adViewDidDismissScreen:(id)arg1;
- (void)adViewWillDismissScreen:(id)arg1;
- (void)adViewWillPresentScreen:(id)arg1;
- (void)adView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)adViewDidReceiveAd:(id)arg1;
- (void)failedJavaScriptFile;
- (void)invalidJavaScriptRequest;
- (void)loadAd:(id)arg1 headers:(id)arg2;
- (void)loadAdURLWithParameters:(id)arg1;
- (long long)requestedAdType;
- (id)backgroundRequestParameters;
- (_Bool)requiresBackgroundSingalCollection;
- (id)requestParameters;
- (id)adLoadActionTimeRecorder;
- (void)loadRequest;
- (void)changeAdSizeTo:(struct GADOAdSize)arg1;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)isBannerAnimationOK:(long long)arg1;
- (void)stopBeingDelegate;
- (void)getInterstitial;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (id)initWithGADMAdNetworkConnector:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediationInterstitialAdConfiguration : GADOMediationAdConfiguration
{
}

@end

@interface GADOUnifiedNativeAd : NSObject <GADNativeAdDelegate, GADONativeAdDelegateInternal, GADONativeAdUnconfirmedClickDelegate, GADOLoadable>
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    GADONativeAd<GADONativeAdSourceAttributing><GADOOverlayViewSource> *_internalNativeAd;
    NSString *_headline;
    NSString *_callToAction;
    GADONativeAdImage *_icon;
    NSString *_body;
    NSArray *_images;
    NSDecimalNumber *_starRating;
    NSString *_store;
    NSString *_price;
    NSString *_advertiser;
    GADOVideoController *_videoController;
    NSDictionary *_extraAssets;
    NSString *_adNetworkClassName;
    GADONativeAdImage *_adChoicesIcon;
    id <GADUnifiedNativeAdUnconfirmedClickDelegate> _unconfirmedClickDelegate;
    _Bool _adMutedReported;
    id <GADUnifiedNativeAdDelegate> _delegate;
    UIViewController *_rootViewController;
}

+ (id)mediationConnectorForConfiguration:(id)arg1 networkConfiguration:(id)arg2;
+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
@property(readonly, nonatomic) GADONativeAd<GADONativeAdSourceAttributing><GADOOverlayViewSource> *internalNativeAd; // @synthesize internalNativeAd=_internalNativeAd;
@property(readonly, nonatomic) GADONativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, copy, nonatomic) NSString *adNetworkClassName; // @synthesize adNetworkClassName=_adNetworkClassName;
@property(readonly, copy, nonatomic) NSDictionary *extraAssets; // @synthesize extraAssets=_extraAssets;
@property(nonatomic) __weak UIViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(nonatomic) __weak id <GADUnifiedNativeAdDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSString *advertiser; // @synthesize advertiser=_advertiser;
@property(readonly, copy, nonatomic) NSString *price; // @synthesize price=_price;
@property(readonly, copy, nonatomic) NSString *store; // @synthesize store=_store;
@property(readonly, copy, nonatomic) NSDecimalNumber *starRating; // @synthesize starRating=_starRating;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, copy, nonatomic) NSString *body; // @synthesize body=_body;
@property(readonly, nonatomic) GADONativeAdImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *callToAction; // @synthesize callToAction=_callToAction;
@property(readonly, copy, nonatomic) NSString *headline; // @synthesize headline=_headline;
- (void).cxx_destruct;
- (_Bool)isCustomClickGestureEnabled;
- (void)recordCustomClickGesture;
- (void)enableCustomClickGestures;
- (void)muteThisAdWithReason:(id)arg1;
- (void)nativeAdDidCancelUnconfirmedClick:(id)arg1;
- (void)nativeAd:(id)arg1 didReceiveUnconfirmedClickOnAssetID:(id)arg2;
- (void)nativeAdDidMuteAd:(id)arg1;
- (void)nativeAdWillLeaveApplication:(id)arg1;
- (void)nativeAdDidDismissScreen:(id)arg1;
- (void)nativeAdWillDismissScreen:(id)arg1;
- (void)nativeAdWillPresentScreen:(id)arg1;
- (void)nativeAdDidRecordClick:(id)arg1;
- (void)nativeAdDidRecordImpression:(id)arg1;
- (id)overlayView;
- (id)adChoicesContentView;
- (void)cancelUnconfirmedClick;
- (void)registerClickConfirmingView:(id)arg1;
- (id)unconfirmedClickDelegate;
- (void)setUnconfirmedClickDelegate:(id)arg1;
- (void)setAdUnitID:(id)arg1;
- (_Bool)hasValidConfigurationForRequestParameters:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (void)unregisterAdView;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
@property(readonly, nonatomic) NSArray *muteThisAdReasons;
@property(readonly, nonatomic, getter=isCustomMuteThisAdAvailable) _Bool customMuteThisAdAvailable;
- (id)init;
- (id)initWithNativeAd:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMRAIDResizeOverlayPresenter : GADOTransparentOverlayPresenter
{
    _Bool _dismissToDefaultState;
    GADOMRAIDResizeProperties *_resizeProperties;
    id <GADOMRAIDEventHandling> _MRAIDEventHandler;
    UIView *_referenceView;
}

+ (struct CGRect)adjustedContentFrame:(struct CGRect)arg1 inBounds:(struct CGRect)arg2;
@property(retain, nonatomic) UIView *referenceView; // @synthesize referenceView=_referenceView;
@property(nonatomic) __weak id <GADOMRAIDEventHandling> MRAIDEventHandler; // @synthesize MRAIDEventHandler=_MRAIDEventHandler;
@property(nonatomic) _Bool dismissToDefaultState; // @synthesize dismissToDefaultState=_dismissToDefaultState;
@property(retain, nonatomic) GADOMRAIDResizeProperties *resizeProperties; // @synthesize resizeProperties=_resizeProperties;
- (void).cxx_destruct;
- (void)updateTransparentInterstitialOrientation;
- (void)composeTransparentInterstitialViewsForPresentation;
- (_Bool)isReadyToPresent;
- (void)repositionContentIfNeeded;
- (struct CGRect)contentFrame;
- (_Bool)resizePropertiesAreValid:(id)arg1 relativeToView:(id)arg2;
- (id)initWithReferenceView:(id)arg1;
- (id)init;

@end

@interface GADORewardBasedVideoAdGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveVideoCompleteAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveGrantRewardAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveStartVideoAction:(id)arg2;
- (void)adView:(id)arg1 didReceiveRewardBasedVideoAdAction:(id)arg2;

@end

@interface GADOAdLoaderOptions : NSObject <NSCopying>
{
}

- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface DFPORequest : GADORequest
{
    NSString *_publisherProvidedID;
    NSArray *_categoryExclusions;
}

+ (void)updateCorrelator;
@property(copy, nonatomic) NSArray *categoryExclusions; // @synthesize categoryExclusions=_categoryExclusions;
@property(copy, nonatomic) NSString *publisherProvidedID; // @synthesize publisherProvidedID=_publisherProvidedID;
- (void).cxx_destruct;
- (id)threadSafeParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithParameters:(id)arg1;

// Remaining properties
@property(copy, nonatomic) NSDictionary *customTargeting; // @dynamic customTargeting;

@end

@interface GADOPrecacheGMSGHandler : NSObject <GADOResourceCacheDelegate>
{
    GADOAdView *_adView;
    NSURL *_sourceURL;
    _Bool _hasStartedPreloading;
    GADOVideoConfiguration *_videoConfiguration;
    long long _byteThresholdToNotify;
    _Bool _hasNotifiedAtByteThreshold;
    GADOResourceCache *_resourceCache;
}

+ (id)actionBlockDictionary;
+ (void)initialize;
@property(readonly, nonatomic) GADOResourceCache *resourceCache; // @synthesize resourceCache=_resourceCache;
- (void).cxx_destruct;
- (void)resourceCache:(id)arg1 didFailCachingWithError:(id)arg2;
- (void)resourceCacheDidSucceedCaching:(id)arg1;
- (void)resourceCacheDidReceiveData:(id)arg1;
- (void)resourceCacheDidReceiveResponse:(id)arg1;
- (void)dispatchPrecacheEventWithBytesLoaded:(unsigned long long)arg1 totalBytes:(long long)arg2 event:(id)arg3;
- (void)abort;
- (long long)lastBytesAfterCleanUp;
- (void)preload;
- (void)adView:(id)arg1 didReceivePrecacheNotification:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOCorrelatorAdLoaderOptions : GADOAdLoaderOptions
{
    GADOCorrelator *_correlator;
}

@property(retain, nonatomic) GADOCorrelator *correlator; // @synthesize correlator=_correlator;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADOAdNetworkJavaScriptAdViewDelegate : GADOBannerAdViewDelegate
{
    GADOAdView *_adView;
    unsigned long long _checkRenderingCount;
    NSTimer *_checkRenderingTimer;
    _Bool _renderingCheckHasStarted;
    _Bool _wasPassbackReceived;
    NSURL *_passbackURL;
}

@property(nonatomic) _Bool wasPassbackReceived; // @synthesize wasPassbackReceived=_wasPassbackReceived;
@property(copy, nonatomic) NSURL *passbackURL; // @synthesize passbackURL=_passbackURL;
- (void).cxx_destruct;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)adViewDidNotRenderContent;
- (void)adViewDidRenderContent;
- (void)stopRenderingTimer;
- (void)startRenderingTimerForAdView:(id)arg1;
- (void)checkIsContentRenderedInAdView;
- (_Bool)isPassbackRequest:(id)arg1;
- (id)initWithSlot:(id)arg1;
- (id)initWithSlot:(id)arg1 passbackURL:(id)arg2;

@end

@interface GADOViewUtilities : NSObject
{
}

+ (id)positionOfView:(id)arg1 inScreen:(id)arg2;

@end

@interface GADONativeAppInstallAdView : UIView
{
    GADONativeAdViewPolicy *_nativeAdViewPolicy;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    GADOMediaView *_mediaView;
    GADOAdChoicesView *_adChoicesView;
}

@property(nonatomic) __weak GADOAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADOMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
- (void)updateMediaView;
- (void)didMoveToSuperview;
- (void)layoutSubviews;
@property(retain, nonatomic) GADONativeAppInstallAd *nativeAppInstallAd;
- (void)commonInit;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;

@end

@interface GADONetworkUtilizationStatistics : NSObject
{
    struct NSDictionary *_transmittedByteCounts;
    struct NSDictionary *_receivedByteCounts;
}

+ (id)currentStatistics;
@property(readonly, nonatomic) NSDictionary *receivedByteCounts; // @synthesize receivedByteCounts=_receivedByteCounts;
@property(readonly, nonatomic) NSDictionary *transmittedByteCounts; // @synthesize transmittedByteCounts=_transmittedByteCounts;
- (void).cxx_destruct;
- (id)minusStatistics:(id)arg1;
- (id)plusStatistics:(id)arg1;
- (id)updatedStatistics;
- (id)init;
- (id)initWithTransmittedByteCounts:(struct NSDictionary *)arg1 receivedByteCounts:(struct NSDictionary *)arg2;

@end

@interface GADOBannerAd : GADOAd
{
}

- (id)initWithDictionary:(id)arg1;

@end

@interface GADOInterstitialViewController : GADOAdAppViewController
{
    NSString *_previousScreenName;
    NSString *_previousScreenClass;
    _Bool _hasSetScreenName;
    double _applicationBackgroundTimeIntervalSinceBoot;
    _Bool _presented;
}

@property(readonly, nonatomic) _Bool presented; // @synthesize presented=_presented;
- (void).cxx_destruct;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)finishDismissal;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)finishAppearing;
- (_Bool)isLoaded;
- (_Bool)shouldDismissOnApplicationEnteringForeground;
- (void)presentFromViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)updateBackgroundTimeIntervalSinceBoot;
- (id)initWithAdView:(id)arg1;
- (id)initWithSlot:(id)arg1;

@end

@interface GADMediatedNativeAd : GADOMediatedAd
{
    UIView *_renderedView;
    _Bool _adapterHandlesUserClicks;
    _Bool _adapterHandlesUserImpressions;
    _Bool _allowPublisherRenderedAttribution;
    _Bool _viewAwareAPIAllowed;
    _Bool _customClickGestureAllowed;
    id _ad;
}

@property(nonatomic) _Bool customClickGestureAllowed; // @synthesize customClickGestureAllowed=_customClickGestureAllowed;
@property(nonatomic) _Bool viewAwareAPIAllowed; // @synthesize viewAwareAPIAllowed=_viewAwareAPIAllowed;
@property(nonatomic) _Bool allowPublisherRenderedAttribution; // @synthesize allowPublisherRenderedAttribution=_allowPublisherRenderedAttribution;
@property(nonatomic) _Bool adapterHandlesUserImpressions; // @synthesize adapterHandlesUserImpressions=_adapterHandlesUserImpressions;
@property(nonatomic) _Bool adapterHandlesUserClicks; // @synthesize adapterHandlesUserClicks=_adapterHandlesUserClicks;
@property(retain, nonatomic) id ad; // @synthesize ad=_ad;
- (void).cxx_destruct;
- (void)reportMediatedAdShouldUntrackView:(id)arg1;
- (void)reportMediatedAdRenderedInView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3 viewController:(id)arg4;
- (void)reportClickOnAssetWithWithName:(id)arg1 view:(id)arg2 viewController:(id)arg3;
- (void)reportAdNetworkImpression;
- (void)reportAdNetworkClick;
- (void)reportImpression;
- (id)loadableAdForAdLoader:(id)arg1;
- (Class)nativeAdClass;
- (void)dealloc;

@end

@interface GADOUIKitWebView : GADOWebView
{
}

+ (_Bool)isAvailable;
+ (void)initialize;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (id)URL;
- (_Bool)contentSizeUpdatesSynchronously;
- (void)evaluateJavaScriptFromString:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOSlotStatistics : NSObject
{
    GADOStatisticsCore *_statisticsCore;
    GADOTimingManager *_timingManager;
    NSString *_identifier;
}

- (void).cxx_destruct;
- (id)fillStatusStringFromArray:(id)arg1;
- (id)adapterFillStatusParameterOrderedByAllocationIDs:(id)arg1;
- (id)adapterFillStatusParameter;
- (id)adapterDurationsParameter;
- (id)adapterExitCodesParameter;
- (void)resetFillStatus;
- (void)resetTimingAdapters;
- (void)endTimingAdapterWithFillStatus:(long long)arg1 allocationID:(id)arg2;
- (void)endTimingAdapterWithExitCode:(long long)arg1;
- (void)startTimingAdapter;
- (void)endTimingNamed:(id)arg1;
- (void)startTimingNamed:(id)arg1 withExplicitEnd:(_Bool)arg2;
- (id)timingNamed:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *statistics;
- (void)setIdentifier:(id)arg1;
- (id)init;

@end

@interface GADOInstreamAdVideoController : NSObject
{
    GADOAdViewVideoController *_videoController;
    CDUnknownBlockType _playbackEndedBlock;
    NSMutableArray *_observers;
    _Bool _isMuted;
    id <GADOInstreamAdVideoControllerDelegate> _delegate;
    double _duration;
    double _currentTime;
}

@property(nonatomic) double currentTime; // @synthesize currentTime=_currentTime;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) __weak id <GADOInstreamAdVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)startObservingAdViewVideoController;
- (void)stopObservingAdViewVideoController;
@property(nonatomic, getter=isMuted) _Bool muted;
- (void)pause;
- (void)play;
- (void)setAdViewVideoController:(id)arg1;
- (void)setVideoPlaybackEndedBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;

@end

@interface GADOMRAIDGMSGHandler : GADOGMSGHandler
{
    GADOOpener *_opener;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 actionUnload:(id)arg2;
- (void)adView:(id)arg1 actionSetOrientationProperties:(id)arg2;
- (void)adView:(id)arg1 actionCreateCalendarEvent:(id)arg2;
- (void)adView:(id)arg1 actionStorePicture:(id)arg2;
- (void)adView:(id)arg1 actionResize:(id)arg2;
- (void)adView:(id)arg1 didReceiveMRAIDNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveMRAIDLoadNotification:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADONativeAdViewPolicy : NSObject <GADOImpressionMonitorDelegate, GADOActiveViewMonitorDelegate, GADOAdViewActiveViewMonitoring>
{
    UIView *_adChoicesContentView;
    UIView *_weakAdChoicesViewFromPublisher;
    UIView *_adView;
    GADOOverlayView *_overlayView;
    NSMapTable *_assetViewAssetNames;
    NSMutableSet *_clickableAssetNames;
    NSMapTable *_clickableAssetViews;
    NSMapTable *_nonclickableAssetViews;
    NSString *_adChoicesViewAssetName;
    NSString *_attributionIconAssetName;
    NSString *_attributionTextAssetName;
    NSString *_backgroundAssetName;
    long long _adChoicesViewCorner;
    GADOImpressionMonitor *_impressionMonitor;
    NSMutableArray *_adChoicesViewConstraints;
    _Bool _shouldAllowPublisherRenderAdChoices;
    GADOAdExposureMonitor *_adExposureMonitor;
    GADONativeAdTapGestureRecognizer *_singleTap;
    GADGestureRecognizer *_touchGestureRecognizer;
    GADOTouchGestureRecognizer *_touchEventGestureRecognizer;
    _Bool _isAdViewOwnedByPublisher;
    GADOActiveViewMonitor *_activeViewMonitor;
    unsigned long long _activeViewID;
    GADOSDKCoreWebView *_SDKCoreWebView;
    id _appWillResignActiveObserver;
    id _appBecameActiveObserver;
    _Bool _adChoicesViewClickable;
    id _customClickGestureObserver;
    GADOMediaView *_mediaView;
    GADONativeAd<GADONativeAdSourceAttributing><GADOOverlayViewSource> *_nativeAd;
}

@property(retain, nonatomic) GADONativeAd<GADONativeAdSourceAttributing><GADOOverlayViewSource> *nativeAd; // @synthesize nativeAd=_nativeAd;
- (void).cxx_destruct;
- (void)activeViewMonitoringDidStop:(unsigned long long)arg1;
- (_Bool)activeViewMonitoringStarted:(unsigned long long)arg1;
- (void)activeViewVisibilityChanged:(_Bool)arg1;
- (void)activeViewMonitorDidScroll:(id)arg1;
- (void)activeViewMonitorDidRefresh:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)impressionMonitorDidMonitorImpression:(id)arg1;
- (void)handleCustomClickGesture:(id)arg1;
- (_Bool)isViewTracked:(id)arg1;
- (id)activeViewJSCommandWithParams:(id)arg1;
- (void)enqueueJSCommandWithUnloaded:(_Bool)arg1;
- (void)finishActiveViewReporting;
- (void)startActiveViewReportingIfEnabled;
- (void)createActiveViewMonitor;
- (_Bool)monitoredViewIsSubviewOfDeviceScreen;
- (_Bool)nativeAdHasMedia;
- (_Bool)nativeAdHasVideo;
- (void)beginObservingVideoClickNotifications;
- (void)recordImpression;
- (void)stopImpressionMonitoring;
- (void)startImpressionMonitoring;
- (void)checkForImpression;
- (void)adViewDidMoveToSuperview;
- (void)adViewDidLayoutSubviews;
- (void)handleImpressionTracking;
- (void)orderViews;
- (void)replaceAssetWithName:(id)arg1 withAssetView:(id)arg2 weakReferencePointer:(id *)arg3;
- (void)updateAdChoicesView;
- (void)updateAdChoicesContentView;
- (void)updateOverlay;
- (void)updateMediaView;
- (void)finishAdExposureMonitoring;
- (id)signalDictionaryWithAssetView:(id)arg1 assetName:(id)arg2 adView:(id)arg3;
- (id)nativeAdSignalDictionary;
- (id)tapHandlingEnvironmentWithTapLocation:(struct CGPoint)arg1 tappedViewName:(id)arg2;
- (void)handleVideoClickNotification:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)addUserInteractionToAdView;
- (void)constrainAdChoicesViewToCorner;
- (void)dealloc;
- (void)setClickableAssetViews:(id)arg1 nonclickableAssetViews:(id)arg2;
- (void)unregisterAdView;
- (id)initWithAdView:(id)arg1 adChoicesViewAssetName:(id)arg2 attributionIconAssetName:(id)arg3 attributionTextAssetName:(id)arg4 backgroundAssetName:(id)arg5 isAdViewOwnedByPublisher:(_Bool)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOIntermission : NSObject
{
    _Bool _publisherIdleTimerDisabled;
    GADOSlot *_slot;
    _Bool _statusBarWasOriginallyHidden;
    long long _activeParticipantsCount;
    long long _deactivatingParticipantsCount;
    NSHashTable *_activeParticipants;
    NSHashTable *_deactivatingParticipants;
    NSOperationQueue *_deactivationQueue;
    _Bool _statusBarOverridden;
}

- (void).cxx_destruct;
- (void)applicationWillEnterForegroundWithNotification:(id)arg1;
- (void)participantDidRelinquishScreen:(id)arg1;
- (void)participantWillRelinquishScreen:(id)arg1;
- (void)participantWillOverrideStatusBarVisibility:(id)arg1;
- (void)addParticipant:(id)arg1;
- (void)didEnd;
- (void)willEnd;
- (void)begin;
- (void)cleanUpDeallocatedParticipants;
- (id)activeParticipants;
- (void)dealloc;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADOAdViewState : NSObject
{
    UIView *_superview;
    id <GADOAdViewDelegate> _delegate;
    UIViewController *_viewController;
    unsigned long long _autoresizingMask;
    struct CGRect _frame;
}

@property(nonatomic) unsigned long long autoresizingMask; // @synthesize autoresizingMask=_autoresizingMask;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
@property(nonatomic) __weak id <GADOAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *superview; // @synthesize superview=_superview;
@property(nonatomic) struct CGRect frame; // @synthesize frame=_frame;
- (void).cxx_destruct;

@end

@interface GADOAdView : UIView <GADOVideoPlayerDelegate, GADOWebViewDelegate, GADOWebViewContentSizeDelegate, GADOWebKitWebViewMRAIDDelegate, UIAlertViewDelegate>
{
    GADOWebView *_webView;
    NSURL *_URL;
    GADOAdViewState *_savedState;
    NSOperationQueue *_eventQueue;
    UIGestureRecognizer *_touchGestureRecognizer;
    UIGestureRecognizer *_debugGestureRecognizer;
    _Bool _reportedStartLoadEarly;
    _Bool _isInterstitialAdView;
    _Bool _isFluidAdView;
    UIView *_webViewBackgroundPlaceholder;
    _Bool _touched;
    _Bool _showDebug;
    _Bool _hasLoadedAtLeastOnce;
    _Bool _attachedToPlacement;
    _Bool _visible;
    _Bool _isMediaView;
    UIViewController *_viewController;
    NSString *_adDebugDialogString;
    long long _orientation;
    GADOAdViewActiveViewReporter *_activeViewReporter;
    id <GADOAdViewDelegate> _delegate;
    GADOAd *_ad;
    GADOClearcutLogger *_logger;
    UIView *_testAdLabel;
    GADOWebViewConfiguration *_configuration;
    GADOVideoConfiguration *_videoConfiguration;
    GADOPrecacheGMSGHandler *_precacheGMSGHandler;
    NSMutableDictionary *_cachedStoreKitProducts;
    GADOAdViewVideoController *_videoController;
    GADOVideoPlayer *_videoPlayer;
    UIView<GADOVideoRendering> *_videoPlayerView;
    id <GADORewardBasedVideoAdGMSGHandlerDelegate> _rewardBasedVideoAdGMSGHandlerDelegate;
    struct CGSize _adResponseSize;
    struct CGRect _cachedVideoPlayerFrame;
}

@property(nonatomic) __weak id <GADORewardBasedVideoAdGMSGHandlerDelegate> rewardBasedVideoAdGMSGHandlerDelegate; // @synthesize rewardBasedVideoAdGMSGHandlerDelegate=_rewardBasedVideoAdGMSGHandlerDelegate;
@property(nonatomic) struct CGRect cachedVideoPlayerFrame; // @synthesize cachedVideoPlayerFrame=_cachedVideoPlayerFrame;
@property(retain, nonatomic) UIView<GADOVideoRendering> *videoPlayerView; // @synthesize videoPlayerView=_videoPlayerView;
@property(retain, nonatomic) GADOVideoPlayer *videoPlayer; // @synthesize videoPlayer=_videoPlayer;
@property(retain, nonatomic) GADOAdViewVideoController *videoController; // @synthesize videoController=_videoController;
@property(retain, nonatomic) NSMutableDictionary *cachedStoreKitProducts; // @synthesize cachedStoreKitProducts=_cachedStoreKitProducts;
@property(retain, nonatomic) GADOPrecacheGMSGHandler *precacheGMSGHandler; // @synthesize precacheGMSGHandler=_precacheGMSGHandler;
@property(retain, nonatomic) GADOVideoConfiguration *videoConfiguration; // @synthesize videoConfiguration=_videoConfiguration;
@property(nonatomic) _Bool isMediaView; // @synthesize isMediaView=_isMediaView;
@property(readonly, nonatomic) GADOWebViewConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain, nonatomic) UIView *testAdLabel; // @synthesize testAdLabel=_testAdLabel;
@property(nonatomic) _Bool visible; // @synthesize visible=_visible;
@property(retain, nonatomic) GADOClearcutLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) GADOAd *ad; // @synthesize ad=_ad;
@property(readonly, nonatomic) _Bool attachedToPlacement; // @synthesize attachedToPlacement=_attachedToPlacement;
@property(readonly, nonatomic) _Bool hasLoadedAtLeastOnce; // @synthesize hasLoadedAtLeastOnce=_hasLoadedAtLeastOnce;
@property(nonatomic) __weak id <GADOAdViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) GADOAdViewActiveViewReporter *activeViewReporter; // @synthesize activeViewReporter=_activeViewReporter;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) struct CGSize adResponseSize; // @synthesize adResponseSize=_adResponseSize;
@property(nonatomic) _Bool showDebug; // @synthesize showDebug=_showDebug;
@property(copy, nonatomic) NSString *adDebugDialogString; // @synthesize adDebugDialogString=_adDebugDialogString;
@property(nonatomic) _Bool touched; // @synthesize touched=_touched;
@property(nonatomic) __weak UIViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (void)postJSNotification:(id)arg1 userInfo:(id)arg2;
- (void)layoutSubviews;
@property(readonly, copy, nonatomic) NSURL *URL;
@property(readonly, nonatomic, getter=isLoading) _Bool loading;
@property(readonly, nonatomic, getter=canGoForward) _Bool canGoForward;
@property(readonly, nonatomic, getter=canGoBack) _Bool canGoBack;
- (id)backgroundColor;
- (void)setBackgroundColor:(id)arg1;
- (_Bool)isOpaque;
- (void)setOpaque:(_Bool)arg1;
@property(readonly, retain, nonatomic) UIScrollView *scrollView;
- (void)webView:(id)arg1 didChangeScrollViewContentSize:(struct CGSize)arg2;
- (void)webViewProcessDidTerminate:(id)arg1;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithTitle:(id)arg2 defaultText:(id)arg3 prompt:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithTitle:(id)arg2 message:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (_Bool)canOpenWebViewAlertPanelWithViewController:(id)arg1 opener:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)updateWebViewFrameWithCompletionBlock:(CDUnknownBlockType)arg1;
- (double)contentSizeDelay;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)MRAIDJavaScriptURLStringForWebView:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)reload;
- (void)stopLoading;
- (void)goForward;
- (void)goBack;
- (void)loadRequest:(id)arg1;
- (void)didMoveToPlacement:(id)arg1;
- (void)didRotateToOrientation:(long long)arg1;
- (void)forceRotateHTMLToOrientation:(long long)arg1;
- (void)setHTMLWindowOrientation:(long long)arg1 shouldDispatchOrientationChangeEvent:(_Bool)arg2;
- (void)dispatchSDKEvent:(id)arg1 parameters:(id)arg2;
- (void)willLoadHTML;
- (void)restoreState;
- (void)saveState;
- (id)webView;
- (void)executeJavaScriptAsynchronouslyFromString:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)contentSize;
- (void)handleGesture:(id)arg1;
- (void)reset;
- (void)addGestureRecognizers;
- (void)loadHTMLString:(id)arg1 baseURL:(id)arg2;
- (void)setIsFluidAdView:(_Bool)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)layerContainsOpenGLLayer:(id)arg1;
- (void)deallocateAdViewIfInterstitial;
- (void)reportRequestsForAd:(id)arg1;
- (void)configureAsBannerAdView;
- (void)configureAsInterstitialAdView;
- (id)opener;
- (void)willMoveToWindow:(id)arg1;
- (void)updateWebViewSuperview:(id)arg1;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 configuration:(id)arg2;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)videoRenderingSucceeded;
- (void)videoRenderingStarted;
- (void)openGLVideoRenderingSucceeded;
- (void)openGLVideoRenderingFailedWithError:(id)arg1;
- (void)openGLVideoRenderingStarted;
- (void)videoLoadSucceededWithURL:(id)arg1;
- (void)videoLoadStartedWithURL:(id)arg1;
- (void)adRenderingStarted;
- (void)createdVideoPlayer:(id)arg1;
- (void)player:(id)arg1 didLoadURL:(id)arg2 withAVPlayer:(id)arg3;
- (void)createNonSphericalViewForPlayer:(id)arg1;
- (void)removeVideoPlayerView;
- (void)createViewForPlayer:(id)arg1;
- (void)optimizeVideoPlayback;
- (void)pauseVideo;
- (void)showVideo;
- (void)hideVideo;
- (void)setVideoPlayerFrame:(struct CGRect)arg1;
- (void)setUpVideoPlayerWithURL:(id)arg1 resourceCache:(id)arg2 configuration:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInterstitialPoolGroupRefillPolicy : NSObject <GADOInterstitialPoolRefilling>
{
    NSHashTable *_pools;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)addPool:(id)arg1;
- (void)fillPools;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAdViewResourceCollection : NSObject
{
    NSMutableArray *_resources;
    NSMutableDictionary *_requestIndexForCanonicalURL;
    NSMutableDictionary *_requestIndicesForRedirectToURL;
    NSData *_imageData;
    NSObject<OS_dispatch_queue> *_lockQueue;
    NSURL *_mainDocumentURL;
    GADOSafeBrowsingReporter *_safeBrowsingReporter;
    NSMutableArray *_clickthroughURLs;
    GADOAdView *_adView;
}

+ (void)setGreedyCollectionEnabled:(_Bool)arg1;
@property(readonly, nonatomic) __weak GADOAdView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (id)resourceDataForRequest:(id)arg1;
- (id)dictionaryRepresentation;
@property(readonly, nonatomic, getter=isMalicious) _Bool malicious;
- (void)adViewDidFinishLayout;
- (void)addAutoClickRequest:(id)arg1;
- (void)addClickthroughURL:(id)arg1;
- (id)resourceForRequest:(id)arg1;
- (void)addResourceData:(id)arg1 forRequest:(id)arg2;
- (void)addURLResponse:(id)arg1 forRequest:(id)arg2;
- (void)addRequest:(id)arg1;
- (void)addResourceRequest:(id)arg1;
- (void)addParentForResource:(id)arg1;
- (id)referringResourceForRequest:(id)arg1;
- (id)redirectSourceForRequest:(id)arg1;
- (void)addRedirectDestinationForResource:(id)arg1;
- (void)updateSafeBrowsingReporter;
@property(copy) NSURL *mainDocumentURL;
- (id)init;
- (id)initWithAdView:(id)arg1;

@end

@interface GADOBlockTimerTarget : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)timerFired:(id)arg1;

@end

@interface GADONativeAdAttributionView : UIView
{
    GADOPushTransitionView *_iconView;
    UILabel *_textView;
    UIView *_textPaddingLeft;
    UIView *_textPaddingRight;
    NSArray *_dynamicConstraints;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) UIView *textView;
@property(readonly, nonatomic) UIView *iconView;
- (void)setAttribution:(id)arg1;
- (void)layoutSubviews;
- (id)initWithAttribution:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADOClearcutAdViewCommandExecutor : NSObject <GADOAdViewDelegate, GADOClearcutCommandExecuting>
{
    GADOAdView *_adView;
    _Bool _loaded;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

- (void).cxx_destruct;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (_Bool)isLoaded;
- (void)asynchronouslyExecuteCommands:(id)arg1;
- (void)dealloc;
- (id)initWithScript:(id)arg1 baseURL:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOAnalyticsGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveLogEventNotification:(id)arg2;

@end

@interface GADOInAppPurchaseProductCache : NSObject
{
    NSMutableDictionary *_validProducts;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)requestProductsWithProductIdentifiers:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)cachedProductForProductIdentifier:(id)arg1;
- (id)init;

@end

@interface GADONativeAdVideoClickGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (void)adView:(id)arg1 didReceiveClickNotification:(id)arg2;

@end

@interface GADOVideoController : NSObject <GADOVideoControlling>
{
    NSMutableArray *_observers;
    id <GADVideoControllerDelegate> _delegate;
    id <GADOVideoControlling> _internalVideoController;
}

@property(retain, nonatomic) id <GADOVideoControlling> internalVideoController; // @synthesize internalVideoController=_internalVideoController;
@property(nonatomic) __weak id <GADVideoControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)videoControllerDidUnmuteVideo:(id)arg1;
- (void)videoControllerDidMuteVideo:(id)arg1;
- (void)videoControllerDidEndVideoPlayback:(id)arg1;
- (void)videoControllerDidPauseVideo:(id)arg1;
- (void)videoControllerDidPlayVideo:(id)arg1;
- (void)startObservingInternalVideoController;
- (void)stopObservingInternalVideoController;
- (_Bool)clickToExpandEnabled;
- (long long)videoPlaybackState;
- (_Bool)customControlsEnabled;
- (void)setInitialStateWithVideoOptions:(id)arg1;
- (double)aspectRatio;
- (_Bool)hasVideoContent;
- (void)setMute:(_Bool)arg1;
- (void)pause;
- (void)play;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADONativeContentAd : GADONativeAd <GADMediatedNativeContentAd, GADOLoadable, GADONativeAdMediaDisplaying, GADONativeAdSourceAttributing, GADOOverlayViewSource>
{
    _Bool _disableImageLoading;
    NSArray *_nativeAdImages;
    NSMutableArray *_availableNativeAdImages;
    GADOOverlayView *_overlayView;
    GADOVideoController *_videoController;
    GADONativeAdAttribution *_attribution;
    NSString *_headline;
    NSString *_body;
    NSString *_callToAction;
    GADONativeAdImage *_logo;
    NSString *_advertiser;
    GADONativeAdImage *_adChoicesIcon;
    id <GADOMediaContentDisplaying> _mediaContent;
    UIView *_adChoicesContentView;
}

+ (_Bool)canInitWithAdLoader:(id)arg1 error:(id *)arg2;
+ (id)requestParametersForAdLoader:(id)arg1;
+ (id)requiredDelegateProtocol;
+ (_Bool)canConvertToInstreamAd;
+ (id)loadableAdWithAdDictionary:(id)arg1 options:(id)arg2;
@property(retain, nonatomic) UIView *adChoicesContentView; // @synthesize adChoicesContentView=_adChoicesContentView;
@property(retain, nonatomic) id <GADOMediaContentDisplaying> mediaContent; // @synthesize mediaContent=_mediaContent;
@property(readonly, nonatomic) GADONativeAdImage *adChoicesIcon; // @synthesize adChoicesIcon=_adChoicesIcon;
@property(readonly, nonatomic) GADOVideoController *videoController; // @synthesize videoController=_videoController;
@property(readonly, copy, nonatomic) NSString *advertiser; // @synthesize advertiser=_advertiser;
@property(readonly, copy, nonatomic) NSString *callToAction; // @synthesize callToAction=_callToAction;
@property(readonly, nonatomic) GADONativeAdImage *logo; // @synthesize logo=_logo;
- (void).cxx_destruct;
- (id)overlayView;
- (void)adLoaderDidReceiveAd:(id)arg1;
- (void)loadAssetsWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly, copy, nonatomic) NSArray *images;
@property(readonly, copy, nonatomic) NSString *body;
@property(readonly, copy, nonatomic) NSString *headline;
- (id)requiredAssets;
- (void)unregisterAdView;
- (void)registerAdViewForUnifiedNativeAd:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (_Bool)canRegisterAdView:(id)arg1 clickableAssetViews:(id)arg2 nonclickableAssetViews:(id)arg3;
- (void)registerAdView:(id)arg1 assetViews:(id)arg2;
- (_Bool)recordImpressionWithData:(id)arg1;
- (void)reportTouchEventWithData:(id)arg1;
- (void)performClickWithData:(id)arg1;
- (id)adFormatTemplateID;
- (void)setSlot:(id)arg1;
- (id)initWithMediatedUnifiedNativeAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeContentAd:(id)arg1 mediatedNativeAd:(id)arg2 options:(id)arg3;
- (id)initWithMediatedNativeAd:(id)arg1 options:(id)arg2;
- (id)initWithDictionary:(id)arg1 options:(id)arg2;
- (void)GADONativeContentAd_category;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMediatedUnifiedNativeAdNotificationSource : NSObject
{
}

+ (void)mediatedNativeAdDidEndVideoPlayback:(id)arg1;
+ (void)mediatedNativeAdDidPauseVideo:(id)arg1;
+ (void)mediatedNativeAdDidPlayVideo:(id)arg1;
+ (void)mediatedNativeAdWillLeaveApplication:(id)arg1;
+ (void)mediatedNativeAdDidDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillDismissScreen:(id)arg1;
+ (void)mediatedNativeAdWillPresentScreen:(id)arg1;
+ (void)mediatedNativeAdDidRecordClick:(id)arg1;
+ (void)mediatedNativeAdDidRecordImpression:(id)arg1;

@end

@interface GADODefaultInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
    SKPaymentTransaction *_paymentTransaction;
}

+ (void)disableDefaultPurchaseFlow;
+ (void)enableDefaultPurchaseFlowWithDelegate:(id)arg1;
@property(readonly, nonatomic) SKPaymentTransaction *paymentTransaction; // @synthesize paymentTransaction=_paymentTransaction;
@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)finishTransaction;

@end

@interface GADOVideoPlayerView : UIView <GADOVideoRendering>
{
    AVPlayer *_player;
    AVPlayerItem *_playerItem;
    AVPlayerLayer *_playerLayer;
    _Bool _playbackOptimizationEnabled;
}

- (void).cxx_destruct;
- (void)disableVideoPlaybackOptimization;
- (void)resetVideoPlaybackOptimization;
- (void)enableVideoPlaybackOptimization;
- (void)optimizeVideoForAdVisibility:(_Bool)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setUpWithPlayer:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOThreadStop : NSObject
{
}

- (void)stopCurrentRunLoop;

@end

@interface GADOOverlayView : UIView <GADOAdViewDelegate>
{
    GADOAdView *_overlayView;
    NSDictionary *_loadOverlayUserInfo;
    GADOAdViewDelegate *_adViewDelegate;
    NSString *_overlayIdentifier;
    GADOAdView *_adView;
}

@property(retain, nonatomic) GADOAdView *adView; // @synthesize adView=_adView;
- (void).cxx_destruct;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)handleSendMessageToOverlayView:(id)arg1;
- (void)handleHideOverlayView;
- (void)handleShowOverlayView;
- (void)handleLoadOverlayView:(id)arg1;
- (void)handleAdMuted;
- (void)handleSendMessageToAdViewNotification:(id)arg1;
- (void)sendMessageToOverlayWithUserInfo:(id)arg1;
- (void)loadOverlayWithUserInfo:(id)arg1;
- (void)addOverlaySubview;
- (void)removeOverlaySubview;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOStubsForFIRAnalytics : NSObject
{
    NSString *_googleAppID;
    NSString *_analyticsAppID;
    NSString *_appInstanceID;
    NSString *_adEventID;
    NSString *_origin;
}

@property(readonly, copy, nonatomic) NSString *origin; // @synthesize origin=_origin;
@property(readonly, copy, nonatomic) NSString *adEventID; // @synthesize adEventID=_adEventID;
@property(readonly, copy, nonatomic) NSString *appInstanceID; // @synthesize appInstanceID=_appInstanceID;
@property(readonly, copy, nonatomic) NSString *analyticsAppID; // @synthesize analyticsAppID=_analyticsAppID;
@property(readonly, copy, nonatomic) NSString *googleAppID; // @synthesize googleAppID=_googleAppID;
- (void).cxx_destruct;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logInternalEventWithOrigin:(id)arg1 name:(id)arg2 parameters:(id)arg3;

@end

@interface GADOStubsForAPMAnalytics : NSObject
{
}

+ (void)startWithAppID:(id)arg1 origin:(id)arg2 options:(id)arg3;

@end

@interface GADOAnalytics : NSObject
{
    id _adExposureReporter;
    id _analyticsIdentifiers;
    id _analytics;
    id _screenViewReporter;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)endAdUnitExposure:(id)arg1;
- (void)beginAdUnitExposure:(id)arg1;
- (void)setScreenName:(id)arg1 screenClass:(id)arg2;
- (void)getScreenName:(id *)arg1 screenClass:(id *)arg2;
- (void)logEventWithName:(id)arg1 adEventID:(id)arg2 parameters:(id)arg3;
- (id)appIDOrigin;
- (id)adEventID;
- (id)appInstanceID;
- (id)googleAppID;
- (_Bool)validateAnalytics;
- (id)initWithAPMFramework;
- (id)initWithFIRFramework;
- (void)startAppMeasurement;

@end

@interface GADOTwoFingersLongPressGestureRecognizer : UIGestureRecognizer
{
    long long _gestureState;
    double _startTimestamp;
    double _endTimestamp;
    NSTimer *_debugGestureTimer;
    NSTimer *_numberOfTouchesTimer;
}

- (void).cxx_destruct;
- (void)invalidateDebugGestureTimers;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)reset;

@end

@interface GADOPublicKey : NSObject
{
    struct __SecCertificate *_certificate;
    struct __SecTrust *_trustStore;
    struct __SecKey *_key;
}

- (_Bool)isSignatureValid:(id)arg1 forMessage:(id)arg2;
- (void)dealloc;
- (id)initWithCertificateData:(id)arg1;

@end

@interface GADOAdViewDelegate : NSObject <GADOAdViewDelegate>
{
    NSMutableArray *_GMSGHandlers;
    _Bool _hasLoadedAtLeastOnce;
    GADOOpener *_opener;
}

@property(readonly, nonatomic) _Bool hasLoadedAtLeastOnce; // @synthesize hasLoadedAtLeastOnce=_hasLoadedAtLeastOnce;
@property(readonly, nonatomic) GADOOpener *opener; // @synthesize opener=_opener;
- (void).cxx_destruct;
- (id)CSIForGMSGHandler:(id)arg1;
- (void)adViewWebProcessDidTerminate:(id)arg1;
- (void)adView:(id)arg1 didMoveToPlacement:(id)arg2;
- (void)adView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)handlesClicks;
- (void)addGMSGHandler:(id)arg1;
- (void)adViewDidFinishLoad:(id)arg1;
- (void)adViewDidStartLoad:(id)arg1;
- (_Bool)adView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)adViewDelegateAdView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (_Bool)shouldTreatNavigationTypeAsClick:(long long)arg1;
- (void)handleDeeplinkPlusURL:(id)arg1;
- (void)handleGMSGURL:(id)arg1 adView:(id)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOBrowserAdView : GADOAdView
{
}

- (id)browserViewController;
- (void)setViewController:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GADOTouchGestureRecognizer : UIGestureRecognizer
{
    NSDate *_lastTouchTimestamp;
    NSDate *_lastTouchBeginTimestamp;
}

@property(readonly, nonatomic) NSDate *lastTouchBeginTimestamp; // @synthesize lastTouchBeginTimestamp=_lastTouchBeginTimestamp;
@property(readonly, nonatomic) NSDate *lastTouchTimestamp; // @synthesize lastTouchTimestamp=_lastTouchTimestamp;
- (void).cxx_destruct;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;

@end

@interface GADOInAppPurchase : NSObject
{
    NSString *_productID;
    long long _quantity;
}

@property(readonly, nonatomic) long long quantity; // @synthesize quantity=_quantity;
@property(readonly, copy, nonatomic) NSString *productID; // @synthesize productID=_productID;
- (void).cxx_destruct;
- (void)reportPurchaseStatus:(long long)arg1;
- (id)init;

@end

@interface GADOAppEventGMSGHandler : GADOGMSGHandler
{
    GADOSlot *_slot;
}

+ (id)actionBlockDictionary;
@property(nonatomic) __weak GADOSlot *slot; // @synthesize slot=_slot;
- (void).cxx_destruct;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 didReceiveAppEventNotification:(id)arg2;
- (id)initWithSlot:(id)arg1;
- (id)init;

@end

@interface GADOCategories : NSObject
{
}

- (void)linkCategoriesAndClasses;

@end

@interface GADOAd : NSObject
{
    NSMutableSet *_clickURLs;
    NSMutableSet *_impressionURLs;
    NSMutableSet *_downloadedImpressionURLs;
    NSMutableSet *_manualImpressionURLs;
    _Bool _hasSentDebugSignal;
    _Bool _scrollAware;
    _Bool _scrollEnabled;
    _Bool _fluid;
    _Bool _analyticsLoggingEnabled;
    _Bool _hasAdNetworkJavaScript;
    _Bool _customCloseBlocked;
    _Bool _closableAreaDisabled;
    _Bool _isSelfMediated;
    _Bool _OMIDEnabled;
    GADOStatisticDictionary *_statistics;
    NSURL *_adBaseURL;
    NSString *_adHTML;
    NSURL *_adURL;
    NSURLRequest *_originalRequest;
    NSMutableArray *_redirects;
    NSDictionary *_responseHeaders;
    NSDictionary *_activeViewConfigurations;
    long long _impressionDefinition;
    unsigned long long _responseType;
    id <GADOMRAIDEventHandling> _MRAIDEventHandler;
    double _reloadInterval;
    unsigned long long _supportedOrientations;
    NSString *_debugDialogString;
    NSString *_customAdSizeString;
    GADOSafeBrowsingReporter *_safeBrowsingReporter;
    double _croppedContentThreshold;
    NSString *_analyticsQueryAdEventID;
    NSURL *_adNetworkPassbackURL;
    NSString *_GWSQueryID;
    id <GADOAdMediationDelegate> _mediationDelegate;
    NSString *_debugSignalInformation;
    NSString *_adUnitID;
    GADOAdReward *_reward;
    NSNumber *_renderTestAdLabel;
    NSUUID *_requestIdentifier;
    NSString *_maxAdContentRating;
    struct CGSize _size;
}

@property(nonatomic) _Bool OMIDEnabled; // @synthesize OMIDEnabled=_OMIDEnabled;
@property(copy, nonatomic) NSString *maxAdContentRating; // @synthesize maxAdContentRating=_maxAdContentRating;
@property(copy, nonatomic) NSUUID *requestIdentifier; // @synthesize requestIdentifier=_requestIdentifier;
@property(nonatomic) _Bool isSelfMediated; // @synthesize isSelfMediated=_isSelfMediated;
@property(copy, nonatomic) NSNumber *renderTestAdLabel; // @synthesize renderTestAdLabel=_renderTestAdLabel;
@property(nonatomic) _Bool closableAreaDisabled; // @synthesize closableAreaDisabled=_closableAreaDisabled;
@property(nonatomic) _Bool customCloseBlocked; // @synthesize customCloseBlocked=_customCloseBlocked;
@property(retain, nonatomic) GADOAdReward *reward; // @synthesize reward=_reward;
@property(copy, nonatomic) NSString *adUnitID; // @synthesize adUnitID=_adUnitID;
@property(copy, nonatomic) NSString *debugSignalInformation; // @synthesize debugSignalInformation=_debugSignalInformation;
@property(nonatomic) __weak id <GADOAdMediationDelegate> mediationDelegate; // @synthesize mediationDelegate=_mediationDelegate;
@property(copy, nonatomic) NSString *GWSQueryID; // @synthesize GWSQueryID=_GWSQueryID;
@property(readonly, copy, nonatomic) NSURL *adNetworkPassbackURL; // @synthesize adNetworkPassbackURL=_adNetworkPassbackURL;
@property(readonly, nonatomic) _Bool hasAdNetworkJavaScript; // @synthesize hasAdNetworkJavaScript=_hasAdNetworkJavaScript;
@property(nonatomic) _Bool analyticsLoggingEnabled; // @synthesize analyticsLoggingEnabled=_analyticsLoggingEnabled;
@property(copy, nonatomic) NSString *analyticsQueryAdEventID; // @synthesize analyticsQueryAdEventID=_analyticsQueryAdEventID;
@property(nonatomic) double croppedContentThreshold; // @synthesize croppedContentThreshold=_croppedContentThreshold;
@property(retain, nonatomic) GADOSafeBrowsingReporter *safeBrowsingReporter; // @synthesize safeBrowsingReporter=_safeBrowsingReporter;
@property(copy, nonatomic) NSString *customAdSizeString; // @synthesize customAdSizeString=_customAdSizeString;
@property(copy, nonatomic) NSString *debugDialogString; // @synthesize debugDialogString=_debugDialogString;
@property(nonatomic) unsigned long long supportedOrientations; // @synthesize supportedOrientations=_supportedOrientations;
@property(nonatomic) double reloadInterval; // @synthesize reloadInterval=_reloadInterval;
@property(nonatomic, getter=isFluid) _Bool fluid; // @synthesize fluid=_fluid;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) __weak id <GADOMRAIDEventHandling> MRAIDEventHandler; // @synthesize MRAIDEventHandler=_MRAIDEventHandler;
@property(nonatomic, getter=isScrollEnabled) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) unsigned long long responseType; // @synthesize responseType=_responseType;
@property(nonatomic) long long impressionDefinition; // @synthesize impressionDefinition=_impressionDefinition;
@property(nonatomic) _Bool scrollAware; // @synthesize scrollAware=_scrollAware;
@property(copy, nonatomic) NSDictionary *activeViewConfigurations; // @synthesize activeViewConfigurations=_activeViewConfigurations;
@property(copy, nonatomic) NSDictionary *responseHeaders; // @synthesize responseHeaders=_responseHeaders;
@property(readonly, copy, nonatomic) NSMutableArray *redirects; // @synthesize redirects=_redirects;
@property(copy, nonatomic) NSURLRequest *originalRequest; // @synthesize originalRequest=_originalRequest;
@property(copy, nonatomic) NSURL *adURL; // @synthesize adURL=_adURL;
@property(copy, nonatomic) NSString *adHTML; // @synthesize adHTML=_adHTML;
@property(copy, nonatomic) NSURL *adBaseURL; // @synthesize adBaseURL=_adBaseURL;
@property(retain, nonatomic) GADOStatisticDictionary *statistics; // @synthesize statistics=_statistics;
- (void).cxx_destruct;
- (void)pingManualImpressionURLs;
- (void)pingDownloadedImpressionURLs;
- (void)pingImpressionURLs;
- (void)pingDebugSignal;
- (void)pingClickURLs;
- (void)addManualImpressionURLsFromArray:(id)arg1;
- (void)addDownloadedImpressionURLsFromArray:(id)arg1;
- (void)addImpressionURLsFromArray:(id)arg1;
- (void)addClickURLsFromArray:(id)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface GADOLocation : NSObject <NSCopying>
{
    double _timestamp;
    NSDictionary *_dictionaryRepresentation;
    NSString *_locationDescription;
    double _latitude;
    double _longitude;
    double _accuracy;
}

@property(readonly, nonatomic) double accuracy; // @synthesize accuracy=_accuracy;
@property(readonly, nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(readonly, nonatomic) double latitude; // @synthesize latitude=_latitude;
- (void).cxx_destruct;
@property(readonly, copy, nonatomic) GADOLocation *coarseLocation;
@property(readonly, copy, nonatomic) NSDictionary *dictionaryRepresentation;
@property(readonly, nonatomic) _Bool isPreciseLocation;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, copy, nonatomic) NSString *locationDescription;
- (id)description;
- (id)initWithDictionary:(id)arg1;
- (id)initWithLocationDescription:(id)arg1;
- (id)initWithLatitude:(double)arg1 longitude:(double)arg2 accuracy:(double)arg3;

@end

@interface GADODefaultGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
+ (long long)integerForKey:(id)arg1 fromDictionary:(id)arg2 withDefaultValue:(long long)arg3;
- (void)adView:(id)arg1 didReceiveCloseNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveCanOpenURLsNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveVibrateNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveTouchNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveLogNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveTrackHTTPNotification:(id)arg2;

@end

@interface GADOInterstitialPoolRefillWhenIdlePolicy : GADOInterstitialPoolGroupRefillPolicy
{
    id _adRequestCountObserver;
    id _videoBufferingStartObserver;
    id _videoBufferingStopObserver;
    NSMutableSet *_bufferingVideoPlayerIdentifiers;
    NSObject<OS_dispatch_queue> *_bufferLockQueue;
}

- (void).cxx_destruct;
- (void)fillPools;
- (void)interstitialPoolDidRemoveEntry:(id)arg1;
- (void)addPool:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADONativeAdMediaAdLoaderOptions : GADOAdLoaderOptions
{
    long long _mediaAspectRatio;
}

@property(nonatomic) long long mediaAspectRatio; // @synthesize mediaAspectRatio=_mediaAspectRatio;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface GADOSafeBrowsingReporter : NSObject
{
    NSURL *_reportURL;
    _Bool _shouldReportMaliciousAds;
    _Bool _shouldReportBenignAds;
    _Bool _shouldSendRenderedAd;
    GADOAutoClickProtection *_autoClickProtection;
    NSString *_clickString;
    NSSet *_excludedHeaders;
}

@property(readonly, nonatomic) NSSet *excludedHeaders; // @synthesize excludedHeaders=_excludedHeaders;
@property(readonly, copy, nonatomic) NSString *clickString; // @synthesize clickString=_clickString;
@property(readonly, nonatomic) GADOAutoClickProtection *autoClickProtection; // @synthesize autoClickProtection=_autoClickProtection;
@property(readonly, nonatomic) _Bool shouldSendRenderedAd; // @synthesize shouldSendRenderedAd=_shouldSendRenderedAd;
@property(readonly, nonatomic) _Bool shouldReportBenignAds; // @synthesize shouldReportBenignAds=_shouldReportBenignAds;
@property(readonly, nonatomic) _Bool shouldReportMaliciousAds; // @synthesize shouldReportMaliciousAds=_shouldReportMaliciousAds;
- (void).cxx_destruct;
- (void)reportResourceCollection:(id)arg1;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADOClearcutLogger : NSObject
{
    GADOBufferedClearcutLogger *_bufferedLogger;
    NSString *_clearcutID;
    _Bool _shouldReportEventsOnDealloc;
    NSObject<OS_dispatch_queue> *_lockQueue;
    _Bool _environmentReported;
    _Bool _experimentIDsReported;
}

- (void).cxx_destruct;
@property _Bool experimentIDsReported;
@property _Bool environmentReported;
- (void)reportBufferedParameters:(id)arg1;
- (id)clearcutParametersFromEvent:(id)arg1;
- (void)executeClearcutCommandWithParameter:(id)arg1;
- (void)reportExperimentIDs;
- (void)reportEnvironment;
- (void)reportEvent:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface GADOGMSGHandler : NSObject
{
    NSMutableArray *_bufferedNotifications;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)flushBuffer;
- (_Bool)shouldHandleNotificationSynchronously;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (_Bool)handleNotification:(id)arg1 adView:(id)arg2;
- (_Bool)handleRequest:(id)arg1 adView:(id)arg2;
- (id)init;

@end

@interface GADOOpenerGMSGHandler : GADOGMSGHandler
{
    GADOOpener *_opener;
}

+ (id)subActionBlockDictionary;
+ (id)actionBlockDictionary;
@property(retain, nonatomic) GADOOpener *opener; // @synthesize opener=_opener;
- (void).cxx_destruct;
- (_Bool)shouldUseCustomClose:(id)arg1;
- (unsigned long long)orientationFromParams:(id)arg1;
- (id)URLFromParams:(id)arg1 key:(id)arg2;
- (void)adView:(id)arg1 actionOpenAppLink:(id)arg2;
- (void)adView:(id)arg1 actionOpenApp:(id)arg2;
- (void)adView:(id)arg1 actionExpand:(id)arg2;
- (void)adView:(id)arg1 actionOpenWebApp:(id)arg2;
- (void)adView:(id)arg1 actionOpenInlineSafari:(id)arg2;
- (void)adView:(id)arg1 actionOpenBrowser:(id)arg2;
- (void)adView:(id)arg1 fetchInAppStore:(id)arg2;
- (void)adView:(id)arg1 actionOpenInAppStore:(id)arg2;
- (void)adView:(id)arg1 didReceiveOpenNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveUnconfirmedClickNotification:(id)arg2;
- (void)adView:(id)arg1 didReceiveClickNotification:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADOOperation : NSObject
{
    CDUnknownBlockType _operationBlock;
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasStarted
    NSObject<OS_dispatch_group> *_completionGroup;
    id _result;
    NSError *_error;
    _Bool _timedOut;
    CDUnknownBlockType _completionBlock;
    double _timeout;
}

@property(readonly, nonatomic) _Bool timedOut; // @synthesize timedOut=_timedOut;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;
- (id)resultAfterWaitingWithError:(id *)arg1;
- (void)waitForCompletion;
- (void)start;
- (void)dealloc;
- (id)init;
- (id)initWithBlock:(CDUnknownBlockType)arg1;

@end

@interface DFPOCustomRenderedAd : NSObject
{
    _Bool _isRendered;
    id <DFPOCustomRenderedAdEventHandler> _eventHandler;
    NSString *_adHTML;
    NSURL *_adBaseURL;
}

@property(readonly, copy, nonatomic) NSURL *adBaseURL; // @synthesize adBaseURL=_adBaseURL;
@property(readonly, copy, nonatomic) NSString *adHTML; // @synthesize adHTML=_adHTML;
- (void).cxx_destruct;
- (void)finishedRenderingAdView:(id)arg1;
- (void)recordImpression;
- (void)recordClick;
- (id)init;
- (id)initWithAdHTML:(id)arg1 adBaseURL:(id)arg2 eventHandler:(id)arg3;

@end

@interface GADOAdapterStatus : NSObject <NSCopying>
{
    NSString *_statusDescription;
    long long _state;
    double _latency;
}

@property(readonly, nonatomic) double latency; // @synthesize latency=_latency;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
@property(readonly, nonatomic) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithState:(long long)arg1 latency:(double)arg2 description:(id)arg3;

@end

@interface GADOInitializationStatus : NSObject <NSCopying>
{
    NSDictionary *_adapterStatusesByClassName;
}

@property(readonly, nonatomic) NSDictionary *adapterStatusesByClassName; // @synthesize adapterStatusesByClassName=_adapterStatusesByClassName;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)statusWithEntry:(id)arg1 forKey:(id)arg2;
- (id)initWithClassNames:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface GADOViewMonitor : NSObject
{
    GADOScheduler *_updateViewBoundsScheduler;
    NSObject<OS_dispatch_queue> *_lockQueue;
    id <GADOViewMonitorDelegate> _delegate;
    struct CGRect _monitoredViewVisibleBounds;
    _Bool _monitoredViewVisible;
    UIView *_monitoredView;
    _Bool _shouldUseZOrderViewVisibility;
}

- (void).cxx_destruct;
@property(readonly) _Bool monitoredViewVisible;
@property(readonly) struct CGRect monitoredViewVisibleBounds;
- (void)setMonitoredViewVisibleBounds:(struct CGRect)arg1;
@property __weak id <GADOViewMonitorDelegate> delegate;
- (void)updateViewBounds;
- (void)stopMonitoring;
- (void)sample;
- (void)startMonitoringWithSamplingInterval:(double)arg1;
- (id)init;
- (id)initWithView:(id)arg1 shouldUseZOrderViewVisibility:(_Bool)arg2;
- (id)initWithView:(id)arg1;

@end

@interface GADOAdRefreshGMSGHandler : GADOGMSGHandler
{
    GADOOpener *_opener;
}

+ (id)actionBlockDictionary;
- (void).cxx_destruct;
- (void)adView:(id)arg1 didReceiveRefreshAction:(id)arg2;
- (id)initWithOpener:(id)arg1;

@end

@interface GADOExpandedAdAppViewController : GADOAdAppViewController
{
    UIImageView *_renderedBanner;
}

- (void).cxx_destruct;
- (void)relinquishScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)configureView;
- (_Bool)isLoaded;
- (void)dealloc;
- (id)initWithAdView:(id)arg1;

@end

@interface GADOLoggingHierarchy : NSObject
{
    NSMapTable *_objectsRootLoggingObject;
    NSMapTable *_objectLogger;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)removeLogger:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)linkObject:(id)arg1 withChildObjects:(id)arg2;
- (id)rootObjectForObject:(id)arg1;
- (id)loggerForObject:(id)arg1;
- (void)setLogger:(id)arg1 forRootObject:(id)arg2;
- (id)init;

@end

@interface GADOMRTBInterstitialAdapter : NSObject <GADMediationInterstitialAdEventDelegate, GADMAdNetworkAdapter>
{
    GADMAdNetworkConnector *_connector;
    id <GADMediationInterstitialAd> _mediatedAd;
    GADOMediationInterstitialAdConfiguration *_mediationConfiguration;
}

+ (Class)networkExtrasClass;
+ (id)adapterVersion;
- (void).cxx_destruct;
- (void)changeAdSizeTo:(struct GADOAdSize)arg1;
- (void)stopBeingDelegate;
- (void)getBannerWithSize:(struct GADOAdSize)arg1;
- (void)didFailToPresentWithError:(id)arg1;
- (void)willBackgroundApplication;
- (void)didDismissFullScreenView;
- (void)willDismissFullScreenView;
- (void)willPresentFullScreenView;
- (void)reportClick;
- (void)reportImpression;
- (void)presentInterstitialFromRootViewController:(id)arg1;
- (_Bool)adapter:(id)arg1 completedLoadForConnector:(id)arg2 withMediatedAd:(id)arg3 error:(id)arg4;
- (void)getInterstitial;
- (id)initWithGADMAdNetworkConnector:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOInterstitialCache : NSObject
{
    NSMutableDictionary *_interstitialPoolsByRequestKey;
    NSMutableArray *_recentlyAccessedRequestKeys;
    NSMutableDictionary *_observedRequestsByRequestKey;
    id <GADOInterstitialPoolRefilling> _poolRefillPolicy;
    id _SDKCoreConstantsObserver;
    NSObject<OS_dispatch_queue> *_lockQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)updateRefillPolicy;
- (void)loadInterstitialsForSavedRequests;
- (void)didAccessKey:(id)arg1 request:(id)arg2;
- (id)cacheEntryForRequest:(id)arg1 adUnitID:(id)arg2;
- (void)loadRequest:(id)arg1 adUnitID:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface GADODevice : NSObject
{
    NSObject<OS_dispatch_queue> *_lockQueue;
    long long _statusBarOrientation;
    unsigned long long _mainWindowSupportedInterfaceOrientations;
    unsigned long long _supportedInterfaceOrientationsForKeyWindow;
    struct CGRect _standardizedMainScreenPortraitBounds;
    struct CGRect _standardizedMainScreenLandscapeBounds;
    _Bool _userInterfaceIdiomIsPhone;
    unsigned long long _bookstores;
    float _audioVolume;
    NSArray *_audioRoutePortNames;
    // Error parsing type: AB, name: _canMakePayments
    // Error parsing type: {atomic_flag="_Value"AB}, name: _hasCalledCanMakePayments
    NSDictionary *_infoPlist;
    _Bool _hasCachedStaticParameters;
    _Bool _hasCachedAdditionalStaticParameters;
    struct CGSize _standardizedOrientedKeyWindowSize;
    MPVolumeView *_volumeView;
    UISlider *_volumeSliderView;
    NSString *_pseudonymousIdentifier;
    id <NSObject> _orientationChangeObserver;
    NSString *_deviceModel;
    NSString *_systemVersion;
    double _mainScreenDensity;
    _Bool _isOtherAudioPlaying;
    NSNumber *_shouldSilenceAudioValue;
    _Bool _canText;
    _Bool _canMakePhoneCalls;
    CDStruct_f6aba300 _operatingSystemVersion;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSNumber *shouldSilenceAudioValue; // @synthesize shouldSilenceAudioValue=_shouldSilenceAudioValue;
@property(readonly, nonatomic) _Bool isOtherAudioPlaying; // @synthesize isOtherAudioPlaying=_isOtherAudioPlaying;
@property(readonly, nonatomic) _Bool canMakePhoneCalls; // @synthesize canMakePhoneCalls=_canMakePhoneCalls;
@property(readonly, nonatomic) _Bool canText; // @synthesize canText=_canText;
@property(readonly, nonatomic) CDStruct_f6aba300 operatingSystemVersion; // @synthesize operatingSystemVersion=_operatingSystemVersion;
- (void).cxx_destruct;
- (_Bool)isSimulator;
@property(readonly, copy, nonatomic) NSArray *audioRoutePortNames;
@property(readonly, nonatomic) float audioVolume;
@property(readonly, nonatomic) struct CGSize standardizedPortraitKeyWindowSize;
@property(readonly, nonatomic) struct CGSize standardizedOrientedKeyWindowSize;
@property(readonly, nonatomic) struct CGRect standardizedOrientedApplicationFrame;
@property(readonly, nonatomic) struct CGRect standardizedOrientedScreenBounds;
@property(readonly, nonatomic) struct CGRect standardizedLandscapeScreenBounds;
@property(readonly, nonatomic) struct CGRect standardizedPortraitScreenBounds;
@property(readonly, nonatomic) _Bool orientationLandscape;
@property(readonly, nonatomic) NSString *locale;
@property(readonly, nonatomic) double mainScreenDensity;
@property(readonly, nonatomic) NSString *deviceSubmodel;
@property(readonly, nonatomic) NSString *deviceModel;
- (id)deviceIdentifier;
- (id)rawDeviceIdentifier;
- (id)pseudonymousIdentifier;
- (void)clearPseudonymousIdentifier;
@property(readonly, nonatomic) NSString *systemVersion;
@property(readonly, nonatomic) _Bool jailbroken;
@property(readonly, copy, nonatomic) NSString *limitAdTrackingString;
@property(readonly, nonatomic) _Bool limitAdTracking;
- (id)canOpenURLs:(id)arg1;
- (_Bool)OSIsSupported;
- (_Bool)isOSAtLeastMajor:(long long)arg1 minor:(long long)arg2 patch:(long long)arg3;
- (void)updateOperatingSystemVersionProperties;
- (void)updateCanMakePayments;
- (id)baseSDKVersion;
- (id)parameters;
- (void)updateAudioPortNames;
- (void)updateAudioVolume;
- (void)updateAudio;
- (void)updateOrientedKeyWindowSize;
- (void)updateBookstores;
- (void)updateOrientation;
- (void)updateDynamicParameters;
- (void)cacheAdditionalStaticParameters;
- (void)cacheStaticParameters;
- (void)dealloc;
- (id)init;

@end

@interface GADOAdAppGMSGHandler : GADOGMSGHandler
{
}

+ (id)actionBlockDictionary;
- (_Bool)shouldBufferNotification:(id)arg1 adView:(id)arg2;
- (void)adView:(id)arg1 updateInterstitialPropertiesWithArguments:(id)arg2;
- (void)adView:(id)arg1 configureCustomCloseButtonWithArguments:(id)arg2;

@end

@interface GADOMediationBannerAdConfiguration : GADOMediationAdConfiguration
{
    struct GADOAdSize _adSize;
}

@property(readonly, nonatomic) struct GADOAdSize adSize; // @synthesize adSize=_adSize;
- (id)initWithConnector:(id)arg1 credentials:(id)arg2;
- (id)init;
- (id)initWithAdSize:(struct GADOAdSize)arg1 connector:(id)arg2 credentials:(id)arg3;

@end

@interface GADOAdConfiguration : NSObject
{
    NSDictionary *_options;
}

@property(readonly, copy, nonatomic) NSDictionary *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (id)requestParameters;
- (id)initWithOptions:(id)arg1;

@end

@interface GADONetworkLogger : NSObject
{
    NSObject<OS_dispatch_queue> *_logQueue;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)logNetworkError:(id)arg1 components:(id)arg2;
- (void)logResponseBody:(id)arg1 withContent:(_Bool)arg2 components:(id)arg3;
- (void)logResponseHeader:(id)arg1 components:(id)arg2;
- (void)logRequest:(id)arg1 components:(id)arg2 requestOnly:(_Bool)arg3;
- (void)logEvent:(id)arg1 timestamp:(id)arg2 components:(id)arg3 userInfo:(id)arg4;
- (void)logMessage:(id)arg1;
@property(readonly, getter=isEnabled) _Bool enabled;
- (id)init;

@end

@interface GADOVideoOptions : GADOAdLoaderOptions
{
    _Bool _startMuted;
    _Bool _customControlsRequested;
    _Bool _clickToExpandRequested;
}

@property(nonatomic) _Bool clickToExpandRequested; // @synthesize clickToExpandRequested=_clickToExpandRequested;
@property(nonatomic) _Bool customControlsRequested; // @synthesize customControlsRequested=_customControlsRequested;
@property(nonatomic) _Bool startMuted; // @synthesize startMuted=_startMuted;
- (id)requestParameters;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface GADOClearcutConfig : NSObject
{
    _Bool _enabled;
    _Bool _useJSCore;
    double _beaconInterval;
    NSURL *_scriptURL;
    NSString *_version;
    NSURL *_baseURL;
    long long _maxBufferedCommandSize;
    NSString *_JSConfig;
}

@property(readonly, copy, nonatomic) NSString *JSConfig; // @synthesize JSConfig=_JSConfig;
@property(readonly, nonatomic) long long maxBufferedCommandSize; // @synthesize maxBufferedCommandSize=_maxBufferedCommandSize;
@property(readonly, copy, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSURL *scriptURL; // @synthesize scriptURL=_scriptURL;
@property(readonly, nonatomic) double beaconInterval; // @synthesize beaconInterval=_beaconInterval;
@property(readonly, nonatomic) _Bool useJSCore; // @synthesize useJSCore=_useJSCore;
@property(readonly, nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (id)init;

@end

@interface GADGestureRecognizer : UIGestureRecognizer
{
    int _gestureInfo[29];
}

- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (CDStruct_d1583d57 *)gestureInfo;

@end

@interface GADGestureIdUtil : NSObject
{
    NSUserDefaults *userDefaults_;
}

+ (_Bool)isOSAtLeastMajor:(int)arg1 minor:(int)arg2 bug:(int)arg3;
+ (void)getOSMajor:(int *)arg1 minor:(int *)arg2 bugFix:(int *)arg3;
+ (id)sharedInstance;
@property(retain, nonatomic) NSUserDefaults *userDefaults; // @synthesize userDefaults=userDefaults_;
- (_Bool)deviceOptedOut;
- (id)deviceIdentifier;
- (id)osVersion;
- (void)dealloc;
- (id)init;

@end

@interface GADOMIDAdEvents : NSObject
{
    GADOMIDAdSession *_adSession;
}

- (void).cxx_destruct;
- (void)startSessionIfNeeded;
- (_Bool)impressionOccurredWithError:(id *)arg1;
- (id)initWithAdSession:(id)arg1 error:(id *)arg2;

@end

@interface GADOMIDAdSession : NSObject
{
    NSPointerArray *_friendlyObstructions;
    UIView *_mainAdView;
    GADOMIDAdSessionContext *_context;
    _Bool _lastPublishedViewStateWasPopulated;
    GADOMIDAdSessionConfiguration *_configuration;
    NSString *_identifier;
    GADOMIDEventFilter *_eventFilter;
    GADOMIDBridge *_bridge;
    GADOMIDAdSessionStatePublisher *_statePublisher;
    id <GADOMIDAdSessionDelegate> _delegate;
}

@property(nonatomic) _Bool lastPublishedViewStateWasPopulated; // @synthesize lastPublishedViewStateWasPopulated=_lastPublishedViewStateWasPopulated;
@property(nonatomic) __weak id <GADOMIDAdSessionDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GADOMIDAdSessionStatePublisher *statePublisher; // @synthesize statePublisher=_statePublisher;
@property(readonly, nonatomic) GADOMIDBridge *bridge; // @synthesize bridge=_bridge;
@property(readonly, nonatomic) GADOMIDEventFilter *eventFilter; // @synthesize eventFilter=_eventFilter;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) GADOMIDAdSessionConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (double)deviceVolume;
- (void)setDeviceVolume;
- (void)logErrorWithType:(unsigned long long)arg1 message:(id)arg2;
- (void)internal_removeAllFriendlyObstructions;
- (void)removeAllFriendlyObstructions;
- (void)internal_removeFriendlyObstruction:(id)arg1;
- (void)removeFriendlyObstruction:(id)arg1;
- (void)internal_addFriendlyObstruction:(id)arg1;
- (void)addFriendlyObstruction:(id)arg1;
- (void)onFinish;
- (void)finish;
- (void)onStart;
- (void)start;
- (void)internal_setMainAdView:(id)arg1;
@property(nonatomic) __weak UIView *mainAdView;
- (id)videoEventsPublisher;
- (id)adEventsPublisher;
@property(readonly, nonatomic) NSArray *friendlyObstructions;
- (void)addToRegistry;
- (id)initWithConfiguration:(id)arg1 adSessionContext:(id)arg2 error:(id *)arg3;

@end

@interface GADOMIDAdSessionConfiguration : NSObject
{
    _Bool _isolateVerificationScripts;
    unsigned long long _impressionOwner;
    unsigned long long _videoEventsOwner;
}

@property _Bool isolateVerificationScripts; // @synthesize isolateVerificationScripts=_isolateVerificationScripts;
@property unsigned long long videoEventsOwner; // @synthesize videoEventsOwner=_videoEventsOwner;
@property unsigned long long impressionOwner; // @synthesize impressionOwner=_impressionOwner;
- (id)initWithImpressionOwner:(unsigned long long)arg1 videoEventsOwner:(unsigned long long)arg2 error:(id *)arg3;
- (id)initWithImpressionOwner:(unsigned long long)arg1 videoEventsOwner:(unsigned long long)arg2 isolateVerificationScripts:(_Bool)arg3 error:(id *)arg4;

@end

@interface GADOMIDAdSessionContext : NSObject
{
    GADOMIDPartner *_partner;
    unsigned long long _type;
    UIView *_webView;
    NSArray *_resources;
    NSString *_script;
    NSString *_identifier;
}

@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSString *script; // @synthesize script=_script;
@property(readonly, nonatomic) NSArray *resources; // @synthesize resources=_resources;
@property(readonly, nonatomic) __weak UIView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) GADOMIDPartner *partner; // @synthesize partner=_partner;
- (void).cxx_destruct;
- (id)typeString;
- (id)resourcesJSON;
- (id)toJSON;
- (id)initWithPartner:(id)arg1 script:(id)arg2 resources:(id)arg3 customReferenceIdentifier:(id)arg4 error:(id *)arg5;
- (id)initWithPartner:(id)arg1 webView:(id)arg2 customReferenceIdentifier:(id)arg3 error:(id *)arg4;

@end

@interface GADOMIDAdSessionRegistry : NSObject <GADOMIDAdSessionDelegate>
{
    NSPointerArray *_adSessions;
    NSMutableArray *_activeAdSessions;
    NSMutableArray *_observers;
}

+ (id)getInstance;
- (void).cxx_destruct;
- (void)adSession:(id)arg1 didRegisterAdView:(id)arg2;
- (void)adSessionDidFinish:(id)arg1;
- (void)adSessionDidStart:(id)arg1;
- (void)addStateObserver:(id)arg1;
- (void)removeAdSession:(id)arg1;
- (void)addAdSession:(id)arg1;
@property(readonly, nonatomic, getter=isActive) _Bool active;
@property(readonly, nonatomic) NSArray *observers;
@property(readonly, nonatomic) NSArray *activeAdSessions;
@property(readonly, nonatomic) NSArray *adSessions;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDAdSessionStatePublisher : NSObject
{
    id <GADOMIDCommandPublisher> _commandPublisher;
    unsigned long long _adState;
    double _timestamp;
}

@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) unsigned long long adState; // @synthesize adState=_adState;
@property(readonly, nonatomic) id <GADOMIDCommandPublisher> commandPublisher; // @synthesize commandPublisher=_commandPublisher;
- (void).cxx_destruct;
- (void)publishDeviceVolume:(double)arg1;
- (void)publishAppState:(id)arg1;
- (void)publishEmptyNativeViewStateWithCommand:(id)arg1 timestamp:(double)arg2;
- (void)publishNativeViewStateWithCommand:(id)arg1 timestamp:(double)arg2;
- (void)cleanupAdState;
- (id)initWithCommandPublisher:(id)arg1;

@end

@interface GADOMIDAdViewCache : NSObject
{
    NSMutableDictionary *_adViews;
    NSMutableDictionary *_friendlyObstructions;
    GADOMIDViewKey *_key;
    _Bool _isAdViewProcessed;
    NSMutableSet *_rootViews;
    NSMutableSet *_visibleSessionIds;
    NSMutableSet *_hiddenSessionIds;
    GADOMIDAdSessionRegistry *_adSessionRegistry;
}

@property(readonly, nonatomic) GADOMIDAdSessionRegistry *adSessionRegistry; // @synthesize adSessionRegistry=_adSessionRegistry;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSSet *hiddenSessionIds;
@property(readonly, nonatomic) NSSet *visibleSessionIds;
@property(readonly, nonatomic) NSSet *rootViews;
@property(readonly, nonatomic) NSDictionary *friendlyObstructions;
@property(readonly, nonatomic) NSDictionary *adViews;
- (unsigned long long)typeForView:(id)arg1;
- (id)friendlySessionIdsForView:(id)arg1;
- (id)sessionIdForView:(id)arg1;
- (void)onAdViewProcessed;
- (void)cleanup;
- (void)addFriendlyObstruction:(id)arg1 forAdSession:(id)arg2;
- (void)prepareFriendlyObstructionsForAdSession:(id)arg1;
- (_Bool)buildRootViewsFromAdView:(id)arg1;
- (void)prepare;
- (id)initWithAdSessionRegistry:(id)arg1;

@end

@interface GADOMIDBridge : NSObject <GADOMIDCommandPublisher, GADOMIDSessionEventsPublisher, GADOMIDAdEventsPublisher, GADOMIDVideoEventsPublisher>
{
    id <GADOMIDJSExecutor> _jsExecutor;
}

@property(readonly, nonatomic) id <GADOMIDJSExecutor> jsExecutor; // @synthesize jsExecutor=_jsExecutor;
- (void).cxx_destruct;
- (id)getStringOwner:(unsigned long long)arg1;
- (id)getStringError:(unsigned long long)arg1;
- (void)publishEventWithName:(id)arg1 parameters:(id)arg2 commandName:(id)arg3;
- (void)publishVideoEventWithName:(id)arg1 parameters:(id)arg2;
- (void)publishImpressionEvent;
- (void)publishFinishEvent;
- (void)publishErrorWithType:(unsigned long long)arg1 errorMessage:(id)arg2;
- (void)publishStartEventWithAdSessionId:(id)arg1 JSONContext:(id)arg2 verificationParameters:(id)arg3;
- (void)publishInitWithConfiguration:(id)arg1;
- (void)internal_publishCommand:(id)arg1;
- (void)publishCommand:(id)arg1;
- (id)initWithJSExecutor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDCommand : NSObject
{
}

+ (id)stringFromArguments:(char *)arg1;
+ (id)stringWithQuotesFromString:(id)arg1;
+ (id)commandWithName:(id)arg1;

@end

@interface GADOMIDContext : NSObject
{
}

+ (id)sharedContext;
- (id)toJSON;

@end

@interface GADOMIDDevice : NSObject
{
}

+ (id)toJSON;
+ (id)deviceOsVersion;
+ (id)deviceOs;
+ (id)deviceType;
+ (id)deviceDictionary;

@end

@interface GADOMIDDictionaryUtil : NSObject
{
}

+ (id)stringFromJSON:(id)arg1;
+ (id)emptyState;
+ (_Bool)state:(id)arg1 isEqualToState:(id)arg2;
+ (void)state:(id)arg1 addChildState:(id)arg2;
+ (void)state:(id)arg1 addSessionId:(id)arg2;
+ (void)state:(id)arg1 addFriendlyObstructionForSessions:(id)arg2;
+ (id)stateWithFrame:(struct CGRect)arg1 clipsToBounds:(_Bool)arg2;

@end

@interface GADOMIDError : NSObject
{
}

+ (_Bool)setGADOMIDErrorFor:(id *)arg1 code:(unsigned long long)arg2 message:(id)arg3;

@end

@interface GADOMIDEventFilter : NSObject
{
    unsigned long long _codes;
    unsigned long long _finalEventCode;
    NSObject<OS_dispatch_queue> *_syncQueue;
}

- (void).cxx_destruct;
- (_Bool)acceptAnyEventWithRequiredEventCodes:(unsigned long long)arg1;
- (_Bool)acceptEventWithCode:(unsigned long long)arg1 blockingEventCodes:(unsigned long long)arg2;
- (_Bool)acceptEventWithCode:(unsigned long long)arg1;
@property(readonly, nonatomic, getter=isFinalEventAccepted) _Bool finalEventAccepted;
- (id)initWithFinalEventCode:(unsigned long long)arg1;

@end

@interface GADOMIDJSExecutorFactory : NSObject
{
}

+ (id)JSExecutorWithResources:(id)arg1 script:(id)arg2;
+ (id)JSExecutorWithWebView:(id)arg1;
+ (id)JSExecutorForContext:(id)arg1;

@end

@interface GADOMIDJSNetworkBridge : NSObject
{
    id <GADOMIDJSInvoker> _jsInvoker;
}

@property(nonatomic) __weak id <GADOMIDJSInvoker> jsInvoker; // @synthesize jsInvoker=_jsInvoker;
- (void).cxx_destruct;
- (unsigned long long)getGADOMIDError:(id)arg1;
- (void)injectJavaScriptFromURL:(id)arg1;
- (void)sendURL:(id)arg1 successCallback:(id)arg2 failureCallback:(id)arg3;
- (void)downloadJavaScriptResourceWithURL:(id)arg1 successCallback:(id)arg2 failureCallback:(id)arg3;
- (void)setupMethodsForJSObject:(id)arg1;

@end

@interface GADOMIDJSTimer : NSObject
{
    id <GADOMIDJSInvoker> _jsInvoker;
    NSMutableSet *_timerIds;
    unsigned long long _timerIdCounter;
}

@property(readonly, nonatomic) unsigned long long timerIdCounter; // @synthesize timerIdCounter=_timerIdCounter;
@property(readonly, nonatomic) NSMutableSet *timerIds; // @synthesize timerIds=_timerIds;
@property(nonatomic) __weak id <GADOMIDJSInvoker> jsInvoker; // @synthesize jsInvoker=_jsInvoker;
- (void).cxx_destruct;
- (void)cancelAllTimers;
- (void)cancelTimerWithId:(id)arg1;
- (void)handleTimerWithId:(id)arg1 timeout:(double)arg2 callback:(id)arg3 repeatable:(_Bool)arg4;
- (void)scheduleTimerWithId:(id)arg1 timeout:(double)arg2 callback:(id)arg3 repeatable:(_Bool)arg4;
- (id)scheduleTimerWithTimeout:(id)arg1 callback:(id)arg2 repeatable:(_Bool)arg3;
- (void)setupMethodsForJSObject:(id)arg1;
- (id)init;

@end

@interface GADOMIDLightJSExecutor : NSObject <GADOMIDJSExecutor, GADOMIDJSInvoker>
{
    JSContext *_jsContext;
    GADOMIDJSTimer *_timer;
    GADOMIDJSNetworkBridge *_networkBridge;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
}

+ (id)lightJSExecutor;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue; // @synthesize dispatchQueue=_dispatchQueue;
@property(readonly, nonatomic) GADOMIDJSNetworkBridge *networkBridge; // @synthesize networkBridge=_networkBridge;
@property(readonly, nonatomic) GADOMIDJSTimer *timer; // @synthesize timer=_timer;
@property(readonly, nonatomic) JSContext *jsContext; // @synthesize jsContext=_jsContext;
- (void).cxx_destruct;
- (void)invokeScript:(id)arg1;
- (void)invokeCallback:(id)arg1 argument:(id)arg2;
- (void)invokeCallback:(id)arg1;
- (void)injectJavaScriptFromString:(id)arg1;
@property(readonly, nonatomic) id jsEnvironment;
@property(readonly, nonatomic) _Bool supportBackgroundThread;
- (id)initWithTimer:(id)arg1 networkBridge:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDLoadTask : NSObject
{
    NSURL *_url;
    unsigned long long _attemptsCount;
    unsigned long long _attemptNumber;
    NSObject<OS_dispatch_queue> *_completionQueue;
    CDUnknownBlockType _responseParser;
    CDUnknownBlockType _completionHandler;
}

+ (id)taskToSendPingToURL:(id)arg1 completionQueue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)taskToLoadStringFromURL:(id)arg1 attemptsCount:(unsigned long long)arg2 completionQueue:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)taskToLoadStringFromURL:(id)arg1 attemptsCount:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)sharedSession;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(copy, nonatomic) CDUnknownBlockType responseParser; // @synthesize responseParser=_responseParser;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *completionQueue; // @synthesize completionQueue=_completionQueue;
@property(readonly, nonatomic) unsigned long long attemptNumber; // @synthesize attemptNumber=_attemptNumber;
@property(readonly, nonatomic) unsigned long long attemptsCount; // @synthesize attemptsCount=_attemptsCount;
@property(readonly, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)handleResponseWithData:(id)arg1 error:(id)arg2;
- (void)start;
- (id)initWithURL:(id)arg1 attemptsCount:(unsigned long long)arg2 completionQueue:(id)arg3;

@end

@interface GADOMIDManager : NSObject <GADOMIDAdSessionRegistryStateObserver, GADOMIDStateWatcherDelegate>
{
}

+ (id)getInstance;
- (void)adSessionDidBecomeActive:(id)arg1;
- (void)adSessionRegistryDidResignActive;
- (void)adSessionRegistryDidBecomeActive;
- (void)appDidResignActive;
- (void)appDidBecomeActive;
- (void)stop;
- (void)start;
- (void)setup;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDMethodInvoker : NSObject
{
}

+ (void)performSelectorSync:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
+ (void)performSelectorAsync:(SEL)arg1 target:(id)arg2 argument:(id)arg3;
+ (void)performSelectorAsync:(SEL)arg1 target:(id)arg2;

@end

@interface GADOMIDPartner : NSObject
{
    NSString *_name;
    NSString *_versionString;
}

@property(readonly, nonatomic) NSString *versionString; // @synthesize versionString=_versionString;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)toJSON;
- (id)initWithName:(id)arg1 versionString:(id)arg2;

@end

@interface GADOMIDProcessorFactory : NSObject
{
    id <GADOMIDNodeProcessor> _screenProcessor;
    id <GADOMIDNodeProcessor> _windowProcessor;
    id <GADOMIDNodeProcessor> _viewProcessor;
}

- (void).cxx_destruct;
- (id)rootProcessor;
- (id)init;

@end

@interface GADOMIDSDK : NSObject
{
    _Bool _active;
}

+ (id)sharedInstance;
+ (long long)majorVersionFrom:(id)arg1;
+ (_Bool)isCompatibleWithGADOMIDAPIVersion:(id)arg1;
+ (id)versionString;
@property(readonly, getter=isActive) _Bool active; // @synthesize active=_active;
- (_Bool)activate;
- (_Bool)activateWithGADOMIDAPIVersion:(id)arg1 error:(id *)arg2;

@end

@interface GADOMIDScreenProcessor : NSObject <GADOMIDNodeProcessor>
{
    id <GADOMIDNodeProcessor> _processorForChildren;
}

@property(nonatomic) __weak id <GADOMIDNodeProcessor> processorForChildren; // @synthesize processorForChildren=_processorForChildren;
- (void).cxx_destruct;
- (_Bool)isInternalWindow:(id)arg1;
- (id)orderedChildrenForView:(id)arg1;
- (id)childrenForView:(id)arg1;
- (id)stateForView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDScriptInjector : NSObject
{
}

+ (id)commentsInHtml:(id)arg1;
+ (id)tagFromHtml:(id)arg1 inRange:(struct _NSRange)arg2;
+ (struct _NSRange)replaceSelfClosingTagInHtml:(id)arg1 tagRange:(struct _NSRange)arg2;
+ (unsigned long long)indexForScriptInHtml:(id)arg1;
+ (id)stringFromHtml:(id)arg1 byInsertingScript:(id)arg2;
+ (id)injectScriptContent:(id)arg1 intoHTML:(id)arg2 error:(id *)arg3;

@end

@interface GADOMIDStatePublisher : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableDictionary *_previousState;
    GADOMIDAdSessionRegistry *_adSessionRegistry;
}

@property(readonly, nonatomic) GADOMIDAdSessionRegistry *adSessionRegistry; // @synthesize adSessionRegistry=_adSessionRegistry;
@property(readonly, nonatomic) NSMutableDictionary *previousState; // @synthesize previousState=_previousState;
- (void).cxx_destruct;
- (void)cleanupCache;
- (void)publishEmptyStateCommand:(id)arg1 toSessions:(id)arg2 timestamp:(double)arg3;
- (void)publishNativeViewStateCommand:(id)arg1 toSessions:(id)arg2 timestamp:(double)arg3;
- (void)publishEmptyStateToSessions:(id)arg1 timestamp:(double)arg2;
- (void)publishState:(id)arg1 toSessions:(id)arg2 timestamp:(double)arg3;
- (id)initWithAdSessionRegistry:(id)arg1;

@end

@interface GADOMIDStateWatcher : NSObject
{
    unsigned long long _appState;
    id <GADOMIDStateWatcherDelegate> _delegate;
}

+ (id)getInstance;
@property(nonatomic) __weak id <GADOMIDStateWatcherDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) unsigned long long appState; // @synthesize appState=_appState;
- (void).cxx_destruct;
- (void)onAppDidEnterBackground;
- (void)onAppWillResignActive;
- (void)onAppDidBecomeActive;
- (double)deviceVolume;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (unsigned long long)appStateFromUIApplicationState:(long long)arg1;
- (id)appStateString;
- (void)updateAppStateWithUIApplicationState:(long long)arg1;
- (void)adSessionDidBecomeActive:(id)arg1;
- (void)stop;
- (void)start;
@property(readonly, nonatomic) _Bool appIsActive;

@end

@interface GADOMIDTreeWalker : NSObject
{
    NSTimer *_timer;
    unsigned long long _count;
    NSDate *_date1;
    NSDate *_date2;
    id <GADOMIDTreeWalkerTimeLogger> _timeLogger;
    GADOMIDProcessorFactory *_processorFactory;
    GADOMIDAdViewCache *_adViewCache;
    GADOMIDStatePublisher *_statePublisher;
}

+ (id)getInstance;
@property(readonly, nonatomic) GADOMIDStatePublisher *statePublisher; // @synthesize statePublisher=_statePublisher;
@property(readonly, nonatomic) GADOMIDAdViewCache *adViewCache; // @synthesize adViewCache=_adViewCache;
@property(readonly, nonatomic) GADOMIDProcessorFactory *processorFactory; // @synthesize processorFactory=_processorFactory;
@property(nonatomic) __weak id <GADOMIDTreeWalkerTimeLogger> timeLogger; // @synthesize timeLogger=_timeLogger;
- (void).cxx_destruct;
- (void)onTick:(id)arg1;
- (void)checkFriendlyObstruction:(id)arg1 withState:(id)arg2;
- (_Bool)handleAdView:(id)arg1 withState:(id)arg2;
- (void)walkChildrenForView:(id)arg1 processor:(id)arg2 state:(id)arg3 type:(unsigned long long)arg4;
- (void)walkView:(id)arg1 processor:(id)arg2 parentState:(id)arg3;
- (void)doWalk;
- (void)afterWalk;
- (void)beforeWalk;
- (void)updateTreeState;
- (void)pause;
- (void)stop;
- (void)start;
- (id)init;

@end

@interface GADOMIDUIWebViewJSExecutor : NSObject <GADOMIDJSExecutor>
{
    UIWebView *_webView;
}

- (void).cxx_destruct;
- (void)injectJavaScriptFromString:(id)arg1;
@property(readonly, nonatomic) id jsEnvironment;
@property(readonly, nonatomic) _Bool supportBackgroundThread;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDVASTProperties : NSObject
{
    _Bool _skippable;
    _Bool _autoPlay;
    double _skipOffset;
    unsigned long long _position;
}

@property(readonly, nonatomic) unsigned long long position; // @synthesize position=_position;
@property(readonly, nonatomic, getter=isAutoPlay) _Bool autoPlay; // @synthesize autoPlay=_autoPlay;
@property(readonly, nonatomic) double skipOffset; // @synthesize skipOffset=_skipOffset;
@property(readonly, nonatomic, getter=isSkippable) _Bool skippable; // @synthesize skippable=_skippable;
- (id)positionString;
- (id)toJSON;
- (id)initWithSkippable:(_Bool)arg1 skipOffset:(double)arg2 autoPlay:(_Bool)arg3 position:(unsigned long long)arg4;
- (id)initWithAutoPlay:(_Bool)arg1 position:(unsigned long long)arg2;
- (id)initWithSkipOffset:(double)arg1 autoPlay:(_Bool)arg2 position:(unsigned long long)arg3;

@end

@interface GADOMIDVerificationScriptResource : NSObject
{
    NSURL *_URL;
    NSString *_vendorKey;
    NSString *_parameters;
}

@property(readonly, nonatomic) NSString *parameters; // @synthesize parameters=_parameters;
@property(readonly, nonatomic) NSString *vendorKey; // @synthesize vendorKey=_vendorKey;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithURL:(id)arg1;
- (id)initWithURL:(id)arg1 vendorKey:(id)arg2 parameters:(id)arg3;

@end

@interface GADOMIDVideoEvents : NSObject
{
    GADOMIDAdSession *_adSession;
    double _playerVolume;
    _Bool _observerIsRegistered;
}

- (void).cxx_destruct;
- (void)dealloc;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)stopListeningForDeviceVolumeChanges;
- (void)startListeningForDeviceVolumeChanges;
- (double)deviceVolume;
- (id)stringFromInteractionType:(unsigned long long)arg1;
- (id)stringFromPlayerState:(unsigned long long)arg1;
- (void)publishEventWithName:(id)arg1 parameters:(id)arg2 requireStart:(_Bool)arg3;
- (void)publishEventWithName:(id)arg1 parameters:(id)arg2;
- (void)adUserInteractionWithType:(unsigned long long)arg1;
- (void)playerStateChangeTo:(unsigned long long)arg1;
- (void)volumeChangeTo:(double)arg1;
- (void)bufferFinish;
- (void)bufferStart;
- (void)skipped;
- (void)resume;
- (void)pause;
- (void)complete;
- (void)thirdQuartile;
- (void)midpoint;
- (void)firstQuartile;
- (void)startWithDuration:(double)arg1 videoPlayerVolume:(double)arg2;
- (void)loadedWithVastProperties:(id)arg1;
- (id)initWithAdSession:(id)arg1 error:(id *)arg2;

@end

@interface GADOMIDViewKey : NSObject <NSCopying>
{
    UIView *_view;
}

@property(retain, nonatomic) UIView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (unsigned long long)hash;

@end

@interface GADOMIDViewProcessor : NSObject <GADOMIDNodeProcessor>
{
    id <GADOMIDNodeProcessor> _processorForChildren;
}

@property(nonatomic) __weak id <GADOMIDNodeProcessor> processorForChildren; // @synthesize processorForChildren=_processorForChildren;
- (void).cxx_destruct;
- (id)buildChildrenFromDictionary:(id)arg1;
- (void)addView:(id)arg1 toDictionary:(id)arg2;
- (id)windowForView:(id)arg1;
- (struct CGRect)frameInWindowSystemForView:(id)arg1;
- (id)orderedChildrenForView:(id)arg1;
- (id)childrenForView:(id)arg1;
- (id)stateForView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDWKWebViewJSExecutor : NSObject <GADOMIDJSExecutor>
{
    WKWebView *_webView;
}

- (void).cxx_destruct;
- (void)injectJavaScriptFromString:(id)arg1;
@property(readonly, nonatomic) id jsEnvironment;
@property(readonly, nonatomic) _Bool supportBackgroundThread;
- (id)initWithWebView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GADOMIDWindowProcessor : GADOMIDViewProcessor
{
}

- (id)windowForView:(id)arg1;
- (struct CGRect)frameInWindowSystemForView:(id)arg1;

@end

@interface GADExtras : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADInterstitial : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationServerConfiguration : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediaView : UIView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADCorrelator : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADInAppPurchase : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRequest : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationCredentials : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADCorrelatorAdLoaderOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface DFPCustomRenderedAd : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRewardedAd : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADUnifiedNativeAdView : UIView
{
    GADUnifiedNativeAdView *_shimmedInstance;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    UIView *_advertiserView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

+ (Class)shimmedClass;
@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
@property(retain, nonatomic) GADUnifiedNativeAd *nativeAd;
- (void)updateGestureRecognizers;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInit;

@end

@interface GADAdChoicesView : UIView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediatedNativeAdNotificationSource : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADVideoOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADCustomEventRequest : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMobileAds : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADCustomEventExtras : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADInitializationStatus : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediaContent : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeContentAdView : UIView
{
    GADNativeContentAdView *_shimmedInstance;
    UIView *_headlineView;
    UIView *_bodyView;
    UIView *_imageView;
    UIView *_logoView;
    UIView *_callToActionView;
    UIView *_advertiserView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

+ (Class)shimmedClass;
@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *advertiserView; // @synthesize advertiserView=_advertiserView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *logoView; // @synthesize logoView=_logoView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
@property(retain, nonatomic) GADNativeContentAd *nativeContentAd;
- (void)updateGestureRecognizers;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInit;

@end

@interface GADMediatedUnifiedNativeAdNotificationSource : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADShim : NSObject
{
    long long _timeToLive;
    double _defaultFallbackOctagonProbability;
    _Bool _intentional;
    long long _implementation;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) _Bool intentional; // @synthesize intentional=_intentional;
@property(readonly, nonatomic) long long implementation; // @synthesize implementation=_implementation;
- (void)storeConfiguration:(id)arg1;
- (void)executeForImplementation:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)updateUserDefaults;
- (void)updateConfiguration;
- (void)linkPublicClasses;
@property(readonly, nonatomic) NSDictionary *requestParameters;
- (id)description;
- (long long)shimRandomImplementation;
- (id)init;

@end

@interface DFPBannerView : GADBannerView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAdImageAdLoaderOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAppInstallAdView : UIView
{
    GADNativeAppInstallAdView *_shimmedInstance;
    UIView *_headlineView;
    UIView *_callToActionView;
    UIView *_iconView;
    UIView *_bodyView;
    UIView *_storeView;
    UIView *_priceView;
    UIView *_imageView;
    UIView *_starRatingView;
    GADMediaView *_mediaView;
    GADAdChoicesView *_adChoicesView;
}

+ (Class)shimmedClass;
@property(nonatomic) __weak GADAdChoicesView *adChoicesView; // @synthesize adChoicesView=_adChoicesView;
@property(nonatomic) __weak GADMediaView *mediaView; // @synthesize mediaView=_mediaView;
@property(nonatomic) __weak UIView *starRatingView; // @synthesize starRatingView=_starRatingView;
@property(nonatomic) __weak UIView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak UIView *priceView; // @synthesize priceView=_priceView;
@property(nonatomic) __weak UIView *storeView; // @synthesize storeView=_storeView;
@property(nonatomic) __weak UIView *bodyView; // @synthesize bodyView=_bodyView;
@property(nonatomic) __weak UIView *iconView; // @synthesize iconView=_iconView;
@property(nonatomic) __weak UIView *callToActionView; // @synthesize callToActionView=_callToActionView;
@property(nonatomic) __weak UIView *headlineView; // @synthesize headlineView=_headlineView;
- (void).cxx_destruct;
@property(retain, nonatomic) GADNativeAppInstallAd *nativeAppInstallAd;
- (void)updateGestureRecognizers;
- (id)init;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInit;

@end

@interface GADMultipleAdsAdLoaderOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAppInstallAd : GADNativeAd
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationBannerAdConfiguration : GADMediationAdConfiguration
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADAdapterStatus : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADServerSideVerificationOptions : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface DFPRequest : GADRequest
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADAdLoaderOptions : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeContentAd : GADNativeAd
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface DFPInterstitial : GADInterstitial
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADAudioVideoManager : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRequestConfiguration : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADDynamicHeightSearchRequest : GADRequest
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeExpressAdView : UIView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADAdLoader : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADAdReward : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationNativeAdConfiguration : GADMediationAdConfiguration
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationAdConfiguration : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAd : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADDefaultInAppPurchase : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRewardBasedVideoAd : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADSearchBannerView : GADBannerView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADBannerView : UIView
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAdMediaAdLoaderOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADDebugOptionsViewController : UIViewController
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeMuteThisAdLoaderOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRequestError : NSError
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAdImage : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADSearchRequest : GADRequest
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeAdViewAdOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationInterstitialAdConfiguration : GADMediationAdConfiguration
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADNativeCustomTemplateAd : GADNativeAd
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface DFPBannerViewOptions : GADAdLoaderOptions
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADVideoController : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMuteThisAdReason : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADRTBRequestParameters : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADMediationRewardedAdConfiguration : GADMediationAdConfiguration
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GADUnifiedNativeAd : NSObject
{
}

+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (_Bool)instancesRespondToSelector:(SEL)arg1;
+ (id)forwardingTargetForSelector:(SEL)arg1;
+ (Class)class;
+ (_Bool)isShim;
+ (Class)publicClass;
+ (Class)shimmedClass;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;

@end

@interface GIDGTMOAuth2AuthenticationEMMChainedDelegate : NSObject
{
    id _delegate;
    SEL _selector;
}

- (void).cxx_destruct;
- (void)didFinishTokenFetchWithAuth:(id)arg1 fetcher:(id)arg2 error:(id)arg3;
- (id)initWithDelegate:(id)arg1 selector:(SEL)arg2;

@end

@interface GIDGTMOAuth2AuthenticationWithEMMSupport : GTMOAuth2Authentication
{
}

- (id)beginTokenFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;

@end

@interface GIDAuthentication : NSObject <NSCoding>
{
    NSMutableArray *_authenticationHandlerQueue;
    NSString *_userEmail;
    NSString *_emmSupport;
    _Bool _emmPasscodeInfoRequired;
    NSString *_clientID;
    NSString *_accessToken;
    NSDate *_accessTokenExpirationDate;
    NSString *_refreshToken;
    NSString *_idToken;
    NSDate *_idTokenExpirationDate;
}

+ (void)handleTokenFetchEMMError:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)updatedEMMParametersWithParameters:(id)arg1;
+ (id)parametersWithParameters:(id)arg1 emmSupport:(id)arg2 isPasscodeInfoRequired:(_Bool)arg3;
+ (id)dateWithNumber:(id)arg1;
+ (CDUnknownBlockType)authenticationHandlerWithAccessTokenHandler:(CDUnknownBlockType)arg1;
+ (id)decodedIdTokenFromString:(id)arg1;
@property(readonly, nonatomic) NSDate *idTokenExpirationDate; // @synthesize idTokenExpirationDate=_idTokenExpirationDate;
@property(readonly, nonatomic) NSString *idToken; // @synthesize idToken=_idToken;
@property(readonly, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, nonatomic) NSDate *accessTokenExpirationDate; // @synthesize accessTokenExpirationDate=_accessTokenExpirationDate;
@property(readonly, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
@property(readonly, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)refreshTokensWithHandler:(CDUnknownBlockType)arg1;
- (void)getTokensWithHandler:(CDUnknownBlockType)arg1;
- (void)refreshAccessTokenWithHandler:(CDUnknownBlockType)arg1;
- (void)getAccessTokenWithHandler:(CDUnknownBlockType)arg1;
- (id)fetcherAuthorizer;
- (id)GTMAuth;
- (id)initWithGTMAuth:(id)arg1;

@end

@interface GIDCallbackQueue : NSObject
{
    _Bool _firing;
    int _pending;
    NSMutableArray *_queue;
    GIDCallbackQueue *_strongSelf;
}

- (void).cxx_destruct;
- (void)fire;
- (void)addCallback:(CDUnknownBlockType)arg1;
- (void)reset;
- (void)next;
- (void)wait;
- (id)init;

@end

@interface GIDEMMErrorHandler : NSObject
{
    _Bool _pendingDialog;
}

+ (id)sharedInstance;
- (id)cancelString;
- (id)okayString;
- (id)settingsString;
- (id)deviceNotCompliantString;
- (id)appVerificationActionString;
- (id)appVerificationTextString;
- (id)appVerificationTitleString;
- (id)passcodeRequiredString;
- (id)unableToAccessString;
- (id)appVerificationRequiredAlertWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)passcodeRequiredAlertWithCompletion:(CDUnknownBlockType)arg1;
- (id)deviceNotCompliantAlertWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)handleErrorFromResponse:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface GIDGoogleUser : NSObject <NSCoding>
{
    NSString *_userID;
    GIDProfileData *_profile;
    GIDAuthentication *_authentication;
    NSArray *_accessibleScopes;
    NSArray *_grantedScopes;
    NSString *_hostedDomain;
    NSString *_serverAuthCode;
}

@property(readonly, nonatomic) NSString *serverAuthCode; // @synthesize serverAuthCode=_serverAuthCode;
@property(readonly, nonatomic) NSString *hostedDomain; // @synthesize hostedDomain=_hostedDomain;
@property(readonly, nonatomic) NSArray *grantedScopes; // @synthesize grantedScopes=_grantedScopes;
@property(readonly, nonatomic) NSArray *accessibleScopes; // @synthesize accessibleScopes=_accessibleScopes;
@property(readonly, nonatomic) GIDAuthentication *authentication; // @synthesize authentication=_authentication;
@property(readonly, nonatomic) GIDProfileData *profile; // @synthesize profile=_profile;
@property(readonly, nonatomic) NSString *userID; // @synthesize userID=_userID;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithAuthentication:(id)arg1 requestedScopes:(id)arg2;

@end

@interface GIDProfileData : NSObject <NSCoding>
{
    NSString *_imageURL;
    NSString *_email;
    NSString *_name;
    NSString *_givenName;
    NSString *_familyName;
}

@property(readonly, nonatomic) NSString *familyName; // @synthesize familyName=_familyName;
@property(readonly, nonatomic) NSString *givenName; // @synthesize givenName=_givenName;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)imageURLWithDimension:(unsigned long long)arg1;
@property(readonly, nonatomic) _Bool hasImage;
- (id)initWithAuthentication:(id)arg1;

@end

@interface GIDAppSwitchScheme : NSObject
{
    _Bool _isWebBrowserScheme;
    _Bool _isWebViewScheme;
    _Bool _isSafariViewControllerScheme;
    _Bool _isAuthenticationSessionScheme;
    NSString *_scheme;
    NSString *_protocolVersion;
    NSNumber *_rate;
}

@property(readonly, nonatomic) _Bool isAuthenticationSessionScheme; // @synthesize isAuthenticationSessionScheme=_isAuthenticationSessionScheme;
@property(readonly, nonatomic) _Bool isSafariViewControllerScheme; // @synthesize isSafariViewControllerScheme=_isSafariViewControllerScheme;
@property(readonly, nonatomic) _Bool isWebViewScheme; // @synthesize isWebViewScheme=_isWebViewScheme;
@property(readonly, nonatomic) _Bool isWebBrowserScheme; // @synthesize isWebBrowserScheme=_isWebBrowserScheme;
@property(readonly, nonatomic) NSNumber *rate; // @synthesize rate=_rate;
@property(readonly, nonatomic) NSString *protocolVersion; // @synthesize protocolVersion=_protocolVersion;
@property(readonly, nonatomic) NSString *scheme; // @synthesize scheme=_scheme;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool isFirstPartyApp;
- (id)initWithDictionary:(id)arg1;

@end

@interface GIDAppSwitchConfig : NSObject
{
    NSArray *_schemes;
}

@property(readonly, nonatomic) NSArray *schemes; // @synthesize schemes=_schemes;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface GIDRuntimeConfig : NSObject
{
    GIDAppSwitchConfig *_appSwitch;
    NSString *_developerMessage;
    NSString *_redirectURLString;
    NSString *_emmSupport;
}

+ (id)defaultConfig;
@property(readonly, nonatomic) NSString *emmSupport; // @synthesize emmSupport=_emmSupport;
@property(readonly, nonatomic) NSString *redirectURLString; // @synthesize redirectURLString=_redirectURLString;
@property(readonly, nonatomic) NSString *developerMessage; // @synthesize developerMessage=_developerMessage;
@property(readonly, nonatomic) GIDAppSwitchConfig *appSwitch; // @synthesize appSwitch=_appSwitch;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;

@end

@interface GIDRuntimeConfigFetcher : NSObject
{
    NSString *_version;
    NSString *_query;
    NSMutableArray *_handlers;
}

+ (void)setServerURLPrefix:(id)arg1;
+ (id)serverURLPrefix;
- (void).cxx_destruct;
- (void)fetchWithURLString:(id)arg1 history:(id)arg2;
- (void)fetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)initWithSDKVersion:(id)arg1 clientID:(id)arg2 bundleID:(id)arg3;

@end

@interface GIDScopes : NSObject
{
}

+ (id)scopesWithBasicProfile:(id)arg1;
+ (_Bool)hasSocialScope:(id)arg1;
+ (_Bool)hasUserIDScope:(id)arg1;

@end

@interface GIDAuthFlow : GIDCallbackQueue
{
    GTMOAuth2Authentication *_auth;
    NSError *_error;
    NSString *_emmSupport;
}

@property(copy, nonatomic) NSString *emmSupport; // @synthesize emmSupport=_emmSupport;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) GTMOAuth2Authentication *auth; // @synthesize auth=_auth;
- (void).cxx_destruct;

@end

@interface GIDAuthenticationSession : NSObject
{
    GIDAuthenticationSession *_authenticationSession;
}

- (void).cxx_destruct;
- (void)cancel;
- (_Bool)start;
- (id)initWithURL:(id)arg1 callbackURLScheme:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;

@end

@interface GIDSignIn : NSObject <GIDSignInWebViewControllerDelegate>
{
    GIDSignInCallbackSchemes *_schemes;
    NSString *_scopeString;
    NSString *_keychainName;
    NSString *_additionalParameterKeychainName;
    double _lastAuthenticateTimestamp;
    GIDRuntimeConfigFetcher *_configFetcher;
    _Bool _hasSafariViewController;
    SFSafariViewController *_safariViewController;
    _Bool _hasAuthenticationSession;
    GIDAuthenticationSession *_authenticationSession;
    _Bool _uiDelegateDispatchCalled;
    _Bool _shouldFetchBasicProfile;
    _Bool _allowsCanOpenURL;
    GIDGoogleUser *_currentUser;
    id <GIDSignInDelegate> _delegate;
    id <GIDSignInUIDelegate> _uiDelegate;
    NSString *_clientID;
    NSArray *_scopes;
    NSString *_language;
    NSString *_loginHint;
    NSString *_serverClientID;
    NSString *_openIDRealm;
    NSString *_hostedDomain;
}

+ (_Bool)isOperatingSystemAtLeast9;
+ (_Bool)supportsCurrentUserKVO;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)sharedInstance;
@property(nonatomic) _Bool allowsCanOpenURL; // @synthesize allowsCanOpenURL=_allowsCanOpenURL;
@property(copy, nonatomic) NSString *hostedDomain; // @synthesize hostedDomain=_hostedDomain;
@property(copy, nonatomic) NSString *openIDRealm; // @synthesize openIDRealm=_openIDRealm;
@property(copy, nonatomic) NSString *serverClientID; // @synthesize serverClientID=_serverClientID;
@property(copy, nonatomic) NSString *loginHint; // @synthesize loginHint=_loginHint;
@property(copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(nonatomic) _Bool shouldFetchBasicProfile; // @synthesize shouldFetchBasicProfile=_shouldFetchBasicProfile;
@property(copy, nonatomic) NSArray *scopes; // @synthesize scopes=_scopes;
@property(copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
@property(nonatomic) __weak id <GIDSignInUIDelegate> uiDelegate; // @synthesize uiDelegate=_uiDelegate;
@property(nonatomic) __weak id <GIDSignInDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GIDGoogleUser *currentUser; // @synthesize currentUser=_currentUser;
- (void).cxx_destruct;
- (void)dealloc;
- (id)SSOURLOfScheme:(id)arg1 verifier:(id)arg2 params:(id)arg3;
- (void)dismissViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentViewController:(id)arg1;
- (void)closeAuthenticationSession;
- (_Bool)startAuthenticationSessionWithExtraParams:(id)arg1 verifier:(id)arg2;
- (void)closeSafariViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startSafariViewControllerWithExtraParams:(id)arg1 verifier:(id)arg2;
- (void)safariViewControllerDidFinish:(id)arg1;
- (void)openWebViewWithURL:(id)arg1;
- (void)signInWebViewControllerDidComplete:(id)arg1 withURL:(id)arg2 error:(id)arg3;
- (_Bool)signInWebViewController:(id)arg1 shouldKeepLSOCookiesForAuthResponseURL:(id)arg2;
- (void)signInWebViewControllerNeedsDismissing:(id)arg1;
- (_Bool)signInWebViewController:(id)arg1 shouldTreatURLAsAuthResponse:(id)arg2;
- (_Bool)openInBrowser:(id)arg1;
- (void)didDisconnectWithUser:(id)arg1 error:(id)arg2;
- (void)startFetchURL:(id)arg1 fromAuth:(id)arg2 withComment:(id)arg3 withCompletionHandler:(CDUnknownBlockType)arg4;
- (void)addCallDelegateCallback:(id)arg1;
- (void)addCallUIDelegateCallback:(id)arg1;
- (void)addDecodeIdTokenCallback:(id)arg1;
- (void)addClearVerifierCallback:(id)arg1;
- (void)addSaveAuthCallback:(id)arg1 toKeychain:(_Bool)arg2;
- (void)maybeFetchToken:(id)arg1 fallback:(CDUnknownBlockType)arg2;
- (void)parseAuthURL:(id)arg1 fromSSO:(_Bool)arg2 authFlow:(id)arg3;
- (void)addCodeReadyCallbacks:(id)arg1;
- (void)clearAndAuthenticateWithOptions:(id)arg1;
- (void)signInWithOptions:(id)arg1;
- (void)authenticateInteractivelyWithOptions:(id)arg1;
- (void)informUIDelegateOfDispatchResult:(id)arg1;
- (void)disconnectWithUser:(id)arg1;
- (void)signOutWithUser:(id)arg1;
- (id)sdkVersionLoggingValue;
- (void)removeAdditionalTokenRequestParametersFromAuth:(id)arg1;
- (void)addVerifierToAuth:(id)arg1;
- (void)addServerClientIDToAuth:(id)arg1;
- (void)addOpenIDRealmToAuth:(id)arg1;
- (void)addAdditionalTokenRequestParameters:(id)arg1 toAuth:(id)arg2;
- (void)finishWithKeychainError;
- (id)schemesWithAppSwitchConfig:(id)arg1 includeWebBrowserScheme:(_Bool)arg2 includeWebViewScheme:(_Bool)arg3 includeSafariViewControllerScheme:(_Bool)arg4;
- (id)oauth2URLWithParams:(id)arg1 verifier:(id)arg2;
- (_Bool)generateVerifier;
- (id)randomString;
- (id)redirectURI;
- (_Bool)authenticateWithOptions:(id)arg1 runtimeConfig:(id)arg2;
- (_Bool)clearSavedKeychainNames;
- (void)addSavedKeychainName:(id)arg1;
- (void)setEscapedKeychainNames:(id)arg1;
- (id)getEscapedKeychainNames;
- (id)savedEMMSupport;
- (_Bool)saveEMMSupport:(id)arg1;
- (_Bool)matchesSavedFingerprint;
- (_Bool)saveFingerprint;
- (_Bool)removeKeychain:(id)arg1;
- (_Bool)save:(id)arg1 toKeychain:(id)arg2;
- (id)stringFromKeychain:(id)arg1;
- (void)didChangeParameters;
- (id)fingerprint;
- (void)clearAuthentication;
- (void)removeAllKeychainEntries;
- (_Bool)isFreshInstall;
- (void)assertValidUIDelegate;
- (void)assertValidParameters;
- (_Bool)handleDevicePolicyAppURL:(id)arg1;
- (_Bool)handleURL:(id)arg1 fromGoogleSSOApp:(_Bool)arg2;
- (_Bool)URLIsFromDevicePolicy:(id)arg1 sourceApplication:(id)arg2;
- (_Bool)URLIsFromSSO:(id)arg1 sourceApplication:(id)arg2;
- (_Bool)URLIsFromBrowser:(id)arg1 sourceApplication:(id)arg2;
- (void)fetchRuntimeConfigWithHandler:(CDUnknownBlockType)arg1;
- (double)lastAuthenticateTimestamp;
- (void)fetchUserID:(CDUnknownBlockType)arg1;
- (id)appBundleID;
- (double)appSwitchRandomNumber;
- (void)disconnect;
- (void)signOut;
- (_Bool)handleURL:(id)arg1 sourceApplication:(id)arg2 annotation:(id)arg3;
- (void)signIn;
- (void)signInSilently;
- (_Bool)hasAuthInKeychain;
- (id)noSignInHandlersInstalledError;
- (id)canceledError;
- (id)unknownError;
- (id)keychainError;
- (id)errorWithString:(id)arg1 code:(long long)arg2;
- (id)init;
- (void)pleaseLinkSafariServicesFramework;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GIDSignInButton : UIControl
{
    UIImageView *_icon;
    long long _style;
    long long _colorScheme;
    unsigned long long _buttonState;
}

+ (struct CGSize)textSize:(id)arg1 withFont:(id)arg2;
+ (id)buttonTextFont;
@property(nonatomic) unsigned long long buttonState; // @synthesize buttonState=_buttonState;
@property(nonatomic) long long colorScheme; // @synthesize colorScheme=_colorScheme;
@property(nonatomic) long long style; // @synthesize style=_style;
- (void).cxx_destruct;
- (id)buttonText;
- (void)drawButtonText:(struct CGContext *)arg1;
- (void)drawButtonBackground:(struct CGContext *)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)updateConstraints;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (_Bool)isConstraint:(id)arg1 equalToConstraint:(id)arg2;
- (double)minWidth;
- (void)pressed;
- (void)setFrame:(struct CGRect)arg1;
- (void)setEnabled:(_Bool)arg1;
- (void)switchToDisabled;
- (void)switchToNormal;
- (void)switchToPressed;
- (void)loadIcon;
- (void)updateUI;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)dealloc;
- (void)sharedInit;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface GIDSignInCallbackSchemes : NSObject
{
    NSString *_clientIdentifier;
}

+ (id)relevantURLSchemes;
- (void).cxx_destruct;
- (_Bool)URLSchemeIsCallbackScheme:(id)arg1;
- (id)unsupportedSchemes;
- (id)allSchemes;
- (id)clientIdentifierScheme;
- (id)initWithClientIdentifier:(id)arg1;
- (id)init;

@end

@interface GIDSignInInternalOptions : NSObject
{
    _Bool _interactive;
    _Bool _continuation;
    _Bool _allowsWebView;
    _Bool _allowsBrowser;
    _Bool _allowsExtension;
    _Bool _allowsSafariViewController;
    NSDictionary *_extraParams;
    CDUnknownBlockType _fallbackHandler;
}

+ (id)firstPartyOptionsWithFallbackHandler:(CDUnknownBlockType)arg1;
+ (id)continuationOptionsWithExtraParams:(id)arg1;
+ (id)optionsWithExtraParams:(id)arg1 fallbackHandler:(CDUnknownBlockType)arg2;
+ (id)optionsWithExtraParams:(id)arg1;
+ (id)silentOptions;
+ (id)defaultOptions;
@property(readonly, nonatomic) CDUnknownBlockType fallbackHandler; // @synthesize fallbackHandler=_fallbackHandler;
@property(readonly, nonatomic) NSDictionary *extraParams; // @synthesize extraParams=_extraParams;
@property(readonly, nonatomic) _Bool allowsSafariViewController; // @synthesize allowsSafariViewController=_allowsSafariViewController;
@property(readonly, nonatomic) _Bool allowsExtension; // @synthesize allowsExtension=_allowsExtension;
@property(readonly, nonatomic) _Bool allowsBrowser; // @synthesize allowsBrowser=_allowsBrowser;
@property(readonly, nonatomic) _Bool allowsWebView; // @synthesize allowsWebView=_allowsWebView;
@property(readonly, nonatomic) _Bool continuation; // @synthesize continuation=_continuation;
@property(readonly, nonatomic) _Bool interactive; // @synthesize interactive=_interactive;
- (void).cxx_destruct;

@end

@interface GIDSignInPreferences : NSObject
{
}

+ (id)googleTokenURL;
+ (id)googleUserInfoServerURL;
+ (id)googleTokenServerURL;
+ (id)googleAuthorizationURL;

@end

@interface GIDSignInStrings : NSObject
{
}

+ (id)promoActionInstallString;
+ (id)promoActionCancelString;
+ (id)promoMessageString;
+ (id)promoTitleString;
+ (id)signInWithGoogleString;
+ (id)signInString;
+ (id)localizedStringForKey:(id)arg1 text:(id)arg2;

@end

@interface GIDSignInWebView : UIView
{
    id <GIDSignInWebViewDelegate> _delegate;
    UIWebView *_webView;
    UIActivityIndicatorView *_spinner;
}

@property(nonatomic) __weak UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(nonatomic) __weak UIWebView *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <GIDSignInWebViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)loadRequest:(id)arg1;
- (void)layoutSubviews;
- (id)createSpinner;
- (id)createWebView;
- (void)initializeSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GIDSignInWebViewController : UIViewController <GIDSignInWebViewDelegate>
{
    NSURL *_pendingURL;
    NSError *_pendingError;
    _Bool _shouldKeepLSOCookies;
    _Bool _didDispatchToIOL;
    NSURL *_URL;
    id <GIDSignInWebViewControllerDelegate> _delegate;
}

+ (void)purgeCookieCache;
@property(nonatomic) __weak id <GIDSignInWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (void)signInWebView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)signInWebView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)cancel;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)completeWithURL:(id)arg1 error:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)endProtectedCookieSectionKeepingLSOCookies:(_Bool)arg1;
- (void)startProtectedCookieSection;
- (id)initWithURL:(id)arg1 delegate:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GIDSignInWebViewURLProtocol : NSURLProtocol
{
}

+ (_Bool)canInitWithRequest:(id)arg1;
+ (void)injectHTTPHeaders:(id)arg1;

@end

@interface GIDTokenFetchDelegate : NSObject
{
    CDUnknownBlockType _handler;
}

+ (id)beginTokenFetchWithAuth:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (void).cxx_destruct;
- (void)didFinishTokenFetchWithAuth:(id)arg1 fetcher:(id)arg2 error:(id)arg3;
- (id)initWithHandler:(CDUnknownBlockType)arg1;

@end

@interface MDMPasscodeCache : NSObject
{
    _Bool _hasLocalAuthentication;
    NSDictionary *_localAuthenticationInfo;
    _Bool _hasEnteredBackground;
    _Bool _hasKeychain;
    NSDictionary *_keychainInfo;
    NSDate *_keychainExpireTime;
    MDMPasscodeState *_cachedState;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (id)info;
- (id)status;
- (void)obtainKeychainInfo;
- (void)obtainLocalAuthenticationInfo;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)hasKeychain;
- (_Bool)hasLocalAuthentication;
- (id)passcodeState;
- (void)dealloc;
- (id)init;

@end

@interface MDMPasscodeState : NSObject
{
    NSString *_status;
    NSString *_info;
}

+ (id)passcodeState;
@property(readonly, nonatomic) NSString *info; // @synthesize info=_info;
@property(readonly, nonatomic) NSString *status; // @synthesize status=_status;
- (void).cxx_destruct;
- (id)initWithStatus:(id)arg1 info:(id)arg2;

@end

@interface IntercomSDK_PodsDummy_AFNetworking : NSObject
{
}

@end

@interface IntercomSDK_AFNetworkReachabilityManager : NSObject
{
    long long _networkReachabilityStatus;
    struct __SCNetworkReachability *_networkReachability;
    CDUnknownBlockType _networkReachabilityStatusBlock;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)manager;
+ (id)managerForAddress:(const void *)arg1;
+ (id)managerForDomain:(id)arg1;
+ (id)sharedManager;
@property(copy, nonatomic) CDUnknownBlockType networkReachabilityStatusBlock; // @synthesize networkReachabilityStatusBlock=_networkReachabilityStatusBlock;
@property(readonly, nonatomic) struct __SCNetworkReachability *networkReachability; // @synthesize networkReachability=_networkReachability;
@property(nonatomic) long long networkReachabilityStatus; // @synthesize networkReachabilityStatus=_networkReachabilityStatus;
- (void).cxx_destruct;
- (void)setReachabilityStatusChangeBlock:(CDUnknownBlockType)arg1;
- (id)localizedNetworkReachabilityStatusString;
- (void)stopMonitoring;
- (void)startMonitoring;
@property(readonly, nonatomic, getter=isReachableViaWiFi) _Bool reachableViaWiFi;
@property(readonly, nonatomic, getter=isReachableViaWWAN) _Bool reachableViaWWAN;
@property(readonly, nonatomic, getter=isReachable) _Bool reachable;
- (void)dealloc;
- (id)init;
- (id)initWithReachability:(struct __SCNetworkReachability *)arg1;

@end

@interface IntercomSDK_AFSecurityPolicy : NSObject <NSSecureCoding, NSCopying>
{
    _Bool _allowInvalidCertificates;
    _Bool _validatesDomainName;
    unsigned long long _SSLPinningMode;
    NSSet *_pinnedCertificates;
    NSSet *_pinnedPublicKeys;
}

+ (_Bool)supportsSecureCoding;
+ (id)keyPathsForValuesAffectingPinnedPublicKeys;
+ (id)policyWithPinningMode:(unsigned long long)arg1 withPinnedCertificates:(id)arg2;
+ (id)policyWithPinningMode:(unsigned long long)arg1;
+ (id)defaultPolicy;
+ (id)defaultPinnedCertificates;
+ (id)certificatesInBundle:(id)arg1;
@property(retain, nonatomic) NSSet *pinnedPublicKeys; // @synthesize pinnedPublicKeys=_pinnedPublicKeys;
@property(nonatomic) _Bool validatesDomainName; // @synthesize validatesDomainName=_validatesDomainName;
@property(nonatomic) _Bool allowInvalidCertificates; // @synthesize allowInvalidCertificates=_allowInvalidCertificates;
@property(retain, nonatomic) NSSet *pinnedCertificates; // @synthesize pinnedCertificates=_pinnedCertificates;
@property(nonatomic) unsigned long long SSLPinningMode; // @synthesize SSLPinningMode=_SSLPinningMode;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)evaluateServerTrust:(struct __SecTrust *)arg1 forDomain:(id)arg2;
- (id)init;

@end

@interface IntercomSDK_AFQueryStringPair : NSObject
{
    id _field;
    id _value;
}

@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) id field; // @synthesize field=_field;
- (void).cxx_destruct;
- (id)URLEncodedStringValue;
- (id)initWithField:(id)arg1 value:(id)arg2;

@end

@interface IntercomSDK_AFHTTPRequestSerializer : NSObject <AFURLRequestSerialization>
{
    _Bool _allowsCellularAccess;
    _Bool _HTTPShouldHandleCookies;
    _Bool _HTTPShouldUsePipelining;
    unsigned long long _stringEncoding;
    unsigned long long _cachePolicy;
    unsigned long long _networkServiceType;
    double _timeoutInterval;
    NSSet *_HTTPMethodsEncodingParametersInURI;
    NSMutableSet *_mutableObservedChangedKeyPaths;
    NSMutableDictionary *_mutableHTTPRequestHeaders;
    unsigned long long _queryStringSerializationStyle;
    CDUnknownBlockType _queryStringSerialization;
}

+ (_Bool)supportsSecureCoding;
+ (_Bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)serializer;
@property(copy, nonatomic) CDUnknownBlockType queryStringSerialization; // @synthesize queryStringSerialization=_queryStringSerialization;
@property(nonatomic) unsigned long long queryStringSerializationStyle; // @synthesize queryStringSerializationStyle=_queryStringSerializationStyle;
@property(retain, nonatomic) NSMutableDictionary *mutableHTTPRequestHeaders; // @synthesize mutableHTTPRequestHeaders=_mutableHTTPRequestHeaders;
@property(retain, nonatomic) NSMutableSet *mutableObservedChangedKeyPaths; // @synthesize mutableObservedChangedKeyPaths=_mutableObservedChangedKeyPaths;
@property(retain, nonatomic) NSSet *HTTPMethodsEncodingParametersInURI; // @synthesize HTTPMethodsEncodingParametersInURI=_HTTPMethodsEncodingParametersInURI;
@property(nonatomic) double timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long networkServiceType; // @synthesize networkServiceType=_networkServiceType;
@property(nonatomic) _Bool HTTPShouldUsePipelining; // @synthesize HTTPShouldUsePipelining=_HTTPShouldUsePipelining;
@property(nonatomic) _Bool HTTPShouldHandleCookies; // @synthesize HTTPShouldHandleCookies=_HTTPShouldHandleCookies;
@property(nonatomic) unsigned long long cachePolicy; // @synthesize cachePolicy=_cachePolicy;
@property(nonatomic) _Bool allowsCellularAccess; // @synthesize allowsCellularAccess=_allowsCellularAccess;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;
- (id)requestWithMultipartFormRequest:(id)arg1 writingStreamContentsToFile:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)multipartFormRequestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 constructingBodyWithBlock:(CDUnknownBlockType)arg4 error:(id *)arg5;
- (id)requestWithMethod:(id)arg1 URLString:(id)arg2 parameters:(id)arg3 error:(id *)arg4;
- (void)setQueryStringSerializationWithBlock:(CDUnknownBlockType)arg1;
- (void)setQueryStringSerializationWithStyle:(unsigned long long)arg1;
- (void)clearAuthorizationHeader;
- (void)setAuthorizationHeaderFieldWithUsername:(id)arg1 password:(id)arg2;
- (id)valueForHTTPHeaderField:(id)arg1;
- (void)setValue:(id)arg1 forHTTPHeaderField:(id)arg2;
@property(readonly, nonatomic) NSDictionary *HTTPRequestHeaders;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_AFStreamingMultipartFormData : NSObject <AFMultipartFormData>
{
    NSMutableURLRequest *_request;
    unsigned long long _stringEncoding;
    NSString *_boundary;
    IntercomSDK_AFMultipartBodyStream *_bodyStream;
}

@property(retain, nonatomic) IntercomSDK_AFMultipartBodyStream *bodyStream; // @synthesize bodyStream=_bodyStream;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(copy, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;
- (id)requestByFinalizingMultipartFormData;
- (void)throttleBandwidthWithPacketSize:(unsigned long long)arg1 delay:(double)arg2;
- (void)appendPartWithHeaders:(id)arg1 body:(id)arg2;
- (void)appendPartWithFormData:(id)arg1 name:(id)arg2;
- (void)appendPartWithFileData:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4;
- (void)appendPartWithInputStream:(id)arg1 name:(id)arg2 fileName:(id)arg3 length:(long long)arg4 mimeType:(id)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 fileName:(id)arg3 mimeType:(id)arg4 error:(id *)arg5;
- (_Bool)appendPartWithFileURL:(id)arg1 name:(id)arg2 error:(id *)arg3;
- (id)initWithURLRequest:(id)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface IntercomSDK_AFMultipartBodyStream : NSInputStream <NSCopying, NSStreamDelegate>
{
    id <NSStreamDelegate> delegate;
    unsigned long long streamStatus;
    NSError *streamError;
    unsigned long long _numberOfBytesInPacket;
    double _delay;
    NSInputStream *_inputStream;
    unsigned long long _stringEncoding;
    NSMutableArray *_HTTPBodyParts;
    NSEnumerator *_HTTPBodyPartEnumerator;
    IntercomSDK_AFHTTPBodyPart *_currentHTTPBodyPart;
    NSOutputStream *_outputStream;
    NSMutableData *_buffer;
}

@property(retain, nonatomic) NSMutableData *buffer; // @synthesize buffer=_buffer;
@property(retain, nonatomic) NSOutputStream *outputStream; // @synthesize outputStream=_outputStream;
@property(retain, nonatomic) IntercomSDK_AFHTTPBodyPart *currentHTTPBodyPart; // @synthesize currentHTTPBodyPart=_currentHTTPBodyPart;
@property(retain, nonatomic) NSEnumerator *HTTPBodyPartEnumerator; // @synthesize HTTPBodyPartEnumerator=_HTTPBodyPartEnumerator;
@property(retain, nonatomic) NSMutableArray *HTTPBodyParts; // @synthesize HTTPBodyParts=_HTTPBodyParts;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) double delay; // @synthesize delay=_delay;
@property(nonatomic) unsigned long long numberOfBytesInPacket; // @synthesize numberOfBytesInPacket=_numberOfBytesInPacket;
- (void)setStreamError:(id)arg1;
- (id)streamError;
- (void)setStreamStatus:(unsigned long long)arg1;
- (unsigned long long)streamStatus;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)_setCFClientFlags:(unsigned long long)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(CDStruct_e097db04 *)arg3;
- (void)_unscheduleFromCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
- (void)_scheduleInCFRunLoop:(struct __CFRunLoop *)arg1 forMode:(struct __CFString *)arg2;
@property(readonly, nonatomic) unsigned long long contentLength;
- (void)removeFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (_Bool)setProperty:(id)arg1 forKey:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)close;
- (void)open;
- (_Bool)hasBytesAvailable;
- (_Bool)getBuffer:(char **)arg1 length:(unsigned long long *)arg2;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (void)appendHTTPBodyPart:(id)arg1;
- (void)setInitialAndFinalBoundaries;
- (id)initWithStringEncoding:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_AFHTTPBodyPart : NSObject <NSCopying>
{
    int _phase;
    NSInputStream *_inputStream;
    unsigned long long _phaseReadOffset;
    _Bool _hasInitialBoundary;
    _Bool _hasFinalBoundary;
    unsigned long long _stringEncoding;
    NSDictionary *_headers;
    NSString *_boundary;
    id _body;
    unsigned long long _bodyContentLength;
}

@property(nonatomic) _Bool hasFinalBoundary; // @synthesize hasFinalBoundary=_hasFinalBoundary;
@property(nonatomic) _Bool hasInitialBoundary; // @synthesize hasInitialBoundary=_hasInitialBoundary;
@property(retain, nonatomic) NSInputStream *inputStream; // @synthesize inputStream=_inputStream;
@property(nonatomic) unsigned long long bodyContentLength; // @synthesize bodyContentLength=_bodyContentLength;
@property(retain, nonatomic) id body; // @synthesize body=_body;
@property(copy, nonatomic) NSString *boundary; // @synthesize boundary=_boundary;
@property(retain, nonatomic) NSDictionary *headers; // @synthesize headers=_headers;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)transitionToNextPhase;
- (long long)readData:(id)arg1 intoBuffer:(char *)arg2 maxLength:(unsigned long long)arg3;
- (long long)read:(char *)arg1 maxLength:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=hasBytesAvailable) _Bool bytesAvailable;
@property(readonly, nonatomic) unsigned long long contentLength;
- (id)stringForHeaders;
- (void)dealloc;
- (id)init;

@end

@interface IntercomSDK_AFJSONRequestSerializer : IntercomSDK_AFHTTPRequestSerializer
{
    unsigned long long _writingOptions;
}

+ (id)serializerWithWritingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) unsigned long long writingOptions; // @synthesize writingOptions=_writingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface IntercomSDK_AFPropertyListRequestSerializer : IntercomSDK_AFHTTPRequestSerializer
{
    unsigned long long _format;
    unsigned long long _writeOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 writeOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long writeOptions; // @synthesize writeOptions=_writeOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)requestBySerializingRequest:(id)arg1 withParameters:(id)arg2 error:(id *)arg3;

@end

@interface IntercomSDK_AFHTTPResponseSerializer : NSObject <AFURLResponseSerialization>
{
    unsigned long long _stringEncoding;
    NSIndexSet *_acceptableStatusCodes;
    NSSet *_acceptableContentTypes;
}

+ (_Bool)supportsSecureCoding;
+ (id)serializer;
@property(copy, nonatomic) NSSet *acceptableContentTypes; // @synthesize acceptableContentTypes=_acceptableContentTypes;
@property(copy, nonatomic) NSIndexSet *acceptableStatusCodes; // @synthesize acceptableStatusCodes=_acceptableStatusCodes;
@property(nonatomic) unsigned long long stringEncoding; // @synthesize stringEncoding=_stringEncoding;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (_Bool)validateResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_AFJSONResponseSerializer : IntercomSDK_AFHTTPResponseSerializer
{
    _Bool _removesKeysWithNullValues;
    unsigned long long _readingOptions;
}

+ (id)serializerWithReadingOptions:(unsigned long long)arg1;
+ (id)serializer;
@property(nonatomic) _Bool removesKeysWithNullValues; // @synthesize removesKeysWithNullValues=_removesKeysWithNullValues;
@property(nonatomic) unsigned long long readingOptions; // @synthesize readingOptions=_readingOptions;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IntercomSDK_AFXMLParserResponseSerializer : IntercomSDK_AFHTTPResponseSerializer
{
}

+ (id)serializer;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IntercomSDK_AFPropertyListResponseSerializer : IntercomSDK_AFHTTPResponseSerializer
{
    unsigned long long _format;
    unsigned long long _readOptions;
}

+ (id)serializerWithFormat:(unsigned long long)arg1 readOptions:(unsigned long long)arg2;
+ (id)serializer;
@property(nonatomic) unsigned long long readOptions; // @synthesize readOptions=_readOptions;
@property(nonatomic) unsigned long long format; // @synthesize format=_format;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IntercomSDK_AFImageResponseSerializer : IntercomSDK_AFHTTPResponseSerializer
{
    _Bool _automaticallyInflatesResponseImage;
    double _imageScale;
}

@property(nonatomic) _Bool automaticallyInflatesResponseImage; // @synthesize automaticallyInflatesResponseImage=_automaticallyInflatesResponseImage;
@property(nonatomic) double imageScale; // @synthesize imageScale=_imageScale;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;
- (id)init;

@end

@interface IntercomSDK_AFCompoundResponseSerializer : IntercomSDK_AFHTTPResponseSerializer
{
    NSArray *_responseSerializers;
}

+ (id)compoundSerializerWithResponseSerializers:(id)arg1;
@property(copy, nonatomic) NSArray *responseSerializers; // @synthesize responseSerializers=_responseSerializers;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)responseObjectForResponse:(id)arg1 data:(id)arg2 error:(id *)arg3;

@end

@interface IntercomSDK_PodsDummy_FLAnimatedImage : NSObject
{
}

@end

@interface IntercomSDK_FLAnimatedImage : NSObject
{
    _Bool _predrawingEnabled;
    UIImage *_posterImage;
    unsigned long long _loopCount;
    NSDictionary *_delayTimesForIndexes;
    unsigned long long _frameCount;
    unsigned long long _frameCacheSizeMax;
    NSData *_data;
    unsigned long long _frameCacheSizeOptimal;
    unsigned long long _frameCacheSizeMaxInternal;
    unsigned long long _requestedFrameIndex;
    unsigned long long _posterImageFrameIndex;
    NSMutableDictionary *_cachedFramesForIndexes;
    NSMutableIndexSet *_cachedFrameIndexes;
    NSMutableIndexSet *_requestedFrameIndexes;
    NSIndexSet *_allFramesIndexSet;
    unsigned long long _memoryWarningCount;
    NSObject<OS_dispatch_queue> *_serialQueue;
    struct CGImageSource *_imageSource;
    IntercomSDK_FLAnimatedImage *_weakProxy;
    struct CGSize _size;
}

+ (id)predrawnImageFromImage:(id)arg1;
+ (struct CGSize)sizeForImage:(id)arg1;
+ (id)animatedImageWithGIFData:(id)arg1;
+ (void)initialize;
+ (void)logStringFromBlock:(CDUnknownBlockType)arg1 withLevel:(unsigned long long)arg2;
+ (void)setLogBlock:(CDUnknownBlockType)arg1 logLevel:(unsigned long long)arg2;
@property(readonly, nonatomic) IntercomSDK_FLAnimatedImage *weakProxy; // @synthesize weakProxy=_weakProxy;
@property(readonly, nonatomic) struct CGImageSource *imageSource; // @synthesize imageSource=_imageSource;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(nonatomic) unsigned long long memoryWarningCount; // @synthesize memoryWarningCount=_memoryWarningCount;
@property(readonly, nonatomic) NSIndexSet *allFramesIndexSet; // @synthesize allFramesIndexSet=_allFramesIndexSet;
@property(readonly, nonatomic) NSMutableIndexSet *requestedFrameIndexes; // @synthesize requestedFrameIndexes=_requestedFrameIndexes;
@property(readonly, nonatomic) NSMutableIndexSet *cachedFrameIndexes; // @synthesize cachedFrameIndexes=_cachedFrameIndexes;
@property(readonly, nonatomic) NSMutableDictionary *cachedFramesForIndexes; // @synthesize cachedFramesForIndexes=_cachedFramesForIndexes;
@property(readonly, nonatomic) unsigned long long posterImageFrameIndex; // @synthesize posterImageFrameIndex=_posterImageFrameIndex;
@property(nonatomic) unsigned long long requestedFrameIndex; // @synthesize requestedFrameIndex=_requestedFrameIndex;
@property(nonatomic) unsigned long long frameCacheSizeMaxInternal; // @synthesize frameCacheSizeMaxInternal=_frameCacheSizeMaxInternal;
@property(readonly, nonatomic, getter=isPredrawingEnabled) _Bool predrawingEnabled; // @synthesize predrawingEnabled=_predrawingEnabled;
@property(readonly, nonatomic) unsigned long long frameCacheSizeOptimal; // @synthesize frameCacheSizeOptimal=_frameCacheSizeOptimal;
@property(readonly, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) unsigned long long frameCacheSizeMax; // @synthesize frameCacheSizeMax=_frameCacheSizeMax;
@property(readonly, nonatomic) unsigned long long frameCount; // @synthesize frameCount=_frameCount;
@property(readonly, nonatomic) NSDictionary *delayTimesForIndexes; // @synthesize delayTimesForIndexes=_delayTimesForIndexes;
@property(readonly, nonatomic) unsigned long long loopCount; // @synthesize loopCount=_loopCount;
@property(readonly, nonatomic) struct CGSize size; // @synthesize size=_size;
@property(readonly, nonatomic) UIImage *posterImage; // @synthesize posterImage=_posterImage;
- (void).cxx_destruct;
- (id)description;
- (void)didReceiveMemoryWarning:(id)arg1;
- (void)resetFrameCacheSizeMaxInternal;
- (void)growFrameCacheSizeAfterMemoryWarning:(id)arg1;
- (void)purgeFrameCacheIfNeeded;
- (id)frameIndexesToCache;
- (id)imageAtIndex:(unsigned long long)arg1;
- (void)addFrameIndexesToCache:(id)arg1;
- (id)imageLazilyCachedAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithAnimatedGIFData:(id)arg1 optimalFrameCacheSize:(unsigned long long)arg2 predrawingEnabled:(_Bool)arg3;
- (id)initWithAnimatedGIFData:(id)arg1;
- (id)init;
@property(readonly, nonatomic) unsigned long long frameCacheSizeCurrent;

@end

@interface IntercomSDK_FLWeakProxy : NSProxy
{
    id _target;
}

+ (id)weakProxyForObject:(id)arg1;
@property(nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;

@end

@interface IntercomSDK_FLAnimatedImageView : UIImageView <PINRemoteImageCategory>
{
    _Bool _shouldAnimate;
    _Bool _needsDisplayWhenImageBecomesAvailable;
    NSString *_runLoopMode;
    IntercomSDK_FLAnimatedImage *_animatedImage;
    CDUnknownBlockType _loopCompletionBlock;
    UIImage *_currentFrame;
    unsigned long long _currentFrameIndex;
    unsigned long long _loopCountdown;
    double _accumulator;
    CADisplayLink *_displayLink;
}

+ (id)defaultRunLoopMode;
@property(nonatomic) _Bool needsDisplayWhenImageBecomesAvailable; // @synthesize needsDisplayWhenImageBecomesAvailable=_needsDisplayWhenImageBecomesAvailable;
@property(nonatomic) _Bool shouldAnimate; // @synthesize shouldAnimate=_shouldAnimate;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
@property(nonatomic) double accumulator; // @synthesize accumulator=_accumulator;
@property(nonatomic) unsigned long long loopCountdown; // @synthesize loopCountdown=_loopCountdown;
@property(nonatomic) unsigned long long currentFrameIndex; // @synthesize currentFrameIndex=_currentFrameIndex;
@property(retain, nonatomic) UIImage *currentFrame; // @synthesize currentFrame=_currentFrame;
@property(copy, nonatomic) CDUnknownBlockType loopCompletionBlock; // @synthesize loopCompletionBlock=_loopCompletionBlock;
@property(retain, nonatomic) IntercomSDK_FLAnimatedImage *animatedImage; // @synthesize animatedImage=_animatedImage;
@property(copy, nonatomic) NSString *runLoopMode; // @synthesize runLoopMode=_runLoopMode;
- (void).cxx_destruct;
- (void)displayLayer:(id)arg1;
- (void)displayDidRefresh:(id)arg1;
- (void)updateShouldAnimate;
- (void)setHighlighted:(_Bool)arg1;
- (_Bool)isAnimating;
- (void)stopAnimating;
- (void)startAnimating;
- (double)frameDelayGreatestCommonDivisor;
- (void)setImage:(id)arg1;
- (id)image;
- (struct CGSize)intrinsicContentSize;
- (void)setHidden:(_Bool)arg1;
- (void)setAlpha:(double)arg1;
- (void)didMoveToWindow;
- (void)didMoveToSuperview;
- (void)dealloc;
- (void)commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithImage:(id)arg1 highlightedImage:(id)arg2;
- (id)initWithImage:(id)arg1;
- (_Bool)IntercomSDK_pin_ignoreGIFs;
- (void)IntercomSDK_pin_clearImages;
- (void)IntercomSDK_pin_updateUIWithImage:(id)arg1 animatedImage:(id)arg2;
- (void)IntercomSDK_pin_setPlaceholderWithImage:(id)arg1;
@property(nonatomic) _Bool IntercomSDK_pin_updateWithProgress;
- (void)IntercomSDK_pin_setDownloadImageOperationUUID:(id)arg1;
- (id)IntercomSDK_pin_downloadImageOperationUUID;
- (void)IntercomSDK_pin_cancelImageDownload;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PodsDummy_IntercomBlocks : NSObject
{
}

@end

@interface IntercomSDK_ITBAnimatedImageView : IntercomSDK_FLAnimatedImageView
{
    IntercomSDK_ITBImageLoader *_imageLoader;
}

@property(retain, nonatomic) IntercomSDK_ITBImageLoader *imageLoader; // @synthesize imageLoader=_imageLoader;
- (void).cxx_destruct;
- (void)assignImage:(id)arg1;
- (void)assignImageWithAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2 animationOptions:(unsigned long long)arg3;
- (void)cancelImageLoad;
- (void)loadImageWithURLString:(id)arg1 actionsBeforeNetworkLoad:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3 animationOptions:(unsigned long long)arg4;
- (void)loadImageWithURLString:(id)arg1 actionsBeforeNetworkLoad:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithImageLoader:(id)arg1;
- (id)init;

@end

@interface IntercomSDK_ITBAttachmentBlock : IntercomSDK_ITBTextBlock
{
    UIColor *_clipColor;
    double _clipMargin;
}

@property(nonatomic) double clipMargin; // @synthesize clipMargin=_clipMargin;
@property(retain, nonatomic) UIColor *clipColor; // @synthesize clipColor=_clipColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)paragraphStyle;
- (struct UIEdgeInsets)layoutInsets;
- (long long)type;
- (Class)viewClass;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBAttachmentBlockView : IntercomSDK_ITBTextBlockView
{
    IntercomSDK_ITBAttachmentIconView *_clipView;
    double _clipLeftPadding;
}

@property(nonatomic) double clipLeftPadding; // @synthesize clipLeftPadding=_clipLeftPadding;
@property(retain, nonatomic) IntercomSDK_ITBAttachmentIconView *clipView; // @synthesize clipView=_clipView;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_ITBAttachmentIconView : UIView
{
    UIColor *_clipColor;
}

@property(retain, nonatomic) UIColor *clipColor; // @synthesize clipColor=_clipColor;
- (void).cxx_destruct;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_ITBAttachmentListBlock : IntercomSDK_ITBBlock
{
    NSArray *_attachments;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
+ (id)attachmentsFromArray:(id)arg1 appearance:(id)arg2;
@property(retain, nonatomic) NSArray *attachments; // @synthesize attachments=_attachments;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (long long)type;
- (Class)viewClass;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBAttachmentListBlockView : IntercomSDK_ITBBlockView
{
    NSArray *_attachmentViews;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(retain, nonatomic) NSArray *attachmentViews; // @synthesize attachmentViews=_attachmentViews;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)configureWithBlock:(id)arg1;
- (void)prepareForReuse;

@end

@interface IntercomSDK_ITBBlock : NSObject <NSCopying>
{
    NSString *_text;
    NSString *_align;
    long long _displayMode;
    struct CGSize _estimatedSize;
}

+ (_Bool)isNonEmptyString:(id)arg1;
+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) long long displayMode; // @synthesize displayMode=_displayMode;
@property(nonatomic) struct CGSize estimatedSize; // @synthesize estimatedSize=_estimatedSize;
@property(copy, nonatomic) NSString *align; // @synthesize align=_align;
@property(copy, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)blockUniqueIdentifier;
- (Class)viewClass;
- (id)plainTextRepresentation;
- (long long)type;
- (void)setNilValueForKey:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (void)updateAppearance:(id)arg1;
- (void)prepare:(CDUnknownBlockType)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBBlockCollectionViewCell : UICollectionViewCell
{
    id <ITBBlockViewDelegate> _reloadDelegate;
    id <ITBIntentOpenerDelegate> _intentOpener;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
    IntercomSDK_ITBBlockView *_view;
    IntercomSDK_ITBBlock *_block;
}

@property(retain, nonatomic) IntercomSDK_ITBBlock *block; // @synthesize block=_block;
@property(retain, nonatomic) IntercomSDK_ITBBlockView *view; // @synthesize view=_view;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(nonatomic) __weak id <ITBBlockViewDelegate> reloadDelegate; // @synthesize reloadDelegate=_reloadDelegate;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)cleanupView;
- (void)dealloc;
- (void)layoutSubviews;

@end

@interface IntercomSDK_ITBBlockListViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, ITBBlockViewDelegate>
{
    id <ITBIntentOpenerDelegate> _intentOpener;
    id <ITBBlockListViewControllerDelegate> _delegate;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
    NSArray *_blocks;
    UICollectionView *_collectionView;
    UICollectionViewFlowLayout *_collectionViewLayout;
}

@property(retain, nonatomic) UICollectionViewFlowLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) NSArray *blocks; // @synthesize blocks=_blocks;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(nonatomic) __weak id <ITBBlockListViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
- (void).cxx_destruct;
- (void)reloadCollectionView;
- (id)viewControllerForModalPresentation;
- (void)reloadRequiredForBlock:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (double)availableLayoutWidthForWidth:(double)arg1;
- (void)calculateSizeForWidth:(double)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithBlocks:(id)arg1 insets:(struct UIEdgeInsets)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBBlockUtils : NSObject
{
}

+ (void)prepareBlocks:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (struct CGSize)calculateSizeForBlocks:(id)arg1 withinWidth:(double)arg2 constraintWidth:(_Bool)arg3;
+ (id)imageBlockForUpload:(id)arg1 appearance:(id)arg2;
+ (id)blockFromDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBBlockView : UIView <ITBBlockViewProtocol>
{
    IntercomSDK_ITBBlock *_block;
    NSString *_uniqueIdentifier;
    id <ITBBlockViewDelegate> _delegate;
    id <ITBIntentOpenerDelegate> _intentOpener;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
+ (double)maxWidthForBlockContentBasedInWidth:(double)arg1 forBlock:(id)arg2 constraintWidth:(_Bool)arg3;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(nonatomic) __weak id <ITBBlockViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(nonatomic) __weak IntercomSDK_ITBBlock *block; // @synthesize block=_block;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)prepareForReuse;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBBlockViewsReuseManager : NSObject
{
    NSMutableDictionary *_reusableDict;
}

+ (id)sharedInstance;
- (void).cxx_destruct;
- (void)enqueueReusableViewForReuse:(id)arg1;
- (id)dequeueReusableViewForBlock:(id)arg1;
- (void)tearDown;
- (void)receivedMemoryWarning;
- (void)dealloc;
- (id)init;

@end

@interface IntercomSDK_ITBButtonBlock : IntercomSDK_ITBBlock <ITBIntent>
{
    NSString *_url;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_backgroundColor;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)intentUrl;
- (long long)intentType;
- (long long)type;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (Class)viewClass;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBButtonBlockView : IntercomSDK_ITBBlockView
{
    UIView *_containerView;
    UIButton *_linkButton;
    NSString *_linkUrl;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(copy, nonatomic) NSString *linkUrl; // @synthesize linkUrl=_linkUrl;
@property(retain, nonatomic) UIButton *linkButton; // @synthesize linkButton=_linkButton;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void).cxx_destruct;
- (void)followLink:(id)arg1;
- (void)configureWithBlock:(id)arg1;
- (void)createLinkButton;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_ITBCodeBlock : IntercomSDK_ITBTextBlock
{
}

- (long long)type;
- (void)updateAppearance:(id)arg1 font:(id)arg2 textColor:(id)arg3;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBFacebookBlock : IntercomSDK_ITBButtonBlock
{
}

- (id)plainTextRepresentation;
- (long long)type;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBFooterContainerView : UIView
{
    UIImageView *_iconImageView;
    UILabel *_titleLabel;
    UIImage *_iconImage;
    IntercomSDK_ITBLinkListBlock *_linkListBlock;
}

@property(retain, nonatomic) IntercomSDK_ITBLinkListBlock *linkListBlock; // @synthesize linkListBlock=_linkListBlock;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
- (void).cxx_destruct;
- (void)layoutTitleLabel;
- (void)layoutIconImageView;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)buildIconImageView;
- (void)buildTitleLabel;
- (id)initWithLinkBlock:(id)arg1;

@end

@interface IntercomSDK_ITBGradientSpinner : UIImageView
{
}

+ (id)gradientSpinnerImage;
- (void)stopSpinning;
- (void)startSpinning;
- (void)setGradientImage;
- (id)init;

@end

@interface IntercomSDK_ITBHeadingBlock : IntercomSDK_ITBTextBlock
{
}

- (long long)type;
- (void)updateAppearance:(id)arg1 font:(id)arg2 textColor:(id)arg3;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBHTMLParser : NSObject
{
}

+ (id)font:(id)arg1 withTraits:(unsigned int)arg2;
+ (id)attributedStringFromNode:(struct _xmlNode *)arg1 attributes:(id)arg2 codeAttributes:(id)arg3;
+ (id)attributedStringFromHTML:(id)arg1 defaultAttributes:(id)arg2 codeAttributes:(id)arg3;

@end

@interface IntercomSDK_ITBImageBlock : IntercomSDK_ITBBlock <ITBIntent>
{
    NSString *_url;
    NSString *_linkUrl;
    double _width;
    double _height;
    double _padding;
    double _cornerRadius;
    IntercomSDK_ITBUpload *_upload;
    double _inlineImagePadding;
    double _singleImagePadding;
    double _inlineImageCornerRadius;
    double _singleImageCornerRadius;
    struct CGSize _imageSize;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) double singleImageCornerRadius; // @synthesize singleImageCornerRadius=_singleImageCornerRadius;
@property(nonatomic) double inlineImageCornerRadius; // @synthesize inlineImageCornerRadius=_inlineImageCornerRadius;
@property(nonatomic) double singleImagePadding; // @synthesize singleImagePadding=_singleImagePadding;
@property(nonatomic) double inlineImagePadding; // @synthesize inlineImagePadding=_inlineImagePadding;
@property(retain, nonatomic) IntercomSDK_ITBUpload *upload; // @synthesize upload=_upload;
@property(nonatomic) double cornerRadius; // @synthesize cornerRadius=_cornerRadius;
@property(nonatomic) double padding; // @synthesize padding=_padding;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) double height; // @synthesize height=_height;
@property(nonatomic) double width; // @synthesize width=_width;
@property(copy, nonatomic) NSString *linkUrl; // @synthesize linkUrl=_linkUrl;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)updateAppearance:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)intentUrl;
- (long long)intentType;
- (Class)viewClass;
- (void)setDisplayMode:(long long)arg1;
- (id)plainTextRepresentation;
- (long long)type;
- (void)prepare:(CDUnknownBlockType)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBImageBlockView : IntercomSDK_ITBBlockView <ITBUploadProgressDelegate>
{
    _Bool _isLoading;
    IntercomSDK_ITBAnimatedImageView *_imageView;
    IntercomSDK_ITBGradientSpinner *_activityIndicator;
    IntercomSDK_ITBUploadProgressButton *_progressView;
    UITapGestureRecognizer *_tapOnImageRecognizer;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(retain, nonatomic) UITapGestureRecognizer *tapOnImageRecognizer; // @synthesize tapOnImageRecognizer=_tapOnImageRecognizer;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) IntercomSDK_ITBUploadProgressButton *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) IntercomSDK_ITBGradientSpinner *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) IntercomSDK_ITBAnimatedImageView *imageView; // @synthesize imageView=_imageView;
- (void).cxx_destruct;
- (void)uploadFailed;
- (void)uploadProgressUpdated:(double)arg1;
- (void)configureWithBlock:(id)arg1;
- (void)didTapOnImage:(id)arg1;
- (void)uploadCancelled;
- (void)adjustBlockSizeForImage:(id)arg1;
- (void)createActivityIndicator;
- (void)createTapGestureRecognizer;
- (void)createImageView;
- (void)dealloc;
- (void)prepareForReuse;
- (void)cleanup;
- (void)layoutSubviews;
- (void)retriggerSpinnerIfRequired;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBLongTermImageManager : IntercomSDK_PINRemoteImageManager
{
    IntercomSDK_PINCache *_pinCache;
}

@property(retain, nonatomic) IntercomSDK_PINCache *pinCache; // @synthesize pinCache=_pinCache;
- (void).cxx_destruct;
- (id)cache;

@end

@interface IntercomSDK_ITBImageLoader : NSObject
{
    IntercomSDK_PINRemoteImageManager *_imageManager;
}

+ (id)longTermLoader;
+ (id)defaultLoader;
@property(retain, nonatomic) IntercomSDK_PINRemoteImageManager *imageManager; // @synthesize imageManager=_imageManager;
- (void).cxx_destruct;
- (void)cacheImage:(id)arg1 ForKey:(id)arg2;
- (id)imageForKey:(id)arg1 withGenerationBlock:(CDUnknownBlockType)arg2;
- (id)cachedImageForKey:(id)arg1;
- (id)cachedImageForURL:(id)arg1;
- (id)loadImageWithURLString:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithImageManager:(id)arg1;

@end

@interface IntercomSDK_ITBImagePreviewMetadata : NSObject <ITBImagePreviewMetadataProtocol>
{
    UIView *sourceView;
    UIImage *previewImage;
    UIViewController *presentingViewController;
    CDUnknownBlockType imagePreviewerActionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType imagePreviewerActionBlock; // @synthesize imagePreviewerActionBlock;
@property(retain, nonatomic) UIViewController *presentingViewController; // @synthesize presentingViewController;
@property(retain, nonatomic) UIImage *previewImage; // @synthesize previewImage;
@property(retain, nonatomic) UIView *sourceView; // @synthesize sourceView;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBImageUtils : NSObject
{
}

+ (_Bool)isGifImageData:(id)arg1;
+ (id)grayscaleImage:(id)arg1;
+ (struct CGSize)imageDisplaySizeFromSize:(struct CGSize)arg1 withinWidth:(double)arg2;
+ (id)imageFromColor:(id)arg1;

@end

@interface IntercomSDK_ITBLink : NSObject
{
    NSString *_url;
    NSString *_title;
    NSString *_linkType;
    NSString *_linkId;
    long long _linkIntentType;
}

@property(nonatomic) long long linkIntentType; // @synthesize linkIntentType=_linkIntentType;
@property(copy, nonatomic) NSString *linkId; // @synthesize linkId=_linkId;
@property(copy, nonatomic) NSString *linkType; // @synthesize linkType=_linkType;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)determineLinkId:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface IntercomSDK_ITBLinkBlock : IntercomSDK_ITBBlock <ITBIntent>
{
    NSAttributedString *_titleAttributedString;
    NSAttributedString *_linkDescriptionAttributedString;
    double _avatarRadius;
    NSString *_url;
    NSString *_title;
    NSString *_articleId;
    NSString *_linkDescription;
    NSString *_linkType;
    NSString *_siteName;
    IntercomSDK_ITBLinkBlockAuthor *_author;
    IntercomSDK_ITBLinkBlockImage *_image;
    NSDictionary *_data;
    NSDate *_createdAt;
    NSDate *_updatedAt;
    struct UIEdgeInsets _insets;
    struct UIEdgeInsets _textInsets;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
+ (id)iso8601DateFormatter;
@property(retain, nonatomic) NSDate *updatedAt; // @synthesize updatedAt=_updatedAt;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) NSDictionary *data; // @synthesize data=_data;
@property(retain, nonatomic) IntercomSDK_ITBLinkBlockImage *image; // @synthesize image=_image;
@property(retain, nonatomic) IntercomSDK_ITBLinkBlockAuthor *author; // @synthesize author=_author;
@property(copy, nonatomic) NSString *siteName; // @synthesize siteName=_siteName;
@property(copy, nonatomic) NSString *linkType; // @synthesize linkType=_linkType;
@property(copy, nonatomic) NSString *linkDescription; // @synthesize linkDescription=_linkDescription;
@property(copy, nonatomic) NSString *articleId; // @synthesize articleId=_articleId;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(nonatomic) double avatarRadius; // @synthesize avatarRadius=_avatarRadius;
@property(nonatomic) struct UIEdgeInsets textInsets; // @synthesize textInsets=_textInsets;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(copy, nonatomic) NSAttributedString *linkDescriptionAttributedString; // @synthesize linkDescriptionAttributedString=_linkDescriptionAttributedString;
@property(copy, nonatomic) NSAttributedString *titleAttributedString; // @synthesize titleAttributedString=_titleAttributedString;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)intentArticleId;
- (id)intentUrl;
- (long long)intentType;
- (Class)viewClass;
- (long long)type;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBLinkBlockAuthor : IntercomSDK_ITBBlock
{
    UIImage *_initialsImage;
    NSAttributedString *_writtenByAttributedString;
    NSAttributedString *_linkUpdatedAtAttributedString;
    NSString *_name;
    NSString *_firstName;
    NSString *_lastName;
    NSString *_avatar;
    double _avatarRadius;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) double avatarRadius; // @synthesize avatarRadius=_avatarRadius;
@property(copy, nonatomic) NSString *avatar; // @synthesize avatar=_avatar;
@property(copy, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(copy, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSAttributedString *linkUpdatedAtAttributedString; // @synthesize linkUpdatedAtAttributedString=_linkUpdatedAtAttributedString;
@property(copy, nonatomic) NSAttributedString *writtenByAttributedString; // @synthesize writtenByAttributedString=_writtenByAttributedString;
@property(retain, nonatomic) UIImage *initialsImage; // @synthesize initialsImage=_initialsImage;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBLinkBlockAuthorView : IntercomSDK_ITBBlockView
{
    IntercomSDK_ITBAnimatedImageView *_avatarView;
    UILabel *_writtenByLabel;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
+ (id)summaryAttributedStringForAuthor:(id)arg1;
@property(retain, nonatomic) UILabel *writtenByLabel; // @synthesize writtenByLabel=_writtenByLabel;
@property(retain, nonatomic) IntercomSDK_ITBAnimatedImageView *avatarView; // @synthesize avatarView=_avatarView;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (id)init;

@end

@interface IntercomSDK_ITBLinkBlockImage : IntercomSDK_ITBBlock
{
    NSString *_url;
    NSString *_alt;
    struct CGSize _size;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(copy, nonatomic) NSString *alt; // @synthesize alt=_alt;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBLinkBlockView : IntercomSDK_ITBLinkView
{
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
- (void)layoutSubviews;

@end

@interface IntercomSDK_ITBLinkedTextView : UITextView
{
}

- (void)handleLinkTapGestureRecognizer:(id)arg1;
- (void)setupLinkedTextView;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 textContainer:(id)arg2;

@end

@interface IntercomSDK_ITBLinkListBlock : IntercomSDK_ITBBlock <ITBIntent>
{
    NSArray *_links;
    IntercomSDK_ITBLink *_footerLink;
    IntercomSDK_ITBLink *_selectedLink;
    UIColor *_linkTextColor;
    UIColor *_separatorColor;
    UIFont *_linkFont;
    UIImage *_footerLinkIcon;
    double _defaultLinkHeight;
    double _maxLinkHeight;
    struct CGSize _linkFooterIconSize;
    struct UIEdgeInsets _textInsets;
    struct UIEdgeInsets _linkFooterInsets;
}

+ (_Bool)validateLink:(id)arg1;
+ (_Bool)validateFooterLink:(id)arg1;
+ (_Bool)validateLinksArray:(id)arg1;
+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) struct UIEdgeInsets linkFooterInsets; // @synthesize linkFooterInsets=_linkFooterInsets;
@property(nonatomic) struct CGSize linkFooterIconSize; // @synthesize linkFooterIconSize=_linkFooterIconSize;
@property(nonatomic) double maxLinkHeight; // @synthesize maxLinkHeight=_maxLinkHeight;
@property(nonatomic) double defaultLinkHeight; // @synthesize defaultLinkHeight=_defaultLinkHeight;
@property(retain, nonatomic) UIImage *footerLinkIcon; // @synthesize footerLinkIcon=_footerLinkIcon;
@property(retain, nonatomic) UIFont *linkFont; // @synthesize linkFont=_linkFont;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(nonatomic) struct UIEdgeInsets textInsets; // @synthesize textInsets=_textInsets;
@property(retain, nonatomic) IntercomSDK_ITBLink *selectedLink; // @synthesize selectedLink=_selectedLink;
@property(retain, nonatomic) IntercomSDK_ITBLink *footerLink; // @synthesize footerLink=_footerLink;
@property(retain, nonatomic) NSArray *links; // @synthesize links=_links;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (Class)viewClass;
- (id)intentUrl;
- (id)intentArticleId;
- (long long)intentType;
- (long long)type;
- (void)updateAppearance:(id)arg1;
- (void)setFooterAttributes:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBLinkListBlockView : IntercomSDK_ITBBlockView
{
    IntercomSDK_ITBLinkListBlock *_linkListBlock;
    NSArray *_linkItemViewArray;
    UILabel *_titleLabel;
}

+ (double)calculateLinkHeight:(id)arg1 linkListBlock:(id)arg2 withinWidth:(double)arg3;
+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSArray *linkItemViewArray; // @synthesize linkItemViewArray=_linkItemViewArray;
@property(retain, nonatomic) IntercomSDK_ITBLinkListBlock *linkListBlock; // @synthesize linkListBlock=_linkListBlock;
- (void).cxx_destruct;
- (void)cleanupLinkViews;
- (void)prepareForReuse;
- (double)determineLinkViewHeight:(id)arg1 atIndex:(long long)arg2;
- (void)layoutLinkViews;
- (void)layoutSubviews;
- (void)buildLinks;
- (void)configureWithBlock:(id)arg1;

@end

@interface IntercomSDK_ITBLinkListFooterView : UIView
{
    IntercomSDK_ITBLink *_link;
    UIImage *_iconImage;
    id <ITBIntentOpenerDelegate> _intentOpener;
    IntercomSDK_ITBLinkListBlock *_linkListBlock;
    UIView *_footerContainerView;
}

@property(retain, nonatomic) UIView *footerContainerView; // @synthesize footerContainerView=_footerContainerView;
@property(retain, nonatomic) IntercomSDK_ITBLinkListBlock *linkListBlock; // @synthesize linkListBlock=_linkListBlock;
@property(retain, nonatomic) id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(retain, nonatomic) UIImage *iconImage; // @synthesize iconImage=_iconImage;
@property(retain, nonatomic) IntercomSDK_ITBLink *link; // @synthesize link=_link;
- (void).cxx_destruct;
- (void)linkTapped:(id)arg1;
- (void)addTapGesture;
- (void)layoutContainerView;
- (void)layoutSubviews;
- (void)buildFooterContainerView;
- (id)initWithLink:(id)arg1 block:(id)arg2 intentOpener:(id)arg3 icon:(id)arg4;

@end

@interface IntercomSDK_ITBLinkListItemView : UIView
{
    IntercomSDK_ITBLink *_link;
    UILabel *_titleLabel;
    id <ITBIntentOpenerDelegate> _intentOpener;
    IntercomSDK_ITBLinkListBlock *_linkListBlock;
    UIView *_separatorView;
}

@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) IntercomSDK_ITBLinkListBlock *linkListBlock; // @synthesize linkListBlock=_linkListBlock;
@property(retain, nonatomic) id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) IntercomSDK_ITBLink *link; // @synthesize link=_link;
- (void).cxx_destruct;
- (void)hideSeparator;
- (void)linkTapped:(id)arg1;
- (void)addTapGesture;
- (void)layoutSeparatorView;
- (void)layoutTitleLabel;
- (void)layoutSubviews;
- (void)buildSeparatorView;
- (void)buildTitleLabel;
- (id)initWithLink:(id)arg1 block:(id)arg2 intentOpener:(id)arg3;

@end

@interface IntercomSDK_ITBLinkView : IntercomSDK_ITBBlockView
{
    UILabel *_titleLabel;
    UILabel *_descriptionLabel;
    UIView *_authorContainerView;
    UIView *_cardView;
    UIView *_containerView;
    IntercomSDK_ITBLinkBlockAuthorView *_authorView;
    struct UIEdgeInsets _cardInsets;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(retain, nonatomic) IntercomSDK_ITBLinkBlockAuthorView *authorView; // @synthesize authorView=_authorView;
@property(nonatomic) struct UIEdgeInsets cardInsets; // @synthesize cardInsets=_cardInsets;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) UIView *cardView; // @synthesize cardView=_cardView;
@property(retain, nonatomic) UIView *authorContainerView; // @synthesize authorContainerView=_authorContainerView;
@property(retain, nonatomic) UILabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)sizeAuthorViewToFit:(struct CGSize)arg1;
- (void)configureForInlineDisplay:(id)arg1;
- (void)configureForSingleDisplay:(id)arg1;
- (void)configureWithBlock:(id)arg1;
- (void)tapped:(id)arg1;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_ITBListBlock : IntercomSDK_ITBTextBlock
{
}

+ (id)listTextFromItems:(id)arg1;
+ (id)bulletStringForIndex:(unsigned long long)arg1;
- (struct UIEdgeInsets)layoutInsets;
- (id)paragraphStyle;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBMessengerCardFallbackBlock : IntercomSDK_ITBBlock
{
    _Bool _showCardBorder;
    long long _height;
    long long _width;
    NSURL *_fallbackURL;
    UIColor *_loadingSpinnerColor;
    UIImage *_loadingSpinnerImage;
    UIColor *_appPrimaryColor;
    struct UIEdgeInsets _cardInsets;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(retain, nonatomic) UIColor *appPrimaryColor; // @synthesize appPrimaryColor=_appPrimaryColor;
@property(nonatomic) _Bool showCardBorder; // @synthesize showCardBorder=_showCardBorder;
@property(nonatomic) struct UIEdgeInsets cardInsets; // @synthesize cardInsets=_cardInsets;
@property(retain, nonatomic) UIImage *loadingSpinnerImage; // @synthesize loadingSpinnerImage=_loadingSpinnerImage;
@property(retain, nonatomic) UIColor *loadingSpinnerColor; // @synthesize loadingSpinnerColor=_loadingSpinnerColor;
@property(retain, nonatomic) NSURL *fallbackURL; // @synthesize fallbackURL=_fallbackURL;
@property(nonatomic) long long width; // @synthesize width=_width;
@property(nonatomic) long long height; // @synthesize height=_height;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)blockUniqueIdentifier;
- (long long)type;
- (Class)viewClass;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBMessengerCardFallbackView : IntercomSDK_ITBBlockView <ITBOpenSheetIntent, ITBInputTextIntent, ITBMessengerCardMetricEventIntent, ICPAppComponentDelegate>
{
    NSDictionary *_sheetParamaters;
    NSURL *_urlToOpen;
    NSString *_textInputTitle;
    NSString *_textInputPlaceholder;
    NSString *_textInputCurrentText;
    NSString *_textInputId;
    long long _currentIntentType;
    NSDictionary *_metricPayloadDictionary;
    IntercomSDK_ICPMessengerCardFallbackView *_cardfallBackComponent;
    CDUnknownBlockType _textInputCompletionBlock;
}

+ (double)maxWidthForBlockContentBasedInWidth:(double)arg1 forBlock:(id)arg2 constraintWidth:(_Bool)arg3;
+ (id)fetchCachedCardHeightForURL:(id)arg1;
+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(copy, nonatomic) CDUnknownBlockType textInputCompletionBlock; // @synthesize textInputCompletionBlock=_textInputCompletionBlock;
@property(retain, nonatomic) IntercomSDK_ICPMessengerCardFallbackView *cardfallBackComponent; // @synthesize cardfallBackComponent=_cardfallBackComponent;
@property(retain, nonatomic) NSDictionary *metricPayloadDictionary; // @synthesize metricPayloadDictionary=_metricPayloadDictionary;
@property(nonatomic) long long currentIntentType; // @synthesize currentIntentType=_currentIntentType;
@property(retain, nonatomic) NSString *textInputId; // @synthesize textInputId=_textInputId;
@property(retain, nonatomic) NSString *textInputCurrentText; // @synthesize textInputCurrentText=_textInputCurrentText;
@property(retain, nonatomic) NSString *textInputPlaceholder; // @synthesize textInputPlaceholder=_textInputPlaceholder;
@property(retain, nonatomic) NSString *textInputTitle; // @synthesize textInputTitle=_textInputTitle;
@property(retain, nonatomic) NSURL *urlToOpen; // @synthesize urlToOpen=_urlToOpen;
@property(retain, nonatomic) NSDictionary *sheetParamaters; // @synthesize sheetParamaters=_sheetParamaters;
- (void).cxx_destruct;
- (void)dealloc;
- (id)metricPayload;
- (CDUnknownBlockType)inputTextCompletionBlock;
- (id)inputCurrentText;
- (id)inputPlaceholder;
- (id)inputTitle;
- (id)sheetParams;
- (id)intentUrl;
- (long long)intentType;
- (void)component:(id)arg1 logMetricEvent:(id)arg2;
- (void)component:(id)arg1 openURL:(id)arg2;
- (void)component:(id)arg1 handleTextInput:(id)arg2;
- (void)component:(id)arg1 openSheetWithURL:(id)arg2 sheetParams:(id)arg3;
- (void)reloadRequiredForComponent:(id)arg1;
- (void)layoutSubviews;
- (void)createCardFallbackComponent:(id)arg1;
- (void)configureWithBlock:(id)arg1;
- (void)prepareForReuse;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBNotificationCardBlock : IntercomSDK_ITBBlock
{
    _Bool _displayPlaceholder;
    NSString *_title;
    NSAttributedString *_titleAttributedString;
    NSArray *_notificationChannels;
    NSString *_userInput;
    NSAttributedString *_userInputAttributedString;
    struct UIEdgeInsets _insets;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) struct UIEdgeInsets insets; // @synthesize insets=_insets;
@property(nonatomic) _Bool displayPlaceholder; // @synthesize displayPlaceholder=_displayPlaceholder;
@property(copy, nonatomic) NSAttributedString *userInputAttributedString; // @synthesize userInputAttributedString=_userInputAttributedString;
@property(copy, nonatomic) NSString *userInput; // @synthesize userInput=_userInput;
@property(copy, nonatomic) NSArray *notificationChannels; // @synthesize notificationChannels=_notificationChannels;
@property(copy, nonatomic) NSAttributedString *titleAttributedString; // @synthesize titleAttributedString=_titleAttributedString;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (Class)viewClass;
- (long long)type;
- (void)updateAppearance:(id)arg1;
- (void)setChannels:(id)arg1 appearance:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBNotificationCardBlockView : IntercomSDK_ITBBlockView
{
    _Bool _displayChannelsView;
    _Bool _displayPlaceholder;
    UIView *_containerView;
    UIView *_userInputView;
    UILabel *_notificationTitle;
    UIView *_channelsView;
    UILabel *_userInputLabel;
    struct UIEdgeInsets _containerInsets;
}

+ (_Bool)shouldDisplayChannelsView:(id)arg1;
+ (double)calculateChannelViewWidthForChannels:(id)arg1 inBoundingSize:(struct CGSize)arg2;
+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(nonatomic) _Bool displayPlaceholder; // @synthesize displayPlaceholder=_displayPlaceholder;
@property(nonatomic) _Bool displayChannelsView; // @synthesize displayChannelsView=_displayChannelsView;
@property(nonatomic) struct UIEdgeInsets containerInsets; // @synthesize containerInsets=_containerInsets;
@property(retain, nonatomic) UILabel *userInputLabel; // @synthesize userInputLabel=_userInputLabel;
@property(retain, nonatomic) UIView *channelsView; // @synthesize channelsView=_channelsView;
@property(retain, nonatomic) UILabel *notificationTitle; // @synthesize notificationTitle=_notificationTitle;
@property(retain, nonatomic) UIView *userInputView; // @synthesize userInputView=_userInputView;
@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)configureUserInputWithBlock:(id)arg1;
- (void)addUnderlineToLabel:(id)arg1;
- (void)configureChannelsViewWithChannels:(id)arg1;
- (void)layoutSubviews;
- (id)init;

@end

@interface IntercomSDK_ITBNotificationChannel : IntercomSDK_ITBBlock
{
    _Bool _defaultChannel;
    NSString *_label;
    NSAttributedString *_labelAttributedString;
    NSString *_name;
    NSString *_value;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(copy, nonatomic) NSString *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSAttributedString *labelAttributedString; // @synthesize labelAttributedString=_labelAttributedString;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(nonatomic) _Bool defaultChannel; // @synthesize defaultChannel=_defaultChannel;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBOrderedListBlock : IntercomSDK_ITBListBlock
{
}

+ (id)bulletStringForIndex:(unsigned long long)arg1;
- (long long)type;

@end

@interface IntercomSDK_ITBParagraphBlock : IntercomSDK_ITBTextBlock
{
}

- (long long)type;
- (id)paragraphStyle;

@end

@interface IntercomSDK_ITBSubHeadingBlock : IntercomSDK_ITBTextBlock
{
}

- (long long)type;
- (void)updateAppearance:(id)arg1 font:(id)arg2 textColor:(id)arg3;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBTextBlock : IntercomSDK_ITBBlock
{
    _Bool _isTextSelectable;
    NSAttributedString *_attributedString;
    UIFont *_font;
    UIColor *_textColor;
    UIColor *_linkTextColor;
    UIColor *_backgroundColor;
    NSMutableParagraphStyle *_paragraphStyle;
    struct UIEdgeInsets _layoutInsets;
    struct UIEdgeInsets _textInsets;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
@property(nonatomic) _Bool isTextSelectable; // @synthesize isTextSelectable=_isTextSelectable;
@property(nonatomic) struct UIEdgeInsets textInsets; // @synthesize textInsets=_textInsets;
@property(nonatomic) struct UIEdgeInsets layoutInsets; // @synthesize layoutInsets=_layoutInsets;
@property(retain, nonatomic) NSMutableParagraphStyle *paragraphStyle; // @synthesize paragraphStyle=_paragraphStyle;
@property(retain, nonatomic) UIColor *backgroundColor; // @synthesize backgroundColor=_backgroundColor;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor=_linkTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor=_textColor;
@property(retain, nonatomic) UIFont *font; // @synthesize font=_font;
@property(copy, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)plainTextRepresentation;
- (Class)viewClass;
- (void)dealloc;
- (void)updateAppearance:(id)arg1 font:(id)arg2 textColor:(id)arg3;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2 font:(id)arg3 textColor:(id)arg4;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBTextBlockViewIntent : NSObject <ITBIntent>
{
    NSURL *_intentUrl;
}

@property(retain, nonatomic) NSURL *intentUrl; // @synthesize intentUrl=_intentUrl;
- (void).cxx_destruct;
- (long long)intentType;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBTextBlockView : IntercomSDK_ITBBlockView
{
    IntercomSDK_ITBLinkedTextView *_textView;
    struct UIEdgeInsets _layoutInsets;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
+ (void)tearDown;
+ (void)setup;
@property(nonatomic) struct UIEdgeInsets layoutInsets; // @synthesize layoutInsets=_layoutInsets;
@property(retain, nonatomic) IntercomSDK_ITBLinkedTextView *textView; // @synthesize textView=_textView;
- (void).cxx_destruct;
- (_Bool)textView:(id)arg1 shouldInteractWithURL:(id)arg2 inRange:(struct _NSRange)arg3;
- (void)configureWithBlock:(id)arg1;
- (void)createTextView;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ITBTwitterBlock : IntercomSDK_ITBButtonBlock
{
}

- (id)plainTextRepresentation;
- (long long)type;
- (void)updateAppearance:(id)arg1;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBTypingBlock : IntercomSDK_ITBBlock
{
    UIColor *_dotColor;
}

@property(retain, nonatomic) UIColor *dotColor; // @synthesize dotColor=_dotColor;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (long long)type;
- (Class)viewClass;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface IntercomSDK_ITBTypingBlockView : IntercomSDK_ITBBlockView
{
    IntercomSDK_ITBTypingView *_typingView;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(retain, nonatomic) IntercomSDK_ITBTypingView *typingView; // @synthesize typingView=_typingView;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_ITBTypingDotView : UIView
{
    CAAnimationGroup *_animationGroup;
}

@property(retain, nonatomic) CAAnimationGroup *animationGroup; // @synthesize animationGroup=_animationGroup;
- (void).cxx_destruct;
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;
- (void)cleanUp;
- (void)stopAnimating;
- (void)startAnimating;
- (id)initWithAnimationDelay:(double)arg1 dotSize:(double)arg2;

@end

@interface IntercomSDK_ITBTypingView : UIView
{
    NSArray *_typingDots;
    double _dotPadding;
}

@property(nonatomic) double dotPadding; // @synthesize dotPadding=_dotPadding;
@property(retain, nonatomic) NSArray *typingDots; // @synthesize typingDots=_typingDots;
- (void).cxx_destruct;
- (void)didMoveToWindow;
- (void)dealloc;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1 dotSize:(double)arg2 dotPadding:(double)arg3;

@end

@interface IntercomSDK_ITBUnorderedListBlock : IntercomSDK_ITBListBlock
{
}

+ (id)bulletStringForIndex:(unsigned long long)arg1;
- (long long)type;

@end

@interface IntercomSDK_ITBUpload : NSObject
{
    _Bool _cancelled;
    _Bool _isAnnotated;
    NSString *_cacheKey;
    double _uploadProgress;
    unsigned long long _uploadState;
    id <ITBUploadProgressDelegate> _progressDelegate;
    id <ITBUploadCancellationDelegate> _cancellationDelegate;
    NSURLSessionDataTask *_uploadDataTask;
    NSString *_filename;
    NSString *_mimeType;
    NSData *_uploadData;
    id _previewImage;
    PHAsset *_mediaAssetToUpload;
    struct CGSize _dimensions;
}

+ (void)requestUploadPermissionWithCompletion:(CDUnknownBlockType)arg1;
+ (id)createUploadWithMp4VideoData:(id)arg1 dimensions:(struct CGSize)arg2 filename:(id)arg3;
+ (id)createUploadWithMediaData:(id)arg1 dataUTI:(id)arg2 mediaAsset:(id)arg3 imageURLPath:(id)arg4;
+ (void)createUploadForImageData:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)jpegDataForMediaAsset:(id)arg1;
+ (id)updateFileExtensionNameForJPEG:(id)arg1;
+ (_Bool)isSupportedUTI:(id)arg1;
+ (void)processImageDataForUpload:(id)arg1 mediaAsset:(id)arg2 info:(id)arg3 imageUploadDataUTI:(id)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)createUploadForMediaAsset:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)createUploadForAssetUrl:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) PHAsset *mediaAssetToUpload; // @synthesize mediaAssetToUpload=_mediaAssetToUpload;
@property(retain, nonatomic) id previewImage; // @synthesize previewImage=_previewImage;
@property(retain, nonatomic) NSData *uploadData; // @synthesize uploadData=_uploadData;
@property(retain, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(nonatomic) struct CGSize dimensions; // @synthesize dimensions=_dimensions;
@property(retain, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(nonatomic) _Bool isAnnotated; // @synthesize isAnnotated=_isAnnotated;
@property(nonatomic) __weak NSURLSessionDataTask *uploadDataTask; // @synthesize uploadDataTask=_uploadDataTask;
@property(nonatomic) __weak id <ITBUploadCancellationDelegate> cancellationDelegate; // @synthesize cancellationDelegate=_cancellationDelegate;
@property(nonatomic) _Bool cancelled; // @synthesize cancelled=_cancelled;
@property(nonatomic) __weak id <ITBUploadProgressDelegate> progressDelegate; // @synthesize progressDelegate=_progressDelegate;
@property(nonatomic) unsigned long long uploadState; // @synthesize uploadState=_uploadState;
@property(nonatomic) double uploadProgress; // @synthesize uploadProgress=_uploadProgress;
@property(retain, nonatomic) NSString *cacheKey; // @synthesize cacheKey=_cacheKey;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (void)graduallyIncreaseProgressTowardsTarget:(double)arg1 inSeconds:(double)arg2;
- (id)init;

@end

@interface IntercomSDK_ITBUploadProgressButton : UIButton
{
    double _progress;
    CAShapeLayer *_progressLayer;
}

+ (id)progressBackground;
@property(retain, nonatomic) CAShapeLayer *progressLayer; // @synthesize progressLayer=_progressLayer;
@property(nonatomic) double progress; // @synthesize progress=_progress;
- (void).cxx_destruct;
- (id)init;

@end

@interface IntercomSDK_ITBVideoBlock : IntercomSDK_ITBBlock
{
    NSString *_provider;
    NSString *_videoId;
    struct CGSize _videoSize;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
+ (_Bool)isProviderSupported:(id)arg1;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(copy, nonatomic) NSString *videoId; // @synthesize videoId=_videoId;
@property(copy, nonatomic) NSString *provider; // @synthesize provider=_provider;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (long long)type;
- (id)blockUniqueIdentifier;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (Class)viewClass;
- (void)prepare:(CDUnknownBlockType)arg1;

@end

@interface IntercomSDK_ITBVideoBlockView : IntercomSDK_ITBBlockView
{
    _Bool _isLoading;
    WKWebView *_webView;
    IntercomSDK_ITBGradientSpinner *_activityIndicator;
    struct CGRect _currentVideoBounds;
}

+ (struct CGSize)videoDisplaySizeFromSize:(struct CGSize)arg1 withinWidth:(double)arg2;
+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
@property(nonatomic) struct CGRect currentVideoBounds; // @synthesize currentVideoBounds=_currentVideoBounds;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) IntercomSDK_ITBGradientSpinner *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)configureWithBlock:(id)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (id)videoHtmlWithSize:(struct CGSize)arg1 provider:(id)arg2 videoId:(id)arg3;
- (void)dealloc;
- (void)createActivityIndicator;
- (void)createWebView;
- (void)cleanupVideoSize;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ICPCardFallbackJSBuilder : NSObject
{
}

+ (id)disableContentCalloutScript;
+ (id)disableSelectionScript;
+ (id)viewportScript;
+ (id)configureBridgeWithActionHandler:(id)arg1;

@end

@interface IntercomSDK_ICPCardFallbackModel : NSObject
{
    _Bool _webviewLoaded;
    _Bool _showCardBorder;
    NSURL *_fallbackURL;
    UIColor *_loadingSpinnerColor;
    UIImage *_loadingSpinnerImage;
    UIColor *_appPrimaryColor;
    struct CGSize _cardSize;
    struct UIEdgeInsets _cardInsets;
}

@property(retain, nonatomic) UIColor *appPrimaryColor; // @synthesize appPrimaryColor=_appPrimaryColor;
@property(nonatomic) _Bool showCardBorder; // @synthesize showCardBorder=_showCardBorder;
@property(nonatomic) _Bool webviewLoaded; // @synthesize webviewLoaded=_webviewLoaded;
@property(nonatomic) struct CGSize cardSize; // @synthesize cardSize=_cardSize;
@property(nonatomic) struct UIEdgeInsets cardInsets; // @synthesize cardInsets=_cardInsets;
@property(retain, nonatomic) UIImage *loadingSpinnerImage; // @synthesize loadingSpinnerImage=_loadingSpinnerImage;
@property(retain, nonatomic) UIColor *loadingSpinnerColor; // @synthesize loadingSpinnerColor=_loadingSpinnerColor;
@property(retain, nonatomic) NSURL *fallbackURL; // @synthesize fallbackURL=_fallbackURL;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToCardFallbackModel:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithInsets:(struct UIEdgeInsets)arg1 cardSize:(struct CGSize)arg2 loadingImage:(id)arg3 loadingColor:(id)arg4 fallbackURL:(id)arg5 showCardBorder:(_Bool)arg6 appPrimaryColor:(id)arg7;

@end

@interface IntercomSDK_ICPLoadingView : UIView
{
    UIImageView *_spinnerImageView;
}

@property(retain, nonatomic) UIImageView *spinnerImageView; // @synthesize spinnerImageView=_spinnerImageView;
- (void).cxx_destruct;
- (void)stopSpinning;
- (void)startSpinning;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (id)initWithLoadingImage:(id)arg1 tintColor:(id)arg2;

@end

@interface IntercomSDK_ICPMessengerCardFallbackView : UIView
{
    WKWebView *_webView;
    IntercomSDK_ICPLoadingView *_activityIndicator;
    IntercomSDK_ICPCardFallbackModel *_cardFallback;
    id <ICPAppComponentDelegate> _delegate;
    IntercomSDK_ICPTextInputPayload *_textInputPayload;
    UIView *_shadowView;
    UIView *_backgroundView;
}

+ (id)fetchCachedCardHeightForURL:(id)arg1;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(retain, nonatomic) UIView *shadowView; // @synthesize shadowView=_shadowView;
@property(retain, nonatomic) IntercomSDK_ICPTextInputPayload *textInputPayload; // @synthesize textInputPayload=_textInputPayload;
@property(nonatomic) __weak id <ICPAppComponentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) IntercomSDK_ICPCardFallbackModel *cardFallback; // @synthesize cardFallback=_cardFallback;
@property(retain, nonatomic) IntercomSDK_ICPLoadingView *activityIndicator; // @synthesize activityIndicator=_activityIndicator;
@property(retain, nonatomic) WKWebView *webView; // @synthesize webView=_webView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)handleMetricEvent:(id)arg1;
- (void)openBrowserFromURL:(id)arg1;
- (void)adjustWebviewHeight:(id)arg1;
- (void)openSheetFromURL:(id)arg1;
- (void)handleTextInput:(id)arg1;
- (id)parseScriptMessage:(id)arg1;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)storeCardHeight:(id)arg1;
- (void)layoutSubviews;
- (void)setupActivityIndicator;
- (void)injectJSScriptsIntoWebview:(id)arg1;
- (void)createShadowBackgroundView;
- (void)createWebview;
- (void)updateCardFallbackModel:(id)arg1;
- (void)loadWebview;
- (id)initWithCardFallbackModel:(id)arg1 componentDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ICPTextInputPayload : NSObject
{
    NSString *_title;
    NSString *_placeholder;
    NSString *_currentText;
    NSString *_inputId;
    CDUnknownBlockType _completionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(retain, nonatomic) NSString *inputId; // @synthesize inputId=_inputId;
@property(retain, nonatomic) NSString *currentText; // @synthesize currentText=_currentText;
@property(retain, nonatomic) NSString *placeholder; // @synthesize placeholder=_placeholder;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToTextInputPayload:(id)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface IntercomSDK_PodsDummy_IntercomComponents : NSObject
{
}

@end

@interface IntercomSDK_IntercomConversationBlockCell : UICollectionViewCell <ITBBlockViewDelegate>
{
    id <IntercomConversationPartDelegate> _delegate;
    id <ITBIntentOpenerDelegate> _intentOpener;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
    IntercomSDK_ITBBlockView *_view;
    IntercomSDK_ITBBlock *_block;
    id <IntercomConversationPart> _part;
}

@property(retain, nonatomic) id <IntercomConversationPart> part; // @synthesize part=_part;
@property(retain, nonatomic) IntercomSDK_ITBBlock *block; // @synthesize block=_block;
@property(retain, nonatomic) IntercomSDK_ITBBlockView *view; // @synthesize view=_view;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(nonatomic) __weak id <IntercomConversationPartDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)viewControllerForModalPresentation;
- (void)reloadRequiredForBlock:(id)arg1;
- (void)configureCellWithBlock:(id)arg1 forPart:(id)arg2;
- (void)cleanupView;
- (void)dealloc;
- (void)layoutSubviews;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IntercomConversationCollectionViewController : UIViewController <IntercomConversationPartDelegate, IntercomConversationCollectionViewLayoutDelegate, UICollectionViewDataSource, UICollectionViewDelegate>
{
    _Bool _shouldShowMessageAccessoryView;
    _Bool _rotatedWhileNotKeyWindow;
    _Bool _viewAppeared;
    _Bool _foreignKeyboard;
    UICollectionView *_collectionView;
    NSArray *_conversationParts;
    id <ITBIntentOpenerDelegate> _intentOpener;
    id <IntercomConversationCollectionViewControllerDelegate> _delegate;
    UIView *_customAccessoryView;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
    NSDictionary *_customCellClasses;
    double _keyboardHeight;
    IntercomSDK_IntercomConversationCollectionViewLayout *_collectionViewLayout;
    IntercomSDK_IntercomConversationSlideOverRevealer *_slideOverRevealer;
    IntercomSDK_IntercomConversationInputAccessoryView *_inputAccessoryView;
    struct UIEdgeInsets _conversationInsets;
    struct UIEdgeInsets _contentInsets;
}

@property(retain, nonatomic) IntercomSDK_IntercomConversationInputAccessoryView *inputAccessoryView; // @synthesize inputAccessoryView=_inputAccessoryView;
@property(retain, nonatomic) IntercomSDK_IntercomConversationSlideOverRevealer *slideOverRevealer; // @synthesize slideOverRevealer=_slideOverRevealer;
@property(retain, nonatomic) IntercomSDK_IntercomConversationCollectionViewLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property(nonatomic) _Bool foreignKeyboard; // @synthesize foreignKeyboard=_foreignKeyboard;
@property(nonatomic) _Bool viewAppeared; // @synthesize viewAppeared=_viewAppeared;
@property(nonatomic) _Bool rotatedWhileNotKeyWindow; // @synthesize rotatedWhileNotKeyWindow=_rotatedWhileNotKeyWindow;
@property(nonatomic) double keyboardHeight; // @synthesize keyboardHeight=_keyboardHeight;
@property(retain, nonatomic) NSDictionary *customCellClasses; // @synthesize customCellClasses=_customCellClasses;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(nonatomic) struct UIEdgeInsets contentInsets; // @synthesize contentInsets=_contentInsets;
@property(nonatomic) struct UIEdgeInsets conversationInsets; // @synthesize conversationInsets=_conversationInsets;
@property(nonatomic) _Bool shouldShowMessageAccessoryView; // @synthesize shouldShowMessageAccessoryView=_shouldShowMessageAccessoryView;
@property(retain, nonatomic) UIView *customAccessoryView; // @synthesize customAccessoryView=_customAccessoryView;
@property(nonatomic) __weak id <IntercomConversationCollectionViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(retain, nonatomic) NSArray *conversationParts; // @synthesize conversationParts=_conversationParts;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)handleLongPress:(id)arg1;
- (id)viewControllerForModalPresentation;
- (void)reloadRequiredForPart:(id)arg1;
- (_Bool)shouldAddDividerBeforeSection:(unsigned long long)arg1;
- (_Bool)isTypingPartInSection:(unsigned long long)arg1;
- (_Bool)shouldScrollAutomatically;
- (void)prepareToLayoutSection:(unsigned long long)arg1;
- (double)concatenationDistanceForSection:(unsigned long long)arg1;
- (_Bool)shouldConcatenateWithPreviousForSection:(unsigned long long)arg1;
- (_Bool)shouldConcatenateWithNextForSection:(unsigned long long)arg1;
- (CDStruct_0b84e0ba)attributesForSection:(unsigned long long)arg1;
- (id)cellTypeForPart:(id)arg1 atIndexPath:(id)arg2;
- (struct CGSize)estimatedSizeForPart:(id)arg1 withCustomCellType:(id)arg2;
- (struct CGSize)sizeForItemAtIndexPath:(id)arg1;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (_Bool)shouldResetContentOffset;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (_Bool)hasDynamicTopInset;
- (void)snapToTopIfNeeded;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)lastVisibleIndexPath;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)windowDidBecomeKey:(id)arg1;
- (void)updateInsets;
- (_Bool)containFirstResponder;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)removeKeyboardNotifications;
- (void)addKeyboardNotifications;
- (_Bool)canBecomeFirstResponder;
- (_Bool)resignFirstResponder;
- (void)prepareToLayoutPart:(id)arg1;
- (double)maxLayoutWidthForPart:(id)arg1;
- (double)useableViewPort;
- (struct UIEdgeInsets)insetsForAccessoryView;
- (void)unlockCollectionViewScrolling;
- (void)lockCollectionViewScrollingAtCurrentIndexPath;
- (void)updateConversationPart:(id)arg1 withPart:(id)arg2;
- (void)reloadConversationPart:(id)arg1;
- (void)removeConversationPart:(id)arg1;
- (void)addConversationPart:(id)arg1;
- (void)setConversationParts:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)forceResignFirstResponder;
- (void)cleanup;
- (void)dealloc;
- (void)willMoveToParentViewController:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)registerCellViewClass:(Class)arg1 forKey:(id)arg2;
- (void)registerBubbleViewClass:(Class)arg1 forType:(id)arg2;
- (void)registerRetryButtonViewClass:(Class)arg1;
- (void)registerDividerViewClass:(Class)arg1;
- (void)registerSlideOverViewClass:(Class)arg1;
- (void)registerBubbleFooterViewClass:(Class)arg1;
- (void)registerAvatarViewClass:(Class)arg1;
- (void)performBatchUpdates:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithConversationLayout:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IntercomConversationCollectionViewLayout : UICollectionViewLayout
{
    _Bool _insertingTypingPart;
    _Bool _shouldScrollOnUpdate;
    _Bool _adjustingSlideOver;
    id <IntercomConversationCollectionViewLayoutDelegate> _layoutDelegate;
    double _bubbleTailWidth;
    double _bubbleFooterHeight;
    double _dividerHeight;
    double _avatarDiameter;
    double _retryButtonDiameter;
    long long _avatarBubblePosition;
    long long _avatarConcatenationPosition;
    NSIndexPath *_lockedIndexPath;
    double _slideOverViewWidth;
    double _slideOverRevealOffset;
    NSMutableDictionary *_itemAttributes;
    NSMutableDictionary *_bubbleAttributes;
    NSMutableDictionary *_avatarAttributes;
    NSMutableDictionary *_bubbleFooterAttributes;
    NSMutableDictionary *_slideOverAttributes;
    NSMutableDictionary *_dividerAttributes;
    NSMutableDictionary *_retryButtonAttributes;
    NSMutableDictionary *_supplementaryViewSectionsToDelete;
    double _layoutWidth;
    double _layoutHeight;
    NSIndexPath *_insertedTypingIndexPath;
    NSIndexSet *_reloadingIndexSet;
    NSMutableIndexSet *_slideOverSections;
    double _concatenatedMessageDistance;
    struct CGPoint _avatarOffset;
}

@property(nonatomic) double concatenatedMessageDistance; // @synthesize concatenatedMessageDistance=_concatenatedMessageDistance;
@property(retain, nonatomic) NSMutableIndexSet *slideOverSections; // @synthesize slideOverSections=_slideOverSections;
@property(retain, nonatomic) NSIndexSet *reloadingIndexSet; // @synthesize reloadingIndexSet=_reloadingIndexSet;
@property(nonatomic) _Bool adjustingSlideOver; // @synthesize adjustingSlideOver=_adjustingSlideOver;
@property(nonatomic) _Bool shouldScrollOnUpdate; // @synthesize shouldScrollOnUpdate=_shouldScrollOnUpdate;
@property(retain, nonatomic) NSIndexPath *insertedTypingIndexPath; // @synthesize insertedTypingIndexPath=_insertedTypingIndexPath;
@property(nonatomic) double layoutHeight; // @synthesize layoutHeight=_layoutHeight;
@property(nonatomic) double layoutWidth; // @synthesize layoutWidth=_layoutWidth;
@property(retain, nonatomic) NSMutableDictionary *supplementaryViewSectionsToDelete; // @synthesize supplementaryViewSectionsToDelete=_supplementaryViewSectionsToDelete;
@property(retain, nonatomic) NSMutableDictionary *retryButtonAttributes; // @synthesize retryButtonAttributes=_retryButtonAttributes;
@property(retain, nonatomic) NSMutableDictionary *dividerAttributes; // @synthesize dividerAttributes=_dividerAttributes;
@property(retain, nonatomic) NSMutableDictionary *slideOverAttributes; // @synthesize slideOverAttributes=_slideOverAttributes;
@property(retain, nonatomic) NSMutableDictionary *bubbleFooterAttributes; // @synthesize bubbleFooterAttributes=_bubbleFooterAttributes;
@property(retain, nonatomic) NSMutableDictionary *avatarAttributes; // @synthesize avatarAttributes=_avatarAttributes;
@property(retain, nonatomic) NSMutableDictionary *bubbleAttributes; // @synthesize bubbleAttributes=_bubbleAttributes;
@property(retain, nonatomic) NSMutableDictionary *itemAttributes; // @synthesize itemAttributes=_itemAttributes;
@property(nonatomic) double slideOverRevealOffset; // @synthesize slideOverRevealOffset=_slideOverRevealOffset;
@property(nonatomic) double slideOverViewWidth; // @synthesize slideOverViewWidth=_slideOverViewWidth;
@property(retain, nonatomic) NSIndexPath *lockedIndexPath; // @synthesize lockedIndexPath=_lockedIndexPath;
@property(nonatomic) _Bool insertingTypingPart; // @synthesize insertingTypingPart=_insertingTypingPart;
@property(nonatomic) long long avatarConcatenationPosition; // @synthesize avatarConcatenationPosition=_avatarConcatenationPosition;
@property(nonatomic) long long avatarBubblePosition; // @synthesize avatarBubblePosition=_avatarBubblePosition;
@property(nonatomic) double retryButtonDiameter; // @synthesize retryButtonDiameter=_retryButtonDiameter;
@property(nonatomic) double avatarDiameter; // @synthesize avatarDiameter=_avatarDiameter;
@property(nonatomic) struct CGPoint avatarOffset; // @synthesize avatarOffset=_avatarOffset;
@property(nonatomic) double dividerHeight; // @synthesize dividerHeight=_dividerHeight;
@property(nonatomic) double bubbleFooterHeight; // @synthesize bubbleFooterHeight=_bubbleFooterHeight;
@property(nonatomic) double bubbleTailWidth; // @synthesize bubbleTailWidth=_bubbleTailWidth;
@property(nonatomic) __weak id <IntercomConversationCollectionViewLayoutDelegate> layoutDelegate; // @synthesize layoutDelegate=_layoutDelegate;
- (void).cxx_destruct;
- (double)maxWidthForSectionWithAvatar:(_Bool)arg1 sectionInsets:(struct UIEdgeInsets)arg2;
- (double)widthOfChromeWithAvatar:(_Bool)arg1 sectionInsets:(struct UIEdgeInsets)arg2;
- (id)finalLayoutAttributesForDisappearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)finalLayoutAttributesForDisappearingItemAtIndexPath:(id)arg1;
- (id)initialLayoutAttributesForAppearingSupplementaryElementOfKind:(id)arg1 atIndexPath:(id)arg2;
- (id)initialLayoutAttributesForAppearingItemAtIndexPath:(id)arg1;
- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;
- (struct CGPoint)targetContentOffsetForProposedContentOffset:(struct CGPoint)arg1;
- (_Bool)isFullyVisibleIndexPath:(id)arg1;
- (void)finalizeCollectionViewUpdates;
- (void)prepareForCollectionViewUpdates:(id)arg1;
- (void)scrollToBottomAnimated:(_Bool)arg1;
- (_Bool)isScrolledToBottom;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (void)addAttributesToArray:(id)arg1 forRect:(struct CGRect)arg2 fromSource:(id)arg3 adjustForSlideOver:(_Bool)arg4;
- (id)layoutAttributesForElementsInRect:(struct CGRect)arg1;
- (id)indexPathsToDeleteForSupplementaryViewOfKind:(id)arg1;
- (void)addSections:(id)arg1 forElementKind:(id)arg2;
- (void)determineSupplementaryViewSectionsToDelete;
- (struct CGSize)collectionViewContentSize;
- (void)addAvatarAttributesForSection:(unsigned long long)arg1 bubblePosition:(long long)arg2 bubbleRect:(struct CGRect)arg3 insets:(struct UIEdgeInsets)arg4;
- (void)addRetryButtonAttributesForSection:(unsigned long long)arg1 bubblePosition:(long long)arg2 bubbleRect:(struct CGRect)arg3;
- (void)addDividerAttributesForSection:(unsigned long long)arg1 yValue:(double)arg2 insets:(struct UIEdgeInsets)arg3;
- (void)addBubbleFooterAttributesForSection:(unsigned long long)arg1 spec:(CDStruct_0b84e0ba)arg2 tailWidth:(double)arg3 bubbleRect:(struct CGRect)arg4;
- (void)addSlideOverAttributesForSection:(unsigned long long)arg1 bubbleSize:(struct CGSize)arg2 bubbleRect:(struct CGRect)arg3;
- (void)addBubbleAttributes:(unsigned long long)arg1 bubbleRect:(struct CGRect)arg2 concatenatedToPrevious:(_Bool)arg3 position:(long long)arg4;
- (double)createAttributesForSection:(unsigned long long)arg1 startY:(double)arg2;
- (void)prepareLayout;

@end

@interface IntercomSDK_IntercomConversationCustomCell : UICollectionViewCell
{
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;

@end

@interface IntercomSDK_IntercomConversationInputAccessoryView : UIView
{
    UIView *_contentView;
    NSDictionary *_marginConstraints;
    struct UIEdgeInsets _layoutInsets;
}

@property(retain, nonatomic) NSDictionary *marginConstraints; // @synthesize marginConstraints=_marginConstraints;
@property(nonatomic) struct UIEdgeInsets layoutInsets; // @synthesize layoutInsets=_layoutInsets;
@property(readonly, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (struct CGSize)intrinsicContentSize;
- (void)updateConstraints;
- (void)setupConstraints;
- (id)initWithContentView:(id)arg1 layoutInsets:(struct UIEdgeInsets)arg2;

@end

@interface IntercomSDK_PodsDummy_IntercomConversationLayout : NSObject
{
}

@end

@interface IntercomSDK_IntercomConversationReusableView : UICollectionReusableView
{
}

- (void)configureWithPart:(id)arg1;

@end

@interface IntercomSDK_IntercomConversationSlideOverRevealer : NSObject
{
    UIPanGestureRecognizer *_gestureRecogniser;
    IntercomSDK_IntercomConversationCollectionViewLayout *_collectionViewLayout;
    struct CGPoint _gestureStartPoint;
}

@property(nonatomic) __weak IntercomSDK_IntercomConversationCollectionViewLayout *collectionViewLayout; // @synthesize collectionViewLayout=_collectionViewLayout;
@property(nonatomic) struct CGPoint gestureStartPoint; // @synthesize gestureStartPoint=_gestureStartPoint;
@property(retain, nonatomic) UIPanGestureRecognizer *gestureRecogniser; // @synthesize gestureRecogniser=_gestureRecogniser;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)attachToLayout:(id)arg1;
- (void)pan:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIUColorPicker : UIView
{
    id <IIUColorPickerDelegate> _delegate;
    NSMutableArray *_colorButtons;
    NSArray *_colors;
    UIColor *_selectedColor;
}

@property(retain, nonatomic) UIColor *selectedColor; // @synthesize selectedColor=_selectedColor;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
@property(retain, nonatomic) NSMutableArray *colorButtons; // @synthesize colorButtons=_colorButtons;
@property(nonatomic) __weak id <IIUColorPickerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)buttonReleased:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)updateColorButtons;
- (void)layoutColorButtons;
- (id)initWithColors:(id)arg1;

@end

@interface IntercomSDK_IIUColorPickerButton : UIButton
{
    UIColor *_color;
}

@property(retain, nonatomic) UIColor *color; // @synthesize color=_color;
- (void).cxx_destruct;
- (void)animateButtonToScale:(double)arg1;
- (void)updateWithColor:(id)arg1;
- (id)initWithColor:(id)arg1;

@end

@interface IntercomSDK_IIUImageAnnotationViewController : UIViewController <IIUColorPickerDelegate>
{
    id <IIUImageAnnotationDelegate> _delegate;
    CDUnknownBlockType _performActionBlock;
    UIImage *_image;
    UIView *_toolbar;
    UIImageView *_imageView;
    UIButton *_cancelButton;
    UIButton *_sendButton;
    UIButton *_undoButton;
    UIImage *_sendIcon;
    UIImage *_cancelIcon;
    IntercomSDK_IIUColorPicker *_colorPicker;
    UIColor *_selectedColor;
    NSMutableArray *_annotationsArray;
    UIBezierPath *_drawingPath;
    CAShapeLayer *_drawingLayer;
    NSMutableArray *_pointsArray;
    long long _pointsCounter;
    UIImage *_undoIcon;
    NSLayoutConstraint *_colorPickerLeadingConstraint;
    NSMutableArray *_boundingViewsArray;
    struct CGRect _bounds;
}

@property(retain, nonatomic) NSMutableArray *boundingViewsArray; // @synthesize boundingViewsArray=_boundingViewsArray;
@property(retain, nonatomic) NSLayoutConstraint *colorPickerLeadingConstraint; // @synthesize colorPickerLeadingConstraint=_colorPickerLeadingConstraint;
@property(retain, nonatomic) UIImage *undoIcon; // @synthesize undoIcon=_undoIcon;
@property(nonatomic) long long pointsCounter; // @synthesize pointsCounter=_pointsCounter;
@property(retain, nonatomic) NSMutableArray *pointsArray; // @synthesize pointsArray=_pointsArray;
@property(retain, nonatomic) CAShapeLayer *drawingLayer; // @synthesize drawingLayer=_drawingLayer;
@property(retain, nonatomic) UIBezierPath *drawingPath; // @synthesize drawingPath=_drawingPath;
@property(retain, nonatomic) NSMutableArray *annotationsArray; // @synthesize annotationsArray=_annotationsArray;
@property(retain, nonatomic) UIColor *selectedColor; // @synthesize selectedColor=_selectedColor;
@property(nonatomic) struct CGRect bounds; // @synthesize bounds=_bounds;
@property(retain, nonatomic) IntercomSDK_IIUColorPicker *colorPicker; // @synthesize colorPicker=_colorPicker;
@property(retain, nonatomic) UIImage *cancelIcon; // @synthesize cancelIcon=_cancelIcon;
@property(retain, nonatomic) UIImage *sendIcon; // @synthesize sendIcon=_sendIcon;
@property(retain, nonatomic) UIButton *undoButton; // @synthesize undoButton=_undoButton;
@property(retain, nonatomic) UIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIView *toolbar; // @synthesize toolbar=_toolbar;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) CDUnknownBlockType performActionBlock; // @synthesize performActionBlock=_performActionBlock;
@property(nonatomic) __weak id <IIUImageAnnotationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)changedToColor:(id)arg1;
- (_Bool)checkBounds:(struct CGPoint)arg1;
- (id)imageFromView:(id)arg1;
- (struct CGRect)displayedImageBounds;
- (void)completeDrawing;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)undo;
- (void)send;
- (void)dismiss;
- (long long)preferredStatusBarStyle;
- (_Bool)shouldAutorotate;
- (void)layoutUndoButton;
- (void)showHideUndoButton;
- (void)updateColorPickerLeadingConstraint;
- (void)layoutColorPicker;
- (void)layoutSendButton;
- (void)layoutCancelButton;
- (void)layoutAnnotationToolbar;
- (id)initializeColors;
- (void)createUndoButton;
- (void)createColorPicker;
- (void)createSendButton;
- (void)createCancelButton;
- (void)createAnnotationToolbar;
- (void)layoutView;
- (void)layoutBoundingViewsArray;
- (void)createBoundingViewsArray;
- (void)showFromViewController:(id)arg1;
- (void)createPath;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLoad;
- (id)initWithImage:(id)arg1 sendIcon:(id)arg2 cancelIcon:(id)arg3 undoIcon:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIUImageViewerConfig : NSObject
{
    id _image;
    NSURL *_imageURL;
    UIView *_referenceView;
    long long _referenceContentMode;
    double _referenceCornerRadius;
    NSMutableDictionary *_userInfo;
    id _object;
    UIButton *_actionButton;
    UIButton *_closeButton;
    struct CGRect _referenceRect;
}

@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
@property(retain, nonatomic) id object; // @synthesize object=_object;
@property(copy, nonatomic) NSMutableDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(nonatomic) double referenceCornerRadius; // @synthesize referenceCornerRadius=_referenceCornerRadius;
@property(nonatomic) long long referenceContentMode; // @synthesize referenceContentMode=_referenceContentMode;
@property(retain, nonatomic) UIView *referenceView; // @synthesize referenceView=_referenceView;
@property(nonatomic) struct CGRect referenceRect; // @synthesize referenceRect=_referenceRect;
@property(copy, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) id image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)description;

@end

@interface IntercomSDK_IIUImageViewerViewController : UIViewController <UIScrollViewDelegate, UIViewControllerTransitioningDelegate>
{
    IntercomSDK_IIUImageViewerConfig *_config;
    id _image;
    CDUnknownBlockType _performActionBlock;
    long long _lastUsedOrientation;
    UIView *_progressContainer;
    UIView *_blackBackdrop;
    IntercomSDK_FLAnimatedImageView *_imageView;
    UIScrollView *_scrollView;
    UIProgressView *_progressView;
    UIActivityIndicatorView *_spinner;
    UIView *_navGradientView;
    CAGradientLayer *_gradientLayer;
    UITapGestureRecognizer *_singleTapperPhoto;
    UITapGestureRecognizer *_doubleTapperPhoto;
    UITapGestureRecognizer *_singleTapperText;
    UIPanGestureRecognizer *_panRecognizer;
    UIDynamicAnimator *_animator;
    UIAttachmentBehavior *_attachmentBehavior;
    UIViewController *_viewControllerThatPresentedImage;
    CDStruct_10eab4b5 _flags;
    struct CGPoint _imageDragStartingPoint;
    struct UIOffset _imageDragOffsetFromActualTranslation;
    struct UIOffset _imageDragOffsetFromImageCenter;
    struct CGAffineTransform _currentRotationTransform;
    CDStruct_f24d28fa _startingInfo;
}

@property(nonatomic) __weak UIViewController *viewControllerThatPresentedImage; // @synthesize viewControllerThatPresentedImage=_viewControllerThatPresentedImage;
@property(nonatomic) struct UIOffset imageDragOffsetFromImageCenter; // @synthesize imageDragOffsetFromImageCenter=_imageDragOffsetFromImageCenter;
@property(nonatomic) struct UIOffset imageDragOffsetFromActualTranslation; // @synthesize imageDragOffsetFromActualTranslation=_imageDragOffsetFromActualTranslation;
@property(nonatomic) struct CGPoint imageDragStartingPoint; // @synthesize imageDragStartingPoint=_imageDragStartingPoint;
@property(retain, nonatomic) UIAttachmentBehavior *attachmentBehavior; // @synthesize attachmentBehavior=_attachmentBehavior;
@property(retain, nonatomic) UIDynamicAnimator *animator; // @synthesize animator=_animator;
@property(retain, nonatomic) UIPanGestureRecognizer *panRecognizer; // @synthesize panRecognizer=_panRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapperText; // @synthesize singleTapperText=_singleTapperText;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapperPhoto; // @synthesize doubleTapperPhoto=_doubleTapperPhoto;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapperPhoto; // @synthesize singleTapperPhoto=_singleTapperPhoto;
@property(retain, nonatomic) CAGradientLayer *gradientLayer; // @synthesize gradientLayer=_gradientLayer;
@property(retain, nonatomic) UIView *navGradientView; // @synthesize navGradientView=_navGradientView;
@property(retain, nonatomic) UIActivityIndicatorView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) IntercomSDK_FLAnimatedImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UIView *blackBackdrop; // @synthesize blackBackdrop=_blackBackdrop;
@property(retain, nonatomic) UIView *progressContainer; // @synthesize progressContainer=_progressContainer;
@property(nonatomic) struct CGAffineTransform currentRotationTransform; // @synthesize currentRotationTransform=_currentRotationTransform;
@property(nonatomic) long long lastUsedOrientation; // @synthesize lastUsedOrientation=_lastUsedOrientation;
@property(nonatomic) CDStruct_10eab4b5 flags; // @synthesize flags=_flags;
@property(nonatomic) CDStruct_f24d28fa startingInfo; // @synthesize startingInfo=_startingInfo;
@property(copy, nonatomic) CDUnknownBlockType performActionBlock; // @synthesize performActionBlock=_performActionBlock;
@property(retain, nonatomic) id image; // @synthesize image=_image;
@property(retain, nonatomic) IntercomSDK_IIUImageViewerConfig *config; // @synthesize config=_config;
- (void).cxx_destruct;
- (void)closeButtonPressed;
- (void)actionButtonPressed;
- (id)accessibilityHintZoomedIn;
- (id)accessibilityHintZoomedOut;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)imageViewIsOffscreen;
- (double)appropriateDensityForView:(id)arg1;
- (double)appropriateAngularResistanceForView:(id)arg1;
- (void)dismissImageWithFlick:(struct CGPoint)arg1;
- (void)cancelCurrentImageDrag:(_Bool)arg1;
- (void)startImageDragging:(struct CGPoint)arg1 translationOffset:(struct UIOffset)arg2;
- (void)dismissingPanGestureRecognizerPanned:(id)arg1;
- (void)imageSingleTapped:(id)arg1;
- (void)imageDoubleTapped:(id)arg1;
- (void)updateDimmingViewForCurrentZoomScale:(_Bool)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (struct CGRect)resizedFrameForAutorotatingImageView:(struct CGSize)arg1;
- (struct UIEdgeInsets)contentInsetForScrollView:(double)arg1;
- (void)updateScrollViewAndImageViewForCurrentMetrics;
- (struct CGSize)imageSize;
- (void)updateLayoutsForCurrentOrientation;
- (void)updateInterfaceWithImage:(id)arg1;
- (void)dismissByExpandingImageToOffscreenPosition;
- (void)dismissByCleaningUpAfterImageWasFlickedOffscreen;
- (void)dismissByCollapsingImageBackToOriginalPosition;
- (id)backgroundColorForImageView;
- (double)alphaForBackgroundDimmingOverlay;
- (void)showImageViewerByExpandingFromOriginalPositionFromViewController:(id)arg1;
- (void)setupImageModeGestureRecognizers;
- (void)setupNavigationBar;
- (void)createNavigationBarGradient;
- (void)viewDidLoadForImageMode;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)willRotateToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (long long)preferredStatusBarStyle;
- (long long)modalTransitionStyle;
- (long long)preferredStatusBarUpdateAnimation;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (void)dealloc;
- (void)dismiss;
- (void)showFromViewController:(id)arg1;
- (id)initWithConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PodsDummy_IntercomImageUtils : NSObject
{
}

@end

@interface IntercomSDK_IIMGIFAction : NSObject <IIMAction>
{
    IntercomSDK_IIMGIFMediaItem *_gifMediaItem;
}

@property(retain, nonatomic) IntercomSDK_IIMGIFMediaItem *gifMediaItem; // @synthesize gifMediaItem=_gifMediaItem;
- (void).cxx_destruct;
- (id)blocks;
- (id)initWithMediaItem:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMGIFFetcher : NSObject <IIMMediaFetcher>
{
    id <IIMGIFFetcherDelegate> _gifFetcherDelegate;
}

@property(nonatomic) __weak id <IIMGIFFetcherDelegate> gifFetcherDelegate; // @synthesize gifFetcherDelegate=_gifFetcherDelegate;
- (void).cxx_destruct;
- (void)loadPreviewForMediaItem:(id)arg1 targetSize:(struct CGSize)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (id)createMediaItemsFromArray:(id)arg1;
- (void)fetchMediaItemsForQuery:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (id)initWithGIFFetcherDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMGIFInput : NSObject <IIMGIFFetcherDelegate, IIMMediaInput>
{
    id <IIMInputDelegate> inputDelegate;
    UIButton *_inputButton;
    NSString *_searchBarTitle;
    NSString *_dismissString;
    IntercomSDK_IIMMediaPlaceholderView *_placeholderView;
    IntercomSDK_IIMMediaInputViewController *_gifPicker;
    IntercomSDK_IIMGIFFetcher *_gifFetcher;
    id <IIMGIFInputDelegate> _gifInputDelegate;
    NSString *_previewSendButtonText;
    UIImage *_previewCloseButtonImage;
}

@property(retain, nonatomic) UIImage *previewCloseButtonImage; // @synthesize previewCloseButtonImage=_previewCloseButtonImage;
@property(copy, nonatomic) NSString *previewSendButtonText; // @synthesize previewSendButtonText=_previewSendButtonText;
@property(nonatomic) __weak id <IIMGIFInputDelegate> gifInputDelegate; // @synthesize gifInputDelegate=_gifInputDelegate;
@property(retain, nonatomic) IntercomSDK_IIMGIFFetcher *gifFetcher; // @synthesize gifFetcher=_gifFetcher;
@property(retain, nonatomic) IntercomSDK_IIMMediaInputViewController *gifPicker; // @synthesize gifPicker=_gifPicker;
@property(retain, nonatomic) IntercomSDK_IIMMediaPlaceholderView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(copy, nonatomic) NSString *dismissString; // @synthesize dismissString=_dismissString;
@property(copy, nonatomic) NSString *searchBarTitle; // @synthesize searchBarTitle=_searchBarTitle;
@property(retain, nonatomic) UIButton *inputButton; // @synthesize inputButton=_inputButton;
@property(nonatomic) __weak id <IIMInputDelegate> inputDelegate; // @synthesize inputDelegate;
- (void).cxx_destruct;
- (void)dismissExpandedInput:(id)arg1;
- (void)presentExpandedInput:(id)arg1;
- (void)fetcher:(id)arg1 placeholderTypeChanged:(unsigned long long)arg2;
- (void)fetcher:(id)arg1 findGIFsWithQuery:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (id)inputViewController;
- (id)actionForMediaItem:(id)arg1;
- (id)initWithInputButton:(id)arg1 searchBarTitle:(id)arg2 dismissString:(id)arg3 placeholderView:(id)arg4 previewSendButtonText:(id)arg5 previewCloseButtonImage:(id)arg6 delegate:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMGIFMediaItem : NSObject <IIMMediaItem>
{
    NSDictionary *_gifBlock;
}

@property(retain, nonatomic) NSDictionary *gifBlock; // @synthesize gifBlock=_gifBlock;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToGIFMediaItem:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)placeholderImage;
- (id)initWithGIFBlock:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMImagePreviewMetadata : NSObject <IIMImagePreviewProtocol>
{
    UIImage *previewImage;
    UIViewController *presentingViewController;
    UIView *sourceView;
    CDUnknownBlockType imagePreviewerActionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType imagePreviewerActionBlock; // @synthesize imagePreviewerActionBlock;
@property(retain, nonatomic) UIView *sourceView; // @synthesize sourceView;
@property(retain, nonatomic) UIViewController *presentingViewController; // @synthesize presentingViewController;
@property(retain, nonatomic) UIImage *previewImage; // @synthesize previewImage;
- (void).cxx_destruct;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMInputAccessoryView : UIView <IIMComposerDelegate, IIMInputButtonContainerViewDelegate, IIMInputDelegate>
{
    id <IIMInput> _selectedInput;
    NSArray *_inputs;
    UIColor *_separatorColor;
    id <IIMInputAccessoryViewDelegate> _delegate;
    UIView<IIMComposer> *_composer;
    IntercomSDK_IIMInputButtonContainerView *_inputSelectorView;
    NSLayoutConstraint *_heightConstraint;
    UIView *_bottomBorder;
    UIView *_topBorder;
}

@property(retain, nonatomic) UIView *topBorder; // @synthesize topBorder=_topBorder;
@property(retain, nonatomic) UIView *bottomBorder; // @synthesize bottomBorder=_bottomBorder;
@property(retain, nonatomic) NSLayoutConstraint *heightConstraint; // @synthesize heightConstraint=_heightConstraint;
@property(retain, nonatomic) IntercomSDK_IIMInputButtonContainerView *inputSelectorView; // @synthesize inputSelectorView=_inputSelectorView;
@property(retain, nonatomic) UIView<IIMComposer> *composer; // @synthesize composer=_composer;
@property(nonatomic) __weak id <IIMInputAccessoryViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(readonly, nonatomic) NSArray *inputs; // @synthesize inputs=_inputs;
@property(nonatomic) __weak id <IIMInput> selectedInput; // @synthesize selectedInput=_selectedInput;
- (void).cxx_destruct;
- (void)sendPressed;
- (void)input:(id)arg1 showImagePreviewWithMetadata:(id)arg2;
- (void)input:(id)arg1 dismissViewController:(id)arg2;
- (void)input:(id)arg1 presentViewController:(id)arg2;
- (void)input:(id)arg1 performedAction:(id)arg2;
- (void)inputSelected:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)composerDidInvalidateContentSize;
- (id)addBorder;
- (void)updateHeight;
- (struct CGSize)intrinsicContentSize;
- (void)updateConstraints;
- (void)createConstraints;
- (id)initWithInputs:(id)arg1 composer:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMInputButtonContainerView : UIView
{
    UIButton *_actionButton;
    id <IIMInputButtonContainerViewDelegate> _delegate;
    NSArray *_inputs;
    NSArray *_inputButtons;
    UIView *_inputSelectorView;
}

+ (void)pinView:(id)arg1 attribute:(long long)arg2 toAttribute:(long long)arg3 ofView:(id)arg4 constant:(double)arg5;
@property(retain, nonatomic) UIView *inputSelectorView; // @synthesize inputSelectorView=_inputSelectorView;
@property(readonly, nonatomic) NSArray *inputButtons; // @synthesize inputButtons=_inputButtons;
@property(readonly, nonatomic) NSArray *inputs; // @synthesize inputs=_inputs;
@property(nonatomic) __weak id <IIMInputButtonContainerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
- (void).cxx_destruct;
- (void)inputPressed:(id)arg1;
- (void)selectedInput:(id)arg1;
- (void)actionButtonPressed;
- (struct CGSize)intrinsicContentSize;
- (void)createConstraints;
- (id)initWithInputs:(id)arg1 actionButton:(id)arg2 delegate:(id)arg3;

@end

@interface IntercomSDK_IIMMediaCollectionViewCell : UICollectionViewCell
{
    id _image;
    id <IIMMediaItem> _mediaItem;
    IntercomSDK_FLAnimatedImageView *_imageView;
}

@property(retain, nonatomic) IntercomSDK_FLAnimatedImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) id <IIMMediaItem> mediaItem; // @synthesize mediaItem=_mediaItem;
@property(retain, nonatomic) id image; // @synthesize image=_image;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface IntercomSDK_IIMMediaInputViewController : UIInputViewController
{
    IntercomSDK_IIMMediaViewController *_mediaViewController;
}

@property(retain, nonatomic) IntercomSDK_IIMMediaViewController *mediaViewController; // @synthesize mediaViewController=_mediaViewController;
- (void).cxx_destruct;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (id)initWithInput:(id)arg1 mediaFetcher:(id)arg2 allowSearch:(_Bool)arg3 title:(id)arg4 dismissString:(id)arg5;

@end

@interface IntercomSDK_IIMMediaPlaceholderView : UIView
{
    unsigned long long _placeholderViewType;
    UIView *_emtpyResultsView;
    UIView *_loadingView;
    UIView *_errorView;
}

@property(retain, nonatomic) UIView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) UIView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) UIView *emtpyResultsView; // @synthesize emtpyResultsView=_emtpyResultsView;
@property(nonatomic) unsigned long long placeholderViewType; // @synthesize placeholderViewType=_placeholderViewType;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface IntercomSDK_IIMMediaSearchBar : UISearchBar
{
    UIView *_tapView;
}

@property(retain, nonatomic) UIView *tapView; // @synthesize tapView=_tapView;
- (void).cxx_destruct;
- (void)addTapTarget:(id)arg1 action:(SEL)arg2;
- (id)inputAccessoryView;
- (id)initWithPlaceholder:(id)arg1 delegate:(id)arg2;

@end

@interface IntercomSDK_IIMMediaViewControllerFlowLayout : UICollectionViewFlowLayout
{
}

- (id)invalidationContextForBoundsChange:(struct CGRect)arg1;

@end

@interface IntercomSDK_IIMMediaViewController : UIViewController <UICollectionViewDataSource, UICollectionViewDelegate, UISearchBarDelegate>
{
    id <IIMMediaInput> _input;
    unsigned long long _pickerMode;
    IntercomSDK_IIMMediaPlaceholderView *_placeholderView;
    unsigned long long _numberOfColumns;
    UIButton *_expandButton;
    UICollectionView *_collectionView;
    IntercomSDK_IIMMediaViewControllerFlowLayout *_flowLayout;
    NSString *_titleString;
    NSString *_dismissString;
    IntercomSDK_IIMMediaSearchBar *_searchBar;
    NSLayoutConstraint *_placeholderViewBottomConstraint;
    id <IIMMediaFetcher> _mediaFetcher;
    NSArray *_items;
    struct CGRect _keyboardFrame;
}

@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) __weak id <IIMMediaFetcher> mediaFetcher; // @synthesize mediaFetcher=_mediaFetcher;
@property(nonatomic) struct CGRect keyboardFrame; // @synthesize keyboardFrame=_keyboardFrame;
@property(retain, nonatomic) NSLayoutConstraint *placeholderViewBottomConstraint; // @synthesize placeholderViewBottomConstraint=_placeholderViewBottomConstraint;
@property(retain, nonatomic) IntercomSDK_IIMMediaSearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(copy, nonatomic) NSString *dismissString; // @synthesize dismissString=_dismissString;
@property(copy, nonatomic) NSString *titleString; // @synthesize titleString=_titleString;
@property(retain, nonatomic) IntercomSDK_IIMMediaViewControllerFlowLayout *flowLayout; // @synthesize flowLayout=_flowLayout;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIButton *expandButton; // @synthesize expandButton=_expandButton;
@property(nonatomic) unsigned long long numberOfColumns; // @synthesize numberOfColumns=_numberOfColumns;
@property(retain, nonatomic) IntercomSDK_IIMMediaPlaceholderView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(nonatomic) unsigned long long pickerMode; // @synthesize pickerMode=_pickerMode;
@property(nonatomic) __weak id <IIMMediaInput> input; // @synthesize input=_input;
- (void).cxx_destruct;
- (void)keyboardWillShow:(id)arg1;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2;
- (_Bool)collectionView:(id)arg1 shouldHighlightItemAtIndexPath:(id)arg2;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)presentPreviewForIndexPath:(id)arg1;
- (id)createImagePreviewMetadata:(id)arg1 indexPath:(id)arg2;
- (void)requestMedia;
- (id)searchQuery;
- (void)updateMediaCache;
- (void)scrollViewDidScroll:(id)arg1;
- (void)expandPicker;
- (void)dismiss;
- (struct CGSize)itemSize;
- (void)configureSearchBar;
- (void)configurePlaceholderView;
- (void)configureCollectionView;
- (void)layoutExpandButton;
- (void)configureExpandButton;
- (id)inputView;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)updatePlaceholderConstraint;
- (void)updateCollectionViewContentInsets;
- (void)viewSafeAreaInsetsDidChange;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithInput:(id)arg1 mediaFetcher:(id)arg2 mode:(unsigned long long)arg3 allowSearch:(_Bool)arg4 title:(id)arg5 dismissString:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMPhotosAction : NSObject <IIMAction>
{
    PHAsset *_imageAsset;
}

@property(readonly, nonatomic) PHAsset *imageAsset; // @synthesize imageAsset=_imageAsset;
- (void).cxx_destruct;
- (id)blocks;
- (id)initWithImageAsset:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMPhotosFetcher : NSObject <IIMMediaFetcher>
{
    unsigned long long _permissionStatus;
    PHCachingImageManager *_photoManager;
    long long _bufferLowerBound;
    NSArray *_items;
    id <IIMPhotosFetcherDelegate> _delegate;
}

+ (unsigned long long)permissionStatus;
@property(nonatomic) __weak id <IIMPhotosFetcherDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
@property(nonatomic) long long bufferLowerBound; // @synthesize bufferLowerBound=_bufferLowerBound;
@property(retain, nonatomic) PHCachingImageManager *photoManager; // @synthesize photoManager=_photoManager;
@property(nonatomic) unsigned long long permissionStatus; // @synthesize permissionStatus=_permissionStatus;
- (void).cxx_destruct;
- (void)tearDown;
- (void)setVisibileRange:(struct _NSRange)arg1 numberOfColumns:(unsigned long long)arg2 previewSize:(struct CGSize)arg3;
- (void)loadPreviewForMediaItem:(id)arg1 targetSize:(struct CGSize)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)fetchMediaItemsForQuery:(id)arg1 resultHandler:(CDUnknownBlockType)arg2;
- (void)fetchPhotos:(CDUnknownBlockType)arg1;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMPhotosInput : NSObject <IIMPhotosFetcherDelegate, IIMMediaInput>
{
    id <IIMInputDelegate> inputDelegate;
    UIButton *_expandInputButton;
    UIButton *_inputButton;
    IntercomSDK_IIMMediaInputViewController *_photosPicker;
    IntercomSDK_IIMPhotosFetcher *_photosFetcher;
    NSString *_fullscreenTitle;
    NSString *_dismissString;
    IntercomSDK_IIMPhotosPlaceholderView *_placeholderView;
    NSString *_previewSendButtonText;
    UIImage *_previewCloseButtonImage;
}

@property(retain, nonatomic) UIImage *previewCloseButtonImage; // @synthesize previewCloseButtonImage=_previewCloseButtonImage;
@property(copy, nonatomic) NSString *previewSendButtonText; // @synthesize previewSendButtonText=_previewSendButtonText;
@property(retain, nonatomic) IntercomSDK_IIMPhotosPlaceholderView *placeholderView; // @synthesize placeholderView=_placeholderView;
@property(copy, nonatomic) NSString *dismissString; // @synthesize dismissString=_dismissString;
@property(copy, nonatomic) NSString *fullscreenTitle; // @synthesize fullscreenTitle=_fullscreenTitle;
@property(retain, nonatomic) IntercomSDK_IIMPhotosFetcher *photosFetcher; // @synthesize photosFetcher=_photosFetcher;
@property(retain, nonatomic) IntercomSDK_IIMMediaInputViewController *photosPicker; // @synthesize photosPicker=_photosPicker;
@property(retain, nonatomic) UIButton *inputButton; // @synthesize inputButton=_inputButton;
@property(retain, nonatomic) UIButton *expandInputButton; // @synthesize expandInputButton=_expandInputButton;
@property(nonatomic) __weak id <IIMInputDelegate> inputDelegate; // @synthesize inputDelegate;
- (void).cxx_destruct;
- (void)imageFetcher:(id)arg1 permissionStatusChanged:(unsigned long long)arg2;
- (void)dismissExpandedInput:(id)arg1;
- (void)presentExpandedInput:(id)arg1;
- (id)actionForMediaItem:(id)arg1;
- (id)contextualBackgroundColor;
- (id)inputViewController;
- (id)initWithFullscreenTitle:(id)arg1 dismissString:(id)arg2 placeholderView:(id)arg3 inputButton:(id)arg4 previewSendButtonText:(id)arg5 previewCloseButtonImage:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMPhotosMediaItem : NSObject <IIMMediaItem>
{
    PHAsset *_asset;
}

@property(readonly, nonatomic) PHAsset *asset; // @synthesize asset=_asset;
- (void).cxx_destruct;
- (id)placeholderImage;
- (id)initWithAsset:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMPhotosPlaceholderView : IntercomSDK_IIMMediaPlaceholderView
{
    unsigned long long _permissionStatus;
    UIView *_permissionsView;
}

@property(retain, nonatomic) UIView *permissionsView; // @synthesize permissionsView=_permissionsView;
@property(nonatomic) unsigned long long permissionStatus; // @synthesize permissionStatus=_permissionStatus;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface IntercomSDK_IIMTextAction : NSObject <IIMAction>
{
    NSString *_text;
    NSArray *_blocks;
}

+ (id)blockBodyForText:(id)arg1;
@property(readonly, nonatomic) NSArray *blocks; // @synthesize blocks=_blocks;
@property(readonly, nonatomic) NSString *text; // @synthesize text=_text;
- (void).cxx_destruct;
- (id)initWithText:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IIMTextInput : NSObject <IIMInput>
{
    id <IIMInputDelegate> inputDelegate;
    UIButton *_inputButton;
}

@property(retain, nonatomic) UIButton *inputButton; // @synthesize inputButton=_inputButton;
@property(nonatomic) __weak id <IIMInputDelegate> inputDelegate; // @synthesize inputDelegate;
- (void).cxx_destruct;
- (id)inputViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PodsDummy_IntercomInputManager : NSObject
{
}

@end

@interface IntercomSDK_PodsDummy_IntercomNexusClient : NSObject
{
}

@end

@interface IntercomSDK_IntercomNexusClient : NSObject <IntercomNexusConnectionDelegate>
{
    IntercomSDK_IntercomNexusConfiguration *_configuration;
    NSSet *_topics;
    NSHashTable *_observers;
    NSCache *_seenGuids;
    IntercomSDK_IntercomNexusConnection *_connection;
}

+ (id)sharedClient;
@property(retain, nonatomic) IntercomSDK_IntercomNexusConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSCache *seenGuids; // @synthesize seenGuids=_seenGuids;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSSet *topics; // @synthesize topics=_topics;
@property(retain, nonatomic) IntercomSDK_IntercomNexusConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)connectionDidDisconnect:(id)arg1;
- (void)connectionDidConnect:(id)arg1;
- (void)connection:(id)arg1 didReceiveMessage:(id)arg2;
- (void)unsubscribeFromTopics:(id)arg1;
- (void)subscribeToTopics:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IntercomNexusConfiguration : NSObject
{
    NSArray *_endpoints;
    NSNumber *_connectionTimeout;
    NSNumber *_presenceHeartbeatInterval;
    NSNumber *_backgroundConnectionTimeout;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSNumber *backgroundConnectionTimeout; // @synthesize backgroundConnectionTimeout=_backgroundConnectionTimeout;
@property(retain, nonatomic) NSNumber *presenceHeartbeatInterval; // @synthesize presenceHeartbeatInterval=_presenceHeartbeatInterval;
@property(retain, nonatomic) NSNumber *connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property(retain, nonatomic) NSArray *endpoints; // @synthesize endpoints=_endpoints;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)init;

@end

@interface IntercomSDK_IntercomNexusConnection : NSObject <IntercomNexusSocketDelegate>
{
    _Bool _monitoringReachability;
    IntercomSDK_IntercomNexusConfiguration *_configuration;
    NSArray *_websockets;
    id <IntercomNexusConnectionDelegate> _delegate;
    IntercomSDK_AFNetworkReachabilityManager *_reachabilityManager;
    NSTimer *_backgroundTimer;
    unsigned long long _backgroundTask;
}

@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(nonatomic) __weak NSTimer *backgroundTimer; // @synthesize backgroundTimer=_backgroundTimer;
@property(nonatomic) _Bool monitoringReachability; // @synthesize monitoringReachability=_monitoringReachability;
@property(retain, nonatomic) IntercomSDK_AFNetworkReachabilityManager *reachabilityManager; // @synthesize reachabilityManager=_reachabilityManager;
@property(nonatomic) __weak id <IntercomNexusConnectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *websockets; // @synthesize websockets=_websockets;
@property(retain, nonatomic) IntercomSDK_IntercomNexusConfiguration *configuration; // @synthesize configuration=_configuration;
- (void).cxx_destruct;
- (void)websocketDidDisconnect:(id)arg1;
- (void)websocketDidConnect:(id)arg1;
- (void)websocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)invalidateBackgroundTask;
- (void)tearDownBackgroundTimer;
- (void)finishBackgrounding;
- (void)startBackgroundTask;
- (void)applicationWillEnterForeground;
- (void)applicationDidEnterBackground;
- (void)addLifecycleNotifications;
- (void)monitorReachability;
- (void)setupReachability;
- (void)createWebsockets;
- (void)sendMessage:(id)arg1;
- (void)dealloc;
- (id)initWithConfiguration:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IntercomNexusEvent : NSObject
{
    unsigned long long _type;
    NSString *_eventGuid;
    NSString *_fromUser;
    NSString *_toUser;
    NSString *_conversationId;
    NSString *_adminName;
    NSString *_adminId;
    NSString *_adminAvatar;
    NSString *_assigneeId;
    NSString *_conversationPartType;
    NSSet *_topics;
    NSDate *_creationTime;
}

+ (id)eventNameForEventType:(unsigned long long)arg1;
+ (unsigned long long)eventTypeForEventName:(id)arg1;
+ (id)eventTypeToStringDictionary;
+ (id)eventStringToTypeDictionary;
+ (id)instanceFromDictionary:(id)arg1;
@property(readonly, nonatomic) NSDate *creationTime; // @synthesize creationTime=_creationTime;
@property(copy, nonatomic) NSSet *topics; // @synthesize topics=_topics;
@property(copy, nonatomic) NSString *conversationPartType; // @synthesize conversationPartType=_conversationPartType;
@property(copy, nonatomic) NSString *assigneeId; // @synthesize assigneeId=_assigneeId;
@property(copy, nonatomic) NSString *adminAvatar; // @synthesize adminAvatar=_adminAvatar;
@property(copy, nonatomic) NSString *adminId; // @synthesize adminId=_adminId;
@property(copy, nonatomic) NSString *adminName; // @synthesize adminName=_adminName;
@property(copy, nonatomic) NSString *conversationId; // @synthesize conversationId=_conversationId;
@property(copy, nonatomic) NSString *toUser; // @synthesize toUser=_toUser;
@property(copy, nonatomic) NSString *fromUser; // @synthesize fromUser=_fromUser;
@property(copy, nonatomic) NSString *eventGuid; // @synthesize eventGuid=_eventGuid;
@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)dictionaryRepresentation;
- (_Bool)isReadStateChangedEvent;
- (_Bool)isConversationChangedEvent;
- (_Bool)isTypingEvent;
- (_Bool)isAdminEvent;
- (id)initWithType:(unsigned long long)arg1 topics:(id)arg2;

@end

@interface IntercomSDK_IntercomNexusSocket : NSObject <SRWebSocketDelegate>
{
    IntercomSDK_SRWebSocket *_websocket;
    NSURL *_url;
    id <IntercomNexusSocketDelegate> _delegate;
    NSTimer *_reconnectionTimer;
    NSTimer *_timeoutTimer;
    unsigned long long _reconnectionAttempts;
    NSNumber *_timeoutInterval;
}

@property(retain, nonatomic) NSNumber *timeoutInterval; // @synthesize timeoutInterval=_timeoutInterval;
@property(nonatomic) unsigned long long reconnectionAttempts; // @synthesize reconnectionAttempts=_reconnectionAttempts;
@property(retain, nonatomic) NSTimer *timeoutTimer; // @synthesize timeoutTimer=_timeoutTimer;
@property(retain, nonatomic) NSTimer *reconnectionTimer; // @synthesize reconnectionTimer=_reconnectionTimer;
@property(readonly, nonatomic) __weak id <IntercomNexusSocketDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain, nonatomic) IntercomSDK_SRWebSocket *websocket; // @synthesize websocket=_websocket;
- (void).cxx_destruct;
- (_Bool)webSocketShouldConvertTextFrameToString:(id)arg1;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocketDidOpen:(id)arg1;
- (_Bool)isConnected;
- (void)disconnect;
- (void)resetTimeout;
- (void)scheduleReconnect;
- (void)timeout;
- (void)reconnect;
- (void)writeString:(id)arg1;
- (void)dealloc;
- (void)createWebsocket;
- (id)initWithURL:(id)arg1 timeout:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_IntercomNexusSocketCloser : NSObject <SRWebSocketDelegate>
{
    NSHashTable *_websockets;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSHashTable *websockets; // @synthesize websockets=_websockets;
- (void).cxx_destruct;
- (_Bool)webSocketShouldConvertTextFrameToString:(id)arg1;
- (void)webSocket:(id)arg1 didReceiveMessage:(id)arg2;
- (void)webSocket:(id)arg1 didFailWithError:(id)arg2;
- (void)webSocket:(id)arg1 didCloseWithCode:(long long)arg2 reason:(id)arg3 wasClean:(_Bool)arg4;
- (void)webSocketDidOpen:(id)arg1;
- (void)removeWebSocket:(id)arg1;
- (void)addWebSocket:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_ICTTranslations : NSObject
{
}

@end

@interface IntercomSDK_PodsDummy_IntercomTranslations : NSObject
{
}

@end

@interface ICMConversation : ICMSafeNetworkModel <NSCopying>
{
    _Bool _read;
    _Bool _userParticipated;
    NSString *_conversationId;
    NSDictionary *_participants;
    NSArray *_groupConversationParticipantIds;
    ICMParticipatingAdmin *_lastAdmin;
    NSArray *_conversationParts;
    long long _partDisplayStyle;
    NSString *_intercomLinkSolution;
    NSArray *_operatorClientConditions;
}

+ (id)instanceFromDictionary:(id)arg1 partDisplayStyle:(long long)arg2;
@property(retain, nonatomic) NSArray *operatorClientConditions; // @synthesize operatorClientConditions=_operatorClientConditions;
@property(copy, nonatomic) NSString *intercomLinkSolution; // @synthesize intercomLinkSolution=_intercomLinkSolution;
@property(nonatomic) long long partDisplayStyle; // @synthesize partDisplayStyle=_partDisplayStyle;
@property(nonatomic) _Bool userParticipated; // @synthesize userParticipated=_userParticipated;
@property(nonatomic) _Bool read; // @synthesize read=_read;
@property(retain, nonatomic) NSArray *conversationParts; // @synthesize conversationParts=_conversationParts;
@property(retain, nonatomic) ICMParticipatingAdmin *lastAdmin; // @synthesize lastAdmin=_lastAdmin;
@property(copy, nonatomic) NSArray *groupConversationParticipantIds; // @synthesize groupConversationParticipantIds=_groupConversationParticipantIds;
@property(copy, nonatomic) NSDictionary *participants; // @synthesize participants=_participants;
@property(copy, nonatomic) NSString *conversationId; // @synthesize conversationId=_conversationId;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToConversation:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)lastPart;
- (_Bool)shouldAutoOpenProfile;
- (id)participantsInConversation;
- (_Bool)messageComposerShouldBeDisplayed;
- (void)setParticipantsOnConversationParts;
- (void)setOperatorClientConditions;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)init;

@end

@interface ICMLinkListBlockAppearance : ICMLinkCardBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMContainerCardBlockAppearance : ICMBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMBlockAppearance : NSObject <ITBBlockAppearance>
{
    _Bool isTextSelectable;
    _Bool showMessengerAppBorder;
    UIColor *linkTextColor;
    UIColor *textColor;
    UIColor *headingTextColor;
    UIColor *subHeadingTextColor;
    UIColor *buttonBackgroundColor;
    UIColor *buttonTextColor;
    UIColor *codeBackgroundColor;
    UIColor *codeTextColor;
    UIColor *typingDotColor;
    UIColor *separatorColor;
    UIColor *appPrimaryColor;
    UIFont *paragraphFont;
    UIFont *codeFont;
    UIFont *headingFont;
    UIFont *subheadingFont;
    UIFont *buttonFont;
    double inlineImagePadding;
    double singleImagePadding;
    double inlineImageCornerRadius;
    double singleImageCornerRadius;
    NSString *twitterFollowString;
    NSString *facebookFollowString;
    UIImage *linkFooterImage;
    double defaultLinkHeight;
    double maxLinkHeight;
    UIColor *activityIndicatorColor;
    UIImage *activityIndicatorImage;
    struct CGSize linkFooterImageSize;
    struct UIEdgeInsets textInsets;
    struct UIEdgeInsets codeInsets;
    struct UIEdgeInsets linkInsets;
    struct UIEdgeInsets linkFooterInsets;
    struct UIEdgeInsets messengerCardInsets;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool showMessengerAppBorder; // @synthesize showMessengerAppBorder;
@property(nonatomic) struct UIEdgeInsets messengerCardInsets; // @synthesize messengerCardInsets;
@property(retain, nonatomic) UIImage *activityIndicatorImage; // @synthesize activityIndicatorImage;
@property(retain, nonatomic) UIColor *activityIndicatorColor; // @synthesize activityIndicatorColor;
@property(nonatomic) double maxLinkHeight; // @synthesize maxLinkHeight;
@property(nonatomic) double defaultLinkHeight; // @synthesize defaultLinkHeight;
@property(nonatomic) struct UIEdgeInsets linkFooterInsets; // @synthesize linkFooterInsets;
@property(nonatomic) struct CGSize linkFooterImageSize; // @synthesize linkFooterImageSize;
@property(retain, nonatomic) UIImage *linkFooterImage; // @synthesize linkFooterImage;
@property(nonatomic) _Bool isTextSelectable; // @synthesize isTextSelectable;
@property(retain, nonatomic) NSString *facebookFollowString; // @synthesize facebookFollowString;
@property(retain, nonatomic) NSString *twitterFollowString; // @synthesize twitterFollowString;
@property(nonatomic) double singleImageCornerRadius; // @synthesize singleImageCornerRadius;
@property(nonatomic) double inlineImageCornerRadius; // @synthesize inlineImageCornerRadius;
@property(nonatomic) double singleImagePadding; // @synthesize singleImagePadding;
@property(nonatomic) double inlineImagePadding; // @synthesize inlineImagePadding;
@property(nonatomic) struct UIEdgeInsets linkInsets; // @synthesize linkInsets;
@property(nonatomic) struct UIEdgeInsets codeInsets; // @synthesize codeInsets;
@property(nonatomic) struct UIEdgeInsets textInsets; // @synthesize textInsets;
@property(retain, nonatomic) UIFont *buttonFont; // @synthesize buttonFont;
@property(retain, nonatomic) UIFont *subheadingFont; // @synthesize subheadingFont;
@property(retain, nonatomic) UIFont *headingFont; // @synthesize headingFont;
@property(retain, nonatomic) UIFont *codeFont; // @synthesize codeFont;
@property(retain, nonatomic) UIFont *paragraphFont; // @synthesize paragraphFont;
@property(retain, nonatomic) UIColor *appPrimaryColor; // @synthesize appPrimaryColor;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor;
@property(retain, nonatomic) UIColor *typingDotColor; // @synthesize typingDotColor;
@property(retain, nonatomic) UIColor *codeTextColor; // @synthesize codeTextColor;
@property(retain, nonatomic) UIColor *codeBackgroundColor; // @synthesize codeBackgroundColor;
@property(retain, nonatomic) UIColor *buttonTextColor; // @synthesize buttonTextColor;
@property(retain, nonatomic) UIColor *buttonBackgroundColor; // @synthesize buttonBackgroundColor;
@property(retain, nonatomic) UIColor *subHeadingTextColor; // @synthesize subHeadingTextColor;
@property(retain, nonatomic) UIColor *headingTextColor; // @synthesize headingTextColor;
@property(retain, nonatomic) UIColor *textColor; // @synthesize textColor;
@property(retain, nonatomic) UIColor *linkTextColor; // @synthesize linkTextColor;
- (void).cxx_destruct;
- (id)linkAuthorInitialsImageForName:(id)arg1 diameter:(double)arg2;

// Remaining properties
@property(nonatomic) double avatarRadius;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMPresentationManager : NSObject <ICMRootViewControllerDelegate>
{
    _Bool _launcherVisible;
    _Bool _inAppMessagesVisible;
    double _inAppBottomPadding;
    ICMWindow *_intercomWindow;
    ICMWindow *_intercomHelpCenterWindow;
    NSArray *_lastUnreadConversations;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSArray *lastUnreadConversations; // @synthesize lastUnreadConversations=_lastUnreadConversations;
@property(retain, nonatomic) ICMWindow *intercomHelpCenterWindow; // @synthesize intercomHelpCenterWindow=_intercomHelpCenterWindow;
@property(retain, nonatomic) ICMWindow *intercomWindow; // @synthesize intercomWindow=_intercomWindow;
@property(nonatomic) _Bool inAppMessagesVisible; // @synthesize inAppMessagesVisible=_inAppMessagesVisible;
@property(nonatomic) _Bool launcherVisible; // @synthesize launcherVisible=_launcherVisible;
@property(nonatomic) double inAppBottomPadding; // @synthesize inAppBottomPadding=_inAppBottomPadding;
- (void).cxx_destruct;
- (void)presentWindowIfNeededAsFullscreen:(_Bool)arg1;
- (void)setWindowIsFullScreen:(_Bool)arg1;
- (void)hideIntercom;
- (_Bool)shouldShowLauncher;
- (_Bool)shouldShowInApps;
- (void)hideIntercomHelpCenterWindow;
- (void)hideIntercomWindow;
- (void)presentConversation:(id)arg1;
- (void)presentHelpCenterWindowIfNeededAsFullscreen:(_Bool)arg1;
- (void)setIntercomHelpCenterWindowFullScreen:(_Bool)arg1;
- (void)presentHelpCenter;
- (void)presentHomescreen;
- (void)presentMessageComposerWithInitialMessage:(id)arg1;
- (void)presentMessenger;
- (void)conversationMarkedAsRead:(id)arg1;
- (void)setUnreadConversations:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showLauncherOrInAppsOnMainThread;
- (void)showLauncherOrInAppsIfNeeded;
- (void)setNeedsHostAppStatusBarAppearanceUpdate;
- (void)dismissMessenger;
- (_Bool)isMessengerOpen;
- (void)userChanged;
- (void)hideIntercomUI;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMPostBlockAppearance : ICMBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMLauncherAnimationUtils : NSObject
{
}

+ (void)animate:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface ICMGIFResponse : ICMSafeNetworkModel
{
    NSArray *_results;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSArray *results; // @synthesize results=_results;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToResponse:(id)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface ICMNavigationBarCloseButton : UIButton
{
    double _blurViewAlpha;
    UIView *_blurView;
}

@property(retain, nonatomic) UIView *blurView; // @synthesize blurView=_blurView;
@property(nonatomic) double blurViewAlpha; // @synthesize blurViewAlpha=_blurViewAlpha;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)createBlurView;
- (void)setImageView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMPhotoInputNoPermissionView : UIView
{
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    UIButton *_enablePermissionsButton;
    UIView *_containerView;
}

@property(retain, nonatomic) UIView *containerView; // @synthesize containerView=_containerView;
@property(retain, nonatomic) UIButton *enablePermissionsButton; // @synthesize enablePermissionsButton=_enablePermissionsButton;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)animateButtonToScale:(double)arg1;
- (void)buttonReleased:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (void)openPermissionsSettings;
- (void)createConstraints;
- (void)createEnablePermissionsButton;
- (void)createMessageLabel;
- (void)createTitleLabel;
- (id)init;

@end

@interface ICMLinkCardContentBlockAppearance : ICMInAppBlockAppearance
{
    double avatarRadius;
}

+ (id)sharedInstance;
- (void)setAvatarRadius:(double)arg1;
- (double)avatarRadius;
- (id)linkUpdatedAtAttributedStringForDate:(id)arg1;
- (id)linkWrittenByAttributedStringForName:(id)arg1;
- (id)init;

@end

@interface ICMPostViewController : UIViewController <ICMFullScreenInAppDelegate, ICMFullScreenInAppProtocol>
{
    _Bool _isInApp;
    ICMConversation *_conversation;
    ICMConversationPart *_conversationPart;
    id <ICMInAppsDelegate> _delegate;
    UIView *_backgroundView;
    ICMFullScreenInAppViewController *_inAppController;
}

@property(retain, nonatomic) ICMFullScreenInAppViewController *inAppController; // @synthesize inAppController=_inAppController;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) _Bool isInApp; // @synthesize isInApp=_isInApp;
@property(nonatomic) __weak id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak ICMConversationPart *conversationPart; // @synthesize conversationPart=_conversationPart;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
- (void).cxx_destruct;
- (void)openPressed;
- (void)closePressed;
- (id)fakeComposerInactiveTextColor;
- (id)footerSeparatorColor;
- (id)headerSeparatorColor;
- (long long)preferredStatusBarStyle;
- (void)animateIn;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (CDStruct_0088c729)inAppAttributes;
- (void)loadView;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2 isInApp:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMWebHelpCenterScriptHandler : NSObject
{
    id <ICMWebHelpCenterScriptHandlerDelegate> _delegate;
}

@property(nonatomic) __weak id <ICMWebHelpCenterScriptHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)configureUserContentController:(id)arg1;
- (id)initWithUserContentController:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMFullScreenInAppViewController : UIViewController <ITBBlockListViewControllerDelegate, ICMInAppHeaderDelegate, ITBIntentOpenerDelegate, ICMReactionsViewControllerDelegate>
{
    _Bool _isInApp;
    ICMInAppHeaderViewController *_headerController;
    IntercomSDK_ITBBlockListViewController *_blockListViewController;
    ICMFakeComposerView *_fakeComposerView;
    ICMReactionsViewController *_reactionsController;
    ICMConversation *_conversation;
    ICMConversationPart *_conversationPart;
    id <ICMInAppsDelegate> _inAppsDelegate;
    id <ICMFullScreenInAppDelegate> _fullScreenDelegate;
    CDStruct_0088c729 _attributes;
}

@property(nonatomic) CDStruct_0088c729 attributes; // @synthesize attributes=_attributes;
@property(nonatomic) _Bool isInApp; // @synthesize isInApp=_isInApp;
@property(nonatomic) __weak id <ICMFullScreenInAppDelegate> fullScreenDelegate; // @synthesize fullScreenDelegate=_fullScreenDelegate;
@property(nonatomic) __weak id <ICMInAppsDelegate> inAppsDelegate; // @synthesize inAppsDelegate=_inAppsDelegate;
@property(nonatomic) __weak ICMConversationPart *conversationPart; // @synthesize conversationPart=_conversationPart;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) ICMReactionsViewController *reactionsController; // @synthesize reactionsController=_reactionsController;
@property(retain, nonatomic) ICMFakeComposerView *fakeComposerView; // @synthesize fakeComposerView=_fakeComposerView;
@property(retain, nonatomic) IntercomSDK_ITBBlockListViewController *blockListViewController; // @synthesize blockListViewController=_blockListViewController;
@property(retain, nonatomic) ICMInAppHeaderViewController *headerController; // @synthesize headerController=_headerController;
- (void).cxx_destruct;
- (void)reactionsViewController:(id)arg1 reactedWithOption:(id)arg2;
- (void)icm_addSheetViewedMetric:(id)arg1;
- (void)icm_addSheetClosedMetric:(id)arg1;
- (void)icm_messengerSheetDidCloseAndTriggerReload;
- (void)icm_messengerSheetDidClose;
- (void)handleIntent:(id)arg1 forBlock:(id)arg2 fromView:(id)arg3;
- (void)openPressed;
- (void)closePressed;
- (void)clipBlocksList;
- (void)showReactions;
- (void)scrollViewDidScroll:(id)arg1;
- (void)setupScrollView:(id)arg1;
- (void)didCalculateBlocksSize:(struct CGSize)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (double)headerCloseButtonRightPadding;
- (void)addFooterView;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithConversation:(id)arg1 inAppDelegate:(id)arg2 fullScreenDelegate:(id)arg3 isInApp:(_Bool)arg4 attributes:(CDStruct_0088c729)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMTeammateProfileView : ICMBaseProfileView
{
    UITextView *_collapsedSummaryTextView;
    ICMAvatarView *_avatarView1;
    ICMAvatarView *_avatarView2;
    ICMAvatarView *_avatarView3;
    ICMProfileSocialAccountsView *_socialAccountsView;
    UILabel *_expandedAdminLabel;
    UILabel *_expandedLastActiveLabel;
    ICMParticipatingAdmin *_admin;
    UIView *_conversationParticipantsBanner;
    UILabel *_participantsLabel;
    UIView *_partcipantAvatarsHolder;
    NSTimer *_timeUpdateTimer;
    NSDictionary *_adminNameAttributes;
    NSMutableParagraphStyle *_truncatingParagraphStyle;
    ICMTeammateDetailsView *_detailsView;
    ICMConversation *_conversation;
    NSArray *_groupParticipantIds;
}

@property(retain, nonatomic) NSArray *groupParticipantIds; // @synthesize groupParticipantIds=_groupParticipantIds;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) ICMTeammateDetailsView *detailsView; // @synthesize detailsView=_detailsView;
@property(retain, nonatomic) NSMutableParagraphStyle *truncatingParagraphStyle; // @synthesize truncatingParagraphStyle=_truncatingParagraphStyle;
@property(retain, nonatomic) NSDictionary *adminNameAttributes; // @synthesize adminNameAttributes=_adminNameAttributes;
@property(nonatomic) __weak NSTimer *timeUpdateTimer; // @synthesize timeUpdateTimer=_timeUpdateTimer;
@property(retain, nonatomic) UIView *partcipantAvatarsHolder; // @synthesize partcipantAvatarsHolder=_partcipantAvatarsHolder;
@property(retain, nonatomic) UILabel *participantsLabel; // @synthesize participantsLabel=_participantsLabel;
@property(retain, nonatomic) UIView *conversationParticipantsBanner; // @synthesize conversationParticipantsBanner=_conversationParticipantsBanner;
@property(retain, nonatomic) ICMParticipatingAdmin *admin; // @synthesize admin=_admin;
@property(retain, nonatomic) UILabel *expandedLastActiveLabel; // @synthesize expandedLastActiveLabel=_expandedLastActiveLabel;
@property(retain, nonatomic) UILabel *expandedAdminLabel; // @synthesize expandedAdminLabel=_expandedAdminLabel;
@property(retain, nonatomic) ICMProfileSocialAccountsView *socialAccountsView; // @synthesize socialAccountsView=_socialAccountsView;
@property(retain, nonatomic) ICMAvatarView *avatarView3; // @synthesize avatarView3=_avatarView3;
@property(retain, nonatomic) ICMAvatarView *avatarView2; // @synthesize avatarView2=_avatarView2;
@property(retain, nonatomic) ICMAvatarView *avatarView1; // @synthesize avatarView1=_avatarView1;
@property(retain, nonatomic) UITextView *collapsedSummaryTextView; // @synthesize collapsedSummaryTextView=_collapsedSummaryTextView;
- (void).cxx_destruct;
- (struct CGSize)uncachedSizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviewsForPercentExpanded:(double)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)willMoveToSuperview:(id)arg1;
- (void)invalidateTimer;
- (void)updateTimeLabel;
- (void)configureAdminsForConversation:(id)arg1;
- (void)updateWithConversation:(id)arg1;
- (void)updateGroupParticipants:(id)arg1;
- (void)dealloc;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2;

@end

@interface ICMHostAppState : NSObject
{
    _Bool _shouldAutorotate;
    _Bool _prefersStatusBarHidden;
    unsigned long long _supportedInterfaceOrientations;
    long long _preferredStatusBarStyle;
}

+ (_Bool)isUsingViewControllerBasedStatusBarAppearance;
+ (_Bool)statusBarHiddenFromViewController:(id)arg1;
+ (long long)statusBarStyleFromViewController:(id)arg1;
+ (id)topViewControllerWithRootViewController:(id)arg1;
@property(readonly, nonatomic) _Bool prefersStatusBarHidden; // @synthesize prefersStatusBarHidden=_prefersStatusBarHidden;
@property(readonly, nonatomic) long long preferredStatusBarStyle; // @synthesize preferredStatusBarStyle=_preferredStatusBarStyle;
@property(readonly, nonatomic) _Bool shouldAutorotate; // @synthesize shouldAutorotate=_shouldAutorotate;
@property(readonly, nonatomic) unsigned long long supportedInterfaceOrientations; // @synthesize supportedInterfaceOrientations=_supportedInterfaceOrientations;
- (unsigned long long)hash;
- (_Bool)isEqualToHostAppState:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithViewController:(id)arg1;

@end

@interface ICMComposerTextView : UITextView <IIMResponder>
{
    _Bool _wantsFirstResponder;
    UIView *_inputViewController;
}

@property(nonatomic) _Bool wantsFirstResponder; // @synthesize wantsFirstResponder=_wantsFirstResponder;
@property(retain, nonatomic) UIView *inputViewController; // @synthesize inputViewController=_inputViewController;
- (void).cxx_destruct;
- (_Bool)resignFirstResponder;
- (_Bool)becomeFirstResponder;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMComposerView : UIView <IIMComposer>
{
    id <IIMComposerDelegate> _composerDelegate;
    UIButton *_actionButton;
    ICMComposerTextView *_inputTextView;
    UIButton *_imageUploadButton;
    double _initialHeight;
    NSString *_conversationId;
    NSString *_initialMessage;
    UILabel *_placeholderLabel;
    double _maxTextViewHeight;
    id <ICMComposerDelegate> _delegate;
    NSArray *_sizeConstraints;
    UIButton *_sendButton;
    id <ICMComposerPersistManager> _persistManager;
    UIColor *_inactiveTextColor;
    double _horizontalPadding;
}

@property(nonatomic) double horizontalPadding; // @synthesize horizontalPadding=_horizontalPadding;
@property(retain, nonatomic) UIColor *inactiveTextColor; // @synthesize inactiveTextColor=_inactiveTextColor;
@property(retain, nonatomic) id <ICMComposerPersistManager> persistManager; // @synthesize persistManager=_persistManager;
@property(retain, nonatomic) UIButton *sendButton; // @synthesize sendButton=_sendButton;
@property(retain, nonatomic) NSArray *sizeConstraints; // @synthesize sizeConstraints=_sizeConstraints;
@property(nonatomic) __weak id <ICMComposerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) double maxTextViewHeight; // @synthesize maxTextViewHeight=_maxTextViewHeight;
@property(retain, nonatomic) UILabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(copy, nonatomic) NSString *initialMessage; // @synthesize initialMessage=_initialMessage;
@property(copy, nonatomic) NSString *conversationId; // @synthesize conversationId=_conversationId;
@property(nonatomic) double initialHeight; // @synthesize initialHeight=_initialHeight;
@property(readonly, nonatomic) UIButton *imageUploadButton; // @synthesize imageUploadButton=_imageUploadButton;
@property(retain, nonatomic) ICMComposerTextView *inputTextView; // @synthesize inputTextView=_inputTextView;
@property(retain, nonatomic) UIButton *actionButton; // @synthesize actionButton=_actionButton;
@property(nonatomic) __weak id <IIMComposerDelegate> composerDelegate; // @synthesize composerDelegate=_composerDelegate;
- (void).cxx_destruct;
- (id)textView;
- (void)selectedInputChanged:(id)arg1;
- (void)constrainToHeight:(double)arg1;
- (void)invalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)scheduleScrollToVisibleCaretWithDelay:(double)arg1;
- (void)scrollToVisibleCaretAnimated;
- (void)updatePlaceholderAndSendButton:(id)arg1;
- (void)textViewDidChange:(id)arg1;
- (void)resetAfterSendingMessage;
- (void)setSendButtonEnabled:(_Bool)arg1;
- (void)saveComposerText;
- (void)updateComposerWithSavedText;
- (void)createConstraints;
- (void)createSendButton;
- (void)configureTextView:(id)arg1;
- (void)createPlaceholder:(_Bool)arg1;
- (void)createComposerInputTextView;
- (id)initWithInitialHeight:(double)arg1 isReply:(_Bool)arg2 conversationId:(id)arg3 delegate:(id)arg4 persistManager:(id)arg5 inactiveTextColor:(id)arg6 horizontalPadding:(double)arg7 initialMessage:(id)arg8;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMNexusUtils : NSObject
{
}

+ (id)createNexusEventWithType:(unsigned long long)arg1 conversationId:(id)arg2;

@end

@interface ICMBubbleReusableView : IntercomSDK_IntercomConversationReusableView
{
    UIView *_bubbleRect;
}

@property(retain, nonatomic) UIView *bubbleRect; // @synthesize bubbleRect=_bubbleRect;
- (void).cxx_destruct;
- (void)updateShadowPathOnLayer:(id)arg1;
- (void)layoutSubviews;
- (void)setBubbleColor:(id)arg1 showBorder:(_Bool)arg2;
- (double)calculateCornerRadius;
- (void)applyBubbleShadow;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMLinkCardBlockAppearance : ICMBlockAppearance
{
    double avatarRadius;
}

+ (id)sharedInstance;
- (void)setAvatarRadius:(double)arg1;
- (double)avatarRadius;
- (id)linkWrittenByAttributedStringForName:(id)arg1;
- (id)init;

@end

@interface ICMErrorStatus : NSObject
{
}

+ (_Bool)isMissingUserIdentity:(id)arg1;
+ (_Bool)isMissingAppIdentity:(id)arg1;
+ (_Bool)wasCancelled:(id)arg1;
+ (_Bool)isRetryable:(id)arg1;

@end

@interface ICMColor : NSObject
{
}

+ (id)colorConvertedToRGBA:(id)arg1;
+ (id)colorForFadeBetweenFirstColor:(id)arg1 secondColor:(id)arg2 atRatio:(double)arg3;
+ (id)defaultColor;
+ (id)colorWithR:(int)arg1 g:(int)arg2 b:(int)arg3 alpha:(double)arg4;
+ (id)colorWithR:(int)arg1 g:(int)arg2 b:(int)arg3;
+ (id)colorWithHexString:(id)arg1;
+ (id)awayColour;
+ (id)activeColour;
+ (id)intercomBlue;
+ (id)silver;
+ (id)coolGreyTwo;
+ (id)coolGrey;
+ (id)charcoalGrey;
+ (id)dark;
+ (id)ghostWhite;
+ (id)composerSeparatorColor;
+ (id)conversationAccessoryViewTextColor;
+ (id)intercomLinkColor;
+ (id)launcherImageColor;
+ (id)bubbleTextColorUser;
+ (id)bubbleFillColorUser;
+ (id)helpCenterTextColor;
+ (id)helpCenterThemeColor;
+ (id)secondaryColorVariant;
+ (id)secondaryTextColor;
+ (id)darkSecondaryColor;
+ (id)secondaryColor;
+ (id)whiteOrDarkForPrimaryColor;
+ (id)primaryOrDarkColor;
+ (id)primaryColorVariant;
+ (id)primaryTextColor;
+ (id)darkPrimaryColor;
+ (id)primaryColor;

@end

@interface ICMEventData : ICMSafeNetworkModel
{
    NSString *_eventAsPlainText;
    ICMEventParticipant *_participant;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) ICMEventParticipant *participant; // @synthesize participant=_participant;
@property(copy, nonatomic) NSString *eventAsPlainText; // @synthesize eventAsPlainText=_eventAsPlainText;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMAdminBlockAppearance : ICMBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMHTTPBridge : NSObject
{
}

+ (void)quickReplyToConversation:(id)arg1 withPartId:(id)arg2 withOptionUUID:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
+ (void)fetchHomescreenWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (void)submitMessengerSheet:(id)arg1 uri:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)fetchMessengerSheetData:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)logBackgroundDisabledError;
+ (id)makeSendableBlocks:(id)arg1 withPublicURL:(id)arg2 upload:(id)arg3;
+ (void)showFirstRequestAlert;
+ (void)handleRealtimeConfig:(id)arg1;
+ (void)handleUnreadConversations:(id)arg1;
+ (void)handleUserIdentity:(id)arg1;
+ (void)handleBaseResponse:(id)arg1;
+ (void)createUploadWithUpload:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)operatorConditionSatisfied:(id)arg1 conversationId:(id)arg2;
+ (void)submitMetrics;
+ (void)loadGIFs:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)reactToArticle:(id)arg1 reactionIndex:(unsigned long long)arg2 allowAutoResponses:(_Bool)arg3;
+ (void)article:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)addConversationRatingRemarkForConversation:(id)arg1 remark:(id)arg2;
+ (void)rateConversation:(id)arg1 withRatingIndex:(unsigned long long)arg2;
+ (void)conversationDetail:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)replyToConversation:(id)arg1 withBlocks:(id)arg2 upload:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
+ (void)reactToConversation:(id)arg1 reactionIndex:(unsigned long long)arg2 fromInApp:(_Bool)arg3;
+ (void)markConversationAsDismissed:(id)arg1;
+ (void)markConversationAsRead:(id)arg1;
+ (void)createConversationWithBlocks:(id)arg1 upload:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)getConversationsBefore:(id)arg1 pageSize:(long long)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)getUnreadConversations;
+ (void)deleteDeviceToken:(id)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (_Bool)shouldSubmitDeviceToken:(id)arg1 userIdentity:(id)arg2;
+ (void)registerDeviceToken:(id)arg1;
+ (void)logEventWithName:(id)arg1 metadata:(id)arg2 sentFromBackground:(_Bool)arg3;
+ (void)updateUser:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface ICMHomescreenFlowLayout : UICollectionViewFlowLayout
{
}

- (_Bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect)arg1;

@end

@interface ICMHomescreenViewController : ICMBaseViewController <UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, ICMConversationCardViewControllerDelegate, ICPAppComponentDelegate, ICMMessengerSheetViewControllerDelegate, ICMIntercomLinkDelegate, ICMHomescreenAppsErrorCellDelegate, ICMErrorDelegate>
{
    _Bool _logoImageReady;
    _Bool _wallpaperImageReady;
    UICollectionView *_collectionView;
    ICMConversationCardViewController *_conversationCardViewController;
    ICMHomescreen *_homescreen;
    ICMHomescreenHeaderView *_headerView;
    ICMHomescreenFlowLayout *_flowLayout;
    NSCache *_messengerAppsCache;
    ICMNavigationBarCloseButton *_closeButton;
    ICMLoadingView *_loadingView;
    unsigned long long _state;
    double _bottomPadding;
    ICMHomescreenErrorView *_errorView;
    ICMHomeScreenFooterView *_footerView;
}

+ (id)fetchCachedCardHeightForURL:(id)arg1;
@property(retain, nonatomic) ICMHomeScreenFooterView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) ICMHomescreenErrorView *errorView; // @synthesize errorView=_errorView;
@property(nonatomic) double bottomPadding; // @synthesize bottomPadding=_bottomPadding;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) _Bool wallpaperImageReady; // @synthesize wallpaperImageReady=_wallpaperImageReady;
@property(nonatomic) _Bool logoImageReady; // @synthesize logoImageReady=_logoImageReady;
@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) ICMNavigationBarCloseButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) NSCache *messengerAppsCache; // @synthesize messengerAppsCache=_messengerAppsCache;
@property(retain, nonatomic) ICMHomescreenFlowLayout *flowLayout; // @synthesize flowLayout=_flowLayout;
@property(retain, nonatomic) ICMHomescreenHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) ICMHomescreen *homescreen; // @synthesize homescreen=_homescreen;
@property(retain, nonatomic) ICMConversationCardViewController *conversationCardViewController; // @synthesize conversationCardViewController=_conversationCardViewController;
@property(retain, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)addSheetViewedMetric:(id)arg1;
- (void)addSheetClosedMetric:(id)arg1;
- (void)reloadHomescreenApps;
- (void)messengerSheetDidCloseAndTriggerReload:(id)arg1;
- (void)messengerSheetDidClose:(id)arg1;
- (void)reloadRequiredForComponent:(id)arg1;
- (void)component:(id)arg1 openURL:(id)arg2;
- (void)component:(id)arg1 openSheetWithURL:(id)arg2 sheetParams:(id)arg3;
- (void)component:(id)arg1 logMetricEvent:(id)arg2;
- (void)component:(id)arg1 handleTextInput:(id)arg2;
- (void)reloadConversationCardView;
- (void)navigateToViewController:(id)arg1;
- (void)updateCloseButtonBlurForContentOffset:(struct CGPoint)arg1;
- (void)updateHeaderViewForContentOffset:(struct CGPoint)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)fetchCardFallbackViewFromCache:(id)arg1;
- (void)storeCardFallbackView:(id)arg1 inCacheWithKey:(id)arg2;
- (void)updateFallbackViewCacheWithSize:(struct CGSize)arg1;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (double)widthForCard:(double)arg1;
- (id)createFallbackViewForCard:(id)arg1 size:(struct CGSize)arg2;
- (id)loadMessengerAppCardAtIndexPath:(id)arg1;
- (id)loadErrorCellAtIndexPath:(id)arg1;
- (id)loadConversationCardAtIndexPath:(id)arg1;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (_Bool)shouldShowHomeScreenErrorCell;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (_Bool)isConversationCardVisible;
- (_Bool)shouldShowConversationCardCell:(id)arg1;
- (long long)conversationCardCount;
- (id)solutionValueForIntercomLink;
- (id)contentValueForIntercomLink;
- (void)createFooterView;
- (void)configureFooterView;
- (void)updateInsetsIfNeeded;
- (void)createHeaderView;
- (void)insertConversationCardViewControllerIfNeeded;
- (void)addConversationCardViewController;
- (void)configureCollectionView;
- (void)loadHomescreen;
- (void)didSelectRetryButton;
- (void)createErrorView;
- (void)createLoadingView;
- (void)configureNavBar;
- (void)viewDidLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)animateViewsAppearing;
- (void)animateViewsDisappearing;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)setupViews;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMAvatarView : UIView
{
    double _diameter;
    UIColor *_borderColor;
    double _borderWidth;
    ICMTeammatePresenceView *_teammatePresenceView;
    CAShapeLayer *_borderLayer;
    CAShapeLayer *_maskLayer;
    IntercomSDK_ITBAnimatedImageView *_avatarImageView;
}

@property(retain, nonatomic) IntercomSDK_ITBAnimatedImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(retain, nonatomic) CAShapeLayer *maskLayer; // @synthesize maskLayer=_maskLayer;
@property(retain, nonatomic) CAShapeLayer *borderLayer; // @synthesize borderLayer=_borderLayer;
@property(retain, nonatomic) ICMTeammatePresenceView *teammatePresenceView; // @synthesize teammatePresenceView=_teammatePresenceView;
@property(nonatomic) double borderWidth; // @synthesize borderWidth=_borderWidth;
@property(retain, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(readonly, nonatomic) double diameter; // @synthesize diameter=_diameter;
- (void).cxx_destruct;
- (void)positionActiveStateOnBottomRight;
- (void)layoutSubviews;
- (id)firstInitialOfName:(id)arg1;
- (void)cancelImageLoad;
- (void)loadAvatarWithURLString:(id)arg1 userName:(id)arg2;
- (void)updatePathOnLayer:(id)arg1;
- (void)applyBorder;
- (void)setTeamPresenceBorderColor:(id)arg1;
- (void)hideUserPresenceView;
- (void)createMaskLayer;
- (void)createAvatarImageView;
- (void)createTeammatePresenceView;
- (id)initWithDiameter:(double)arg1 showTeammatePresence:(_Bool)arg2;
- (id)init;

@end

@interface ICMQuickReplyView : IntercomSDK_IntercomConversationCustomCell
{
    id <ICMQuickReplyViewDelegate> _delegate;
    NSLayoutConstraint *_buttonRightConstraint;
    ICMConversationPart *_conversationPart;
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
+ (id)createQuickReplyButton:(id)arg1;
@property(retain, nonatomic) ICMConversationPart *conversationPart; // @synthesize conversationPart=_conversationPart;
@property(retain, nonatomic) NSLayoutConstraint *buttonRightConstraint; // @synthesize buttonRightConstraint=_buttonRightConstraint;
@property(nonatomic) __weak id <ICMQuickReplyViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)quickReplyTapped:(id)arg1;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (void)prepareForReuse;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMLoadingView : UIView
{
    UIImageView *_spinnerImageView;
}

@property(retain, nonatomic) UIImageView *spinnerImageView; // @synthesize spinnerImageView=_spinnerImageView;
- (void).cxx_destruct;
- (void)stopSpinning;
- (void)startSpinning;
- (void)layoutSubviews;
- (id)init;

@end

@interface ICMAutoLayout : NSObject
{
}

+ (id)view:(id)arg1 commonSuperviewWithView:(id)arg2;
+ (id)pinView:(id)arg1 edges:(unsigned long long)arg2 toSameEdgesOfView:(id)arg3 inset:(double)arg4;
+ (id)pinView:(id)arg1 edges:(unsigned long long)arg2 toSameEdgesOfView:(id)arg3;
+ (id)pinView:(id)arg1 attribute:(long long)arg2 toAttribute:(long long)arg3 ofItem:(id)arg4 withConstant:(double)arg5 relation:(long long)arg6;
+ (id)pinView:(id)arg1 attribute:(long long)arg2 toAttribute:(long long)arg3 ofItem:(id)arg4 withConstant:(double)arg5;
+ (id)pinView:(id)arg1 attribute:(long long)arg2 toAttribute:(long long)arg3 ofItem:(id)arg4;
+ (id)constrainView:(id)arg1 toHeight:(double)arg2;
+ (id)constrainView:(id)arg1 toWidth:(double)arg2;
+ (id)constrainView:(id)arg1 toSize:(struct CGSize)arg2;
+ (id)centerView:(id)arg1 inContainerOnAxis:(long long)arg2 withConstant:(double)arg3;
+ (id)centerView:(id)arg1 inContainerOnAxis:(long long)arg2;

@end

@interface ICMConversationCardView : UIView
{
    _Bool _hasOldUnreadConversations;
    _Bool _hasInboundConversations;
    UITableView *_tableView;
    unsigned long long _state;
    UILabel *_titleLabel;
    UILabel *_responseTimeLabel;
    ICMConversationCardAvatarView *_avatarView;
    ICMStartConversationButton *_startConversationButton;
    ICMViewPreviousConversationsButton *_viewPreviousConversationsButton;
    id <ICMConversationCardViewDelegate> _delegate;
    ICMLoadingView *_loadingView;
    double _cellRowHeight;
    NSLayoutConstraint *_titleLabelWidthConstraint;
    NSLayoutConstraint *_tableViewHeightConstraint;
    NSLayoutConstraint *_viewPreviousButtonHorizontalConstraint;
    NSLayoutConstraint *_viewPreviousButtonWidthConstraint;
    NSLayoutConstraint *_viewPreviousButtonVerticalConstraint;
    NSLayoutConstraint *_startConversationButtonHorizontalConstraint;
    NSLayoutConstraint *_startConversationButtonVerticalConstraint;
    NSLayoutConstraint *_startConversationButtonWidthConstraint;
    NSLayoutConstraint *_avatarViewWidthConstraint;
}

@property(nonatomic) _Bool hasInboundConversations; // @synthesize hasInboundConversations=_hasInboundConversations;
@property(retain, nonatomic) NSLayoutConstraint *avatarViewWidthConstraint; // @synthesize avatarViewWidthConstraint=_avatarViewWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *startConversationButtonWidthConstraint; // @synthesize startConversationButtonWidthConstraint=_startConversationButtonWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *startConversationButtonVerticalConstraint; // @synthesize startConversationButtonVerticalConstraint=_startConversationButtonVerticalConstraint;
@property(retain, nonatomic) NSLayoutConstraint *startConversationButtonHorizontalConstraint; // @synthesize startConversationButtonHorizontalConstraint=_startConversationButtonHorizontalConstraint;
@property(retain, nonatomic) NSLayoutConstraint *viewPreviousButtonVerticalConstraint; // @synthesize viewPreviousButtonVerticalConstraint=_viewPreviousButtonVerticalConstraint;
@property(retain, nonatomic) NSLayoutConstraint *viewPreviousButtonWidthConstraint; // @synthesize viewPreviousButtonWidthConstraint=_viewPreviousButtonWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *viewPreviousButtonHorizontalConstraint; // @synthesize viewPreviousButtonHorizontalConstraint=_viewPreviousButtonHorizontalConstraint;
@property(retain, nonatomic) NSLayoutConstraint *tableViewHeightConstraint; // @synthesize tableViewHeightConstraint=_tableViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *titleLabelWidthConstraint; // @synthesize titleLabelWidthConstraint=_titleLabelWidthConstraint;
@property(nonatomic) double cellRowHeight; // @synthesize cellRowHeight=_cellRowHeight;
@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(nonatomic) __weak id <ICMConversationCardViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMViewPreviousConversationsButton *viewPreviousConversationsButton; // @synthesize viewPreviousConversationsButton=_viewPreviousConversationsButton;
@property(retain, nonatomic) ICMStartConversationButton *startConversationButton; // @synthesize startConversationButton=_startConversationButton;
@property(retain, nonatomic) ICMConversationCardAvatarView *avatarView; // @synthesize avatarView=_avatarView;
@property(retain, nonatomic) UILabel *responseTimeLabel; // @synthesize responseTimeLabel=_responseTimeLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) _Bool hasOldUnreadConversations; // @synthesize hasOldUnreadConversations=_hasOldUnreadConversations;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void).cxx_destruct;
- (void)viewPreviousConversations;
- (void)startNewConversation;
- (_Bool)shouldDisplayPreviousConversationButtonInline;
- (struct CGSize)sizeThatFitsStartConversationButtonInWidth:(double)arg1;
- (_Bool)shouldDisplayNewConversationButtonInline;
- (void)setPreviousConversationTitle:(id)arg1;
- (void)setTitleLabelWithString:(id)arg1;
- (void)configureViewWithoutRecentConversations;
- (void)configureViewWithPreviousConversations;
- (void)configureViewWithRecentConversationsAndPreviousConversations;
- (void)configureViewWithRecentConversations;
- (void)configureViewWithoutTableView;
- (void)configureViewWithTableView;
- (void)configureStartConversationButtonWithAvatars;
- (void)configureViewForFailureState;
- (void)configureForLoadingState;
- (void)resetSubviews;
- (double)heightOfTableViewContent;
- (struct CGSize)intrinsicContentSize;
- (void)reloadConversationCard;
- (void)layoutAvatarView;
- (void)layoutSubviews;
- (void)configureViewPreviousConversationsButton;
- (void)configureAvatarView;
- (void)configureLoadingView;
- (void)configureStartConversationButtonWidth;
- (void)configureStartConversationButton;
- (void)configureTitleViews;
- (void)configureTableView;
- (id)initWithDelegate:(id)arg1 cellRowHeight:(double)arg2;

@end

@interface ICMConversationsResponse : ICMSafeNetworkModel
{
    ICMConversationPageResponse *_conversationPage;
    ICMUserIdentity *_user;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) ICMUserIdentity *user; // @synthesize user=_user;
@property(retain, nonatomic) ICMConversationPageResponse *conversationPage; // @synthesize conversationPage=_conversationPage;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToResponse:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMInboxInfoView : UIView
{
    ICMErrorView *_errorView;
    ICMGradientView *_gradientView;
}

@property(retain, nonatomic) ICMGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
- (void).cxx_destruct;
- (void)setAlphaAnimated:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)createConstraints;
- (void)createGhostItemAtIndex:(int)arg1;
- (id)initWithTitle:(id)arg1 message:(id)arg2 showRetryButton:(_Bool)arg3 delegate:(id)arg4;

@end

@interface ICMPhotoPlaceholderView : IntercomSDK_IIMPhotosPlaceholderView
{
    UIView *emtpyResultsView;
    UIView *permissionsView;
}

- (void)setPermissionsView:(id)arg1;
- (void)setEmtpyResultsView:(id)arg1;
- (void).cxx_destruct;
- (id)permissionsView;
- (id)emtpyResultsView;
- (id)init;

@end

@interface ICMMetric : NSObject <NSCoding>
{
    NSMutableSet *_metricEvents;
    NSMutableSet *_opsMetricEvents;
}

+ (id)archivePath;
+ (void)saveMetrics:(id)arg1;
+ (id)metricsFromDisk;
+ (id)currentMetrics;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableSet *opsMetricEvents; // @synthesize opsMetricEvents=_opsMetricEvents;
@property(retain, nonatomic) NSMutableSet *metricEvents; // @synthesize metricEvents=_metricEvents;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToMetric:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)clearEvents:(id)arg1 opsEvents:(id)arg2;
- (void)clearAllEvents;
- (id)opsEvents;
- (id)events;
- (void)addOpsEvent:(id)arg1;
- (void)addEvent:(id)arg1;
- (void)save;

@end

@interface ICMUserUpdateRequest : NSObject
{
    _Bool _newSession;
    _Bool _internalUpdate;
    _Bool _sentFromBackgroundAppState;
    NSDictionary *_attributes;
    unsigned long long _batchSize;
}

+ (_Bool)userAttributes:(id)arg1 willOverwriteAttributes:(id)arg2;
+ (id)addUserAttributes:(id)arg1 toAttributes:(id)arg2;
@property(nonatomic) _Bool sentFromBackgroundAppState; // @synthesize sentFromBackgroundAppState=_sentFromBackgroundAppState;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(retain, nonatomic) NSDictionary *attributes; // @synthesize attributes=_attributes;
@property(nonatomic, getter=isInternalUpdate) _Bool internalUpdate; // @synthesize internalUpdate=_internalUpdate;
@property(nonatomic) _Bool newSession; // @synthesize newSession=_newSession;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToUpdate:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (double)maxDelay;
- (_Bool)isEmptyUpdate;
- (_Bool)canBeUpdatedWithUpdate:(id)arg1;
- (void)updateWithUserUpdate:(id)arg1;
- (id)initWithAttributes:(id)arg1 batchSize:(unsigned long long)arg2 sentFromBackgroundAppState:(_Bool)arg3;
- (id)initWithAttributes:(id)arg1 sentFromBackgroundAppState:(_Bool)arg2;
- (id)initWithNewSession:(_Bool)arg1 internalUpdate:(_Bool)arg2 sentFromBackgroundAppState:(_Bool)arg3;
- (id)init;

@end

@interface ICMTimestampCalculator : NSObject
{
    NSDateFormatter *_absoluteTimeTextFormatter;
    NSDateFormatter *_dayTextFormatter;
    NSDateFormatter *_timeZoneTextFormatter;
}

+ (id)currentDate;
+ (id)sharedInstance;
@property(retain, nonatomic) NSDateFormatter *timeZoneTextFormatter; // @synthesize timeZoneTextFormatter=_timeZoneTextFormatter;
@property(retain, nonatomic) NSDateFormatter *dayTextFormatter; // @synthesize dayTextFormatter=_dayTextFormatter;
@property(retain, nonatomic) NSDateFormatter *absoluteTimeTextFormatter; // @synthesize absoluteTimeTextFormatter=_absoluteTimeTextFormatter;
- (void).cxx_destruct;
- (id)timestampTextForDate:(id)arg1 timeZone:(id)arg2;
- (id)absoluteTimeTextForPart:(id)arg1;
- (id)dayTextForPart:(id)arg1;
- (id)appendSeenStateToTimestampText:(id)arg1 forPart:(id)arg2;
- (_Bool)part:(id)arg1 isFromDifferentDayAsPart:(id)arg2;
- (id)timeComponentsSinceDate:(id)arg1;
- (double)secondsUntilTimestampExpiresForDate:(id)arg1;
- (id)lastActiveMinutesAgo:(id)arg1;
- (id)textForLastActiveDate:(id)arg1;
- (id)timestampTextForDate:(id)arg1 recentTimeMessage:(unsigned long long)arg2 translationBlock:(CDUnknownBlockType)arg3;
- (id)timestampTextForUpdatedDate:(id)arg1;
- (id)timestampTextForDate:(id)arg1 recentTimeMessage:(unsigned long long)arg2;
- (id)init;

@end

@interface ICMHTTPClient : NSObject
{
}

+ (void)quickReplyToConversation:(id)arg1 withPartId:(id)arg2 withOptionUUID:(id)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
+ (void)fetchHomescreenWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
+ (void)submitMessengerSheet:(id)arg1 uri:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
+ (void)fetchMessengerSheetData:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
+ (void)setDeviceTokenSubmitted:(_Bool)arg1;
+ (_Bool)bailIfMissingIdentityWhenTryingTo:(id)arg1 withFailureBlock:(CDUnknownBlockType)arg2;
+ (void)failWithErrorMessage:(id)arg1 recoverySuggestion:(id)arg2 errorCode:(long long)arg3 underlyingError:(id)arg4 failureBlock:(CDUnknownBlockType)arg5;
+ (void)failWithNetworkError:(id)arg1 whenTryingTo:(id)arg2 failureBlock:(CDUnknownBlockType)arg3;
+ (void)operatorConditionSatisfied:(id)arg1 converstionId:(id)arg2 error:(CDUnknownBlockType)arg3;
+ (void)trackURL:(id)arg1;
+ (void)uploadFile:(id)arg1 response:(id)arg2 success:(CDUnknownBlockType)arg3 progress:(CDUnknownBlockType)arg4 failure:(CDUnknownBlockType)arg5;
+ (void)createUploadWithUpload:(id)arg1 success:(CDUnknownBlockType)arg2 progress:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)submitMetrics:(id)arg1 opsMetrics:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)loadGIFs:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)reactToArticle:(id)arg1 withReactionIndex:(unsigned long long)arg2 allowAutoResponses:(_Bool)arg3;
+ (void)article:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)addConversationRatingRemarkForConversation:(id)arg1 remark:(id)arg2;
+ (void)rateConversation:(id)arg1 withRatingIndex:(unsigned long long)arg2;
+ (void)conversationDetail:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)reactToConversation:(id)arg1 withReactionIndex:(unsigned long long)arg2;
+ (void)replyToConversation:(id)arg1 withBlocks:(id)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)createConversationWithBlocks:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)conversationsBefore:(id)arg1 pageSize:(long long)arg2 success:(CDUnknownBlockType)arg3 error:(CDUnknownBlockType)arg4;
+ (void)unreadConversations:(long long)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)markConversationAsDismissed:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)markConversationAsRead:(id)arg1 success:(CDUnknownBlockType)arg2 error:(CDUnknownBlockType)arg3;
+ (void)logEventWithName:(id)arg1 metadata:(id)arg2 sentFromBackground:(_Bool)arg3 success:(CDUnknownBlockType)arg4 error:(CDUnknownBlockType)arg5;
+ (void)deleteDeviceToken:(id)arg1 forUserIdentity:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)submitDeviceToken;
+ (void)updateUserWithUserAttributes:(id)arg1 newSession:(_Bool)arg2 batchSize:(unsigned long long)arg3 sentFromBackground:(_Bool)arg4 success:(CDUnknownBlockType)arg5 error:(CDUnknownBlockType)arg6;

@end

@interface ICMConversationRatedIntent : NSObject <ITBIntent>
{
    NSNumber *_intentConversationRatingIndex;
    long long _intentType;
}

@property(nonatomic) long long intentType; // @synthesize intentType=_intentType;
@property(retain, nonatomic) NSNumber *intentConversationRatingIndex; // @synthesize intentConversationRatingIndex=_intentConversationRatingIndex;
- (void).cxx_destruct;
- (id)initWithRatingIndex:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMNavigationController : UINavigationController
{
    ICMNavigationBarCloseButton *_closeButton;
    ICMHostAppState *_hostAppState;
    ICMAppWallpaperView *_wallpaperView;
    NSLayoutConstraint *_wallpaperHeightConstraint;
    id <ICMCloseMessengerDelegate> _closeMessengerDelegate;
}

@property(retain, nonatomic) id <ICMCloseMessengerDelegate> closeMessengerDelegate; // @synthesize closeMessengerDelegate=_closeMessengerDelegate;
@property(retain, nonatomic) NSLayoutConstraint *wallpaperHeightConstraint; // @synthesize wallpaperHeightConstraint=_wallpaperHeightConstraint;
@property(retain, nonatomic) ICMAppWallpaperView *wallpaperView; // @synthesize wallpaperView=_wallpaperView;
@property(retain, nonatomic) ICMHostAppState *hostAppState; // @synthesize hostAppState=_hostAppState;
@property(retain, nonatomic) ICMNavigationBarCloseButton *closeButton; // @synthesize closeButton=_closeButton;
- (void).cxx_destruct;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)backButtonTapped;
- (void)addBackButton;
- (void)displayCloseButton;
- (void)closeMessenger;
- (void)createCloseButton;
- (void)setWallpaperHeight:(double)arg1;
- (void)createWallpaperView;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithHostAppState:(id)arg1 closeMessengerDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMParticipatingAdmin : ICMParticipant
{
    _Bool _isActive;
    NSDate *_lastActive;
    NSString *_intro;
    NSString *_jobTitle;
    NSString *_locationString;
    NSNumber *_timezoneOffset;
    NSArray *_socialAccounts;
}

@property(retain, nonatomic) NSArray *socialAccounts; // @synthesize socialAccounts=_socialAccounts;
@property(copy, nonatomic) NSNumber *timezoneOffset; // @synthesize timezoneOffset=_timezoneOffset;
@property(copy, nonatomic) NSString *locationString; // @synthesize locationString=_locationString;
@property(copy, nonatomic) NSString *jobTitle; // @synthesize jobTitle=_jobTitle;
@property(copy, nonatomic) NSString *intro; // @synthesize intro=_intro;
@property(nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(copy, nonatomic) NSDate *lastActive; // @synthesize lastActive=_lastActive;
- (void).cxx_destruct;
- (_Bool)isEqualToParticipant:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;

@end

@interface ICMReplyOption : ICMSafeNetworkModel
{
    NSString *_replyText;
    NSString *_uuid;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(retain, nonatomic) NSString *replyText; // @synthesize replyText=_replyText;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToReplyOption:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMUserInteractionClientCondition : NSObject <ICMClientConditionProtocol>
{
    NSString *_conditionId;
    NSString *_conversationId;
    NSString *_transitionId;
    NSTimer *_conditionMatchTimer;
    id <ICMClientConditionDelegate> _delegate;
    ICMOperatorState *_conversationState;
}

@property(retain, nonatomic) ICMOperatorState *conversationState; // @synthesize conversationState=_conversationState;
@property(retain, nonatomic) id <ICMClientConditionDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak NSTimer *conditionMatchTimer; // @synthesize conditionMatchTimer=_conditionMatchTimer;
@property(retain, nonatomic) NSString *transitionId; // @synthesize transitionId=_transitionId;
@property(retain, nonatomic) NSString *conversationId; // @synthesize conversationId=_conversationId;
@property(retain, nonatomic) NSString *conditionId; // @synthesize conditionId=_conditionId;
- (void).cxx_destruct;
- (void)dealloc;
@property(readonly) unsigned long long hash;
- (_Bool)isEqualToUserInteractionClientCondition:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)conditionSatisfied:(id)arg1;
- (void)notifyConditionsSatisfiedAfterTimeInterval:(double)arg1;
- (void)userInteractedWithComposer:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)startConditionSatisfiedTimer;
- (id)initWithConditionId:(id)arg1 transitionId:(id)arg2 conversationId:(id)arg3 delegate:(id)arg4 conversationState:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface ICMSnippetView : UIView
{
    ICMConversation *_conversation;
    ICMAvatarView *_avatarView;
    UILabel *_nameLabel;
    UILabel *_messageLabel;
}

@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
- (void).cxx_destruct;
- (void)layoutSubviewsForOneLineSummary;
- (void)layoutSubviewsForTwoLineSummary;
- (void)layoutSubviews;
- (void)pulseForNewMessageWithParticipantText:(id)arg1;
- (id)initWithConversation:(id)arg1;

@end

@interface ICMBridge : NSObject
{
}

+ (void)dispatchOnMainQueueIfAppInactive:(CDUnknownBlockType)arg1;
+ (void)setCordovaVersion:(id)arg1;
+ (void)enableLogging;
+ (void)deleteDeviceTokenIfPushNotificationsDisabled;
+ (void)handleIntercomPushNotification:(id)arg1;
+ (_Bool)isIntercomPushNotification:(id)arg1;
+ (void)registerDeviceToken:(id)arg1;
+ (void)logEventWithName:(id)arg1 metaData:(id)arg2;
+ (void)updateUserWithAttributes:(id)arg1;
+ (void)clearNonIdentityData;
+ (void)logout;
+ (void)registerIdentifiedUserWithProperties:(id)arg1;
+ (void)registerUnidentifiedUser;
+ (void)setInAppBottomPadding:(double)arg1;
+ (void)presentHelpCenter;
+ (unsigned long long)unreadConversationCount;
+ (void)hideMessenger;
+ (void)setLauncherVisible:(_Bool)arg1;
+ (void)setInAppMessagesVisible:(_Bool)arg1;
+ (void)presentConversationList;
+ (void)presentMessageComposer:(id)arg1;
+ (void)presentMessenger;
+ (void)setSecureOptions:(id)arg1;
+ (void)setApiKey:(id)arg1 appId:(id)arg2;
+ (void)setNeedsStatusBarAppearanceUpdate;
+ (_Bool)appIsBackgrounded;
+ (void)registerUser;
+ (void)ping;
+ (void)prepareForNotifications;
+ (void)initialize;
+ (void)load;

@end

@interface ICMDataManager : NSObject <IntercomNexusObserverProtocol>
{
    _Bool _morePagesAvailable;
    _Bool _shouldGetUnreadConversationsOnActive;
    NSMutableArray *_conversations;
    NSString *_conversationToMark;
    ICMUnreadManager *_unreadManager;
    ICMConversation *_lastViewedConversation;
    NSTimer *_presenceTimer;
}

+ (id)sharedManager;
@property(nonatomic) _Bool shouldGetUnreadConversationsOnActive; // @synthesize shouldGetUnreadConversationsOnActive=_shouldGetUnreadConversationsOnActive;
@property(retain, nonatomic) NSTimer *presenceTimer; // @synthesize presenceTimer=_presenceTimer;
@property(nonatomic) _Bool morePagesAvailable; // @synthesize morePagesAvailable=_morePagesAvailable;
@property(retain, nonatomic) ICMConversation *lastViewedConversation; // @synthesize lastViewedConversation=_lastViewedConversation;
@property(retain, nonatomic) ICMUnreadManager *unreadManager; // @synthesize unreadManager=_unreadManager;
@property(retain, nonatomic) NSString *conversationToMark; // @synthesize conversationToMark=_conversationToMark;
@property(readonly, nonatomic) NSMutableArray *conversations; // @synthesize conversations=_conversations;
- (void).cxx_destruct;
- (void)eventOccurred:(id)arg1;
- (void)triggerPoll;
- (void)updateInbox;
- (void)getUnreadConversations;
- (id)findExistingConversationWithId:(id)arg1;
- (id)getPreviousConversations;
- (id)getRecentConversations;
- (void)getUnreadConversationsIfNeeded;
- (void)updateWithConversation:(id)arg1;
- (void)updateConversationsWithSuccess:(CDUnknownBlockType)arg1 failure:(CDUnknownBlockType)arg2;
- (void)updateConversationsBefore:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;
- (void)clearConversations;
- (void)triggerPresence;
- (void)resetPresenceTimer;
- (void)resignActive;
- (void)becomeActive;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMSocialAccount : ICMSafeNetworkModel
{
    long long _type;
    NSURL *_url;
}

+ (long long)accountTypeForString:(id)arg1;
+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)buttonIcon;

@end

@interface ICMChatHeadContentViewFull : UIView <ICMChatHeadContentView>
{
    NSArray *_blocksViewArray;
    NSArray *_blocks;
    struct CGSize _blockContentSize;
}

@property(nonatomic) struct CGSize blockContentSize; // @synthesize blockContentSize=_blockContentSize;
@property(retain, nonatomic) NSArray *blocks; // @synthesize blocks=_blocks;
@property(retain, nonatomic) NSArray *blocksViewArray; // @synthesize blocksViewArray=_blocksViewArray;
- (void).cxx_destruct;
- (struct CGSize)contentSize;
- (void)layoutSubviews;
- (void)addContent:(id)arg1;
- (id)init;

@end

@interface ICMTranslationManager : NSObject
{
}

+ (id)stringsBundle;
+ (id)supportedLocales;
+ (id)translationForKey:(id)arg1;
+ (id)translationForKey:(id)arg1 params:(id)arg2;

@end

@interface ICMLoadingViewController : ICMBaseViewController
{
    ICMLoadingView *_spinner;
}

@property(retain, nonatomic) ICMLoadingView *spinner; // @synthesize spinner=_spinner;
- (void).cxx_destruct;
- (void)hideLoadingSpinner;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;

@end

@interface ICMIdentityStore : NSObject
{
    ICMDeviceTokenData *_deviceTokenData;
    ICMAppIdentity *_appIdentity;
    ICMUserIdentity *_userIdentity;
    ICMUserIdentity *_previousUserIdentity;
    NSString *_previousUserIdentityDeviceToken;
}

+ (id)hexTokenFromDeviceToken:(id)arg1;
+ (id)backupArchivePath;
+ (id)archivePath;
+ (_Bool)saveIdentityStore:(id)arg1;
+ (id)identityFromDisk;
+ (id)currentIdentity;
@property(retain, nonatomic) NSString *previousUserIdentityDeviceToken; // @synthesize previousUserIdentityDeviceToken=_previousUserIdentityDeviceToken;
@property(retain, nonatomic) ICMUserIdentity *previousUserIdentity; // @synthesize previousUserIdentity=_previousUserIdentity;
@property(retain, nonatomic) ICMUserIdentity *userIdentity; // @synthesize userIdentity=_userIdentity;
@property(retain, nonatomic) ICMAppIdentity *appIdentity; // @synthesize appIdentity=_appIdentity;
@property(retain, nonatomic) ICMDeviceTokenData *deviceTokenData; // @synthesize deviceTokenData=_deviceTokenData;
- (void).cxx_destruct;
- (void)createDeviceTokenDataIfNoneExists:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (void)updateSecureOptions:(id)arg1;
- (void)clearPreviousIdentity;
- (void)clearPreviousIdentityWithDelay:(double)arg1;
- (void)resetUserIdentity;
- (_Bool)registerIdentifiedUserWithProperties:(id)arg1;
- (_Bool)registerUnidentifiedUser;
- (_Bool)setDeviceTokenData:(id)arg1 environment:(unsigned long long)arg2;
- (_Bool)isEqual:(id)arg1;
- (_Bool)saveToDisk;
- (void)dealloc;
- (id)init;

@end

@interface ICMInAppsViewController : UIViewController <ICMInAppsDelegate, ICMInAppUpdateProtocol>
{
    NSArray *_conversations;
    ICMHostAppState *_hostAppState;
    id <ICMInAppsDelegate> _delegate;
    UIViewController<ICMInAppUpdateProtocol><ICMInAppsAnimationProtocol> *_snippetsInAppViewController;
    UIViewController<ICMFullScreenInAppProtocol> *_fullScreenInAppViewController;
}

+ (id)inAppMetricInfoForConversation:(id)arg1;
+ (void)prepareConversationsForLayout:(id)arg1 completion:(CDUnknownBlockType)arg2;
@property(retain, nonatomic) UIViewController<ICMFullScreenInAppProtocol> *fullScreenInAppViewController; // @synthesize fullScreenInAppViewController=_fullScreenInAppViewController;
@property(retain, nonatomic) UIViewController<ICMInAppUpdateProtocol><ICMInAppsAnimationProtocol> *snippetsInAppViewController; // @synthesize snippetsInAppViewController=_snippetsInAppViewController;
@property(nonatomic) __weak id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMHostAppState *hostAppState; // @synthesize hostAppState=_hostAppState;
@property(retain, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
- (void).cxx_destruct;
- (void)hideLauncherWithAnimation;
- (void)conversationMarkedAsRead:(id)arg1;
- (unsigned long long)state;
- (void)launcherTapped;
- (void)showInbox;
- (void)hideInApp:(id)arg1;
- (void)dismissConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)presentConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)conversationShown:(id)arg1 asFull:(_Bool)arg2;
- (void)addViewedEventForConversation:(id)arg1 asFull:(_Bool)arg2;
- (void)addReceivedEventForConversation:(id)arg1 asFull:(_Bool)arg2;
- (void)bottomPaddingUpdated;
- (void)viewWillLayoutSubviews;
- (void)updateFullScreenInApp:(id)arg1 fromSnippet:(_Bool)arg2;
- (void)updateSnippetsInApp:(id)arg1;
- (void)setConversations:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isShowingLauncherOrInApp;
- (void)updateLauncherVisibility;
- (long long)preferredStatusBarStyle;
- (void)tearDown;
- (void)tearDownInApps;
- (_Bool)shouldHandleTouchOnView:(id)arg1;
- (id)initWithConversations:(id)arg1 delegate:(id)arg2 hostAppState:(id)arg3;
- (id)fullScreenViewControllerForConversations:(id)arg1;
- (id)snippetsViewControllerForConversations:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMOreoErrorResponse : NSObject
{
    NSString *_type;
    NSString *_message;
    NSError *_error;
    ICMOreoShutdownState *_oreoShutdownState;
}

+ (id)errorWithErrorMesssage:(id)arg1 networkError:(id)arg2;
+ (id)instanceFromDictionary:(id)arg1 networkError:(id)arg2;
@property(readonly, nonatomic) ICMOreoShutdownState *oreoShutdownState; // @synthesize oreoShutdownState=_oreoShutdownState;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, copy, nonatomic) NSString *message; // @synthesize message=_message;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(id)arg1 messsage:(id)arg2 networkError:(id)arg3 shutdownState:(id)arg4;

@end

@interface ICMSnippetPillView : UIView
{
    long long _count;
    UILabel *_textLabel;
}

@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
@property(nonatomic) long long count; // @synthesize count=_count;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface ICMFeedbackGenerator : NSObject
{
}

+ (void)generateSelectionFeedback;
+ (void)generateNotificationFeedbackWithType:(long long)arg1;
+ (void)feedbackWithType:(unsigned long long)arg1;

@end

@interface ICMUserUpdateDeduper : NSObject <NSCoding>
{
    _Bool _hasUnsavedChanges;
    NSDictionary *_previouslyUpdatedAttributes;
    double _previouslyUpdatedAttributesStartTime;
}

+ (id)archivePath;
+ (void)saveDeduper:(id)arg1;
+ (id)deduperFromDisk;
+ (id)loadFromDisk;
@property(nonatomic) _Bool hasUnsavedChanges; // @synthesize hasUnsavedChanges=_hasUnsavedChanges;
@property(nonatomic) double previouslyUpdatedAttributesStartTime; // @synthesize previouslyUpdatedAttributesStartTime=_previouslyUpdatedAttributesStartTime;
@property(retain, nonatomic) NSDictionary *previouslyUpdatedAttributes; // @synthesize previouslyUpdatedAttributes=_previouslyUpdatedAttributes;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToDeduper:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)setPreviouslyUpdatedAttributes:(id)arg1 previouslyUpdatedAttributesStartTime:(double)arg2;
- (double)currentTimestamp;
- (void)reset;
- (_Bool)isDuplicateUserUpdate:(id)arg1;
- (void)saveIfNeeded;
- (id)init;

@end

@interface ICMIntercomLinkView : UIView
{
    _Bool _enableViewAsHitTarget;
    UILabel *_intercomLinkLabel;
    UIImageView *_intercomImageView;
    id <ICMIntercomLinkDelegate> _delegate;
}

+ (_Bool)requiresConstraintBasedLayout;
@property(nonatomic) __weak id <ICMIntercomLinkDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIImageView *intercomImageView; // @synthesize intercomImageView=_intercomImageView;
@property(retain, nonatomic) UILabel *intercomLinkLabel; // @synthesize intercomLinkLabel=_intercomLinkLabel;
@property(nonatomic) _Bool enableViewAsHitTarget; // @synthesize enableViewAsHitTarget=_enableViewAsHitTarget;
- (void).cxx_destruct;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)shouldHandleHitTestForPoint:(struct CGPoint)arg1;
- (id)generateIntercomLinkURL;
- (void)intercomLinkTapped;
- (id)initWithDelegate:(id)arg1 contentInsets:(struct UIEdgeInsets)arg2;

@end

@interface ICMInputButton : UIButton
{
}

- (id)selectedAndHighlighedImage:(unsigned long long)arg1;
- (id)defaultImage:(unsigned long long)arg1;
- (id)initWithInputType:(unsigned long long)arg1;

@end

@interface ICMSeparatorView : UIView
{
}

+ (_Bool)requiresConstraintBasedLayout;
- (unsigned long long)adjacentEdgesWithEdge:(unsigned long long)arg1;
- (void)pinToEdge:(unsigned long long)arg1 ofView:(id)arg2;
- (id)initWithColor:(id)arg1;

@end

@interface ICMProfileNavigationBarView : UIView <ICMProfileSizeDelegate>
{
    _Bool _expanded;
    ICMTeamProfileView *_teamProfile;
    ICMTeammateProfileView *_teammateProfile;
    UIView *_profileContainer;
    id <ICMProfileViewDelegate> _delegate;
}

@property(nonatomic) __weak id <ICMProfileViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIView *profileContainer; // @synthesize profileContainer=_profileContainer;
@property(retain, nonatomic) ICMTeammateProfileView *teammateProfile; // @synthesize teammateProfile=_teammateProfile;
@property(retain, nonatomic) ICMTeamProfileView *teamProfile; // @synthesize teamProfile=_teamProfile;
@property(nonatomic) _Bool expanded; // @synthesize expanded=_expanded;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (double)navigationBarHeight;
- (double)marginForExpandedProfileView;
- (double)maximumHeightForProfileView;
- (double)minimumHeightForProfileView;
- (void)updateSize;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)updateUnreadCount;
- (id)metricObjectString;
- (void)updateWithConversation:(id)arg1;
- (void)dealloc;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMAppEnvironmentChecker : NSObject
{
}

+ (_Bool)isAppStoreReceiptSandbox;
+ (unsigned long long)environmentFromEmbeddedMobileProvision;
+ (_Bool)hasEmbeddedMobileProvision;
+ (_Bool)isRunningOnSimulator;
+ (unsigned long long)findCurrentAppEnvironment;
+ (id)stringForDeviceTokenEnvironment:(unsigned long long)arg1;
+ (id)stringForAppEnvironment:(unsigned long long)arg1;
+ (_Bool)isDevelopmentEnvironment:(unsigned long long)arg1;
+ (unsigned long long)appEnvironment;

@end

@interface ICMSheet : ICMSafeNetworkModel
{
    NSDictionary *_requestBody;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSDictionary *requestBody; // @synthesize requestBody=_requestBody;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToSheet:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMConfig : ICMSafeNetworkModel <NSCoding>
{
    _Bool _inboundMessages;
    _Bool _attachmentsEnabled;
    _Bool _gifsEnabled;
    _Bool _showIntercomLink;
    _Bool _audioEnabled;
    _Bool _metricsEnabled;
    _Bool _backgroundRequestsEnabled;
    _Bool _shouldDisplayDarkPrimaryColor;
    _Bool _shouldDisplayDarkSecondaryColor;
    _Bool _shouldDisplayDarkHelpCenterColor;
    _Bool _identityVerificationEnabled;
    _Bool _isPersistedToDisk;
    NSString *_primaryColorString;
    NSString *_secondaryColorString;
    NSString *_appName;
    NSString *_teamIntro;
    NSString *_messengerBackgroundImageUrlString;
    NSString *_messengerLogoUrlString;
    NSString *_teamGreeting;
    unsigned long long _homescreenCardCount;
    double _userUpdateDupCacheMaxAge;
    double _newSessionThreshold;
    double _batchUserUpdatePeriod;
    double _softResetTimeout;
    double _pingDelay;
    double _rateLimitPeriod;
    unsigned long long _rateLimit;
    NSString *_helpCenterUrlString;
    NSString *_helpCenterBaseColorString;
    NSLocale *_intercomLocale;
    NSSet *_features;
}

+ (id)archivePath;
+ (void)deleteSharedConfig;
+ (void)saveConfig:(id)arg1;
+ (id)configFromDisk;
+ (id)sharedConfig;
+ (void)updateSharedInstanceFromDictionary:(id)arg1;
+ (id)instanceFromDictionary:(id)arg1;
@property(nonatomic) _Bool isPersistedToDisk; // @synthesize isPersistedToDisk=_isPersistedToDisk;
@property(retain, nonatomic) NSSet *features; // @synthesize features=_features;
@property(retain, nonatomic) NSLocale *intercomLocale; // @synthesize intercomLocale=_intercomLocale;
@property(copy, nonatomic) NSString *helpCenterBaseColorString; // @synthesize helpCenterBaseColorString=_helpCenterBaseColorString;
@property(copy, nonatomic) NSString *helpCenterUrlString; // @synthesize helpCenterUrlString=_helpCenterUrlString;
@property(nonatomic) unsigned long long rateLimit; // @synthesize rateLimit=_rateLimit;
@property(nonatomic) double rateLimitPeriod; // @synthesize rateLimitPeriod=_rateLimitPeriod;
@property(nonatomic) double pingDelay; // @synthesize pingDelay=_pingDelay;
@property(nonatomic) double softResetTimeout; // @synthesize softResetTimeout=_softResetTimeout;
@property(nonatomic) double batchUserUpdatePeriod; // @synthesize batchUserUpdatePeriod=_batchUserUpdatePeriod;
@property(nonatomic) double newSessionThreshold; // @synthesize newSessionThreshold=_newSessionThreshold;
@property(nonatomic) double userUpdateDupCacheMaxAge; // @synthesize userUpdateDupCacheMaxAge=_userUpdateDupCacheMaxAge;
@property(nonatomic) _Bool identityVerificationEnabled; // @synthesize identityVerificationEnabled=_identityVerificationEnabled;
@property(nonatomic) _Bool shouldDisplayDarkHelpCenterColor; // @synthesize shouldDisplayDarkHelpCenterColor=_shouldDisplayDarkHelpCenterColor;
@property(nonatomic) _Bool shouldDisplayDarkSecondaryColor; // @synthesize shouldDisplayDarkSecondaryColor=_shouldDisplayDarkSecondaryColor;
@property(nonatomic) _Bool shouldDisplayDarkPrimaryColor; // @synthesize shouldDisplayDarkPrimaryColor=_shouldDisplayDarkPrimaryColor;
@property(nonatomic) _Bool backgroundRequestsEnabled; // @synthesize backgroundRequestsEnabled=_backgroundRequestsEnabled;
@property(nonatomic) _Bool metricsEnabled; // @synthesize metricsEnabled=_metricsEnabled;
@property(nonatomic) _Bool audioEnabled; // @synthesize audioEnabled=_audioEnabled;
@property(nonatomic) _Bool showIntercomLink; // @synthesize showIntercomLink=_showIntercomLink;
@property(nonatomic) _Bool gifsEnabled; // @synthesize gifsEnabled=_gifsEnabled;
@property(nonatomic) _Bool attachmentsEnabled; // @synthesize attachmentsEnabled=_attachmentsEnabled;
@property(nonatomic) _Bool inboundMessages; // @synthesize inboundMessages=_inboundMessages;
@property(nonatomic) unsigned long long homescreenCardCount; // @synthesize homescreenCardCount=_homescreenCardCount;
@property(copy, nonatomic) NSString *teamGreeting; // @synthesize teamGreeting=_teamGreeting;
@property(copy, nonatomic) NSString *messengerLogoUrlString; // @synthesize messengerLogoUrlString=_messengerLogoUrlString;
@property(copy, nonatomic) NSString *messengerBackgroundImageUrlString; // @synthesize messengerBackgroundImageUrlString=_messengerBackgroundImageUrlString;
@property(copy, nonatomic) NSString *teamIntro; // @synthesize teamIntro=_teamIntro;
@property(copy, nonatomic) NSString *appName; // @synthesize appName=_appName;
@property(copy, nonatomic) NSString *secondaryColorString; // @synthesize secondaryColorString=_secondaryColorString;
@property(copy, nonatomic) NSString *primaryColorString; // @synthesize primaryColorString=_primaryColorString;
- (void).cxx_destruct;
- (_Bool)hasFeature:(id)arg1;
- (_Bool)receivedFromServer;
- (void)save;
- (void)saveIfNeeded;
- (unsigned long long)hash;
- (_Bool)isEqualToConfig:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)messengerLogoImage;
- (void)loadLogoImage;
- (id)messengerBackgroundImage;
- (void)loadBackgroundImage;
- (id)helpCenterBaseColor;
- (id)secondaryColor;
- (id)primaryColor;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;

@end

@interface ICMTeammateDetailsView : UIView
{
    ICMParticipatingAdmin *_admin;
    UILabel *_introLabel;
    UILabel *_roleLabel;
    UILabel *_timeLabel;
    UIImageView *_timeImageView;
    UIImageView *_roleImageView;
    UIImageView *_introImageView;
}

@property(retain, nonatomic) UIImageView *introImageView; // @synthesize introImageView=_introImageView;
@property(retain, nonatomic) UIImageView *roleImageView; // @synthesize roleImageView=_roleImageView;
@property(retain, nonatomic) UIImageView *timeImageView; // @synthesize timeImageView=_timeImageView;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
@property(retain, nonatomic) UILabel *roleLabel; // @synthesize roleLabel=_roleLabel;
@property(retain, nonatomic) UILabel *introLabel; // @synthesize introLabel=_introLabel;
@property(retain, nonatomic) ICMParticipatingAdmin *admin; // @synthesize admin=_admin;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)updateTimeLabel;
- (void)configureTimeLabel;
- (void)configureIntroLabel;
- (void)configureRoleLabel;
- (void)configureWithAdmin:(id)arg1;
- (id)init;

@end

@interface ICMHomeScreenCardCell : UICollectionViewCell
{
    UIView *_cardContentView;
    UIView *_cardView;
    NSLayoutConstraint *_cardViewTopConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *cardViewTopConstraint; // @synthesize cardViewTopConstraint=_cardViewTopConstraint;
@property(retain, nonatomic) UIView *cardView; // @synthesize cardView=_cardView;
@property(retain, nonatomic) UIView *cardContentView; // @synthesize cardContentView=_cardContentView;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)createTopBorder;
- (void)createCardView;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMLauncherBadgeView : UIView
{
    long long _badge;
    UILabel *_badgeLabel;
}

@property(retain, nonatomic) UILabel *badgeLabel; // @synthesize badgeLabel=_badgeLabel;
@property(nonatomic) long long badge; // @synthesize badge=_badge;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)init;

@end

@interface ICMWebHelpCenterAction : NSObject
{
    NSString *_type;
    NSDictionary *_value;
}

@property(readonly, nonatomic) NSDictionary *value; // @synthesize value=_value;
@property(readonly, copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)initWithType:(id)arg1 value:(id)arg2;

@end

@interface ICMRootViewController : UIViewController <ICMHelpCenterViewControllerDelegate, ICMCloseMessengerDelegate, ICMInAppsDelegate, ICMWindowProvider>
{
    _Bool _canPresent;
    _Bool _tearingDown;
    _Bool _shouldAnimate;
    _Bool _isPresentingVC;
    _Bool _helpCenterPresented;
    id <ICMRootViewControllerDelegate> _delegate;
    ICMHostAppState *_hostAppState;
    UIViewController *_controllerToPresent;
    CDUnknownBlockType _postPresentationBlock;
    ICMMessengerTransitioningDelegate *_messengerTransitionDelegate;
    ICMInAppsViewController *_inAppsVC;
    UIWindow *_hostAppWindow;
}

+ (id)findHostAppWindow;
+ (void)hideKeyboard;
@property(nonatomic) __weak UIWindow *hostAppWindow; // @synthesize hostAppWindow=_hostAppWindow;
@property(nonatomic) _Bool helpCenterPresented; // @synthesize helpCenterPresented=_helpCenterPresented;
@property(nonatomic) _Bool isPresentingVC; // @synthesize isPresentingVC=_isPresentingVC;
@property(retain, nonatomic) ICMInAppsViewController *inAppsVC; // @synthesize inAppsVC=_inAppsVC;
@property(retain, nonatomic) ICMMessengerTransitioningDelegate *messengerTransitionDelegate; // @synthesize messengerTransitionDelegate=_messengerTransitionDelegate;
@property(copy, nonatomic) CDUnknownBlockType postPresentationBlock; // @synthesize postPresentationBlock=_postPresentationBlock;
@property(nonatomic) _Bool shouldAnimate; // @synthesize shouldAnimate=_shouldAnimate;
@property(retain, nonatomic) UIViewController *controllerToPresent; // @synthesize controllerToPresent=_controllerToPresent;
@property(nonatomic) _Bool tearingDown; // @synthesize tearingDown=_tearingDown;
@property(nonatomic) _Bool canPresent; // @synthesize canPresent=_canPresent;
@property(retain, nonatomic) ICMHostAppState *hostAppState; // @synthesize hostAppState=_hostAppState;
@property(nonatomic) __weak id <ICMRootViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)closeHelpCenterTapped;
- (void)bottomPaddingUpdated;
- (void)conversationMarkedAsRead:(id)arg1;
- (void)addLauncherOpenedMetricForObject:(id)arg1 isCustomLauncher:(_Bool)arg2;
- (void)updateHostAppState;
- (id)hostAppStateFromWindow:(id)arg1;
- (id)helpCenterWindow;
- (id)intercomWindow;
- (void)didHideInApps;
- (void)didHideFullScreenInApp;
- (void)didShowFullScreenInApp;
- (_Bool)shouldShowLauncher;
- (_Bool)isMessengerOpen;
- (void)launcherTapped;
- (void)showInbox;
- (void)hideInApp:(id)arg1;
- (void)dismissConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)presentConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)helpCenterDismissCompletion;
- (void)helpCenterDismiss;
- (void)messengerDidClose;
- (void)closeMessenger;
- (void)presentErrorViewController:(id)arg1;
- (_Bool)errorViewIsDisplayedWithType:(unsigned long long)arg1;
- (void)updateUnreadConversations:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentMessageComposerWithInitialMessage:(id)arg1;
- (void)presentConversation:(id)arg1 withInitialMessage:(id)arg2;
- (void)presentConversation:(id)arg1;
- (void)presentInbox;
- (void)presentHomescreen;
- (_Bool)shouldShowNewConversationScreen;
- (void)presentMessengerWithViewControllers:(id)arg1;
- (void)presentMessengerFromCustomLauncher:(_Bool)arg1;
- (void)presentMessenger;
- (void)logIdentifyError;
- (_Bool)isHelpCenterPresented;
- (void)presentHelpCenter;
- (void)tearDown;
- (void)hideHelpCenterWindowIfNeeded;
- (void)hideIntercomWindowIfNeeded;
- (void)updateLauncherVisibility;
- (void)tearDownInApps;
- (_Bool)isShowingMessenger;
- (_Bool)shouldHandleTouchOnView:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)animateStatusBarChange;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMSnippetsViewController : UIViewController <ICMSnippetActionDelegate, ICMInAppUpdateProtocol, ICMInAppsAnimationProtocol>
{
    id <ICMInAppsDelegate> _delegate;
    ICMSnippetStackView *_stackView;
    ICMSnippetPillView *_pillView;
}

@property(retain, nonatomic) ICMSnippetPillView *pillView; // @synthesize pillView=_pillView;
@property(retain, nonatomic) ICMSnippetStackView *stackView; // @synthesize stackView=_stackView;
@property(nonatomic) id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)conversationMarkedAsRead:(id)arg1;
- (void)animateOutWithCompletion:(CDUnknownBlockType)arg1;
- (void)hideSnippets;
- (void)snippetDismissedForConversation:(id)arg1 remainingCount:(unsigned long long)arg2;
- (void)snippetTappedForConversation:(id)arg1;
- (void)frontSnippetChanged:(id)arg1;
- (void)setPillCount:(long long)arg1;
- (void)updatePillCount;
- (void)pillTapped;
- (struct CGRect)snippetStackFrame;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
@property(retain, nonatomic) NSArray *conversations;
- (id)initWithConversations:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMHomeScreenFooterView : UIView
{
    ICMIntercomLinkView *_linkView;
}

@property(retain, nonatomic) ICMIntercomLinkView *linkView; // @synthesize linkView=_linkView;
- (void).cxx_destruct;
- (void)configureShadow;
- (void)createLinkViewWithHeight:(double)arg1 delegate:(id)arg2;
- (id)initWithLinkHeight:(double)arg1 delegate:(id)arg2;

@end

@interface ICMArticleContentViewController : UIViewController <ITBIntentOpenerDelegate, ICMReactionsViewControllerDelegate, ITBBlockListViewControllerDelegate, ICMErrorDelegate>
{
    id <ICMArticleContentViewControllerDelegate> _delegate;
    NSString *_articleId;
    ICMArticle *_article;
    ICMLoadingView *_loadingView;
    UIButton *_closeButton;
    IntercomSDK_ITBBlockView *_cardView;
    UIView *_titleView;
    UILabel *_titleLabel;
    IntercomSDK_ITBBlockListViewController *_blockListViewController;
    ICMReactionsViewController *_reactionsViewController;
    UIView *_separatorView;
    NSLayoutConstraint *_cardHeightConstraint;
    NSLayoutConstraint *_cardTopConstraint;
    UILabel *_reactionsLabel;
    ICMErrorView *_errorView;
}

@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) UILabel *reactionsLabel; // @synthesize reactionsLabel=_reactionsLabel;
@property(retain, nonatomic) NSLayoutConstraint *cardTopConstraint; // @synthesize cardTopConstraint=_cardTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *cardHeightConstraint; // @synthesize cardHeightConstraint=_cardHeightConstraint;
@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) ICMReactionsViewController *reactionsViewController; // @synthesize reactionsViewController=_reactionsViewController;
@property(retain, nonatomic) IntercomSDK_ITBBlockListViewController *blockListViewController; // @synthesize blockListViewController=_blockListViewController;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) IntercomSDK_ITBBlockView *cardView; // @synthesize cardView=_cardView;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) ICMArticle *article; // @synthesize article=_article;
@property(readonly, copy, nonatomic) NSString *articleId; // @synthesize articleId=_articleId;
@property(nonatomic) __weak id <ICMArticleContentViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)scrollViewDidScroll:(id)arg1;
- (void)reactionsViewController:(id)arg1 reactedWithOption:(id)arg2;
- (void)handleIntent:(id)arg1 forBlock:(id)arg2 fromView:(id)arg3;
- (void)didSelectRetryButton;
- (void)hideErrorView;
- (void)showErrorView;
- (void)createErrorView;
- (id)createReactionsLabel:(id)arg1;
- (void)setupArticle:(id)arg1;
- (void)closePressed;
- (struct CGSize)cardSize;
- (void)updateCardHeightConstraint;
- (void)loadArticle;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithArticleId:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMAvatar : ICMSafeNetworkModel
{
    NSString *_imageUrl;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(readonly, copy, nonatomic) NSString *imageUrl; // @synthesize imageUrl=_imageUrl;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToAvatar:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)chatHeadURL;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMOpsMetricEvent : NSObject <NSCoding>
{
    NSString *_type;
    NSString *_name;
    NSNumber *_value;
}

+ (_Bool)isNonNullNumber:(id)arg1;
+ (_Bool)isNonEmptyString:(id)arg1;
+ (id)eventWithType:(id)arg1 name:(id)arg2 value:(id)arg3;
@property(copy, nonatomic) NSNumber *value; // @synthesize value=_value;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToMetricEvent:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)eventDictionary;
- (id)eventWithType:(id)arg1 name:(id)arg2 value:(id)arg3;

@end

@interface ICMChatHeadPreviewView : UIView
{
    double _maxHeight;
    UILabel *_titleLabel;
    UIImageView *_maskImageView;
    UIView *_bubbleView;
    UIView<ICMChatHeadContentView> *_chatHeadContentView;
    ICMGradientView *_gradientView;
}

+ (double)previewTopPadding;
@property(retain, nonatomic) ICMGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIView<ICMChatHeadContentView> *chatHeadContentView; // @synthesize chatHeadContentView=_chatHeadContentView;
@property(retain, nonatomic) UIView *bubbleView; // @synthesize bubbleView=_bubbleView;
@property(retain, nonatomic) UIImageView *maskImageView; // @synthesize maskImageView=_maskImageView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) double maxHeight; // @synthesize maxHeight=_maxHeight;
- (void).cxx_destruct;
- (void)updatePreviewContentWithLatestConversationPart:(id)arg1 titleText:(id)arg2;
- (void)sizeToFit;
- (void)layoutSubviews;
- (void)layoutGradient;
- (void)layoutContentView;
- (void)layoutLabels;
- (void)setPreviewContentAlpha:(double)arg1;
- (void)setTitleAlpha:(double)arg1;
@property(retain, nonatomic) NSString *titleText;
- (void)createGradientView;
- (void)determineChatContent:(long long)arg1;
- (id)initWithTitle:(id)arg1 conversationPart:(id)arg2;

@end

@interface ICMRoundedButton : UIButton
{
    _Bool _tappedAnimationCompleted;
    UIColor *_normalStateBackgroundColour;
}

@property(nonatomic) _Bool tappedAnimationCompleted; // @synthesize tappedAnimationCompleted=_tappedAnimationCompleted;
@property(retain, nonatomic) UIColor *normalStateBackgroundColour; // @synthesize normalStateBackgroundColour=_normalStateBackgroundColour;
- (void).cxx_destruct;
- (void)buttonTapped;
- (void)configureCornerRadius;
- (void)configureTappedAppearance;
- (void)resetAppearanceWithAnimation;
- (void)setHighlighted:(_Bool)arg1;
- (void)layoutSubviews;
- (id)initWithTitle:(id)arg1 tintColor:(id)arg2 titleHighlightedColor:(id)arg3;

@end

@interface ICMConversationRatingOption : NSObject
{
    NSNumber *_index;
    NSString *_emoji;
    NSString *_unicode;
    NSString *_imageUrl;
}

@property(readonly, copy, nonatomic) NSString *imageUrl; // @synthesize imageUrl=_imageUrl;
@property(readonly, copy, nonatomic) NSString *unicode; // @synthesize unicode=_unicode;
@property(readonly, copy, nonatomic) NSString *emoji; // @synthesize emoji=_emoji;
@property(readonly, nonatomic) NSNumber *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (id)initWithIndex:(id)arg1 emoji:(id)arg2 unicode:(id)arg3;

@end

@interface ICMMetricEvent : NSObject <NSCoding>
{
    unsigned long long _eventType;
    NSString *_uuid;
    NSNumber *_createdAt;
    NSDictionary *_metaData;
}

+ (id)UUID;
+ (double)currentTimestamp;
+ (_Bool)isNonEmptyString:(id)arg1;
+ (id)eventWithAction:(id)arg1 object:(id)arg2 place:(id)arg3 context:(id)arg4 additionalInfo:(id)arg5;
+ (id)eventWithAction:(id)arg1 object:(id)arg2 place:(id)arg3 context:(id)arg4;
@property(retain, nonatomic) NSDictionary *metaData; // @synthesize metaData=_metaData;
@property(retain, nonatomic) NSNumber *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *uuid; // @synthesize uuid=_uuid;
@property(nonatomic) unsigned long long eventType; // @synthesize eventType=_eventType;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToMetricEvent:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)eventDictionary;
- (id)initWithAction:(id)arg1 object:(id)arg2 place:(id)arg3 context:(id)arg4 metaData:(id)arg5;

@end

@interface ICMAppIdentity : NSObject <NSCoding>
{
    NSString *_appId;
    NSString *_apiKey;
    ICMOreoEngine *_engine;
}

@property(retain, nonatomic) ICMOreoEngine *engine; // @synthesize engine=_engine;
@property(retain, nonatomic) NSString *apiKey; // @synthesize apiKey=_apiKey;
@property(retain, nonatomic) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (_Bool)identityExists;
- (_Bool)setApiKey:(id)arg1 appId:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface ICMSDKLinkTracker : NSObject
{
}

+ (_Bool)urlIsNativeScheme:(id)arg1;
+ (void)openLink:(id)arg1;
+ (id)valueForParam:(id)arg1 inQueryString:(id)arg2;
+ (_Bool)isATrackingURL:(id)arg1;
+ (void)handleLinkURL:(id)arg1;

@end

@interface ICMStartConversationButton : UIButton
{
}

- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)configureFilledButton;
- (void)configureBorderedButton;
- (void)configureWithStyle:(unsigned long long)arg1;
- (id)init;

@end

@interface ICMContentContainerViewController : UIViewController
{
    UIView *_backgroundView;
    UIViewController *_contentViewController;
    NSArray *_contentHeightConstraints;
}

@property(retain, nonatomic) NSArray *contentHeightConstraints; // @synthesize contentHeightConstraints=_contentHeightConstraints;
@property(retain, nonatomic) UIViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void).cxx_destruct;
- (id)constrainContentViewAttribute:(long long)arg1 toConstant:(double)arg2 relation:(long long)arg3 priority:(float)arg4;
- (id)pinContentViewAttribute:(long long)arg1 constant:(double)arg2 relation:(long long)arg3 priority:(float)arg4;
- (void)setUpConstraints;
- (void)updateContentHeight:(double)arg1;
- (void)didClose;
- (void)close;
- (long long)preferredStatusBarStyle;
- (void)animateIn;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithContentViewController:(id)arg1;

@end

@interface ICMFeatureChecker : NSObject
{
}

+ (_Bool)shouldShowTeammatePresenceView;

@end

@interface ICMConversationCardViewController : UIViewController <ICMConversationCardViewDelegate>
{
    ICMConversationCardView *_conversationCardView;
    id <ICMConversationCardViewControllerDelegate> _delegate;
    unsigned long long _state;
    NSArray *_displayedRecentConversations;
}

@property(retain, nonatomic) NSArray *displayedRecentConversations; // @synthesize displayedRecentConversations=_displayedRecentConversations;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <ICMConversationCardViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMConversationCardView *conversationCardView; // @synthesize conversationCardView=_conversationCardView;
- (void).cxx_destruct;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (void)didSelecViewPreviousConversationButton;
- (void)didSelectStartNewConversationButton;
- (double)heightForCard;
- (_Bool)hasOldUnreadConversations;
- (_Bool)shouldUpdateHeight;
- (void)configureConversationCardState;
- (_Bool)isConversationCardVisible;
- (void)fetchConversations;
- (void)viewDidLoad;
- (void)configureConversationCardView;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMHelpCenterViewController : UIViewController <ICMWebHelpCenterScriptHandlerDelegate, ICMErrorDelegate>
{
    _Bool _isFullscreen;
    id <ICMHelpCenterViewControllerDelegate> _delegate;
    ICMConversation *_conversation;
    NSURL *_helpCenterUrl;
    ICMLoadingView *_loadingView;
    UIView *_titleView;
    UILabel *_titleLabel;
    WKWebView *_helpCenterWebView;
    UIButton *_closeButton;
    UIBarButtonItem *_backButton;
    ICMErrorView *_errorView;
    NSLayoutConstraint *_cardHeightConstraint;
    NSLayoutConstraint *_cardTopConstraint;
    ICMWebHelpCenterScriptHandler *_scriptHandler;
}

@property(nonatomic) _Bool isFullscreen; // @synthesize isFullscreen=_isFullscreen;
@property(retain, nonatomic) ICMWebHelpCenterScriptHandler *scriptHandler; // @synthesize scriptHandler=_scriptHandler;
@property(retain, nonatomic) NSLayoutConstraint *cardTopConstraint; // @synthesize cardTopConstraint=_cardTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *cardHeightConstraint; // @synthesize cardHeightConstraint=_cardHeightConstraint;
@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) UIBarButtonItem *backButton; // @synthesize backButton=_backButton;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) WKWebView *helpCenterWebView; // @synthesize helpCenterWebView=_helpCenterWebView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIView *titleView; // @synthesize titleView=_titleView;
@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) NSURL *helpCenterUrl; // @synthesize helpCenterUrl=_helpCenterUrl;
@property(readonly, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) __weak id <ICMHelpCenterViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didSelectRetryButton;
- (void)dealloc;
- (void)webHelpCenterScriptHandlerReactionClicked:(id)arg1 articleId:(id)arg2 reactionIndex:(id)arg3;
- (void)webHelpCenterScriptHandlerMetricEvent:(id)arg1 action:(id)arg2 object:(id)arg3 place:(id)arg4 metadata:(id)arg5;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (id)metricInfo;
- (void)loadPage;
- (void)updateHelpCenterUrl;
- (void)updateBackButton;
- (void)backPressed;
- (void)closeHelpCenter;
- (void)layoutWebView;
- (void)layoutTitleView;
- (void)layoutCloseButton;
- (void)viewWillLayoutSubviews;
- (void)setUpLoadingView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithUrl:(id)arg1 conversation:(id)arg2 isFullscreen:(_Bool)arg3 delegate:(id)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMUtils : NSObject
{
}

+ (id)convertToFontName:(unsigned long long)arg1;
+ (double)convertToUIFontWeight:(unsigned long long)arg1;
+ (id)fontOfSize:(double)arg1 weight:(unsigned long long)arg2;
+ (id)intercomCachesPath;
+ (_Bool)migrateDocumentsIfNeeded;
+ (id)intercomLegacyDocumentsPath;
+ (id)intercomDocumentsPath;
+ (id)intercomCachesDirectory;
+ (id)intercomDocumentsDirectory;
+ (_Bool)autoIntegratePushNotifications;
+ (_Bool)photoUsageDescriptionPresent;
+ (id)loadBundle:(id)arg1 forClass:(Class)arg2;
+ (id)loadTranslationsBundle;
+ (id)translationsBundle;
+ (id)loadIntercomBundle;
+ (id)intercomBundle;
+ (void)setDebugLoggingEnabled:(_Bool)arg1;
+ (_Bool)debugLoggingEnabled;
+ (void)checkIntegration;
+ (id)appVersion;
+ (id)intercomVersion;
+ (id)intercomAgent;

@end

@interface ICMChatHeadViewController : UIViewController <ICMInAppUpdateProtocol, ICMInAppsAnimationProtocol>
{
    _Bool _isAnimating;
    ICMConversation *_conversation;
    id <ICMInAppsDelegate> _delegate;
    ICMConfig *_config;
    ICMChatHeadView *_chatHeadAvatarView;
    ICMChatHeadPreviewView *_chatHeadPreviewView;
    struct CGPoint _initialPanPoint;
    struct CGPoint _chatHeadCenter;
    struct CGPoint _previewCenter;
}

@property(nonatomic) struct CGPoint previewCenter; // @synthesize previewCenter=_previewCenter;
@property(nonatomic) struct CGPoint chatHeadCenter; // @synthesize chatHeadCenter=_chatHeadCenter;
@property(nonatomic) struct CGPoint initialPanPoint; // @synthesize initialPanPoint=_initialPanPoint;
@property(nonatomic) _Bool isAnimating; // @synthesize isAnimating=_isAnimating;
@property(retain, nonatomic) ICMChatHeadPreviewView *chatHeadPreviewView; // @synthesize chatHeadPreviewView=_chatHeadPreviewView;
@property(retain, nonatomic) ICMChatHeadView *chatHeadAvatarView; // @synthesize chatHeadAvatarView=_chatHeadAvatarView;
@property(retain, nonatomic) ICMConfig *config; // @synthesize config=_config;
@property(nonatomic) __weak id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
- (void).cxx_destruct;
- (void)conversationMarkedAsRead:(id)arg1;
- (void)animateOutWithCompletion:(CDUnknownBlockType)arg1;
- (void)pan:(id)arg1;
- (void)markChatFullAsRead;
- (void)chatheadTapped;
- (void)animateShowChatPreview;
- (void)animateHideChatPreview;
- (void)animateIn;
- (id)titleTextForMessageFromParticipant:(id)arg1 inConversation:(id)arg2;
- (void)pulseForNewMessage;
- (void)layoutViews;
- (void)viewWillLayoutSubviews;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2 config:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMFakeComposerView : ICMComposerView <ICMComposerDelegate>
{
}

- (struct CGSize)maximumSizeForComposerView;
- (void)composer:(id)arg1 selectedInputChanged:(id)arg2;
- (void)composerDidType;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (id)initWithInitialHeight:(double)arg1 inactiveTextColor:(id)arg2 horizontalPadding:(double)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMCompany : NSObject
{
    NSString *_companyId;
    NSString *_name;
    NSDate *_createdAt;
    NSNumber *_monthlySpend;
    NSString *_plan;
    NSDictionary *_customAttributes;
}

+ (id)nullDateAttribute;
+ (id)nullNumberAttribute;
+ (id)nullStringAttribute;
@property(retain, nonatomic) NSDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(copy, nonatomic) NSString *plan; // @synthesize plan=_plan;
@property(retain, nonatomic) NSNumber *monthlySpend; // @synthesize monthlySpend=_monthlySpend;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *companyId; // @synthesize companyId=_companyId;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToCompany:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)attributes;

@end

@interface ICMNoteViewController : ICMContentContainerViewController <ICMFullScreenInAppDelegate, ICMFullScreenInAppProtocol>
{
    ICMConversation *_conversation;
    ICMConversationPart *_conversationPart;
    id <ICMInAppsDelegate> _delegate;
    UIView *_backgroundView;
    ICMFullScreenInAppViewController *_inAppController;
    NSArray *_inAppHeightConstraints;
}

+ (CDStruct_0088c729)inAppAttributes;
@property(retain, nonatomic) NSArray *inAppHeightConstraints; // @synthesize inAppHeightConstraints=_inAppHeightConstraints;
@property(retain, nonatomic) ICMFullScreenInAppViewController *inAppController; // @synthesize inAppController=_inAppController;
@property(retain, nonatomic) UIView *backgroundView; // @synthesize backgroundView=_backgroundView;
@property(nonatomic) __weak id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak ICMConversationPart *conversationPart; // @synthesize conversationPart=_conversationPart;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
- (void).cxx_destruct;
- (void)openPressed;
- (void)didClose;
- (void)closePressed;
- (id)fakeComposerInactiveTextColor;
- (id)footerSeparatorColor;
- (id)headerSeparatorColor;
- (void)didCalculateBlocksSize:(struct CGSize)arg1;
- (void)viewDidLoad;
- (double)fakeComposerHeight;
- (void)loadView;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMOpenFirstConversationOnFirstInboxDataLoadAction : NSObject <ICMOnInboxDataLoadAction>
{
    _Bool _viewHasAppeared;
    ICMLoadingViewController *_loadingController;
}

@property(nonatomic) _Bool viewHasAppeared; // @synthesize viewHasAppeared=_viewHasAppeared;
@property(nonatomic) __weak ICMLoadingViewController *loadingController; // @synthesize loadingController=_loadingController;
- (void).cxx_destruct;
- (void)handleNavigatingToFirstConversation:(id)arg1 withConversations:(id)arg2;
- (void)inboxController:(id)arg1 viewAppearedWithConversations:(id)arg2;
- (void)inboxController:(id)arg1 didLoadConversations:(id)arg2;
- (id)initWithLoadingController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMAppInstallationFingerprint : NSObject <NSCoding>
{
    NSString *_appId;
    NSString *_bundleIdentifier;
    NSString *_appVersion;
    NSString *_intercomVersion;
}

+ (id)currentIntercomVersion;
@property(readonly, copy, nonatomic) NSString *intercomVersion; // @synthesize intercomVersion=_intercomVersion;
@property(readonly, copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(readonly, copy, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly, copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToFingerprint:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;

@end

@interface ICMUnreadManager : NSObject
{
    NSOrderedSet *_unreadConversationIds;
}

@property(retain, nonatomic) NSOrderedSet *unreadConversationIds; // @synthesize unreadConversationIds=_unreadConversationIds;
- (void).cxx_destruct;
- (void)conversationIdRead:(id)arg1;
- (id)init;

@end

@interface ICMSoundPlayer : NSObject
{
}

+ (void)playSoundForURL:(id)arg1;
+ (void)playSoundForSendingMessage;
+ (void)playSoundForFailedMessage;
+ (void)playSoundForOperatorResponse;
+ (void)playSoundForAdminResponse;
+ (void)playSoundForInApp;

@end

@interface ICMNoteContainerCardView : ICMContainerCardView
{
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMMultipleAvatarView : UIView
{
    UIColor *_avatarBorderColor;
    ICMAvatarView *_leftAvatarView;
    ICMAvatarView *_topAvatarView;
    ICMAvatarView *_rightAvatarView;
    NSArray *_admins;
}

@property(retain, nonatomic) NSArray *admins; // @synthesize admins=_admins;
@property(retain, nonatomic) ICMAvatarView *rightAvatarView; // @synthesize rightAvatarView=_rightAvatarView;
@property(retain, nonatomic) ICMAvatarView *topAvatarView; // @synthesize topAvatarView=_topAvatarView;
@property(retain, nonatomic) ICMAvatarView *leftAvatarView; // @synthesize leftAvatarView=_leftAvatarView;
@property(retain, nonatomic) UIColor *avatarBorderColor; // @synthesize avatarBorderColor=_avatarBorderColor;
- (void).cxx_destruct;
- (void)keepUserPresenceViewBackgroundColor;
- (void)cancelImageLoad;
- (void)bindAvatarView:(id)arg1 toAdminAtIndex:(unsigned long long)arg2;
- (void)bindAdmins:(id)arg1;
- (double)avatarDiameterForAdminCount:(unsigned long long)arg1;
- (void)layoutSubviews;
- (id)initWithWidth:(double)arg1;

@end

@interface ICMConversationRatingBlock : IntercomSDK_ITBBlock
{
    NSNumber *_selectedRatingIndex;
    NSString *_remark;
    NSArray *_ratingOptions;
}

+ (_Bool)validateBlockDictionary:(id)arg1;
+ (_Bool)validateStringOrNil:(id)arg1;
+ (_Bool)validateNumberOrNil:(id)arg1;
+ (_Bool)validateOptionsArray:(id)arg1;
@property(copy, nonatomic) NSArray *ratingOptions; // @synthesize ratingOptions=_ratingOptions;
@property(copy, nonatomic) NSString *remark; // @synthesize remark=_remark;
@property(retain, nonatomic) NSNumber *selectedRatingIndex; // @synthesize selectedRatingIndex=_selectedRatingIndex;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)remarkIntent;
- (id)ratingIntent;
- (id)selectedRating;
- (long long)type;
- (Class)viewClass;
- (id)initWithDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface ICMAWSConfiguration : ICMSafeNetworkModel <ICMFileUploadConfig>
{
    NSNumber *_uploadId;
    NSString *_key;
    NSString *_acl;
    NSString *_contentType;
    NSString *_AWSAccessKeyId;
    NSString *_policy;
    NSString *_signature;
    NSString *_successActionStatus;
    NSString *_uploadDestination;
    NSString *_publicURL;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(copy, nonatomic) NSString *publicURL; // @synthesize publicURL=_publicURL;
@property(copy, nonatomic) NSString *uploadDestination; // @synthesize uploadDestination=_uploadDestination;
@property(copy, nonatomic) NSString *successActionStatus; // @synthesize successActionStatus=_successActionStatus;
@property(copy, nonatomic) NSString *signature; // @synthesize signature=_signature;
@property(copy, nonatomic) NSString *policy; // @synthesize policy=_policy;
@property(copy, nonatomic) NSString *AWSAccessKeyId; // @synthesize AWSAccessKeyId=_AWSAccessKeyId;
@property(copy, nonatomic) NSString *contentType; // @synthesize contentType=_contentType;
@property(copy, nonatomic) NSString *acl; // @synthesize acl=_acl;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
@property(retain, nonatomic) NSNumber *uploadId; // @synthesize uploadId=_uploadId;
- (void).cxx_destruct;
- (id)postParametersDictionary;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMPostContainerCardView : ICMContainerCardView <ICMPostContainerCardViewDelegate>
{
    id <ICMPostContainerCardViewDelegate> _delegate;
    UIButton *_openButton;
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2 maxBlocksHeight:(double)arg3;
@property(retain, nonatomic) UIButton *openButton; // @synthesize openButton=_openButton;
@property(nonatomic) __weak id <ICMPostContainerCardViewDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)postCardOpenButtonPressed;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMInAppPreloader : NSObject
{
}

+ (void)prepareInAppPart:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)prepareConversationForInApp:(id)arg1 completion:(CDUnknownBlockType)arg2;

@end

@interface ICMParticipant : ICMSafeNetworkModel
{
    _Bool _isBot;
    ICMAvatar *_avatar;
    NSString *_email;
    NSString *_participantId;
    NSString *_name;
    NSString *_type;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(nonatomic) _Bool isBot; // @synthesize isBot=_isBot;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *participantId; // @synthesize participantId=_participantId;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) ICMAvatar *avatar; // @synthesize avatar=_avatar;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToParticipant:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)adminAppNameTitle:(id)arg1;
- (_Bool)isAdmin;
- (id)firstName;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMLauncherViewController : UIViewController <ICMInAppUpdateProtocol, ICMInAppsAnimationProtocol>
{
    ICMLauncherView *_launcher;
    id <ICMInAppsDelegate> _delegate;
}

@property(nonatomic) __weak id <ICMInAppsDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMLauncherView *launcher; // @synthesize launcher=_launcher;
- (void).cxx_destruct;
- (void)conversationMarkedAsRead:(id)arg1;
- (void)launcherTapped;
- (void)animateOutWithCompletion:(CDUnknownBlockType)arg1;
- (void)animateIn;
- (void)updateUnreadCount;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithDelegate:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMSnippetStackView : UIView
{
    NSArray *_conversations;
    ICMSnippetView *_frontView;
    ICMSnippetView *_middleView;
    ICMSnippetView *_backView;
    id <ICMSnippetActionDelegate> _delegate;
    struct CGPoint _initialPanPoint;
    struct CGPoint _initialCenter;
    struct CGRect _lastSize;
}

+ (double)stackHeightForSingleSnippetHeight:(double)arg1;
@property(nonatomic) struct CGRect lastSize; // @synthesize lastSize=_lastSize;
@property(nonatomic) struct CGPoint initialCenter; // @synthesize initialCenter=_initialCenter;
@property(nonatomic) struct CGPoint initialPanPoint; // @synthesize initialPanPoint=_initialPanPoint;
@property(nonatomic) __weak id <ICMSnippetActionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMSnippetView *backView; // @synthesize backView=_backView;
@property(retain, nonatomic) ICMSnippetView *middleView; // @synthesize middleView=_middleView;
@property(retain, nonatomic) ICMSnippetView *frontView; // @synthesize frontView=_frontView;
@property(retain, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
- (void).cxx_destruct;
- (void)promoteMiddleToFront;
- (void)tapFrontView;
- (void)panFrontView:(id)arg1;
- (void)createSnippets;
- (void)layoutSubviews;
- (id)initWithConversations:(id)arg1 frame:(struct CGRect)arg2 delegate:(id)arg3;

@end

@interface ICMConversationViewController : ICMBaseViewController <ICMInAppsDelegate, ICMProfileViewDelegate, ICMIntercomLinkDelegate, ICMArticleViewControllerDelegate, ICMHelpCenterContainerViewControllerDelegate, ICMReactionsViewControllerDelegate, IIMInputAccessoryViewDelegate, IIMGIFInputDelegate, ICMConversationContentDelegate, ICMConversationContentAccessoryViewDelegate, ITBImagePreviewDelegate, IIUImageAnnotationDelegate, ICMComposerDelegate, ICMErrorDelegate>
{
    _Bool _backButtonHidden;
    _Bool _profileExpandedMetricAdded;
    _Bool _showIntercomLink;
    ICMComposerView *_composerView;
    NSDate *_lastSentIsTyping;
    ICMProfileNavigationBarView *_profileView;
    UIResponder *_firstResponderBeforeModal;
    ICMReactionsViewController *_reactionsController;
    ICMIntercomLinkView *_intercomLinkView;
    NSString *_initialMessage;
    IntercomSDK_IIMInputAccessoryView *_inputManagerView;
    ICMConversationContentViewController *_contentViewController;
}

@property(readonly, nonatomic) ICMConversationContentViewController *contentViewController; // @synthesize contentViewController=_contentViewController;
@property(retain, nonatomic) IntercomSDK_IIMInputAccessoryView *inputManagerView; // @synthesize inputManagerView=_inputManagerView;
@property(copy, nonatomic) NSString *initialMessage; // @synthesize initialMessage=_initialMessage;
@property(retain, nonatomic) ICMIntercomLinkView *intercomLinkView; // @synthesize intercomLinkView=_intercomLinkView;
@property(nonatomic) _Bool showIntercomLink; // @synthesize showIntercomLink=_showIntercomLink;
@property(nonatomic) _Bool profileExpandedMetricAdded; // @synthesize profileExpandedMetricAdded=_profileExpandedMetricAdded;
@property(retain, nonatomic) ICMReactionsViewController *reactionsController; // @synthesize reactionsController=_reactionsController;
@property(nonatomic) __weak UIResponder *firstResponderBeforeModal; // @synthesize firstResponderBeforeModal=_firstResponderBeforeModal;
@property(retain, nonatomic) ICMProfileNavigationBarView *profileView; // @synthesize profileView=_profileView;
@property(retain, nonatomic) NSDate *lastSentIsTyping; // @synthesize lastSentIsTyping=_lastSentIsTyping;
@property(retain, nonatomic) ICMComposerView *composerView; // @synthesize composerView=_composerView;
@property(nonatomic) _Bool backButtonHidden; // @synthesize backButtonHidden=_backButtonHidden;
- (void).cxx_destruct;
- (void)icm_addSheetViewedMetric:(id)arg1;
- (void)icm_addSheetClosedMetric:(id)arg1;
- (void)icm_messengerSheetDidCloseAndTriggerReload;
- (void)icm_messengerSheetDidClose;
- (void)dismissImageAnnotationViewController;
- (id)customAccessoryViewFirstResponder;
- (struct CGSize)sizeForCustomAccessoryView;
- (void)textInputDialogDidHide;
- (void)contentViewController:(id)arg1 handleTextInputIntent:(id)arg2;
- (void)contentViewController:(id)arg1 presentMessengerSheetIntent:(id)arg2;
- (void)contentViewController:(id)arg1 setProfileExpanded:(_Bool)arg2;
- (_Bool)contentViewControllerComposerTextViewWantsFirstResponder:(id)arg1;
- (void)contentViewControllerLayoutDependentViews:(id)arg1;
- (void)contentViewController:(id)arg1 didSetNewConversationCreationInProgress:(_Bool)arg2;
- (void)contentViewController:(id)arg1 presentHelpCenter:(id)arg2 forConversation:(id)arg3;
- (void)contentViewController:(id)arg1 presentArticle:(id)arg2 forConversation:(id)arg3 conversationPart:(id)arg4;
- (void)contentViewController:(id)arg1 trackOpsMetricEventType:(id)arg2 withName:(id)arg3;
- (void)contentViewController:(id)arg1 presentPostForConversation:(id)arg2;
- (void)contentViewController:(id)arg1 finishedLoadingConversation:(id)arg2 firstLoad:(_Bool)arg3;
- (void)contentViewControllerInsetsDidUpdate:(id)arg1;
- (void)contentViewController:(id)arg1 conversationDidUpdate:(id)arg2;
- (void)reactionsViewController:(id)arg1 reactedWithOption:(id)arg2;
- (id)solutionValueForIntercomLink;
- (id)contentValueForIntercomLink;
- (void)blockView:(id)arg1 showImagePreviewWithMetadata:(id)arg2;
- (void)profileExandedStateChanged:(_Bool)arg1;
- (void)profileTapped;
- (void)profileViewIsTransitioningToSize:(struct CGSize)arg1;
- (double)navigationBarHeight;
- (double)minimumHeightForProfileView;
- (double)maximumHeightForProfileView;
- (void)addProfileOpenedMetricForContext:(id)arg1;
- (void)setProfileExpanded:(_Bool)arg1;
- (_Bool)profileIsExpanded;
- (void)layoutDependentViews;
- (void)dismissPost;
- (void)conversationShown:(id)arg1 asFull:(_Bool)arg2;
- (void)showInbox;
- (void)hideInApp:(id)arg1;
- (void)dismissConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)presentConversation:(id)arg1 fromFull:(_Bool)arg2;
- (void)helpCenterDidClose;
- (void)articleDidClose;
- (void)notifyThatUserIsTyping;
- (void)notifyThatUserChangedComposerInput:(id)arg1;
- (void)composer:(id)arg1 selectedInputChanged:(id)arg2;
- (struct CGSize)maximumSizeForComposerView;
- (void)composerDidType;
- (void)gifInput:(id)arg1 findGIFsWithQuery:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (void)sendMessage:(id)arg1 upload:(id)arg2;
- (void)inputAccessoryView:(id)arg1 inputSelected:(id)arg2;
- (void)inputAccessoryView:(id)arg1 input:(id)arg2 performedAction:(id)arg3;
- (void)inputAccessoryView:(id)arg1 input:(id)arg2 showImagePreviewWithMetadata:(id)arg3;
- (void)inputAccessoryView:(id)arg1 input:(id)arg2 dismissViewController:(id)arg3;
- (void)inputAccessoryView:(id)arg1 input:(id)arg2 presentViewController:(id)arg3;
- (id)inputsForConversation;
- (void)createInputManagerView;
- (void)dismissViewControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)findFirstResponderBeforePresentingModal;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)layoutIntercomLink;
- (void)layoutConversationContentView;
- (void)updateConversationInsets;
- (void)layoutReactionView;
- (void)layoutProfileView;
- (void)viewWillLayoutSubviews;
- (void)hideNavigationBarTitleIfNeeded:(id)arg1;
- (void)addIntercomLinkView;
- (void)createBackgroundView;
- (void)createProfileView;
- (void)setupContentViewController;
- (void)configureNavBar;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)animateViewsAppearing;
- (void)animateViewsDisappearing;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)conversationId;
- (id)initWithConversation:(id)arg1 withInitialMessage:(id)arg2;
- (id)initWithConversation:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMUserAttributes : NSObject
{
    _Bool _unsubscribedFromEmails;
    NSString *_email;
    NSString *_userId;
    NSString *_name;
    NSString *_phone;
    NSString *_languageOverride;
    NSDate *_signedUpAt;
    NSArray *_companies;
    NSDictionary *_customAttributes;
    NSNumber *_unsubscribedFromEmailObject;
}

+ (id)nullDateAttribute;
+ (id)nullNumberAttribute;
+ (id)nullStringAttribute;
@property(retain, nonatomic) NSNumber *unsubscribedFromEmailObject; // @synthesize unsubscribedFromEmailObject=_unsubscribedFromEmailObject;
@property(retain, nonatomic) NSDictionary *customAttributes; // @synthesize customAttributes=_customAttributes;
@property(retain, nonatomic) NSArray *companies; // @synthesize companies=_companies;
@property(nonatomic) _Bool unsubscribedFromEmails; // @synthesize unsubscribedFromEmails=_unsubscribedFromEmails;
@property(retain, nonatomic) NSDate *signedUpAt; // @synthesize signedUpAt=_signedUpAt;
@property(copy, nonatomic) NSString *languageOverride; // @synthesize languageOverride=_languageOverride;
@property(copy, nonatomic) NSString *phone; // @synthesize phone=_phone;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToUserAttributes:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)attributes;

@end

@interface ICMDeviceData : NSObject
{
    NSString *_platform;
    NSString *_platformVersion;
    NSString *_version;
    NSString *_application;
    NSString *_browser;
    NSString *_deviceType;
    NSString *_language;
    NSString *_deviceTokenEnvironment;
    NSString *_deviceToken;
    NSString *_environment;
}

+ (id)machineName;
@property(readonly, copy, nonatomic) NSString *environment; // @synthesize environment=_environment;
@property(readonly, copy, nonatomic) NSString *deviceToken; // @synthesize deviceToken=_deviceToken;
@property(readonly, copy, nonatomic) NSString *deviceTokenEnvironment; // @synthesize deviceTokenEnvironment=_deviceTokenEnvironment;
@property(readonly, copy, nonatomic) NSString *language; // @synthesize language=_language;
@property(readonly, copy, nonatomic) NSString *deviceType; // @synthesize deviceType=_deviceType;
@property(readonly, copy, nonatomic) NSString *browser; // @synthesize browser=_browser;
@property(readonly, copy, nonatomic) NSString *application; // @synthesize application=_application;
@property(readonly, copy, nonatomic) NSString *version; // @synthesize version=_version;
@property(readonly, copy, nonatomic) NSString *platformVersion; // @synthesize platformVersion=_platformVersion;
@property(readonly, copy, nonatomic) NSString *platform; // @synthesize platform=_platform;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (id)init;

@end

@interface ICMInputManager : NSObject
{
}

+ (id)createTextInput;
+ (id)createGIFInput:(id)arg1;
+ (id)createPhotosInput;

@end

@interface ICMConversationEventView : IntercomSDK_IntercomConversationCustomCell
{
    UITextView *_eventText;
    ICMAvatarView *_avatarView;
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
@property(retain, nonatomic) UITextView *eventText; // @synthesize eventText=_eventText;
- (void).cxx_destruct;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMProfileSocialAccountsView : UIView
{
    NSArray *_socialAccounts;
    NSArray *_buttons;
}

+ (id)buttonForSocialAccount:(id)arg1;
@property(retain, nonatomic) NSArray *buttons; // @synthesize buttons=_buttons;
@property(retain, nonatomic) NSArray *socialAccounts; // @synthesize socialAccounts=_socialAccounts;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (void)layoutSubviews;
- (void)openSocialURL:(id)arg1;

@end

@interface ICMHomescreenCard : ICMSafeNetworkModel
{
    NSURL *_fallbackURL;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSURL *fallbackURL; // @synthesize fallbackURL=_fallbackURL;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToHomescreenCard:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMInboxCell : UITableViewCell
{
    UILabel *_adminLabel;
    ICMMultipleAvatarView *_multipleAvatarView;
    UILabel *_sentTimeLabel;
    UIView *_separatorView;
    UIView *_unreadDotView;
    UILabel *_messageLabel;
    NSLayoutConstraint *_sentTimeLabelWidthConstraint;
    NSLayoutConstraint *_adminLabelRightConstraint;
}

@property(nonatomic) __weak NSLayoutConstraint *adminLabelRightConstraint; // @synthesize adminLabelRightConstraint=_adminLabelRightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *sentTimeLabelWidthConstraint; // @synthesize sentTimeLabelWidthConstraint=_sentTimeLabelWidthConstraint;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UIView *unreadDotView; // @synthesize unreadDotView=_unreadDotView;
@property(retain, nonatomic) UIView *separatorView; // @synthesize separatorView=_separatorView;
@property(retain, nonatomic) UILabel *sentTimeLabel; // @synthesize sentTimeLabel=_sentTimeLabel;
@property(retain, nonatomic) ICMMultipleAvatarView *multipleAvatarView; // @synthesize multipleAvatarView=_multipleAvatarView;
@property(retain, nonatomic) UILabel *adminLabel; // @synthesize adminLabel=_adminLabel;
- (void).cxx_destruct;
- (void)setSelected:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setHighlighted:(_Bool)arg1 animated:(_Bool)arg2;
- (void)configureCellForConversation:(id)arg1;
- (void)prepareForReuse;
- (void)createConstraints;
- (void)updateConstraints;
- (void)hideSeparator;
- (void)messageIsRead:(_Bool)arg1;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (id)snapshotViewAfterScreenUpdates:(_Bool)arg1;

@end

@interface ICMReactionsViewController : UIViewController
{
    ICMReactionsSet *_reactionSet;
    id <ICMReactionsViewControllerDelegate> _delegate;
    NSArray *_optionViews;
    UIView *_topSeparator;
    IntercomSDK_ITBAnimatedImageView *_selectedView;
    UIColor *_separatorColor;
    UILabel *_reactionsLabel;
}

@property(retain, nonatomic) UILabel *reactionsLabel; // @synthesize reactionsLabel=_reactionsLabel;
@property(retain, nonatomic) UIColor *separatorColor; // @synthesize separatorColor=_separatorColor;
@property(retain, nonatomic) IntercomSDK_ITBAnimatedImageView *selectedView; // @synthesize selectedView=_selectedView;
@property(retain, nonatomic) UIView *topSeparator; // @synthesize topSeparator=_topSeparator;
@property(retain, nonatomic) NSArray *optionViews; // @synthesize optionViews=_optionViews;
@property(nonatomic) __weak id <ICMReactionsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) ICMReactionsSet *reactionSet; // @synthesize reactionSet=_reactionSet;
- (void).cxx_destruct;
- (void)animateInOptions;
- (void)prepareForAnimatingIn;
- (void)performSpringAnimation:(CDUnknownBlockType)arg1;
- (id)grayscaleImageCacheKey:(id)arg1;
- (void)updateViewsWithBigSelectedView:(_Bool)arg1;
- (void)resetSelectedView;
- (void)determineSelectedView;
- (_Bool)touchPointShouldCancelSelection:(struct CGPoint)arg1;
- (void)didPan:(id)arg1;
- (id)grayscaleEmoji:(id)arg1 inView:(id)arg2;
- (void)updateReactionViews;
- (void)displayOption:(id)arg1 inView:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)loadView;
- (id)initWithReactionSet:(id)arg1 separatorColor:(id)arg2 reactionsLabel:(id)arg3 delegate:(id)arg4;

@end

@interface ICMSessionManager : NSObject
{
    _Bool _sessionStartedSinceLastBackgrounded;
    double _backgroundTime;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool sessionStartedSinceLastBackgrounded; // @synthesize sessionStartedSinceLastBackgrounded=_sessionStartedSinceLastBackgrounded;
@property(nonatomic) double backgroundTime; // @synthesize backgroundTime=_backgroundTime;
- (double)currentTimestamp;
- (void)reset;
- (void)sessionStarted;
- (_Bool)shouldStartNewSession;
- (void)appMovedToTheBackground;

@end

@interface ICMEventParticipant : ICMSafeNetworkModel
{
    ICMAvatar *_avatar;
    NSString *_participantId;
    NSString *_initial;
    NSString *_label;
    NSString *_type;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
@property(copy, nonatomic) NSString *label; // @synthesize label=_label;
@property(copy, nonatomic) NSString *initial; // @synthesize initial=_initial;
@property(copy, nonatomic) NSString *participantId; // @synthesize participantId=_participantId;
@property(retain, nonatomic) ICMAvatar *avatar; // @synthesize avatar=_avatar;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMAppearanceReset : NSObject
{
}

+ (void)resetAppearanceWithin:(Class)arg1;

@end

@interface ICMRateLimiter : NSObject
{
    ICMMaxSizeQueue *_timestampQueue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) ICMMaxSizeQueue *timestampQueue; // @synthesize timestampQueue=_timestampQueue;
- (void).cxx_destruct;
- (double)currentTimestamp;
- (_Bool)canPerformAction;
- (void)refreshLimits;
- (void)limit:(CDUnknownBlockType)arg1 dropped:(CDUnknownBlockType)arg2;
- (void)limit:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ICMContainerCardView : IntercomSDK_IntercomConversationCustomCell
{
    _Bool _blocksHeightIsBelowMax;
    double _maxBlocksHeight;
    ICMConversationPart *_part;
    id <ITBBlockViewDelegate> _blockDelegate;
    id <ITBIntentOpenerDelegate> _intentOpener;
    NSArray *_blockViews;
    id <ITBImagePreviewDelegate> _imagePreviewHandler;
    UITextView *_adminTextView;
    ICMAvatarView *_avatarView;
    UIView *_blockOverlayView;
    ICMGradientView *_gradientView;
}

+ (struct UIEdgeInsets)cardInsetsWithSafeArea:(struct UIEdgeInsets)arg1;
+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2 maxBlocksHeight:(double)arg3;
+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
@property(retain, nonatomic) ICMGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIView *blockOverlayView; // @synthesize blockOverlayView=_blockOverlayView;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
@property(retain, nonatomic) UITextView *adminTextView; // @synthesize adminTextView=_adminTextView;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewHandler; // @synthesize imagePreviewHandler=_imagePreviewHandler;
@property(retain, nonatomic) NSArray *blockViews; // @synthesize blockViews=_blockViews;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(nonatomic) __weak id <ITBBlockViewDelegate> blockDelegate; // @synthesize blockDelegate=_blockDelegate;
@property(retain, nonatomic) ICMConversationPart *part; // @synthesize part=_part;
@property(readonly, nonatomic) _Bool blocksHeightIsBelowMax; // @synthesize blocksHeightIsBelowMax=_blocksHeightIsBelowMax;
@property(nonatomic) double maxBlocksHeight; // @synthesize maxBlocksHeight=_maxBlocksHeight;
- (void).cxx_destruct;
- (void)applyLayoutAttributes:(id)arg1;
- (void)blocksHeightDidChange;
- (void)renderBlockViews:(id)arg1;
- (void)bindAdminNameForPart:(id)arg1;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (void)updateBlocksBounds;
- (void)layoutSubviews;
- (void)cleanupBlockViews;
- (void)dealloc;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMTeammatePresenceView : UIView
{
    _Bool _active;
    UIColor *_borderColor;
}

@property(copy, nonatomic) UIColor *borderColor; // @synthesize borderColor=_borderColor;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
- (void).cxx_destruct;
- (id)initWithDiameter:(double)arg1;

@end

@interface ICMMessengerPresentationController : UIPresentationController
{
    UIView *_hostAppSnapshotView;
    id <ICMWindowProvider> _windowProvider;
    UIWindow *_backgroundWindow;
}

@property(nonatomic) __weak UIWindow *backgroundWindow; // @synthesize backgroundWindow=_backgroundWindow;
@property(nonatomic) __weak id <ICMWindowProvider> windowProvider; // @synthesize windowProvider=_windowProvider;
@property(retain, nonatomic) UIView *hostAppSnapshotView; // @synthesize hostAppSnapshotView=_hostAppSnapshotView;
- (void).cxx_destruct;
- (struct CGRect)frameOfPresentedViewInContainerView;
- (double)topLayoutMargin;
- (void)updateSnapshots:(long long)arg1;
- (_Bool)shouldPresentInFullscreen;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)containerViewWillLayoutSubviews;
- (long long)adaptivePresentationStyle;
- (void)setupSnapshotsForDismissalCompletion;
- (void)setupSnapshotsForDismissal:(id)arg1;
- (void)dismissalTransitionWillBegin;
- (double)hostWindowScalingFactor;
- (void)setupSnapshotsForPresentation:(id)arg1;
- (_Bool)presentingMessengerOverHelpCenter;
- (void)presentationTransitionWillBegin;
- (id)initWithPresentedViewController:(id)arg1 presentingViewController:(id)arg2 windowProvider:(id)arg3;

@end

@interface ICMErrorViewController : ICMBaseViewController <ICMErrorDelegate>
{
    unsigned long long _type;
}

@property(nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)didSelectRetryButton;
- (void)viewDidLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)configureForMessenger;
- (void)configureForComposer;
- (id)initWithType:(unsigned long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMReactionsOption : ICMSafeNetworkModel
{
    NSNumber *_index;
    NSString *_unicodeEmoticon;
    NSURL *_imageUrl;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(readonly, nonatomic) NSURL *imageUrl; // @synthesize imageUrl=_imageUrl;
@property(readonly, nonatomic) NSString *unicodeEmoticon; // @synthesize unicodeEmoticon=_unicodeEmoticon;
@property(readonly, nonatomic) NSNumber *index; // @synthesize index=_index;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToOption:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMOreoEngine : NSObject <NSURLSessionDelegate>
{
    NSOperationQueue *_oreoOperationQueue;
    NSURLSession *_session;
    NSURL *_baseURL;
    IntercomSDK_AFHTTPRequestSerializer<AFURLRequestSerialization> *_requestSerializer;
    IntercomSDK_AFHTTPResponseSerializer<AFURLResponseSerialization> *_responseSerializer;
    IntercomSDK_AFSecurityPolicy *_securityPolicy;
    ICMOreoShutdownState *_shutdownState;
    ICMAppInstallationFingerprint *_appFingerprint;
}

+ (double)backOffTimeForReplyNumber:(long long)arg1;
+ (_Bool)shouldRetryRequestURL:(id)arg1;
@property(retain, nonatomic) ICMAppInstallationFingerprint *appFingerprint; // @synthesize appFingerprint=_appFingerprint;
@property(retain, nonatomic) ICMOreoShutdownState *shutdownState; // @synthesize shutdownState=_shutdownState;
@property(retain, nonatomic) IntercomSDK_AFSecurityPolicy *securityPolicy; // @synthesize securityPolicy=_securityPolicy;
@property(retain, nonatomic) IntercomSDK_AFHTTPResponseSerializer<AFURLResponseSerialization> *responseSerializer; // @synthesize responseSerializer=_responseSerializer;
@property(retain, nonatomic) IntercomSDK_AFHTTPRequestSerializer<AFURLRequestSerialization> *requestSerializer; // @synthesize requestSerializer=_requestSerializer;
@property(readonly, nonatomic) NSURL *baseURL; // @synthesize baseURL=_baseURL;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSOperationQueue *oreoOperationQueue; // @synthesize oreoOperationQueue=_oreoOperationQueue;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setCordovaVersion:(id)arg1;
- (id)random8CharacterHexString;
- (id)random16CharacterHexString;
- (void)ignoreAllPendingRequests;
- (void)pinSSL;
- (void)retryDataTask:(id)arg1 numberOfRetries:(long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)DELETE:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)POST:(id)arg1 parameters:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 retries:(long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)operationWithRequest:(id)arg1 retries:(long long)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)createRequest:(id)arg1 urlString:(id)arg2 parameters:(id)arg3 failure:(CDUnknownBlockType)arg4;
- (void)configureResponseSerializer;
- (void)configureRequestSerializer;
- (id)initWithBaseURL:(id)arg1;
- (id)initWithApiKey:(id)arg1 appId:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMInputEmptyView : UIView
{
    UILabel *_titleLabel;
    UILabel *_messageLabel;
}

@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)createConstraints;
- (id)initWithTitle:(id)arg1 detailedMessage:(id)arg2;

@end

@interface ICMPushNotificationManager : NSObject
{
}

+ (void)swizzleWillPresentNotificationWithCompletionHandlerOnClass:(Class)arg1;
+ (void)swizzleDidReceiveNotificationResponseWithCompletionHandlerOnClass:(Class)arg1;
+ (void)swizzleDidFinishLaunchingWithOptionsOnClass:(Class)arg1;
+ (void)swizzleDidReceiveRemoteNotificationFetchCompletionHandlerOnClass:(Class)arg1;
+ (void)swizzleDidReceiveRemoteNotificationOnClass:(Class)arg1;
+ (id)classesToSwizzle;
+ (void)handleNotificationInForeground:(id)arg1;
+ (void)handleIntercomPushNotification:(id)arg1;
+ (id)stringFromValue:(id)arg1;
+ (_Bool)isIntercomPushNotification:(id)arg1;
+ (unsigned long long)pushNotificationTypeForMessage:(id)arg1;
+ (_Bool)isPushNotificationsEnabled;
+ (id)fetchNotificationSettings;
+ (void)swizzlePushNotificationClasses;
+ (void)swizzleReceiveRemoteNotifications;

@end

@interface ICMLocalComposerPersistManager : NSObject <ICMComposerPersistManager>
{
}

- (void)clearPersistedData;
- (void)clearPersistedDataWithConversationId:(id)arg1;
- (id)persistedStringWithConversationId:(id)arg1;
- (_Bool)doesPersistedStringExistWithConversationId:(id)arg1;
- (void)persistString:(id)arg1 conversationId:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMUserAttributesValidation : NSObject
{
}

+ (id)nullDateAttribute;
+ (id)nullNumberAttribute;
+ (id)nullStringAttribute;
+ (id)replaceNullAttributesAttributesWithNSNull:(id)arg1;
+ (_Bool)validateCustomAttributes:(id)arg1 forKey:(id)arg2;
+ (_Bool)validateCompanies:(id)arg1 forKey:(id)arg2;
+ (_Bool)validateNumber:(id)arg1 forKey:(id)arg2;
+ (_Bool)validateDate:(id)arg1 forKey:(id)arg2;
+ (_Bool)validateNonEmptyString:(id)arg1 forKey:(id)arg2;

@end

@interface ICMOreoShutdownState : NSObject <NSCoding>
{
    NSDate *_endTime;
    ICMAppInstallationFingerprint *_appFingerprint;
    NSString *_shutdownReason;
}

+ (id)currentTime;
+ (id)archivePath;
+ (void)saveShutdownState:(id)arg1;
+ (id)loadFromDisk;
@property(readonly, copy, nonatomic) NSString *shutdownReason; // @synthesize shutdownReason=_shutdownReason;
@property(readonly, nonatomic) ICMAppInstallationFingerprint *appFingerprint; // @synthesize appFingerprint=_appFingerprint;
@property(readonly, nonatomic) NSDate *endTime; // @synthesize endTime=_endTime;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToShutdownState:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)saveToDisk;
- (id)shutdownError;
- (_Bool)canSendOreoNetworkRequestsWithFingerprint:(id)arg1;
- (id)initWithShutdownPeriod:(double)arg1 shutdownReason:(id)arg2;

@end

@interface ICMPhotoExpandButton : UIButton
{
}

- (void)animateButtonToScale:(double)arg1;
- (void)buttonReleased;
- (void)buttonTapped;
- (struct CGSize)intrinsicContentSize;
- (id)init;

@end

@interface ICMVersionManager : NSObject
{
}

+ (_Bool)doesSDK2EnvironmentExist;
+ (_Bool)doesSDK1EnvironmentExist;
+ (void)wipeSDK2Data;
+ (void)wipeSDK1Data;
+ (void)migrateFromSDK2;
+ (void)migrateFromSDK1;
+ (_Bool)requiresMigrationFromPreviousVersion;
+ (void)performMigration;
+ (void)migrateIfNeeded;

@end

@interface ICMURLSessionTaskOperation : NSOperation
{
    _Bool _ready;
    _Bool _executing;
    _Bool _finished;
    _Bool _ignoreResponse;
    _Bool _taskCompleted;
    NSURLSessionTask *_task;
}

@property(nonatomic) _Bool taskCompleted; // @synthesize taskCompleted=_taskCompleted;
@property(nonatomic) _Bool ignoreResponse; // @synthesize ignoreResponse=_ignoreResponse;
@property(readonly, nonatomic) NSURLSessionTask *task; // @synthesize task=_task;
- (void).cxx_destruct;
- (_Bool)isAsynchronous;
- (void)setFinished:(_Bool)arg1;
- (_Bool)isFinished;
- (void)setExecuting:(_Bool)arg1;
- (_Bool)isExecuting;
- (void)setReady:(_Bool)arg1;
- (_Bool)isReady;
- (void)cancel;
- (void)finish;
- (void)start;
- (id)initWithURLSessionTask:(id)arg1;

@end

@interface ICMBaseViewController : UIViewController
{
    ICMInboxTitleView *_inboxTitleView;
}

@property(retain, nonatomic) ICMInboxTitleView *inboxTitleView; // @synthesize inboxTitleView=_inboxTitleView;
- (void).cxx_destruct;
- (void)createTitleView;
- (void)viewDidLoad;

@end

@interface ICMWindow : UIWindow
{
    _Bool _fullscreen;
}

@property(nonatomic) _Bool fullscreen; // @synthesize fullscreen=_fullscreen;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
@property(retain, nonatomic) ICMRootViewController *rootViewController; // @dynamic rootViewController;
- (void)tearDown;
- (id)init;

@end

@interface ICMInboxLoadingCell : UITableViewCell
{
    ICMLoadingView *_loadingView;
}

@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
- (void).cxx_destruct;
- (void)startSpinning;
- (void)setupLoadingView;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;

@end

@interface Intercom : NSObject
{
}

+ (void)setCordovaVersion:(id)arg1;
+ (_Bool)validateApiKey:(id)arg1;
+ (_Bool)validateParameterIsDictionaryAndNotEmpty:(id)arg1;
+ (_Bool)validateParameterIsStringAndNotEmpty:(id)arg1;
+ (void)setNeedsStatusBarAppearanceUpdate;
+ (void)enableLogging;
+ (void)handleIntercomPushNotification:(id)arg1;
+ (_Bool)isIntercomPushNotification:(id)arg1;
+ (void)setDeviceToken:(id)arg1;
+ (void)logEventWithName:(id)arg1 metaData:(id)arg2;
+ (void)logEventWithName:(id)arg1;
+ (void)updateUser:(id)arg1;
+ (void)reset;
+ (void)logout;
+ (void)registerUserWithUserId:(id)arg1 email:(id)arg2;
+ (void)registerUserWithEmail:(id)arg1;
+ (void)registerUserWithUserId:(id)arg1;
+ (void)registerUnidentifiedUser;
+ (unsigned long long)unreadConversationCount;
+ (void)setBottomPadding:(double)arg1;
+ (void)hideMessenger;
+ (void)setLauncherVisible:(_Bool)arg1;
+ (void)setInAppMessagesVisible:(_Bool)arg1;
+ (void)presentHelpCenter;
+ (void)presentConversationList;
+ (void)presentMessageComposerWithInitialMessage:(id)arg1;
+ (void)presentMessageComposer;
+ (void)presentMessageComposer:(id)arg1;
+ (void)presentMessenger;
+ (void)setUserHash:(id)arg1;
+ (void)setApiKey:(id)arg1 forAppId:(id)arg2;

@end

@interface ICMCardView : IntercomSDK_IntercomConversationCustomCell <ITBBlockViewDelegate>
{
    UIView *_cardView;
    id <ITBIntentOpenerDelegate> _intentOpener;
    NSLayoutConstraint *_cardViewTopConstraint;
    IntercomSDK_ITBBlockView *_blockView;
    id <IntercomConversationPartDelegate> _partReloadDelegate;
    ICMConversationPart *_part;
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
@property(retain, nonatomic) ICMConversationPart *part; // @synthesize part=_part;
@property(nonatomic) __weak id <IntercomConversationPartDelegate> partReloadDelegate; // @synthesize partReloadDelegate=_partReloadDelegate;
@property(retain, nonatomic) IntercomSDK_ITBBlockView *blockView; // @synthesize blockView=_blockView;
@property(retain, nonatomic) NSLayoutConstraint *cardViewTopConstraint; // @synthesize cardViewTopConstraint=_cardViewTopConstraint;
@property(nonatomic) __weak id <ITBIntentOpenerDelegate> intentOpener; // @synthesize intentOpener=_intentOpener;
@property(retain, nonatomic) UIView *cardView; // @synthesize cardView=_cardView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)cleanupBlockView;
- (id)viewControllerForModalPresentation;
- (void)reloadRequiredForBlock:(id)arg1;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (void)prepareForReuse;
- (void)createTopBorder;
- (void)createCardView;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMConversationCardAvatarView : UIView
{
    NSArray *_avatarViewsArray;
}

@property(retain, nonatomic) NSArray *avatarViewsArray; // @synthesize avatarViewsArray=_avatarViewsArray;
- (void).cxx_destruct;
- (void)updateVisibleAvatars;
- (unsigned long long)numberOfAvatarsDisplayed;
- (struct CGSize)intrinsicContentSize;
- (void)layoutAvatars;
- (void)layoutSubviews;
- (void)configureAvatarViews;
- (id)init;

@end

@interface ICMBaseURLConfiguration : NSObject
{
}

+ (id)baseUrlForAppId:(id)arg1;

@end

@interface ICMConversationRatingRemarkIntent : NSObject <ITBIntent>
{
    NSString *_intentConversationRemark;
    long long _intentType;
}

@property(nonatomic) long long intentType; // @synthesize intentType=_intentType;
@property(retain, nonatomic) NSString *intentConversationRemark; // @synthesize intentConversationRemark=_intentConversationRemark;
- (void).cxx_destruct;
- (id)initWithRemark:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMSafeNetworkModel : NSObject
{
}

- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setNilValueForKey:(id)arg1;

@end

@interface ICMMessengerTransitioningDelegate : NSObject <UIViewControllerAnimatedTransitioning, UIViewControllerTransitioningDelegate>
{
    _Bool _isPresentation;
    id <ICMWindowProvider> _windowProvider;
}

@property(nonatomic) _Bool isPresentation; // @synthesize isPresentation=_isPresentation;
@property(nonatomic) __weak id <ICMWindowProvider> windowProvider; // @synthesize windowProvider=_windowProvider;
- (void).cxx_destruct;
- (id)interactionControllerForDismissal:(id)arg1;
- (id)interactionControllerForPresentation:(id)arg1;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMConversationContentViewController : UIViewController <ITBUploadCancellationDelegate, UIActionSheetDelegate, IntercomConversationCollectionViewControllerDelegate, ITBBlockViewDelegate, ICMPostContainerCardViewDelegate, IntercomNexusObserverProtocol, ICMErrorDelegate, ITBIntentOpenerDelegate, ICMQuickReplyViewDelegate>
{
    _Bool _newConversationCreationInProcess;
    _Bool _initiallySetup;
    id <ICMConversationContentAccessoryViewDelegate> accessoryViewDelegate;
    id <ICMProfileSizeDelegate> profileSizeDelegate;
    id <ITBImagePreviewDelegate> imagePreviewDelegate;
    ICMConversation *_conversation;
    IntercomSDK_IntercomConversationCollectionViewController *_collectionViewController;
    NSMutableDictionary *_isTypingParts;
    NSMutableArray *_unsentParts;
    NSTimer *_isTypingTimer;
    ICMErrorView *_errorView;
    ICMLoadingView *_spinner;
    id <ICMConversationContentDelegate> _delegate;
}

@property(nonatomic) _Bool initiallySetup; // @synthesize initiallySetup=_initiallySetup;
@property(nonatomic) __weak id <ICMConversationContentDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) ICMLoadingView *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
@property(nonatomic) __weak NSTimer *isTypingTimer; // @synthesize isTypingTimer=_isTypingTimer;
@property(retain, nonatomic) NSMutableArray *unsentParts; // @synthesize unsentParts=_unsentParts;
@property(retain, nonatomic) NSMutableDictionary *isTypingParts; // @synthesize isTypingParts=_isTypingParts;
@property(readonly, nonatomic) IntercomSDK_IntercomConversationCollectionViewController *collectionViewController; // @synthesize collectionViewController=_collectionViewController;
@property(nonatomic) _Bool newConversationCreationInProcess; // @synthesize newConversationCreationInProcess=_newConversationCreationInProcess;
@property(retain, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) __weak id <ITBImagePreviewDelegate> imagePreviewDelegate; // @synthesize imagePreviewDelegate;
@property(nonatomic) __weak id <ICMProfileSizeDelegate> profileSizeDelegate; // @synthesize profileSizeDelegate;
@property(nonatomic) __weak id <ICMConversationContentAccessoryViewDelegate> accessoryViewDelegate; // @synthesize accessoryViewDelegate;
- (void).cxx_destruct;
- (void)quickReplyViewTapped:(id)arg1 forReplyOption:(id)arg2 andPartId:(id)arg3;
- (void)handleCustomIntentType:(id)arg1;
- (void)handleIntent:(id)arg1 forBlock:(id)arg2 fromView:(id)arg3;
- (void)didSelectRetryButton;
- (void)hideErrorView;
- (void)showErrorView;
- (void)removeAllTypingParts:(long long)arg1;
- (void)updateIsTyping;
- (void)monitorIsTyping;
- (void)eventOccurred:(id)arg1;
- (id)observedConversationId;
- (void)postCardOpenButtonPressed;
- (id)viewControllerForModalPresentation;
- (void)reloadRequiredForBlock:(id)arg1;
- (void)layoutDependentViews;
- (void)configureBubbleView:(id)arg1 forPart:(id)arg2;
- (double)maximumTopInset;
- (double)minimumTopInset;
- (void)insetsDidUpdate;
- (_Bool)shouldUseFullWidthForPart:(id)arg1;
- (double)maxWidthForPart:(id)arg1 inWidth:(double)arg2;
- (void)partTapped:(id)arg1;
- (_Bool)shouldShowSlideOverViewForPart:(id)arg1;
- (_Bool)shouldShowBubbleFooterForPart:(id)arg1;
- (_Bool)shouldAddDividerBeforePartAtIndex:(unsigned long long)arg1 inArray:(id)arg2;
- (double)concatenationDistanceForPart:(id)arg1 withPart:(id)arg2;
- (_Bool)shouldConcatenatePart:(id)arg1 withPart:(id)arg2;
- (_Bool)shouldShowRetryButtonForPart:(id)arg1;
- (_Bool)shouldShowAvatarForPart:(id)arg1;
- (_Bool)shouldShowBubbleForPart:(id)arg1;
- (void)addQuickReplyMetricsForPart:(id)arg1;
- (id)cellTypeForItem:(unsigned long long)arg1 inPart:(id)arg2;
- (unsigned long long)numberOfItemsInPart:(id)arg1;
- (id)customAccessoryViewFirstResponder;
- (struct CGSize)sizeForCustomAccessoryView;
- (void)configureRetryButtonView:(id)arg1 forPart:(id)arg2;
- (void)configureTimestampDividerView:(id)arg1 forPart:(id)arg2;
- (void)willConfigureCustomCell:(id)arg1 withPart:(id)arg2;
- (void)configureAvatarView:(id)arg1 forPart:(id)arg2;
- (long long)bubblePositionForPart:(id)arg1;
- (struct UIEdgeInsets)insetsForPart:(id)arg1;
- (id)filterQuickReplyPartsOut:(id)arg1;
- (id)displayParts;
- (void)uploadCancelled:(id)arg1;
- (void)willPresentActionSheet:(id)arg1;
- (void)actionSheet:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)deleteMessage:(id)arg1;
- (void)retryMessage:(id)arg1;
- (void)retryNewConversation:(id)arg1 upload:(id)arg2;
- (void)retryReply:(id)arg1 upload:(id)arg2;
- (void)retryAction:(id)arg1;
- (_Bool)shouldPlayAdminResponseSoundForConversation:(id)arg1;
- (void)bindConversationToUI:(id)arg1;
- (void)updateConversation;
- (void)startNewConversationWithBlocks:(id)arg1 upload:(id)arg2;
- (void)replyToConversationWithBlocks:(id)arg1 upload:(id)arg2;
- (void)shouldShowLoadingView:(_Bool)arg1;
- (void)createSpinner;
- (void)createErrorView;
- (void)setupConversationViewController;
- (void)viewWillLayoutSubviews;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)configureConversationView;
- (void)viewDidAppear:(_Bool)arg1;
- (void)configUpdated:(id)arg1;
- (void)loadView;
- (void)viewDidLoad;
- (void)unlockCollectionViewScrolling;
- (void)lockCollectionViewScrollingAtCurrentIndexPath;
- (void)reloadCollectionView;
@property(nonatomic) _Bool shouldShowMessageAccessoryView;
@property(retain, nonatomic) UIView *customAccessoryView;
@property(nonatomic) struct UIEdgeInsets contentInsets;
@property(nonatomic) struct UIEdgeInsets conversationInsets;
- (_Bool)isLoadingConversation;
- (id)responder;
- (id)scrollView;
- (void)sendUpload:(id)arg1;
- (void)sendBlocks:(id)arg1;
- (void)dealloc;
- (id)initWithConversation:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMEngineSessionDelegate : NSObject <NSURLSessionDataDelegate>
{
    _Bool _ignoreRedirects;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
    CDUnknownBlockType _progressBlock;
}

@property(nonatomic) _Bool ignoreRedirects; // @synthesize ignoreRedirects=_ignoreRedirects;
@property(copy, nonatomic) CDUnknownBlockType progressBlock; // @synthesize progressBlock=_progressBlock;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMEngine : NSObject
{
}

- (id)uploadFileWithFileName:(id)arg1 data:(id)arg2 uploadConfig:(id)arg3 success:(CDUnknownBlockType)arg4 progress:(CDUnknownBlockType)arg5 failure:(CDUnknownBlockType)arg6;
- (void)requestWithoutRedirects:(id)arg1 success:(CDUnknownBlockType)arg2 failure:(CDUnknownBlockType)arg3;

@end

@interface ICMConversationRatingBlockView : IntercomSDK_ITBBlockView <UIAlertViewDelegate>
{
    UITextView *_titleTextView;
    UIView *_buttonContainer;
    NSArray *_optionViews;
    IntercomSDK_ITBAnimatedImageView *_selectedView;
    UIButton *_tellUsMoreButton;
    UITextView *_youRatedTextView;
    ICMConversationRatingBlock *_conversationRatingBlock;
}

+ (struct CGSize)estimateSizeForBlock:(id)arg1 withWidth:(double)arg2 constraintWidth:(_Bool)arg3;
+ (struct UIEdgeInsets)textInsets;
+ (id)setupTitleAttributedString;
@property(nonatomic) __weak ICMConversationRatingBlock *conversationRatingBlock; // @synthesize conversationRatingBlock=_conversationRatingBlock;
@property(retain, nonatomic) UITextView *youRatedTextView; // @synthesize youRatedTextView=_youRatedTextView;
@property(retain, nonatomic) UIButton *tellUsMoreButton; // @synthesize tellUsMoreButton=_tellUsMoreButton;
@property(retain, nonatomic) IntercomSDK_ITBAnimatedImageView *selectedView; // @synthesize selectedView=_selectedView;
@property(retain, nonatomic) NSArray *optionViews; // @synthesize optionViews=_optionViews;
@property(retain, nonatomic) UIView *buttonContainer; // @synthesize buttonContainer=_buttonContainer;
@property(retain, nonatomic) UITextView *titleTextView; // @synthesize titleTextView=_titleTextView;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)alertView:(id)arg1 willDismissWithButtonIndex:(long long)arg2;
- (void)didPresentAlertView:(id)arg1;
- (void)addRemarkPressed:(id)arg1;
- (void)configureWithBlock:(id)arg1;
- (void)ratingPressed:(id)arg1;
- (id)grayscaleEmoji:(id)arg1 inView:(id)arg2;
- (void)updateRatingViewsAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)displayOption:(id)arg1 inView:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (id)grayscaleImageCacheKey:(id)arg1;
- (void)resetSelectedViewWithCompletion:(CDUnknownBlockType)arg1;
- (void)determineSelectedView;
- (id)youRatedAttribtedStringWithEmojiImage:(id)arg1;
- (void)configureYouRatedTextView;
- (void)layoutSubviews;
- (void)setupYouRatedTextView;
- (void)setupTellUsMoreButton;
- (void)setupButtonsForBlock:(id)arg1;
- (void)setupButtonContainer;
- (void)setupTitleView;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMOpsAction : NSObject
{
    NSString *_type;
    NSString *_name;
    double _timestamp;
}

+ (id)initWithType:(id)arg1 name:(id)arg2 timestamp:(double)arg3;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithType:(id)arg1 name:(id)arg2 timestamp:(double)arg3;

@end

@interface ICMQuickReplyButton : ICMRoundedButton
{
    ICMReplyOption *_replyOption;
}

@property(retain, nonatomic) ICMReplyOption *replyOption; // @synthesize replyOption=_replyOption;
- (void).cxx_destruct;
- (void)buttonReleased:(id)arg1 event:(id)arg2;
- (id)initWithReplyOption:(id)arg1;

@end

@interface ICMChatHeadContentViewSnippet : UIView <ICMChatHeadContentView>
{
    UILabel *_textLabel;
    NSString *_summaryString;
    NSAttributedString *_summarySizingAttributedString;
}

@property(retain, nonatomic) NSAttributedString *summarySizingAttributedString; // @synthesize summarySizingAttributedString=_summarySizingAttributedString;
@property(retain, nonatomic) NSString *summaryString; // @synthesize summaryString=_summaryString;
@property(retain, nonatomic) UILabel *textLabel; // @synthesize textLabel=_textLabel;
- (void).cxx_destruct;
- (id)snippetLabelStyle;
- (struct CGSize)contentSize;
- (void)layoutSubviews;
- (id)chatSummaryAttributedString:(id)arg1 paragraphStyle:(id)arg2;
- (void)addContent:(id)arg1;

@end

@interface ICMUserIdentity : NSObject <NSCoding>
{
    _Bool _hasConversations;
    NSString *_anonymousId;
    NSString *_intercomId;
    NSString *_userId;
    NSString *_email;
    NSDictionary *_secureOptions;
    IntercomSDK_IntercomNexusConfiguration *_nexusConfiguration;
}

+ (id)generateAnonymousId;
+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) IntercomSDK_IntercomNexusConfiguration *nexusConfiguration; // @synthesize nexusConfiguration=_nexusConfiguration;
@property(nonatomic) _Bool hasConversations; // @synthesize hasConversations=_hasConversations;
@property(retain, nonatomic) NSDictionary *secureOptions; // @synthesize secureOptions=_secureOptions;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(retain, nonatomic) NSString *intercomId; // @synthesize intercomId=_intercomId;
@property(retain, nonatomic) NSString *anonymousId; // @synthesize anonymousId=_anonymousId;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)updateWithIdentity:(id)arg1;
- (_Bool)identityExists;
- (_Bool)isUnidentified;
- (_Bool)isIdentified;
- (void)clearIntercomId;
- (_Bool)matchesIdentity:(id)arg1;
- (_Bool)registerIdentifiedUserWithProperties:(id)arg1;
- (_Bool)registerUnidentifiedUser;
- (id)dictionaryRepresentation;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMAbsoluteTimestampReusableView : IntercomSDK_IntercomConversationReusableView
{
    UILabel *_timeLabel;
}

@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
- (void).cxx_destruct;
- (void)configureWithPart:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMDeviceTokenData : NSObject <NSCoding>
{
    _Bool _deviceTokenSubmitted;
    unsigned long long _deviceTokenEnvironment;
    NSString *_deviceToken;
}

@property(nonatomic) _Bool deviceTokenSubmitted; // @synthesize deviceTokenSubmitted=_deviceTokenSubmitted;
@property(retain, nonatomic) NSString *deviceToken; // @synthesize deviceToken=_deviceToken;
@property(nonatomic) unsigned long long deviceTokenEnvironment; // @synthesize deviceTokenEnvironment=_deviceTokenEnvironment;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;

@end

@interface ICMProfileNavigationBarButton : UIControl
{
    NSString *_title;
    UIImage *_image;
    UILabel *_titleLabel;
    UIImageView *_imageView;
}

@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) UIImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (void)setTintColor:(id)arg1;
- (void)setHighlighted:(_Bool)arg1;
- (void)sizeToFit;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (double)imageToLabelPadding;
- (void)layoutSubviews;
- (id)init;

@end

@interface ICMGradientView : UIView
{
}

+ (Class)layerClass;

// Remaining properties
@property(readonly, nonatomic) CAGradientLayer *layer; // @dynamic layer;

@end

@interface ICMImageUtils : NSObject
{
}

+ (id)createImagePreviewConfig:(id)arg1 sourceView:(id)arg2 imagePreviewerActionBlock:(CDUnknownBlockType)arg3;
+ (id)createImagePreviewViewController:(id)arg1 sourceView:(id)arg2 imagePreviewerActionBlock:(CDUnknownBlockType)arg3;
+ (id)createImagePreviewViewControllerWithImagePreviewMetadata:(id)arg1;
+ (id)createImagePreviewViewControllerWithBlocksImagePreviewMetadata:(id)arg1;

@end

@interface ICMInAppBlockAppearance : ICMBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMBaseResponse : ICMSafeNetworkModel
{
    _Bool _isFirstRequest;
    ICMUnreadConversationsResponse *_unreadConversations;
    ICMUserIdentity *_user;
    IntercomSDK_IntercomNexusConfiguration *_realtimeConfig;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(nonatomic) _Bool isFirstRequest; // @synthesize isFirstRequest=_isFirstRequest;
@property(retain, nonatomic) IntercomSDK_IntercomNexusConfiguration *realtimeConfig; // @synthesize realtimeConfig=_realtimeConfig;
@property(retain, nonatomic) ICMUserIdentity *user; // @synthesize user=_user;
@property(retain, nonatomic) ICMUnreadConversationsResponse *unreadConversations; // @synthesize unreadConversations=_unreadConversations;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToResponse:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMTeammateAvatarView : UIView
{
    ICMAvatarView *_avatarView;
    UILabel *_nameLabel;
}

@property(retain, nonatomic) UILabel *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)layoutSubviews;
- (void)configureWithAdmin:(id)arg1;
- (id)initWithDiameter:(double)arg1;

@end

@interface ICMDayTimestampDividerReusableView : IntercomSDK_IntercomConversationReusableView
{
    UILabel *_timeLabel;
}

@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMHomescreenHeaderView : UIView
{
    UIImageView *_logoImageView;
    UILabel *_greetingLabel;
    UILabel *_teamIntroLabel;
    NSLayoutConstraint *_greetingLabelTopConstraint;
    NSLayoutConstraint *_introLabelTopConstraint;
    NSLayoutConstraint *_logoImageViewTopConstraint;
    NSLayoutConstraint *_logoImageViewWidthConstraint;
    NSLayoutConstraint *_logoImageViewHeightConstraint;
    NSLayoutConstraint *_logoImageViewLeftConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *logoImageViewLeftConstraint; // @synthesize logoImageViewLeftConstraint=_logoImageViewLeftConstraint;
@property(retain, nonatomic) NSLayoutConstraint *logoImageViewHeightConstraint; // @synthesize logoImageViewHeightConstraint=_logoImageViewHeightConstraint;
@property(retain, nonatomic) NSLayoutConstraint *logoImageViewWidthConstraint; // @synthesize logoImageViewWidthConstraint=_logoImageViewWidthConstraint;
@property(retain, nonatomic) NSLayoutConstraint *logoImageViewTopConstraint; // @synthesize logoImageViewTopConstraint=_logoImageViewTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *introLabelTopConstraint; // @synthesize introLabelTopConstraint=_introLabelTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *greetingLabelTopConstraint; // @synthesize greetingLabelTopConstraint=_greetingLabelTopConstraint;
@property(retain, nonatomic) UILabel *teamIntroLabel; // @synthesize teamIntroLabel=_teamIntroLabel;
@property(retain, nonatomic) UILabel *greetingLabel; // @synthesize greetingLabel=_greetingLabel;
@property(retain, nonatomic) UIImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)logoImageReady:(id)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)layoutTeamIntroLabel;
- (void)configureGreetingLabelTopConstraint;
- (void)layoutGreetingLabel;
- (void)resetLogoImageViewConstraints;
- (void)layoutLogoImageView;
- (void)createTeamIntroLabel;
- (void)createGreetingLabel;
- (void)createLogoImageView;
- (void)createHeaderView;
- (id)init;

@end

@interface ICMRelativeTimestampReusableView : IntercomSDK_IntercomConversationReusableView
{
    UILabel *_timeLabel;
    UILabel *_attributionLabel;
    ICMConversationPart *_part;
    NSTimer *_timer;
}

@property(nonatomic) __weak NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) __weak ICMConversationPart *part; // @synthesize part=_part;
@property(retain, nonatomic) UILabel *attributionLabel; // @synthesize attributionLabel=_attributionLabel;
@property(retain, nonatomic) UILabel *timeLabel; // @synthesize timeLabel=_timeLabel;
- (void).cxx_destruct;
- (void)prepareForReuse;
- (void)dealloc;
- (void)updateTimestamp;
- (void)configureWithPart:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMUnreadConversationsResponse : ICMSafeNetworkModel
{
    NSArray *_conversations;
    NSOrderedSet *_unreadConversationIds;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(copy, nonatomic) NSOrderedSet *unreadConversationIds; // @synthesize unreadConversationIds=_unreadConversationIds;
@property(copy, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToUnreadConversationsResponse:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)updateReadState;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)init;

@end

@interface ICMOperatorClientConditionsManager : NSObject <ICMClientConditionDelegate>
{
    ICMOperatorState *_operatorClientState;
    NSSet<ICMClientConditionProtocol> *_clientConditions;
    NSDictionary *_conversationStatesDictionary;
    unsigned long long _backgroundTask;
}

+ (id)sharedInstance;
@property(nonatomic) unsigned long long backgroundTask; // @synthesize backgroundTask=_backgroundTask;
@property(retain, nonatomic) NSDictionary *conversationStatesDictionary; // @synthesize conversationStatesDictionary=_conversationStatesDictionary;
@property(retain, nonatomic) NSSet<ICMClientConditionProtocol> *clientConditions; // @synthesize clientConditions=_clientConditions;
@property(retain, nonatomic) ICMOperatorState *operatorClientState; // @synthesize operatorClientState=_operatorClientState;
- (void).cxx_destruct;
- (void)endBackgroundTask;
- (void)startBackgroundTask;
- (void)removeConversationState:(id)arg1;
- (void)removeClientCondition:(id)arg1;
- (void)clientConditionSatisfied:(id)arg1;
- (void)resetOperatorClientState;
- (id)createOperatorConversationState:(id)arg1;
- (id)fetchConversationState:(id)arg1;
- (void)addClientCondition:(id)arg1 transitionId:(id)arg2 conversationId:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMArticleViewController : ICMContentContainerViewController <ICMArticleContentViewControllerDelegate>
{
    NSString *_articleId;
    id <ICMArticleViewControllerDelegate> _delegate;
    ICMConversation *_conversation;
    ICMConversationPart *_conversationPart;
}

@property(readonly, nonatomic) ICMConversationPart *conversationPart; // @synthesize conversationPart=_conversationPart;
@property(readonly, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(nonatomic) __weak id <ICMArticleViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *articleId; // @synthesize articleId=_articleId;
- (void).cxx_destruct;
- (void)closePressed;
- (void)didSendReaction;
- (id)metricInfo;
- (void)didClose;
- (void)viewDidLoad;
- (id)initWithArticleId:(id)arg1 conversation:(id)arg2 conversationPart:(id)arg3 delegate:(id)arg4;
- (id)initWithArticleId:(id)arg1 delegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMFakeComposerPersistManager : NSObject <ICMComposerPersistManager>
{
}

- (void)clearPersistedData;
- (void)clearPersistedDataWithConversationId:(id)arg1;
- (id)persistedStringWithConversationId:(id)arg1;
- (_Bool)doesPersistedStringExistWithConversationId:(id)arg1;
- (void)persistString:(id)arg1 conversationId:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMArticle : ICMSafeNetworkModel <NSCopying>
{
    NSString *_articleId;
    NSString *_articleTitle;
    IntercomSDK_ITBBlock *_card;
    NSArray *_blocks;
    NSDate *_createdAt;
    NSDate *_updatedAt;
    ICMReactionsSet *_reactionSet;
}

+ (_Bool)isLinkBlock:(id)arg1;
+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) ICMReactionsSet *reactionSet; // @synthesize reactionSet=_reactionSet;
@property(retain, nonatomic) NSDate *updatedAt; // @synthesize updatedAt=_updatedAt;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
@property(retain, nonatomic) NSArray *blocks; // @synthesize blocks=_blocks;
@property(retain, nonatomic) IntercomSDK_ITBBlock *card; // @synthesize card=_card;
@property(copy, nonatomic) NSString *articleTitle; // @synthesize articleTitle=_articleTitle;
@property(copy, nonatomic) NSString *articleId; // @synthesize articleId=_articleId;
- (void).cxx_destruct;
- (_Bool)isEqualToArticle:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;

@end

@interface ICMOperatorState : NSObject <NSCopying>
{
    _Bool _userDidType;
    _Bool _doesComposerContainText;
    _Bool _userDidChangeInput;
}

@property(nonatomic) _Bool userDidChangeInput; // @synthesize userDidChangeInput=_userDidChangeInput;
@property(nonatomic) _Bool doesComposerContainText; // @synthesize doesComposerContainText=_doesComposerContainText;
@property(nonatomic) _Bool userDidType; // @synthesize userDidType=_userDidType;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface ICMViewPreviousConversationsButton : UIButton
{
    _Bool _hasUnreadConversations;
    UIView *_unreadDotView;
}

@property(retain, nonatomic) UIView *unreadDotView; // @synthesize unreadDotView=_unreadDotView;
@property(nonatomic) _Bool hasUnreadConversations; // @synthesize hasUnreadConversations=_hasUnreadConversations;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)configureUnreadDotView;
- (id)init;

@end

@interface ICMErrorView : UIView
{
    id <ICMErrorDelegate> _delegate;
    UILabel *_titleLabel;
    UILabel *_messageLabel;
    ICMRoundedButton *_retryButton;
    NSString *_retryButtonTitle;
}

@property(retain, nonatomic) NSString *retryButtonTitle; // @synthesize retryButtonTitle=_retryButtonTitle;
@property(retain, nonatomic) ICMRoundedButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) UILabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak id <ICMErrorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setAlphaAnimated:(double)arg1;
- (void)createConstraints;
- (void)didSelectRetryButton;
- (void)createRetryButton;
- (void)createMessageLabel:(id)arg1;
- (void)createTitleLabel:(id)arg1;
- (id)initWithTitle:(id)arg1 message:(id)arg2 showRetryButton:(_Bool)arg3 retryButtonTitle:(id)arg4;
- (id)initWithTitle:(id)arg1 message:(id)arg2 showRetryButton:(_Bool)arg3;

@end

@interface ICMHelpCenterContainerViewController : ICMContentContainerViewController <ICMHelpCenterViewControllerDelegate>
{
    NSURL *_helpCenterUrl;
    ICMConversation *_conversation;
    id <ICMHelpCenterContainerViewControllerDelegate> _delegate;
}

@property(nonatomic) __weak id <ICMHelpCenterContainerViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) ICMConversation *conversation; // @synthesize conversation=_conversation;
@property(readonly, copy, nonatomic) NSURL *helpCenterUrl; // @synthesize helpCenterUrl=_helpCenterUrl;
- (void).cxx_destruct;
- (void)closeHelpCenterTapped;
- (id)metricInfo;
- (void)didClose;
- (id)initWithUrl:(id)arg1 conversation:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMHomescreen : ICMBaseResponse
{
    _Bool _hasMoreConversations;
    NSArray *_cardsArray;
    NSArray *_conversationsArray;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(nonatomic) _Bool hasMoreConversations; // @synthesize hasMoreConversations=_hasMoreConversations;
@property(retain, nonatomic) NSArray *conversationsArray; // @synthesize conversationsArray=_conversationsArray;
@property(retain, nonatomic) NSArray *cardsArray; // @synthesize cardsArray=_cardsArray;
- (void).cxx_destruct;
- (id)description;
- (unsigned long long)hash;
- (_Bool)isEqualToHomescreen:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setHasMoreConversationsValue:(id)arg1;
- (void)setConversations:(id)arg1;
- (void)setHomescreenCards:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMUserBlockAppearance : ICMAdminBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMReactionsSet : ICMSafeNetworkModel
{
    NSArray *_options;
    NSNumber *_selectedIndex;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(retain, nonatomic) NSNumber *selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(readonly, nonatomic) NSArray *options; // @synthesize options=_options;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToReactionsSet:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMBlockLoader : NSObject
{
}

+ (id)blockFromDictionary:(id)arg1 appearance:(id)arg2;

@end

@interface ICMChatHeadView : UIView
{
    ICMAvatarView *_avatarView;
    CAShapeLayer *_secondShadowLayer;
}

@property(retain, nonatomic) CAShapeLayer *secondShadowLayer; // @synthesize secondShadowLayer=_secondShadowLayer;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)setAvatarUrl:(id)arg1 participantName:(id)arg2;
- (id)initWithAvatarURL:(id)arg1 participantName:(id)arg2;

@end

@interface ICMTeamPresence : ICMSafeNetworkModel
{
    NSArray *_activeAdmins;
    NSDate *_lastActive;
    NSString *_officeHours;
    NSString *_expectedResponseDelay;
}

+ (void)updateSharedInstanceWithDictionary:(id)arg1;
+ (id)sharedInstance;
@property(copy, nonatomic) NSString *expectedResponseDelay; // @synthesize expectedResponseDelay=_expectedResponseDelay;
@property(copy, nonatomic) NSString *officeHours; // @synthesize officeHours=_officeHours;
@property(retain, nonatomic) NSDate *lastActive; // @synthesize lastActive=_lastActive;
@property(copy, nonatomic) NSArray *activeAdmins; // @synthesize activeAdmins=_activeAdmins;
- (void).cxx_destruct;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)init;

@end

@interface ICMLauncherView : UIButton
{
    ICMLauncherBadgeView *_badgeView;
}

@property(retain, nonatomic) ICMLauncherBadgeView *badgeView; // @synthesize badgeView=_badgeView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)animateLauncherToScale:(double)arg1;
- (struct CGSize)intrinsicContentSize;
- (void)layoutSubviews;
- (void)buttonReleased:(id)arg1;
- (void)buttonTapped:(id)arg1;
- (void)configUpdated:(id)arg1;
- (id)init;

@end

@interface ICMMessengerCardBlockAppearance : ICMAdminBlockAppearance
{
}

+ (id)sharedInstance;
- (id)init;

@end

@interface ICMBaseProfileView : UIView
{
    _Bool _highlighted;
    id <ICMProfileSizeDelegate> _delegate;
    NSCache *_sizeThatFitsCache;
}

@property(retain, nonatomic) NSCache *sizeThatFitsCache; // @synthesize sizeThatFitsCache=_sizeThatFitsCache;
@property(nonatomic) __weak id <ICMProfileSizeDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool highlighted; // @synthesize highlighted=_highlighted;
- (void).cxx_destruct;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (struct CGSize)uncachedSizeThatFits:(struct CGSize)arg1;
- (void)invalidateSizeThatFits;
- (void)layoutSubviewsForPercentExpanded:(double)arg1;
- (_Bool)canExpand;
- (double)currentPercentExpanded;
- (void)layoutSubviews;
- (id)initWithDelegate:(id)arg1;

@end

@interface ICMPersistenceProxy : NSObject
{
}

+ (id)unarchiveObjectWithFile:(id)arg1;
+ (_Bool)archiveRootObject:(id)arg1 toFile:(id)arg2;
+ (id)fileManager;

@end

@interface ICMWebHelpCenterJSBuilder : NSObject
{
}

+ (id)configureBridgeWithActionHandler:(id)arg1;

@end

@interface ICMGIFPlaceholderView : IntercomSDK_IIMMediaPlaceholderView
{
    UIView *loadingView;
    UIView *emtpyResultsView;
    UIView *errorView;
}

- (void)setErrorView:(id)arg1;
- (void)setEmtpyResultsView:(id)arg1;
- (void)setLoadingView:(id)arg1;
- (void).cxx_destruct;
- (void)didMoveToSuperview;
- (id)errorView;
- (id)loadingView;
- (id)emtpyResultsView;
- (id)init;

@end

@interface ICMConversationPart : ICMSafeNetworkModel <NSCopying, IntercomConversationPart>
{
    _Bool _displayTimestamp;
    _Bool _displayAvatar;
    _Bool _participantIsAdmin;
    _Bool _isInitialMessage;
    _Bool _hasArticleCard;
    NSDate *_createdAt;
    IntercomSDK_ITBUpload *_upload;
    NSArray *_blocks;
    NSArray *_blockDictionaries;
    long long _state;
    double _maxLayoutWidth;
    long long _deliveryOption;
    long long _seenState;
    NSString *_participantId;
    long long _partStyle;
    ICMReactionsSet *_reactionSet;
    NSString *_summary;
    NSString *_partId;
    NSString *_attribution;
    ICMParticipant *_participant;
    ICMEventData *_eventData;
    long long _displayStyle;
    NSArray *_replyOptionsArray;
    struct CGSize _estimatedSize;
}

+ (void)setReplyOptions:(id)arg1 forPart:(id)arg2;
+ (id)determineAppearanceForBlock:(id)arg1;
+ (_Bool)isArticleCardBlock:(id)arg1;
+ (_Bool)isMessengerCardBlock:(id)arg1;
+ (_Bool)isLinkListBlock:(id)arg1;
+ (_Bool)isLinkBlock:(id)arg1;
+ (id)blockAppearanceForPart:(id)arg1;
+ (id)sendingPartWithBlocks:(id)arg1 upload:(id)arg2;
+ (void)setParticipantDetails:(id)arg1 onPart:(id)arg2;
+ (id)typingPartForEvent:(id)arg1;
+ (id)instanceFromDictionary:(id)arg1 displayStyle:(long long)arg2;
@property(nonatomic) _Bool hasArticleCard; // @synthesize hasArticleCard=_hasArticleCard;
@property(retain, nonatomic) NSArray *replyOptionsArray; // @synthesize replyOptionsArray=_replyOptionsArray;
@property(nonatomic) long long displayStyle; // @synthesize displayStyle=_displayStyle;
@property(retain, nonatomic) ICMEventData *eventData; // @synthesize eventData=_eventData;
@property(retain, nonatomic) ICMParticipant *participant; // @synthesize participant=_participant;
@property(copy, nonatomic) NSString *attribution; // @synthesize attribution=_attribution;
@property(copy, nonatomic) NSString *partId; // @synthesize partId=_partId;
@property(copy, nonatomic) NSString *summary; // @synthesize summary=_summary;
@property(retain, nonatomic) ICMReactionsSet *reactionSet; // @synthesize reactionSet=_reactionSet;
@property(nonatomic) long long partStyle; // @synthesize partStyle=_partStyle;
@property(copy, nonatomic) NSString *participantId; // @synthesize participantId=_participantId;
@property(nonatomic) long long seenState; // @synthesize seenState=_seenState;
@property(nonatomic) long long deliveryOption; // @synthesize deliveryOption=_deliveryOption;
@property(nonatomic) _Bool isInitialMessage; // @synthesize isInitialMessage=_isInitialMessage;
@property(nonatomic) _Bool participantIsAdmin; // @synthesize participantIsAdmin=_participantIsAdmin;
@property(nonatomic) _Bool displayAvatar; // @synthesize displayAvatar=_displayAvatar;
@property(nonatomic) _Bool displayTimestamp; // @synthesize displayTimestamp=_displayTimestamp;
@property(nonatomic) struct CGSize estimatedSize; // @synthesize estimatedSize=_estimatedSize;
@property(nonatomic) double maxLayoutWidth; // @synthesize maxLayoutWidth=_maxLayoutWidth;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSArray *blockDictionaries; // @synthesize blockDictionaries=_blockDictionaries;
@property(retain, nonatomic) NSArray *blocks; // @synthesize blocks=_blocks;
@property(retain, nonatomic) IntercomSDK_ITBUpload *upload; // @synthesize upload=_upload;
@property(retain, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
- (void).cxx_destruct;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;
- (id)removeFallbackURLForFullChats:(id)arg1;
- (_Bool)isEvent;
- (_Bool)isQuickReply;
- (_Bool)isSingleMessengerCard;
- (_Bool)isArticleContextCard;
- (_Bool)isLinkListCard;
- (_Bool)isConversationRatingCard;
- (_Bool)isLinkCard;
- (_Bool)isLinkContextCard;
- (_Bool)hasAttachments;
- (_Bool)isTypingPart;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface ICMInboxViewController : ICMBaseViewController <ICMErrorDelegate, ICMInboxDelegate>
{
    _Bool _isLoading;
    id <ICMOnInboxDataLoadAction> _inboxLoadAction;
    ICMInboxInfoView *_infoView;
    UITableView *_tableView;
    NSArray *_conversationsArray;
    ICMLoadingView *_loadingView;
    ICMStartConversationButton *_startNewConversationButton;
    NSLayoutConstraint *_startNewConversationWidthConstraint;
    NSLayoutConstraint *_tableViewTopConstraint;
}

@property(retain, nonatomic) NSLayoutConstraint *tableViewTopConstraint; // @synthesize tableViewTopConstraint=_tableViewTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *startNewConversationWidthConstraint; // @synthesize startNewConversationWidthConstraint=_startNewConversationWidthConstraint;
@property(retain, nonatomic) ICMStartConversationButton *startNewConversationButton; // @synthesize startNewConversationButton=_startNewConversationButton;
@property(nonatomic) _Bool isLoading; // @synthesize isLoading=_isLoading;
@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(copy, nonatomic) NSArray *conversationsArray; // @synthesize conversationsArray=_conversationsArray;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) ICMInboxInfoView *infoView; // @synthesize infoView=_infoView;
@property(retain, nonatomic) id <ICMOnInboxDataLoadAction> inboxLoadAction; // @synthesize inboxLoadAction=_inboxLoadAction;
- (void).cxx_destruct;
- (void)dealloc;
- (void)fireSelectConversationMetricEvent:(id)arg1;
- (void)reloadInbox;
- (void)hideInfoView;
- (void)displayViewWithTitle:(id)arg1 messageKey:(id)arg2 noAppMessageKey:(id)arg3 showRetryButton:(_Bool)arg4;
- (void)showErrorView;
- (void)showZeroConversationsView;
- (void)hideLoadingView;
- (void)showLoadingView;
- (void)sizeStartConversationButtonThatFits:(struct CGSize)arg1;
- (void)createStartNewConversationButton;
- (void)createLoadingView;
- (void)navigateToConversation:(id)arg1;
- (void)didSelectNewMessage;
- (void)setUpInbox;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (_Bool)shouldFetchNextPage;
- (void)didSelectRetryButton;
- (void)fetchPagedConversations;
- (void)fetchConversations;
- (void)configureNewMessageButton;
- (void)createTableView;
- (void)animateViewsAppearing;
- (void)animateViewsDisappearing;
- (void)viewDidLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)configureNavBar;
- (void)loadView;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMActionSheet : UIActionSheet
{
    ICMConversationPart *_part;
}

@property(nonatomic) __weak ICMConversationPart *part; // @synthesize part=_part;
- (void).cxx_destruct;
- (_Bool)canBecomeFirstResponder;

@end

@interface ICMConversationPageResponse : ICMSafeNetworkModel
{
    _Bool _morePagesAvailable;
    NSArray *_conversations;
}

+ (id)instanceFromDictionary:(id)arg1;
@property(nonatomic) _Bool morePagesAvailable; // @synthesize morePagesAvailable=_morePagesAvailable;
@property(copy, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToPageResponse:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setAttributesFromDictionary:(id)arg1;

@end

@interface ICMUserUpdateBatcher : NSObject
{
    ICMUserUpdateDeduper *_userUpdateDeduper;
    ICMUserUpdateRequest *_pendingUpdate;
}

+ (id)sharedInstance;
@property(retain, nonatomic) ICMUserUpdateRequest *pendingUpdate; // @synthesize pendingUpdate=_pendingUpdate;
@property(retain, nonatomic) ICMUserUpdateDeduper *userUpdateDeduper; // @synthesize userUpdateDeduper=_userUpdateDeduper;
- (void).cxx_destruct;
- (void)submitUpdate:(id)arg1 delay:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)resetPendingUpdate;
- (void)submitPendingUpdateWithDelay:(double)arg1;
- (void)resetDeduping;
- (void)submitPendingUpdate;
- (void)updateUser:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface ICMAppWallpaperView : UIView
{
    UIImageView *_wallpaperImageView;
    ICMGradientView *_gradientView;
}

@property(retain, nonatomic) ICMGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(retain, nonatomic) UIImageView *wallpaperImageView; // @synthesize wallpaperImageView=_wallpaperImageView;
- (void).cxx_destruct;
- (void)dealloc;
- (void)configUpdated:(id)arg1;
- (void)backgroundImageReady:(id)arg1;
- (void)configureGradientViewColours;
- (void)createGradientWallpaperView;
- (id)createWallpaperImageWithGradient:(id)arg1;
- (void)updateWallpaperImageIfNeeded;
- (void)layoutSubviews;
- (void)createWallpaperImageView;
- (void)createBackgroundWallpaper;
- (id)init;

@end

@interface ICMHomescreenErrorCell : UICollectionViewCell
{
    id <ICMHomescreenAppsErrorCellDelegate> _delegate;
    UILabel *_titleLabel;
    ICMRoundedButton *_retryButton;
    ICMLoadingView *_loadingView;
}

@property(retain, nonatomic) ICMLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) ICMRoundedButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak id <ICMHomescreenAppsErrorCellDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)retryButtonPressed;
- (void)showLoadingView:(_Bool)arg1;
- (void)createLoadingView;
- (void)createTitleLabel;
- (void)createRetryButton;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMTeamProfileView : ICMBaseProfileView
{
    _Bool _shouldShowOfficeHours;
    UIView *_contentView;
    UILabel *_introLabel;
    UILabel *_responseTimeLabel;
    UIView *_officeHoursBanner;
    ICMTeammateAvatarView *_firstAvatarView;
    ICMTeammateAvatarView *_secondAvatarView;
    ICMTeammateAvatarView *_thirdAvatarView;
}

+ (void)updateAvatarView:(id)arg1 forAdminOrNil:(id)arg2;
@property(nonatomic) _Bool shouldShowOfficeHours; // @synthesize shouldShowOfficeHours=_shouldShowOfficeHours;
@property(retain, nonatomic) ICMTeammateAvatarView *thirdAvatarView; // @synthesize thirdAvatarView=_thirdAvatarView;
@property(retain, nonatomic) ICMTeammateAvatarView *secondAvatarView; // @synthesize secondAvatarView=_secondAvatarView;
@property(retain, nonatomic) ICMTeammateAvatarView *firstAvatarView; // @synthesize firstAvatarView=_firstAvatarView;
@property(retain, nonatomic) UIView *officeHoursBanner; // @synthesize officeHoursBanner=_officeHoursBanner;
@property(retain, nonatomic) UILabel *responseTimeLabel; // @synthesize responseTimeLabel=_responseTimeLabel;
@property(retain, nonatomic) UILabel *introLabel; // @synthesize introLabel=_introLabel;
@property(retain, nonatomic) UIView *contentView; // @synthesize contentView=_contentView;
- (void).cxx_destruct;
- (struct CGSize)uncachedSizeThatFits:(struct CGSize)arg1;
- (void)layoutAvatarsWithYOffset:(double)arg1;
- (void)layoutIntroLabelWithYOffset:(double)arg1;
- (void)layoutSubviewsForPercentExpanded:(double)arg1;
- (void)updateTitleLabelWithPercentExpanded:(double)arg1;
- (void)update;
- (id)initWithDelegate:(id)arg1;

@end

@interface ICMInboxTitleView : UIView
{
    UILabel *_titleLabel;
}

@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)addTitleText;
- (id)init;

@end

@interface ICMAvatarReusableView : IntercomSDK_IntercomConversationReusableView
{
    ICMAvatarView *_avatarView;
}

@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
- (void).cxx_destruct;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMMessengerSheetViewController : ICMBaseViewController <ICMErrorDelegate>
{
    NSURL *_sheetURL;
    WKWebView *_sheetWebview;
    id <ICMMessengerSheetViewControllerDelegate> _delegate;
    NSDictionary *_sheetParams;
    UIProgressView *_progressView;
    ICMErrorView *_errorView;
    NSTimer *_progressTimer;
}

@property(retain, nonatomic) NSTimer *progressTimer; // @synthesize progressTimer=_progressTimer;
@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
@property(retain, nonatomic) UIProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) NSDictionary *sheetParams; // @synthesize sheetParams=_sheetParams;
@property(retain, nonatomic) id <ICMMessengerSheetViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) WKWebView *sheetWebview; // @synthesize sheetWebview=_sheetWebview;
@property(retain, nonatomic) NSURL *sheetURL; // @synthesize sheetURL=_sheetURL;
- (void).cxx_destruct;
- (void)dealloc;
- (void)closeSheetAndReloadConversation;
- (void)closeSheet;
- (void)didSelectRetryButton;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)showSheetSubmissionError:(id)arg1;
- (void)setSheetTitle:(id)arg1;
- (void)handleSubmitSheet:(id)arg1;
- (id)parseScriptMessage:(id)arg1;
- (void)userContentController:(id)arg1 didReceiveScriptMessage:(id)arg2;
- (void)slowlyIncrementProgressView;
- (void)hideProgressView;
- (void)showProgressViewWithProgress:(float)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)convertJSONToString:(id)arg1;
- (void)loadSheet:(id)arg1;
- (void)fetchSheetData;
- (void)layoutErrorView;
- (void)showErrorView;
- (void)setupProgressview;
- (void)setupNavigationBar;
- (void)createWebview;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (id)initWithSheetURL:(id)arg1 params:(id)arg2 delegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface ICMNavigationBarUpdater : NSObject
{
}

+ (void)styleNavigationBar:(id)arg1;

@end

@interface ICMInAppHeaderViewController : UIViewController
{
    ICMAvatarView *_avatarView;
    UIButton *_closeButton;
    id <ICMInAppHeaderDelegate> _delegate;
    double _avatarDiameter;
    UITextView *_adminTextView;
    NSLayoutConstraint *_closeButtonRightConstraint;
    NSLayoutConstraint *_adminTextViewHeightConstraint;
}

@property(nonatomic) __weak NSLayoutConstraint *adminTextViewHeightConstraint; // @synthesize adminTextViewHeightConstraint=_adminTextViewHeightConstraint;
@property(nonatomic) __weak NSLayoutConstraint *closeButtonRightConstraint; // @synthesize closeButtonRightConstraint=_closeButtonRightConstraint;
@property(retain, nonatomic) UITextView *adminTextView; // @synthesize adminTextView=_adminTextView;
@property(nonatomic) double avatarDiameter; // @synthesize avatarDiameter=_avatarDiameter;
@property(nonatomic) __weak id <ICMInAppHeaderDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(retain, nonatomic) ICMAvatarView *avatarView; // @synthesize avatarView=_avatarView;
- (void).cxx_destruct;
- (void)setCloseButtonImage:(id)arg1;
- (void)configureForParticipant:(id)arg1 nameAttributes:(id)arg2;
- (void)closePressed;
- (void)updateViewConstraints;
- (void)loadView;
- (id)initWithAvatarDiameter:(double)arg1;

@end

@interface ICMHomescreenErrorView : UIView
{
    id <ICMErrorDelegate> _delegate;
    ICMErrorView *_errorView;
}

@property(retain, nonatomic) ICMErrorView *errorView; // @synthesize errorView=_errorView;
@property(nonatomic) __weak id <ICMErrorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)configureErrorView;
- (id)initWithDelegate:(id)arg1;

@end

@interface ICMRetryButtonReusableView : IntercomSDK_IntercomConversationReusableView
{
    ICMConversationPart *_part;
    UIButton *_failedMessageButton;
}

@property(retain, nonatomic) UIButton *failedMessageButton; // @synthesize failedMessageButton=_failedMessageButton;
@property(nonatomic) __weak ICMConversationPart *part; // @synthesize part=_part;
- (void).cxx_destruct;
- (void)configureWithPart:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface ICMMaxSizeQueue : NSObject
{
    unsigned long long _maxSize;
    NSMutableArray *_queue;
}

@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long maxSize; // @synthesize maxSize=_maxSize;
- (void).cxx_destruct;
- (unsigned long long)size;
- (id)front;
- (void)enqueueObject:(id)arg1;
- (id)initWithMaxSize:(unsigned long long)arg1;

@end

@interface ICMOpsMetricTracker : NSObject
{
    NSMutableSet *_actions;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableSet *actions; // @synthesize actions=_actions;
- (void).cxx_destruct;
- (void)clear;
- (id)findStartAction:(id)arg1;
- (void)trackOpsEventForType:(id)arg1;
- (void)trackEvent:(id)arg1 withName:(id)arg2;
- (id)init;

@end

@interface ICMAssets : NSObject
{
}

+ (id)soundForIncomingOperatorMessage;
+ (id)soundForIncomingAdminMessage;
+ (id)soundForMessageSendingFailure;
+ (id)soundForMessageSending;
+ (id)urlForFilename:(id)arg1;
+ (id)imageNamed:(id)arg1;
+ (id)tintableImageNamed:(id)arg1;
+ (id)teammateIntroIcon;
+ (id)teammateRoleIcon;
+ (id)teammateTimeIcon;
+ (id)footerLinkIcon;
+ (id)gifInputSelectedIcon;
+ (id)gifInputIcon;
+ (id)expandPhotosIcon;
+ (id)photoInputSelectedIcon;
+ (id)photoInputIcon;
+ (id)textInputSelectedIcon;
+ (id)textInputIcon;
+ (id)homescreenFailedImage;
+ (id)undoIcon;
+ (id)cancelIcon;
+ (id)sendIcon;
+ (id)snoozeIcon;
+ (id)linkedinIcon;
+ (id)twitterIcon;
+ (id)launcherImage;
+ (id)chatBubbleImage;
+ (id)uploadButtonImage;
+ (id)defaultAvatarImage;
+ (id)initialsImage:(id)arg1 diameter:(double)arg2;
+ (id)defaultAvatarImageWithInitials:(id)arg1 diameter:(double)arg2;
+ (id)startConversationImage;
+ (id)closeImage;
+ (id)spinnerImage;
+ (id)openPostFromCardImage;
+ (id)intercomLogoImage;
+ (id)messageFailedImage;
+ (id)closeNoteImage;
+ (id)closePostImage;
+ (id)backButtonImage;

@end

@interface ICMLinkCardView : ICMCardView
{
    _Bool _constraintsApplied;
    UILabel *_dayDividerLabel;
    UILabel *_askedAboutLabel;
}

+ (struct CGSize)estimatedSizeForPart:(id)arg1 withinWidth:(double)arg2;
@property(nonatomic) _Bool constraintsApplied; // @synthesize constraintsApplied=_constraintsApplied;
@property(retain, nonatomic) UILabel *askedAboutLabel; // @synthesize askedAboutLabel=_askedAboutLabel;
@property(retain, nonatomic) UILabel *dayDividerLabel; // @synthesize dayDividerLabel=_dayDividerLabel;
- (void).cxx_destruct;
- (void)configureWithPart:(id)arg1 reloadDelegate:(id)arg2;
- (void)prepareForReuse;
- (void)updateCardViewConstraints:(_Bool)arg1;
- (void)layoutAskedAboutLabel;
- (void)layoutDaydividerLabel;
- (void)createAskedAboutLabel;
- (void)createDayDividerLabel;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface PodsDummy_Pods_IntercomSDK_Static : NSObject
{
}

@end

@interface IntercomSDK_PodsDummy_PINCache : NSObject
{
}

@end

@interface IntercomSDK_PINCache : NSObject
{
    NSString *_name;
    struct dispatch_queue_s *_concurrentQueue;
    IntercomSDK_PINDiskCache *_diskCache;
    IntercomSDK_PINMemoryCache *_memoryCache;
}

+ (id)sharedCache;
@property(readonly) IntercomSDK_PINMemoryCache *memoryCache; // @synthesize memoryCache=_memoryCache;
@property(readonly) IntercomSDK_PINDiskCache *diskCache; // @synthesize diskCache=_diskCache;
@property(nonatomic) struct dispatch_queue_s *concurrentQueue; // @synthesize concurrentQueue=_concurrentQueue;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)removeAllObjects;
- (void)trimToDate:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
@property(readonly) unsigned long long diskByteCount;
- (void)trimToDate:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeAllObjects:(CDUnknownBlockType)arg1;
- (void)removeObjectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)objectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (id)description;
- (id)initWithName:(id)arg1 rootPath:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface IntercomSDK_PINDiskCache : NSObject
{
    _Bool _ttlCache;
    CDUnknownBlockType _willAddObjectBlock;
    CDUnknownBlockType _willRemoveObjectBlock;
    CDUnknownBlockType _willRemoveAllObjectsBlock;
    CDUnknownBlockType _didAddObjectBlock;
    CDUnknownBlockType _didRemoveObjectBlock;
    CDUnknownBlockType _didRemoveAllObjectsBlock;
    unsigned long long _byteLimit;
    double _ageLimit;
    NSString *_name;
    NSURL *_cacheURL;
    unsigned long long _byteCount;
    struct dispatch_queue_s *_asyncQueue;
    struct dispatch_semaphore_s *_lockSemaphore;
    NSMutableDictionary *_dates;
    NSMutableDictionary *_sizes;
}

+ (void)emptyTrash;
+ (_Bool)moveItemAtURLToTrash:(id)arg1;
+ (id)sharedTrashURL;
+ (struct dispatch_queue_s *)sharedTrashQueue;
+ (id)sharedCache;
@property(retain, nonatomic) NSMutableDictionary *sizes; // @synthesize sizes=_sizes;
@property(retain, nonatomic) NSMutableDictionary *dates; // @synthesize dates=_dates;
@property(nonatomic) struct dispatch_semaphore_s *lockSemaphore; // @synthesize lockSemaphore=_lockSemaphore;
@property(nonatomic) struct dispatch_queue_s *asyncQueue; // @synthesize asyncQueue=_asyncQueue;
@property unsigned long long byteCount; // @synthesize byteCount=_byteCount;
@property(retain, nonatomic) NSURL *cacheURL; // @synthesize cacheURL=_cacheURL;
@property(readonly) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)unlock;
- (void)lock;
@property(nonatomic, getter=isTTLCache) _Bool ttlCache; // @synthesize ttlCache=_ttlCache;
@property double ageLimit; // @synthesize ageLimit=_ageLimit;
@property unsigned long long byteLimit; // @synthesize byteLimit=_byteLimit;
@property(copy) CDUnknownBlockType didRemoveAllObjectsBlock; // @synthesize didRemoveAllObjectsBlock=_didRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType didRemoveObjectBlock; // @synthesize didRemoveObjectBlock=_didRemoveObjectBlock;
@property(copy) CDUnknownBlockType didAddObjectBlock; // @synthesize didAddObjectBlock=_didAddObjectBlock;
@property(copy) CDUnknownBlockType willRemoveAllObjectsBlock; // @synthesize willRemoveAllObjectsBlock=_willRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType willRemoveObjectBlock; // @synthesize willRemoveObjectBlock=_willRemoveObjectBlock;
@property(copy) CDUnknownBlockType willAddObjectBlock; // @synthesize willAddObjectBlock=_willAddObjectBlock;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)trimToSizeByDate:(unsigned long long)arg1;
- (void)trimToDate:(id)arg1;
- (void)trimToSize:(unsigned long long)arg1;
- (void)removeObjectForKey:(id)arg1 fileURL:(id *)arg2;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 fileURL:(id *)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)fileURLForKey:(id)arg1;
- (id)objectForKey:(id)arg1 fileURL:(id *)arg2;
- (id)objectForKey:(id)arg1;
- (void)synchronouslyLockFileAccessWhileExecutingBlock:(CDUnknownBlockType)arg1;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)removeAllObjects:(CDUnknownBlockType)arg1;
- (void)trimToSizeByDate:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)trimToDate:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)trimToSize:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeObjectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)fileURLForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)objectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)lockFileAccessWhileExecutingBlock:(CDUnknownBlockType)arg1;
- (void)trimToAgeLimitRecursively;
- (void)trimDiskToDate:(id)arg1;
- (void)trimDiskToSizeByDate:(unsigned long long)arg1;
- (void)trimDiskToSize:(unsigned long long)arg1;
- (_Bool)removeFileAndExecuteBlocksForKey:(id)arg1;
- (_Bool)setFileModificationDate:(id)arg1 forURL:(id)arg2;
- (void)initializeDiskProperties;
- (_Bool)createCacheDirectory;
- (id)decodedString:(id)arg1;
- (id)encodedString:(id)arg1;
- (id)keyForEncodedFileURL:(id)arg1;
- (id)encodedFileURLForKey:(id)arg1;
- (id)description;
- (id)initWithName:(id)arg1 rootPath:(id)arg2;
- (id)initWithName:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface IntercomSDK_PINBackgroundTask : NSObject
{
    unsigned long long _taskID;
}

+ (id)start;
+ (_Bool)isAppExtension;
@property unsigned long long taskID; // @synthesize taskID=_taskID;
- (void)end;
- (id)init;

@end

@interface IntercomSDK_PINMemoryCache : NSObject
{
    _Bool _ttlCache;
    _Bool _removeAllObjectsOnMemoryWarning;
    _Bool _removeAllObjectsOnEnteringBackground;
    double _ageLimit;
    unsigned long long _costLimit;
    unsigned long long _totalCost;
    CDUnknownBlockType _willAddObjectBlock;
    CDUnknownBlockType _willRemoveObjectBlock;
    CDUnknownBlockType _willRemoveAllObjectsBlock;
    CDUnknownBlockType _didAddObjectBlock;
    CDUnknownBlockType _didRemoveObjectBlock;
    CDUnknownBlockType _didRemoveAllObjectsBlock;
    CDUnknownBlockType _didReceiveMemoryWarningBlock;
    CDUnknownBlockType _didEnterBackgroundBlock;
    struct dispatch_queue_s *_concurrentQueue;
    struct dispatch_semaphore_s *_lockSemaphore;
    NSMutableDictionary *_dictionary;
    NSMutableDictionary *_dates;
    NSMutableDictionary *_costs;
}

+ (id)sharedCache;
@property(retain, nonatomic) NSMutableDictionary *costs; // @synthesize costs=_costs;
@property(retain, nonatomic) NSMutableDictionary *dates; // @synthesize dates=_dates;
@property(retain, nonatomic) NSMutableDictionary *dictionary; // @synthesize dictionary=_dictionary;
@property(nonatomic) struct dispatch_semaphore_s *lockSemaphore; // @synthesize lockSemaphore=_lockSemaphore;
@property _Bool removeAllObjectsOnEnteringBackground; // @synthesize removeAllObjectsOnEnteringBackground=_removeAllObjectsOnEnteringBackground;
@property _Bool removeAllObjectsOnMemoryWarning; // @synthesize removeAllObjectsOnMemoryWarning=_removeAllObjectsOnMemoryWarning;
@property(nonatomic) struct dispatch_queue_s *concurrentQueue; // @synthesize concurrentQueue=_concurrentQueue;
- (void).cxx_destruct;
- (void)unlock;
- (void)lock;
@property(nonatomic, getter=isTTLCache) _Bool ttlCache; // @synthesize ttlCache=_ttlCache;
@property(readonly) unsigned long long totalCost; // @synthesize totalCost=_totalCost;
@property unsigned long long costLimit; // @synthesize costLimit=_costLimit;
@property double ageLimit; // @synthesize ageLimit=_ageLimit;
@property(copy) CDUnknownBlockType didEnterBackgroundBlock; // @synthesize didEnterBackgroundBlock=_didEnterBackgroundBlock;
@property(copy) CDUnknownBlockType didReceiveMemoryWarningBlock; // @synthesize didReceiveMemoryWarningBlock=_didReceiveMemoryWarningBlock;
@property(copy) CDUnknownBlockType didRemoveAllObjectsBlock; // @synthesize didRemoveAllObjectsBlock=_didRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType didRemoveObjectBlock; // @synthesize didRemoveObjectBlock=_didRemoveObjectBlock;
@property(copy) CDUnknownBlockType didAddObjectBlock; // @synthesize didAddObjectBlock=_didAddObjectBlock;
@property(copy) CDUnknownBlockType willRemoveAllObjectsBlock; // @synthesize willRemoveAllObjectsBlock=_willRemoveAllObjectsBlock;
@property(copy) CDUnknownBlockType willRemoveObjectBlock; // @synthesize willRemoveObjectBlock=_willRemoveObjectBlock;
@property(copy) CDUnknownBlockType willAddObjectBlock; // @synthesize willAddObjectBlock=_willAddObjectBlock;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1;
- (void)removeAllObjects;
- (void)trimToCostByDate:(unsigned long long)arg1;
- (void)trimToCost:(unsigned long long)arg1;
- (void)trimToDate:(id)arg1;
- (void)removeObjectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2 withCost:(unsigned long long)arg3;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (void)enumerateObjectsWithBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)removeAllObjects:(CDUnknownBlockType)arg1;
- (void)trimToCostByDate:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)trimToCost:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)trimToDate:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)removeObjectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)setObject:(id)arg1 forKey:(id)arg2 withCost:(unsigned long long)arg3 block:(CDUnknownBlockType)arg4;
- (void)setObject:(id)arg1 forKey:(id)arg2 block:(CDUnknownBlockType)arg3;
- (void)objectForKey:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)trimToAgeLimitRecursively;
- (void)trimToCostLimitByDate:(unsigned long long)arg1;
- (void)trimToCostLimit:(unsigned long long)arg1;
- (void)trimMemoryToDate:(id)arg1;
- (void)removeObjectAndExecuteBlocksForKey:(id)arg1;
- (void)didReceiveEnterBackgroundNotification:(id)arg1;
- (void)didReceiveMemoryWarningNotification:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface IntercomSDK_PINDataTaskOperation : NSOperation <NSURLSessionDelegate>
{
    NSRecursiveLock *_lock;
    NSURLSessionDataTask *_dataTask;
    unsigned long long _state;
}

+ (id)dataTaskOperationWithSessionManager:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSURLSessionDataTask *dataTask; // @synthesize dataTask=_dataTask;
- (void).cxx_destruct;
- (void)unlock;
- (void)lock;
- (void)cancelTask;
- (void)finish;
- (_Bool)isFinished;
- (_Bool)isExecuting;
- (_Bool)isConcurrent;
- (void)cancel;
- (void)start;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PINProgressiveImage : NSObject
{
    _Bool _isProgressiveJPEG;
    float _bytesPerSecond;
    NSArray *_progressThresholds;
    double _estimatedRemainingTimeThreshold;
    double _startTime;
    NSMutableData *_mutableData;
    long long _expectedNumberOfBytes;
    struct CGImageSource *_imageSource;
    unsigned long long _currentThreshold;
    unsigned long long _scannedByte;
    long long _sosCount;
    NSLock *_lock;
    struct CGSize _size;
}

@property(retain, nonatomic) NSLock *lock; // @synthesize lock=_lock;
@property(nonatomic) long long sosCount; // @synthesize sosCount=_sosCount;
@property(nonatomic) unsigned long long scannedByte; // @synthesize scannedByte=_scannedByte;
@property(nonatomic) float bytesPerSecond; // @synthesize bytesPerSecond=_bytesPerSecond;
@property(nonatomic) unsigned long long currentThreshold; // @synthesize currentThreshold=_currentThreshold;
@property(nonatomic) _Bool isProgressiveJPEG; // @synthesize isProgressiveJPEG=_isProgressiveJPEG;
@property(nonatomic) struct CGSize size; // @synthesize size=_size;
@property(nonatomic) struct CGImageSource *imageSource; // @synthesize imageSource=_imageSource;
@property(nonatomic) long long expectedNumberOfBytes; // @synthesize expectedNumberOfBytes=_expectedNumberOfBytes;
@property(retain, nonatomic) NSMutableData *mutableData; // @synthesize mutableData=_mutableData;
- (void).cxx_destruct;
- (id)postProcessImage:(id)arg1 withProgress:(float)arg2;
- (double)estimatedRemainingTime;
- (_Bool)hasCompletedFirstScan;
- (_Bool)scanForSOSinData:(id)arg1 startByte:(unsigned long long)arg2 scannedByte:(unsigned long long *)arg3;
- (id)data;
- (id)currentImageBlurred:(_Bool)arg1 maxProgressiveRenderSize:(struct CGSize)arg2 renderedImageQuality:(out double *)arg3;
- (void)updateProgressiveImageWithData:(id)arg1 expectedNumberOfBytes:(long long)arg2;
@property double startTime; // @synthesize startTime=_startTime;
@property double estimatedRemainingTimeThreshold; // @synthesize estimatedRemainingTimeThreshold=_estimatedRemainingTimeThreshold;
@property(copy) NSArray *progressThresholds; // @synthesize progressThresholds=_progressThresholds;
- (void)dealloc;
- (id)init;

@end

@interface IntercomSDK_PodsDummy_PINRemoteImage : NSObject
{
}

@end

@interface IntercomSDK_PINRemoteImageCallbacks : NSObject
{
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _progressImageBlock;
    CDUnknownBlockType _progressDownloadBlock;
    double _requestTime;
}

@property(nonatomic) double requestTime; // @synthesize requestTime=_requestTime;
@property(copy, nonatomic) CDUnknownBlockType progressDownloadBlock; // @synthesize progressDownloadBlock=_progressDownloadBlock;
@property(copy, nonatomic) CDUnknownBlockType progressImageBlock; // @synthesize progressImageBlock=_progressImageBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
- (void).cxx_destruct;

@end

@interface IntercomSDK_PINRemoteImageCategoryManager : NSObject
{
}

+ (void)setImageOnView:(id)arg1 fromURLs:(id)arg2 placeholderImage:(id)arg3 processorKey:(id)arg4 processor:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
+ (void)cancelImageDownloadOnView:(id)arg1;
+ (void)setUpdateWithProgressOnView:(_Bool)arg1 onView:(id)arg2;
+ (_Bool)updateWithProgressOnView:(id)arg1;
+ (void)setDownloadImageOperationUUID:(id)arg1 onView:(id)arg2;
+ (id)downloadImageOperationUUIDOnView:(id)arg1;
+ (void)setImageOnView:(id)arg1 fromURLs:(id)arg2 placeholderImage:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)setImageOnView:(id)arg1 fromURLs:(id)arg2 placeholderImage:(id)arg3;
+ (void)setImageOnView:(id)arg1 fromURLs:(id)arg2;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 placeholderImage:(id)arg3 processorKey:(id)arg4 processor:(CDUnknownBlockType)arg5;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 placeholderImage:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2 placeholderImage:(id)arg3;
+ (void)setImageOnView:(id)arg1 fromURL:(id)arg2;

@end

@interface IntercomSDK_PINRemoteImageDownloadTask : IntercomSDK_PINRemoteImageTask
{
    _Bool _canSetDataTaskPriority;
    _Bool _hasProgressBlocks;
    IntercomSDK_PINDataTaskOperation *_urlSessionTaskOperation;
    double _sessionTaskStartTime;
    double _sessionTaskEndTime;
    IntercomSDK_PINProgressiveImage *_progressImage;
}

@property(retain, nonatomic) IntercomSDK_PINProgressiveImage *progressImage; // @synthesize progressImage=_progressImage;
@property(nonatomic) _Bool hasProgressBlocks; // @synthesize hasProgressBlocks=_hasProgressBlocks;
@property(nonatomic) double sessionTaskEndTime; // @synthesize sessionTaskEndTime=_sessionTaskEndTime;
@property(nonatomic) double sessionTaskStartTime; // @synthesize sessionTaskStartTime=_sessionTaskStartTime;
@property(retain, nonatomic) IntercomSDK_PINDataTaskOperation *urlSessionTaskOperation; // @synthesize urlSessionTaskOperation=_urlSessionTaskOperation;
- (void).cxx_destruct;
- (void)setPriority:(unsigned long long)arg1;
- (_Bool)cancelWithUUID:(id)arg1 manager:(id)arg2;
- (void)callProgressImageWithQueue:(id)arg1 withImage:(id)arg2 renderedImageQuality:(double)arg3;
- (void)callProgressDownloadWithQueue:(id)arg1 completedBytes:(long long)arg2 totalBytes:(long long)arg3;
- (id)init;

@end

@interface IntercomSDK_PINRemoteImageManager : NSObject <PINURLSessionManagerDelegate>
{
    NSObject<OS_dispatch_queue> *_callbackQueue;
    IntercomSDK_PINRemoteLock *_lock;
    NSOperationQueue *_concurrentOperationQueue;
    NSOperationQueue *_urlSessionTaskQueue;
    _Bool _shouldBlurProgressive;
    _Bool _shouldUpgradeLowQualityImages;
    float _highQualityBPSThreshold;
    float _lowQualityBPSThreshold;
    IntercomSDK_PINCache *_cache;
    IntercomSDK_PINURLSessionManager *_sessionManager;
    double _timeout;
    NSMutableDictionary *_tasks;
    NSMutableSet *_canceledTasks;
    NSArray *_progressThresholds;
    double _estimatedRemainingTimeThreshold;
    NSMutableArray *_taskQOS;
    CDUnknownBlockType _authenticationChallengeHandler;
    struct CGSize _maxProgressiveRenderSize;
}

+ (void)setSharedImageManagerWithConfiguration:(id)arg1;
+ (id)sharedImageManager;
+ (_Bool)supportsQOS;
@property(copy, nonatomic) CDUnknownBlockType authenticationChallengeHandler; // @synthesize authenticationChallengeHandler=_authenticationChallengeHandler;
@property(nonatomic) _Bool shouldUpgradeLowQualityImages; // @synthesize shouldUpgradeLowQualityImages=_shouldUpgradeLowQualityImages;
@property(nonatomic) float lowQualityBPSThreshold; // @synthesize lowQualityBPSThreshold=_lowQualityBPSThreshold;
@property(nonatomic) float highQualityBPSThreshold; // @synthesize highQualityBPSThreshold=_highQualityBPSThreshold;
@property(retain, nonatomic) NSMutableArray *taskQOS; // @synthesize taskQOS=_taskQOS;
@property(retain, nonatomic) NSOperationQueue *urlSessionTaskQueue; // @synthesize urlSessionTaskQueue=_urlSessionTaskQueue;
@property(retain, nonatomic) NSOperationQueue *concurrentOperationQueue; // @synthesize concurrentOperationQueue=_concurrentOperationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(nonatomic) double estimatedRemainingTimeThreshold; // @synthesize estimatedRemainingTimeThreshold=_estimatedRemainingTimeThreshold;
@property(nonatomic) struct CGSize maxProgressiveRenderSize; // @synthesize maxProgressiveRenderSize=_maxProgressiveRenderSize;
@property(nonatomic) _Bool shouldBlurProgressive; // @synthesize shouldBlurProgressive=_shouldBlurProgressive;
@property(retain, nonatomic) NSArray *progressThresholds; // @synthesize progressThresholds=_progressThresholds;
@property(retain, nonatomic) NSMutableSet *canceledTasks; // @synthesize canceledTasks=_canceledTasks;
@property(retain, nonatomic) NSMutableDictionary *tasks; // @synthesize tasks=_tasks;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(retain, nonatomic) IntercomSDK_PINURLSessionManager *sessionManager; // @synthesize sessionManager=_sessionManager;
@property(retain, nonatomic) IntercomSDK_PINCache *cache; // @synthesize cache=_cache;
- (void).cxx_destruct;
- (id)cacheKeyForURL:(id)arg1 processorKey:(id)arg2;
- (id)downloadImageWithURLs:(id)arg1 options:(unsigned long long)arg2 progressImage:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)addTaskBPS:(float)arg1 endDate:(id)arg2;
- (float)currentBytesPerSecond;
- (void)didCompleteTask:(id)arg1 withError:(id)arg2;
- (void)didReceiveData:(id)arg1 forTask:(id)arg2;
- (void)didReceiveAuthenticationChallenge:(id)arg1 forTask:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)synchronousImageFromCacheWithCacheKey:(id)arg1 options:(unsigned long long)arg2;
- (void)imageFromCacheWithCacheKey:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)imageFromCacheWithCacheKey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setProgressImageCallback:(CDUnknownBlockType)arg1 ofTaskWithUUID:(id)arg2;
- (void)setPriority:(unsigned long long)arg1 ofTaskWithUUID:(id)arg2;
- (void)cancelTaskWithUUID:(id)arg1;
- (void)prefetchImageWithURL:(id)arg1 options:(unsigned long long)arg2;
- (void)prefetchImageWithURL:(id)arg1;
- (void)prefetchImagesWithURLs:(id)arg1 options:(unsigned long long)arg2;
- (void)prefetchImagesWithURLs:(id)arg1;
- (id)downloadDataWithURL:(id)arg1 key:(id)arg2 priority:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;
- (id)sessionTaskWithURL:(id)arg1 key:(id)arg2 options:(unsigned long long)arg3 priority:(unsigned long long)arg4;
- (_Bool)handleCacheObject:(id)arg1 object:(id)arg2 key:(id)arg3 options:(unsigned long long)arg4 outImage:(id *)arg5 outAnimatedImage:(id *)arg6;
- (_Bool)earlyReturnWithOptions:(unsigned long long)arg1 url:(id)arg2 object:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 priority:(unsigned long long)arg3 key:(id)arg4 progressImage:(CDUnknownBlockType)arg5 UUID:(id)arg6;
- (void)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 priority:(unsigned long long)arg3 key:(id)arg4 processor:(CDUnknownBlockType)arg5 UUID:(id)arg6;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 priority:(unsigned long long)arg3 processorKey:(id)arg4 processor:(CDUnknownBlockType)arg5 progressImage:(CDUnknownBlockType)arg6 progressDownload:(CDUnknownBlockType)arg7 completion:(CDUnknownBlockType)arg8 inputUUID:(id)arg9;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 progressDownload:(CDUnknownBlockType)arg5 completion:(CDUnknownBlockType)arg6;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 progressImage:(CDUnknownBlockType)arg3 progressDownload:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 progressDownload:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 progressImage:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (id)downloadImageWithURL:(id)arg1 options:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)downloadImageWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setShouldUpgradeLowQualityImages:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setLowQualityBPSThreshold:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setHighQualityBPSThreshold:(float)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setProgressiveRendersMaxProgressiveRenderSize:(struct CGSize)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setProgressiveRendersShouldBlur:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setProgressThresholds:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setEstimatedRemainingTimeThresholdForProgressiveDownloads:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setMaxNumberOfConcurrentDownloads:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setMaxNumberOfConcurrentOperations:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setAuthenticationChallenge:(CDUnknownBlockType)arg1;
- (void)unlock;
- (void)lock;
- (void)lockOnMainThread;
- (id)defaultImageCache;
- (id)initWithSessionConfiguration:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PINTaskQOS : NSObject
{
    float _bytesPerSecond;
    NSDate *_endDate;
}

@property(nonatomic) float bytesPerSecond; // @synthesize bytesPerSecond=_bytesPerSecond;
@property(retain, nonatomic) NSDate *endDate; // @synthesize endDate=_endDate;
- (void).cxx_destruct;
- (id)initWithBPS:(float)arg1 endDate:(id)arg2;

@end

@interface IntercomSDK_PINRemoteImageManagerResult : NSObject
{
    UIImage *_image;
    IntercomSDK_FLAnimatedImage *_animatedImage;
    double _requestDuration;
    NSError *_error;
    unsigned long long _resultType;
    NSUUID *_UUID;
    double _renderedImageQuality;
}

+ (id)imageResultWithImage:(id)arg1 animatedImage:(id)arg2 requestLength:(double)arg3 error:(id)arg4 resultType:(unsigned long long)arg5 UUID:(id)arg6 renderedImageQuality:(double)arg7;
+ (id)imageResultWithImage:(id)arg1 animatedImage:(id)arg2 requestLength:(double)arg3 error:(id)arg4 resultType:(unsigned long long)arg5 UUID:(id)arg6;
@property(readonly, nonatomic) double renderedImageQuality; // @synthesize renderedImageQuality=_renderedImageQuality;
@property(readonly, nonatomic) NSUUID *UUID; // @synthesize UUID=_UUID;
@property(readonly, nonatomic) unsigned long long resultType; // @synthesize resultType=_resultType;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) double requestDuration; // @synthesize requestDuration=_requestDuration;
@property(readonly, nonatomic) IntercomSDK_FLAnimatedImage *animatedImage; // @synthesize animatedImage=_animatedImage;
@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
- (void).cxx_destruct;
- (id)description;
- (id)initWithImage:(id)arg1 animatedImage:(id)arg2 requestLength:(double)arg3 error:(id)arg4 resultType:(unsigned long long)arg5 UUID:(id)arg6 renderedImageQuality:(double)arg7;

@end

@interface IntercomSDK_PINRemoteImageProcessorTask : IntercomSDK_PINRemoteImageTask
{
    NSUUID *_downloadTaskUUID;
}

@property(retain, nonatomic) NSUUID *downloadTaskUUID; // @synthesize downloadTaskUUID=_downloadTaskUUID;
- (void).cxx_destruct;
- (_Bool)cancelWithUUID:(id)arg1 manager:(id)arg2;

@end

@interface IntercomSDK_PINRemoteImageTask : NSObject
{
    NSMutableDictionary *_callbackBlocks;
}

@property(retain, nonatomic) NSMutableDictionary *callbackBlocks; // @synthesize callbackBlocks=_callbackBlocks;
- (void).cxx_destruct;
- (void)setPriority:(unsigned long long)arg1;
- (_Bool)cancelWithUUID:(id)arg1 manager:(id)arg2;
- (void)callCompletionsWithQueue:(id)arg1 remove:(_Bool)arg2 withImage:(id)arg3 animatedImage:(id)arg4 cached:(_Bool)arg5 error:(id)arg6;
- (void)removeCallbackWithUUID:(id)arg1;
- (void)addCallbacksWithCompletionBlock:(CDUnknownBlockType)arg1 progressImageBlock:(CDUnknownBlockType)arg2 progressDownloadBlock:(CDUnknownBlockType)arg3 withUUID:(id)arg4;
- (id)description;
- (id)init;

@end

@interface IntercomSDK_PINRemoteLock : NSObject
{
    struct _opaque_pthread_mutex_t _lock;
}

- (void)unlock;
- (void)lock;
- (void)lockWithBlock:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithName:(id)arg1;
- (id)initWithName:(id)arg1 lockType:(unsigned long long)arg2;
- (id)init;

@end

@interface IntercomSDK_PINURLSessionManager : NSObject <NSURLSessionDelegate, NSURLSessionDataDelegate>
{
    id <PINURLSessionManagerDelegate> _delegate;
    NSLock *_sessionManagerLock;
    NSURLSession *_session;
    NSOperationQueue *_operationQueue;
    NSMutableDictionary *_delegateQueues;
    NSMutableDictionary *_completions;
}

@property(retain, nonatomic) NSMutableDictionary *completions; // @synthesize completions=_completions;
@property(retain, nonatomic) NSMutableDictionary *delegateQueues; // @synthesize delegateQueues=_delegateQueues;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSURLSession *session; // @synthesize session=_session;
@property(retain, nonatomic) NSLock *sessionManagerLock; // @synthesize sessionManagerLock=_sessionManagerLock;
@property __weak id <PINURLSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)unlock;
- (void)lock;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)invalidateSessionAndCancelTasks;
- (id)initWithSessionConfiguration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_PodsDummy_SocketRocket : NSObject
{
}

@end

@interface IntercomSDK_SRWebSocket : NSObject <NSStreamDelegate>
{
    long long _webSocketVersion;
    NSOperationQueue *_delegateOperationQueue;
    NSObject<OS_dispatch_queue> *_delegateDispatchQueue;
    NSObject<OS_dispatch_queue> *_workQueue;
    NSMutableArray *_consumers;
    NSInputStream *_inputStream;
    NSOutputStream *_outputStream;
    NSMutableData *_readBuffer;
    unsigned long long _readBufferOffset;
    NSMutableData *_outputBuffer;
    unsigned long long _outputBufferOffset;
    unsigned char _currentFrameOpcode;
    unsigned long long _currentFrameCount;
    unsigned long long _readOpCount;
    unsigned int _currentStringScanPosition;
    NSMutableData *_currentFrameData;
    NSString *_closeReason;
    NSString *_secKey;
    NSString *_basicAuthorizationString;
    _Bool _pinnedCertFound;
    unsigned char _currentReadMaskKey[4];
    unsigned long long _currentReadMaskOffset;
    _Bool _consumerStopped;
    _Bool _closeWhenFinishedWriting;
    _Bool _failed;
    _Bool _secure;
    NSURLRequest *_urlRequest;
    _Bool _sentClose;
    _Bool _didFail;
    _Bool _cleanupScheduled;
    int _closeCode;
    _Bool _isPumping;
    NSMutableSet *_scheduledRunloops;
    IntercomSDK_SRWebSocket *_selfRetain;
    NSArray *_requestedProtocols;
    IntercomSDK_SRIOConsumerPool *_consumerPool;
    _Bool _allowsUntrustedSSLCertificates;
    id <SRWebSocketDelegate> _delegate;
    NSURL *_url;
    long long _readyState;
    NSString *_protocol;
    struct __CFHTTPMessage *_receivedHTTPHeaders;
    NSArray *_requestCookies;
}

+ (void)initialize;
@property(nonatomic) _Bool allowsUntrustedSSLCertificates; // @synthesize allowsUntrustedSSLCertificates=_allowsUntrustedSSLCertificates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delegateDispatchQueue; // @synthesize delegateDispatchQueue=_delegateDispatchQueue;
@property(retain, nonatomic) NSOperationQueue *delegateOperationQueue; // @synthesize delegateOperationQueue=_delegateOperationQueue;
@property(retain, nonatomic) NSArray *requestCookies; // @synthesize requestCookies=_requestCookies;
@property(readonly, nonatomic) struct __CFHTTPMessage *receivedHTTPHeaders; // @synthesize receivedHTTPHeaders=_receivedHTTPHeaders;
@property(readonly, copy, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property(nonatomic) long long readyState; // @synthesize readyState=_readyState;
@property(readonly, retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(nonatomic) __weak id <SRWebSocketDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)safeHandleEvent:(unsigned long long)arg1 stream:(id)arg2;
- (void)stream:(id)arg1 handleEvent:(unsigned long long)arg2;
- (void)_sendFrameWithOpcode:(int)arg1 data:(id)arg2;
- (void)_pumpScanner;
- (_Bool)_innerPumpScanner;
- (void)_readUntilBytes:(const void *)arg1 length:(unsigned long long)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_readUntilHeaderCompleteWithCallback:(CDUnknownBlockType)arg1;
- (void)_cleanupSelfReference:(id)arg1;
- (void)_scheduleCleanup;
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2 dataLength:(unsigned long long)arg3;
- (void)_addConsumerWithDataLength:(unsigned long long)arg1 callback:(CDUnknownBlockType)arg2 readToCurrentFrame:(_Bool)arg3 unmaskBytes:(_Bool)arg4;
- (void)_addConsumerWithScanner:(CDUnknownBlockType)arg1 callback:(CDUnknownBlockType)arg2;
- (void)_pumpWriting;
- (void)_readFrameNew;
- (void)_readFrameContinue;
- (void)_handleFrameHeader:(CDStruct_6a6a01a4)arg1 curData:(id)arg2;
- (void)_handleFrameWithData:(id)arg1 opCode:(long long)arg2;
- (void)closeConnection;
- (void)handleCloseWithData:(id)arg1;
- (void)_handleMessage:(id)arg1;
- (void)handlePong:(id)arg1;
- (void)handlePing:(id)arg1;
- (void)sendPing:(id)arg1;
- (void)send:(id)arg1;
- (void)_writeData:(id)arg1;
- (void)_failWithError:(id)arg1;
- (void)_closeWithProtocolError:(id)arg1;
- (void)closeWithCode:(long long)arg1 reason:(id)arg2;
- (void)close;
- (void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2;
- (void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2;
- (void)openConnection;
- (void)setupNetworkServiceType:(unsigned long long)arg1;
- (void)_updateSecureStreamOptions;
- (void)_initializeStreams;
- (void)didConnect;
- (void)_readHTTPHeader;
- (void)_HTTPHeadersDidFinish;
- (_Bool)_checkHandshake:(struct __CFHTTPMessage *)arg1;
- (void)_performDelegateBlock:(CDUnknownBlockType)arg1;
- (void)open;
- (void)dealloc;
- (void)assertOnWorkQueue;
- (void)_SR_commonInit;
- (id)initWithURL:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(_Bool)arg3;
- (id)initWithURL:(id)arg1 protocols:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2;
- (id)initWithURLRequest:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface IntercomSDK_SRIOConsumer : NSObject
{
    CDUnknownBlockType _scanner;
    CDUnknownBlockType _handler;
    unsigned long long _bytesNeeded;
    _Bool _readToCurrentFrame;
    _Bool _unmaskBytes;
}

@property(readonly, nonatomic) _Bool unmaskBytes; // @synthesize unmaskBytes=_unmaskBytes;
@property(readonly, nonatomic) _Bool readToCurrentFrame; // @synthesize readToCurrentFrame=_readToCurrentFrame;
@property(readonly, copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(readonly, copy, nonatomic) CDUnknownBlockType consumer; // @synthesize consumer=_scanner;
@property(nonatomic) unsigned long long bytesNeeded; // @synthesize bytesNeeded=_bytesNeeded;
- (void).cxx_destruct;
- (void)setupWithScanner:(CDUnknownBlockType)arg1 handler:(CDUnknownBlockType)arg2 bytesNeeded:(unsigned long long)arg3 readToCurrentFrame:(_Bool)arg4 unmaskBytes:(_Bool)arg5;

@end

@interface IntercomSDK_SRIOConsumerPool : NSObject
{
    unsigned long long _poolSize;
    NSMutableArray *_bufferedConsumers;
}

- (void).cxx_destruct;
- (void)returnConsumer:(id)arg1;
- (id)consumerWithScanner:(CDUnknownBlockType)arg1 handler:(CDUnknownBlockType)arg2 bytesNeeded:(unsigned long long)arg3 readToCurrentFrame:(_Bool)arg4 unmaskBytes:(_Bool)arg5;
- (id)init;
- (id)initWithBufferCapacity:(unsigned long long)arg1;

@end

@interface IntercomSDK__SRRunLoopThread : NSThread
{
    NSObject<OS_dispatch_group> *_waitGroup;
    NSRunLoop *_runLoop;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) NSRunLoop *runLoop; // @synthesize runLoop=_runLoop;
- (void)main;
- (id)init;
- (void)dealloc;

@end

@interface OSPermissionSubscriptionState : NSObject
{
    OSPermissionState *_permissionStatus;
    OSSubscriptionState *_subscriptionStatus;
    OSEmailSubscriptionState *_emailSubscriptionStatus;
}

@property(retain) OSEmailSubscriptionState *emailSubscriptionStatus; // @synthesize emailSubscriptionStatus=_emailSubscriptionStatus;
@property(retain) OSSubscriptionState *subscriptionStatus; // @synthesize subscriptionStatus=_subscriptionStatus;
@property(retain) OSPermissionState *permissionStatus; // @synthesize permissionStatus=_permissionStatus;
- (void).cxx_destruct;
- (id)toDictionary;
- (id)description;

@end

@interface OSPendingCallbacks : NSObject
{
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
}

@property(copy) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
- (void).cxx_destruct;

@end

@interface OneSignal : NSObject
{
}

+ (void)emailChangedWithNewEmailPlayerId:(id)arg1;
+ (void)setEmail:(id)arg1 withEmailAuthHashToken:(id)arg2;
+ (void)logoutEmail;
+ (void)setEmail:(id)arg1;
+ (void)logoutEmailWithSuccess:(CDUnknownBlockType)arg1 withFailure:(CDUnknownBlockType)arg2;
+ (void)setEmail:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 withFailure:(CDUnknownBlockType)arg3;
+ (void)setEmail:(id)arg1 withEmailAuthHashToken:(id)arg2 withSuccess:(CDUnknownBlockType)arg3 withFailure:(CDUnknownBlockType)arg4;
+ (void)callSuccessBlockOnMainThread:(CDUnknownBlockType)arg1;
+ (void)callFailureBlockOnMainThread:(CDUnknownBlockType)arg1 withError:(id)arg2;
+ (id)serviceExtensionTimeWillExpireRequest:(id)arg1 withMutableNotificationContent:(id)arg2;
+ (id)didReceiveNotificationExtensionRequest:(id)arg1 withMutableNotificationContent:(id)arg2;
+ (void)syncHashedEmail:(id)arg1;
+ (void)processLocalActionBasedNotification:(id)arg1 identifier:(id)arg2;
+ (_Bool)remoteSilentNotification:(id)arg1 UserInfo:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)didRegisterForRemoteNotifications:(id)arg1 deviceToken:(id)arg2;
+ (void)updateNotificationTypes:(int)arg1;
+ (void)setSubscriptionErrorStatus:(int)arg1;
+ (int)getNotificationTypes;
+ (_Bool)clearBadgeCount:(_Bool)arg1;
+ (void)submitNotificationOpened:(id)arg1;
+ (void)launchWebURL:(id)arg1;
+ (_Bool)shouldPromptToShowURL;
+ (void)handleNotificationOpened:(id)arg1 isActive:(_Bool)arg2 actionType:(unsigned long long)arg3 displayType:(unsigned long long)arg4;
+ (id)checkForProcessedDups:(id)arg1 lastMessageId:(id)arg2;
+ (void)notificationReceived:(id)arg1 isActive:(_Bool)arg2 wasOpened:(_Bool)arg3;
+ (void)setLastnonActiveMessageId:(id)arg1;
+ (void)setLastAppActiveMessageId:(id)arg1;
+ (void)sendPurchases:(id)arg1;
+ (_Bool)sendNotificationTypesUpdate;
+ (id)getUsableDeviceToken;
+ (void)registerUserInternal;
+ (void)registerUser;
+ (id)getRegisterQueue;
+ (void)registerUserAfterDelay;
+ (_Bool)shouldRegisterNow;
+ (void)updateLastSessionDateTime;
+ (void)setNextRegistrationHighPriority:(_Bool)arg1;
+ (_Bool)isHighPriorityCall;
+ (void)updateDeviceToken:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)handleDidFailRegisterForRemoteNotification:(id)arg1;
+ (void)promptLocation;
+ (void)setLocationShared:(_Bool)arg1;
+ (void)setSubscription:(_Bool)arg1;
+ (void)enableInAppLaunchURL:(id)arg1;
+ (id)parseNSErrorAsJsonString:(id)arg1;
+ (void)convertDatesToISO8061Strings:(id)arg1;
+ (void)postNotificationWithJsonString:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)postNotification:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)postNotification:(id)arg1;
+ (void)deleteTags:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)deleteTagsWithJsonString:(id)arg1;
+ (void)deleteTags:(id)arg1;
+ (void)deleteTag:(id)arg1;
+ (void)deleteTag:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)getTags:(CDUnknownBlockType)arg1;
+ (void)getTags:(CDUnknownBlockType)arg1 onFailure:(CDUnknownBlockType)arg2;
+ (void)sendTag:(id)arg1 value:(id)arg2 onSuccess:(CDUnknownBlockType)arg3 onFailure:(CDUnknownBlockType)arg4;
+ (void)sendTag:(id)arg1 value:(id)arg2;
+ (void)sendTagsToServer;
+ (void)sendTags:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
+ (void)sendTags:(id)arg1;
+ (void)sendTagsWithJsonString:(id)arg1;
+ (void)fireIdsAvailableCallback;
+ (void)IdsAvailable:(CDUnknownBlockType)arg1;
+ (void)removeEmailSubscriptionObserver:(id)arg1;
+ (void)addEmailSubscriptionObserver:(id)arg1;
+ (void)removeSubscriptionObserver:(id)arg1;
+ (void)addSubscriptionObserver:(id)arg1;
+ (void)removePermissionObserver:(id)arg1;
+ (void)addPermissionObserver:(id)arg1;
+ (id)getPermissionSubscriptionState;
+ (void)registerForPushNotifications;
+ (void)promptForPushNotificationsWithUserResponse:(CDUnknownBlockType)arg1;
+ (void)promptForPushNotificationsWithUserResponse:(CDUnknownBlockType)arg1 fallbackToSettings:(_Bool)arg2;
+ (_Bool)registerForAPNsToken;
+ (_Bool)providesAppNotificationSettings;
+ (void)presentAppSettings;
+ (void)onesignal_Log:(unsigned long long)arg1 message:(id)arg2;
+ (void)setLogLevel:(unsigned long long)arg1 visualLevel:(unsigned long long)arg2;
+ (void)downloadIOSParamsWithAppId:(id)arg1;
+ (void)checkIfApplicationImplementsDeprecatedMethods;
+ (void)consentGranted:(_Bool)arg1;
+ (_Bool)requiresUserPrivacyConsent;
+ (void)setRequiresUserPrivacyConsent:(_Bool)arg1;
+ (_Bool)shouldLogMissingPrivacyConsentErrorWithMethodName:(id)arg1;
+ (void)registerForProvisionalAuthorization:(CDUnknownBlockType)arg1;
+ (void)checkProvisionalAuthorizationStatus;
+ (_Bool)initAppId:(id)arg1 withUserDefaults:(id)arg2 withSettings:(id)arg3;
+ (id)initWithLaunchOptions:(id)arg1 appId:(id)arg2 handleNotificationReceived:(CDUnknownBlockType)arg3 handleNotificationAction:(CDUnknownBlockType)arg4 settings:(id)arg5;
+ (id)initWithLaunchOptions:(id)arg1 appId:(id)arg2 handleNotificationAction:(CDUnknownBlockType)arg3 settings:(id)arg4;
+ (id)initWithLaunchOptions:(id)arg1 appId:(id)arg2 handleNotificationAction:(CDUnknownBlockType)arg3;
+ (id)initWithLaunchOptions:(id)arg1 appId:(id)arg2;
+ (_Bool)shouldDelaySubscriptionSettingsUpdate;
+ (_Bool)coldStartFromTapOnNotification;
+ (void)clearStatics;
+ (void)setDelayIntervals:(double)arg1 withRegistrationDelay:(double)arg2;
+ (void)setWaitingForApnsResponse:(_Bool)arg1;
+ (void)setMSDKType:(id)arg1;
+ (id)mEmailUserId;
+ (id)mEmailAuthToken;
+ (id)mUserId;
+ (id)sdk_semantic_version;
+ (id)sdk_version_raw;
+ (id)app_id;
+ (void)setMSubscriptionStatus:(id)arg1;
+ (struct OSObservable *)emailSubscriptionStateChangesObserver;
+ (struct OSObservable *)subscriptionStateChangesObserver;
+ (struct OSObservable *)permissionStateChangesObserver;
+ (void)setLastSubscriptionState:(id)arg1;
+ (id)lastSubscriptionState;
+ (id)currentSubscriptionState;
+ (void)setLastEmailSubscriptionState:(id)arg1;
+ (id)lastEmailSubscriptionState;
+ (id)currentEmailSubscriptionState;
+ (void)setLastPermissionState:(id)arg1;
+ (id)lastPermissionState;
+ (id)currentPermissionState;
+ (id)osNotificationSettings;
+ (unsigned long long)inFocusDisplayType;
+ (void)setInFocusDisplayType:(unsigned long long)arg1;

@end

@interface OneSignalClient : NSObject
{
    NSURLSession *_sharedSession;
    NSURLSession *_noCacheSession;
}

+ (id)sharedClient;
@property(retain, nonatomic) NSURLSession *noCacheSession; // @synthesize noCacheSession=_noCacheSession;
@property(retain, nonatomic) NSURLSession *sharedSession; // @synthesize sharedSession=_sharedSession;
- (void).cxx_destruct;
- (void)handleJSONNSURLResponse:(id)arg1 data:(id)arg2 error:(id)arg3 isAsync:(_Bool)arg4 withRequest:(id)arg5 onSuccess:(CDUnknownBlockType)arg6 onFailure:(CDUnknownBlockType)arg7;
- (void)prettyPrintDebugStatementWithRequest:(id)arg1;
- (_Bool)willReattemptRequest:(int)arg1 withRequest:(id)arg2 success:(CDUnknownBlockType)arg3 failure:(CDUnknownBlockType)arg4 asyncRequest:(_Bool)arg5;
- (void)reattemptRequest:(id)arg1;
- (_Bool)validRequest:(id)arg1;
- (void)handleMissingAppIdError:(CDUnknownBlockType)arg1 withRequest:(id)arg2;
- (void)executeSynchronousRequest:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
- (void)executeRequest:(id)arg1 onSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
- (void)executeSimultaneousRequests:(id)arg1 withSuccess:(CDUnknownBlockType)arg2 onFailure:(CDUnknownBlockType)arg3;
- (id)genericTimedOutError;
- (id)privacyConsentErrorWithRequestType:(id)arg1;
- (id)configurationWithCachingPolicy:(unsigned long long)arg1;
- (id)init;

@end

@interface OneSignalNotificationSettingsIOS8 : NSObject <OneSignalNotificationSettings>
{
    CDUnknownBlockType notificationPromptReponseCallback;
}

- (void).cxx_destruct;
- (void)registerForProvisionalAuthorization:(CDUnknownBlockType)arg1;
- (void)onAPNsResponse:(_Bool)arg1;
- (void)onNotificationPromptResponse:(int)arg1;
- (void)promptForNotifications:(CDUnknownBlockType)arg1;
- (int)getNotificationTypes;
- (id)getNotificationPermissionState;
- (void)getNotificationPermissionState:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OneSignalJailbreakDetection : NSObject
{
}

+ (_Bool)isJailbroken;

@end

@interface OneSignalRequest : NSObject
{
    _Bool _disableLocalCaching;
    int _method;
    int _reattemptCount;
    NSString *_path;
    NSDictionary *_parameters;
}

@property(nonatomic) int reattemptCount; // @synthesize reattemptCount=_reattemptCount;
@property(retain, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
@property(nonatomic) int method; // @synthesize method=_method;
@property(nonatomic) _Bool disableLocalCaching; // @synthesize disableLocalCaching=_disableLocalCaching;
- (void).cxx_destruct;
- (id)queryStringForParameters:(id)arg1;
- (void)attachQueryParametersToRequest:(id)arg1 withParameters:(id)arg2;
- (void)attachBodyToRequest:(id)arg1 withParameters:(id)arg2;
- (_Bool)missingAppId;
- (id)urlRequest;
- (id)init;

@end

@interface DirectDownloadDelegate : NSObject <NSURLSessionDataDelegate>
{
    NSError *error;
    NSURLResponse *response;
    _Bool done;
    NSFileHandle *outputHandle;
}

@property(readonly, getter=isDone) _Bool done; // @synthesize done;
@property(readonly) NSURLResponse *response; // @synthesize response;
@property(readonly) NSError *error; // @synthesize error;
- (void).cxx_destruct;
- (id)initWithFilePath:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OSNotificationAction : NSObject
{
    unsigned long long _type;
    NSString *_actionID;
}

@property(readonly) NSString *actionID; // @synthesize actionID=_actionID;
@property(readonly) unsigned long long type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithActionType:(unsigned long long)arg1:(id)arg2;

@end

@interface OSNotification : NSObject
{
    _Bool _shown;
    _Bool _isAppInFocus;
    _Bool _silentNotification;
    _Bool _mutableContent;
    OSNotificationPayload *_payload;
    unsigned long long _displayType;
}

@property(readonly, getter=hasMutableContent) _Bool mutableContent; // @synthesize mutableContent=_mutableContent;
@property(readonly) unsigned long long displayType; // @synthesize displayType=_displayType;
@property(readonly, getter=isSilentNotification) _Bool silentNotification; // @synthesize silentNotification=_silentNotification;
@property(readonly, getter=wasAppInFocus) _Bool isAppInFocus; // @synthesize isAppInFocus=_isAppInFocus;
@property(readonly, getter=wasShown) _Bool shown; // @synthesize shown=_shown;
@property(readonly) OSNotificationPayload *payload; // @synthesize payload=_payload;
- (void).cxx_destruct;
- (id)stringify;
- (id)initWithPayload:(id)arg1 displayType:(unsigned long long)arg2;

@end

@interface OSNotificationOpenedResult : NSObject
{
    OSNotification *_notification;
    OSNotificationAction *_action;
}

@property(readonly) OSNotificationAction *action; // @synthesize action=_action;
@property(readonly) OSNotification *notification; // @synthesize notification=_notification;
- (void).cxx_destruct;
- (id)stringify;
- (id)initWithNotification:(id)arg1 action:(id)arg2;

@end

@interface OneSignalHelper : NSObject
{
}

+ (id)trimURLSpacing:(id)arg1;
+ (id)hashUsingMD5:(id)arg1;
+ (id)hashUsingSha1:(id)arg1;
+ (_Bool)isValidEmail:(id)arg1;
+ (void)performSelector:(SEL)arg1 onMainThreadOnObject:(id)arg2 withObject:(id)arg3 afterDelay:(double)arg4;
+ (void)dispatch_async_on_main_queue:(CDUnknownBlockType)arg1;
+ (void)runOnMainThread:(CDUnknownBlockType)arg1;
+ (void)displayWebView:(id)arg1;
+ (_Bool)isWWWScheme:(id)arg1;
+ (_Bool)verifyURL:(id)arg1;
+ (void)clearCachedMedia;
+ (id)downloadMediaAndSaveInBundle:(id)arg1;
+ (void)addNotificationRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
+ (void)addAttachments:(id)arg1 toNotificationContent:(id)arg2;
+ (id)existingCategories;
+ (void)addActionButtons:(id)arg1 toNotificationContent:(id)arg2;
+ (id)prepareUNNotificationRequest:(id)arg1;
+ (void)registerAsUNNotificationCenterDelegate;
+ (id)randomStringWithLength:(int)arg1;
+ (_Bool)isIOSVersionGreaterOrEqual:(float)arg1;
+ (id)sharedInstance;
+ (id)prepareUILocalNotification:(id)arg1;
+ (id)createUILocalNotification:(id)arg1;
+ (_Bool)canGetNotificationTypes;
+ (id)getNetType;
+ (void)handleNotificationAction:(unsigned long long)arg1 actionID:(id)arg2 displayType:(unsigned long long)arg3;
+ (void)handleNotificationReceived:(unsigned long long)arg1;
+ (_Bool)isOneSignalPayload:(id)arg1;
+ (id)formatApsPayloadIntoStandard:(id)arg1 identifier:(id)arg2;
+ (id)getAppName;
+ (void)notificationBlocks:(CDUnknownBlockType)arg1:(CDUnknownBlockType)arg2;
+ (void)lastMessageReceived:(id)arg1;
+ (_Bool)isRemoteSilentNotification:(id)arg1;
+ (id)webVC;
+ (void)endBackgroundMediaTask;
+ (void)beginBackgroundMediaTask;
+ (void)resetLocals;

@end

@interface OneSignalReachability : NSObject
{
    _Bool _alwaysReturnLocalWiFiStatus;
    struct __SCNetworkReachability *_reachabilityRef;
}

+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
- (long long)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (long long)networkStatusForFlags:(unsigned int)arg1;
- (long long)localWiFiStatusForFlags:(unsigned int)arg1;
- (void)dealloc;

@end

@interface OneSignalTrackFirebaseAnalytics : NSObject
{
}

+ (void)trackInfluenceOpenEvent;
+ (void)trackReceivedEvent:(id)arg1;
+ (void)trackOpenEvent:(id)arg1;
+ (id)getCampaignNameFromPayload:(id)arg1;
+ (void)logEventWithName:(id)arg1 parameters:(id)arg2;
+ (id)appGroupKey;
+ (void)updateFromDownloadParams:(id)arg1;
+ (void)init;
+ (_Bool)needsRemoteParams;

@end

@interface OneSignalNotificationSettingsIOS10 : NSObject <OneSignalNotificationSettings>
{
    _Bool _useCachedStatus;
}

+ (id)getQueue;
@property _Bool useCachedStatus; // @synthesize useCachedStatus=_useCachedStatus;
- (void)onAPNsResponse:(_Bool)arg1;
- (void)onNotificationPromptResponse:(int)arg1;
- (void)registerForProvisionalAuthorization:(CDUnknownBlockType)arg1;
- (void)promptForNotifications:(CDUnknownBlockType)arg1;
- (int)getNotificationTypes;
- (id)getNotificationPermissionState;
- (id)defaultPermissionState;
- (void)getNotificationPermissionState:(CDUnknownBlockType)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OSPermissionState : NSObject
{
    _Bool _hasPrompted;
    _Bool _answeredPrompt;
    _Bool _providesAppNotificationSettings;
    _Bool _accepted;
    _Bool _provisional;
    _Bool _reachable;
    int _notificationTypes;
    struct OSObservable *_observable;
}

@property(retain, nonatomic) OSObservable *observable; // @synthesize observable=_observable;
@property int notificationTypes; // @synthesize notificationTypes=_notificationTypes;
@property(nonatomic) _Bool reachable; // @synthesize reachable=_reachable;
@property(nonatomic) _Bool provisional; // @synthesize provisional=_provisional;
@property(nonatomic) _Bool accepted; // @synthesize accepted=_accepted;
@property(nonatomic) _Bool providesAppNotificationSettings; // @synthesize providesAppNotificationSettings=_providesAppNotificationSettings;
- (void).cxx_destruct;
- (id)toDictionary;
- (id)description;
- (_Bool)compare:(id)arg1;
- (id)statusAsString;
@property(readonly, nonatomic) long long status;
@property(nonatomic) _Bool answeredPrompt;
- (_Bool)isProvisional;
@property(nonatomic) _Bool hasPrompted;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)persistAsFrom;
- (id)initAsFrom;
- (id)initAsTo;

@end

@interface OSPermissionChangedInternalObserver : NSObject <OSPermissionStateObserver>
{
}

+ (void)fireChangesObserver:(id)arg1;
- (void)onChanged:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OSPermissionStateChanges : NSObject
{
    OSPermissionState *_to;
    OSPermissionState *_from;
}

@property(retain) OSPermissionState *from; // @synthesize from=_from;
@property(retain) OSPermissionState *to; // @synthesize to=_to;
- (void).cxx_destruct;
- (id)toDictionary;
- (id)description;

@end

@interface OneSignalAlertView : NSObject
{
}

+ (void)showInAppAlert:(id)arg1;

@end

@interface OneSignalAlertViewDelegate : NSObject <UIAlertViewDelegate>
{
}

- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (id)initWithMessageDict:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OSNotificationPayload : NSObject
{
    _Bool _contentAvailable;
    _Bool _mutableContent;
    NSString *_notificationID;
    NSString *_templateID;
    NSString *_templateName;
    NSString *_category;
    unsigned long long _badge;
    long long _badgeIncrement;
    NSString *_sound;
    NSString *_title;
    NSString *_subtitle;
    NSString *_body;
    NSString *_launchURL;
    NSDictionary *_additionalData;
    NSDictionary *_attachments;
    NSArray *_actionButtons;
    NSDictionary *_rawPayload;
    NSString *_threadId;
}

+ (id)parseWithApns:(id)arg1;
@property(readonly) NSString *threadId; // @synthesize threadId=_threadId;
@property(readonly) NSDictionary *rawPayload; // @synthesize rawPayload=_rawPayload;
@property(readonly) NSArray *actionButtons; // @synthesize actionButtons=_actionButtons;
@property(readonly) NSDictionary *attachments; // @synthesize attachments=_attachments;
@property(readonly) NSDictionary *additionalData; // @synthesize additionalData=_additionalData;
@property(readonly) NSString *launchURL; // @synthesize launchURL=_launchURL;
@property(readonly) NSString *body; // @synthesize body=_body;
@property(readonly) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *sound; // @synthesize sound=_sound;
@property(readonly) long long badgeIncrement; // @synthesize badgeIncrement=_badgeIncrement;
@property(readonly) unsigned long long badge; // @synthesize badge=_badge;
@property(readonly) NSString *category; // @synthesize category=_category;
@property(readonly) _Bool mutableContent; // @synthesize mutableContent=_mutableContent;
@property(readonly) _Bool contentAvailable; // @synthesize contentAvailable=_contentAvailable;
@property(readonly) NSString *templateName; // @synthesize templateName=_templateName;
@property(readonly) NSString *templateID; // @synthesize templateID=_templateID;
@property(readonly) NSString *notificationID; // @synthesize notificationID=_notificationID;
- (void).cxx_destruct;
- (void)parseOtherApnsFields;
- (void)parseActionButtons:(id)arg1;
- (void)parseRemoteSlient:(id)arg1;
- (void)parseAlertField:(id)arg1;
- (void)parseApnsFields;
- (void)parseCommonOneSignalFields:(id)arg1;
- (void)parseOSDataAdditionalData;
- (void)parseOSDataPayload;
- (void)parseOriginalPayload;
- (void)initWithRawMessage:(id)arg1;

@end

@interface OneSignalUNUserNotificationCenter : NSObject
{
}

+ (void)callLegacyAppDeletegateSelector:(id)arg1 isTextReply:(_Bool)arg2 actionIdentifier:(id)arg3 userText:(id)arg4 fromPresentNotification:(_Bool)arg5 withCompletionHandler:(CDUnknownBlockType)arg6;
+ (void)processiOS10Open:(id)arg1;
+ (_Bool)isDismissEvent:(id)arg1;
+ (void)setUseiOS10_2_workaround:(_Bool)arg1;
+ (void)swizzleSelectors;
- (void)onesignalUserNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)onesignalUserNotificationCenter:(id)arg1 willPresentNotification:(id)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;
- (void)setOneSignalUNDelegate:(id)arg1;
- (void)onesignalGetNotificationSettingsWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)onesignalRequestAuthorizationWithOptions:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;

@end

@interface OneSignalWebView : UIViewController
{
    NSURL *_url;
    UIWebView *_webView;
    UIActivityIndicatorView *_uiBusy;
}

@property(retain, nonatomic) UIActivityIndicatorView *uiBusy; // @synthesize uiBusy=_uiBusy;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
@property(copy, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)showInApp;
- (void)pinSubviewToMarginsWithSubview:(id)arg1 withSuperview:(id)arg2;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)dismiss:(id)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DelayedInitializationParameters : NSObject
{
    NSDictionary *_launchOptions;
    NSString *_appId;
    NSDictionary *_settings;
    CDUnknownBlockType _receivedBlock;
    CDUnknownBlockType _actionBlock;
}

@property(copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
@property(copy, nonatomic) CDUnknownBlockType receivedBlock; // @synthesize receivedBlock=_receivedBlock;
@property(retain, nonatomic) NSDictionary *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain, nonatomic) NSDictionary *launchOptions; // @synthesize launchOptions=_launchOptions;
- (void).cxx_destruct;
- (id)initWithLaunchOptions:(id)arg1 withAppId:(id)arg2 withHandleNotificationReceivedBlock:(CDUnknownBlockType)arg3 withHandleNotificationActionBlock:(CDUnknownBlockType)arg4 withSettings:(id)arg5;

@end

@interface OneSignalAppDelegate : NSObject
{
}

+ (void)sizzlePreiOS10MethodsPhase2;
+ (void)sizzlePreiOS10MethodsPhase1;
+ (Class)delegateClass;
+ (void)oneSignalLoadedTagSelector;
- (void)oneSignalApplicationWillTerminate:(id)arg1;
- (void)oneSignalApplicationDidBecomeActive:(id)arg1;
- (void)oneSignalApplicationDidEnterBackground:(id)arg1;
- (void)oneSignalApplicationWillResignActive:(id)arg1;
- (void)oneSignalLocalNotificationOpened:(id)arg1 notification:(id)arg2;
- (void)oneSignalLocalNotificationOpened:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)oneSignalRemoteSilentNotification:(id)arg1 UserInfo:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)oneSignalReceivedRemoteNotification:(id)arg1 userInfo:(id)arg2;
- (void)oneSignalDidRegisterUserNotifications:(id)arg1 settings:(id)arg2;
- (void)oneSignalDidFailRegisterForRemoteNotification:(id)arg1 error:(id)arg2;
- (void)oneSignalDidRegisterForRemoteNotifications:(id)arg1 deviceToken:(id)arg2;
- (void)setOneSignalDelegate:(id)arg1;

@end

@interface OSDialogRequest : NSObject
{
    NSString *_title;
    NSString *_message;
    NSString *_actionTitle;
    NSString *_cancelTitle;
    CDUnknownBlockType _completion;
}

@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(retain, nonatomic) NSString *cancelTitle; // @synthesize cancelTitle=_cancelTitle;
@property(retain, nonatomic) NSString *actionTitle; // @synthesize actionTitle=_actionTitle;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) NSString *title; // @synthesize title=_title;
- (void).cxx_destruct;
- (id)initWithTitle:(id)arg1 withMessage:(id)arg2 withActionTitle:(id)arg3 withCancelTitle:(id)arg4 withCompletion:(CDUnknownBlockType)arg5;

@end

@interface OneSignalNotificationServiceExtensionHandler : NSObject
{
}

+ (void)addActionButtonsToExtentionRequest:(id)arg1 withPayload:(id)arg2 withMutableNotificationContent:(id)arg3;
+ (id)serviceExtensionTimeWillExpireRequest:(id)arg1 withMutableNotificationContent:(id)arg2;
+ (id)didReceiveNotificationExtensionRequest:(id)arg1 withMutableNotificationContent:(id)arg2;

@end

@interface OneSignalSetEmailParameters : NSObject
{
    NSString *_email;
    NSString *_authToken;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
}

+ (id)withEmail:(id)arg1 withAuthToken:(id)arg2 withSuccess:(CDUnknownBlockType)arg3 withFailure:(CDUnknownBlockType)arg4;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(retain, nonatomic) NSString *authToken; // @synthesize authToken=_authToken;
@property(retain, nonatomic) NSString *email; // @synthesize email=_email;
- (void).cxx_destruct;

@end

@interface OneSignalMobileProvision : NSObject
{
}

+ (long long)releaseMode;
+ (void)logInvalidMobileProvisionError:(id)arg1;
+ (id)getMobileProvision;

@end

@interface OneSignalTracker : NSObject
{
}

+ (void)saveUnsentActiveTime:(double)arg1;
+ (double)getUnsentActiveTime;
+ (void)onFocus:(_Bool)arg1;
+ (void)endBackgroundFocusTask;
+ (void)beginBackgroundFocusTask;
+ (void)setLastOpenedTime:(double)arg1;
+ (void)resetLocals;

@end

@interface OSObservable : NSObject
{
    NSHashTable *observers;
    SEL changeSelector;
}

- (void).cxx_destruct;
- (void)callObserver:(id)arg1 withSelector:(SEL)arg2 withState:(id)arg3;
- (_Bool)notifyChange:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (id)init;
- (id)initWithChangeSelector:(SEL)arg1;

@end

@interface OSEmailSubscriptionState : NSObject
{
    _Bool _requiresEmailAuth;
    NSString *_emailUserId;
    NSString *_emailAddress;
    struct OSObservable *_observable;
    NSString *_emailAuthCode;
}

@property(nonatomic) _Bool requiresEmailAuth; // @synthesize requiresEmailAuth=_requiresEmailAuth;
@property(retain, nonatomic) NSString *emailAuthCode; // @synthesize emailAuthCode=_emailAuthCode;
@property(retain, nonatomic) OSObservable *observable; // @synthesize observable=_observable;
@property(readonly, nonatomic) NSString *emailAddress; // @synthesize emailAddress=_emailAddress;
@property(readonly, nonatomic) NSString *emailUserId; // @synthesize emailUserId=_emailUserId;
- (void).cxx_destruct;
- (_Bool)compare:(id)arg1;
- (id)toDictionary;
- (void)setEmailAddress:(id)arg1;
- (void)setEmailUserId:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)description;
- (void)persist;
@property(readonly, nonatomic) _Bool subscribed;
- (id)init;

@end

@interface OSEmailSubscriptionChangedInternalObserver : NSObject <OSEmailSubscriptionStateObserver>
{
}

+ (void)fireChangesObserver:(id)arg1;
- (void)onChanged:(id)arg1;

@end

@interface OSEmailSubscriptionStateChanges : NSObject
{
    OSEmailSubscriptionState *_to;
    OSEmailSubscriptionState *_from;
}

@property(retain) OSEmailSubscriptionState *from; // @synthesize from=_from;
@property(retain) OSEmailSubscriptionState *to; // @synthesize to=_to;
- (void).cxx_destruct;
- (id)toDictionary;
- (id)description;

@end

@interface ReattemptRequest : NSObject
{
    OneSignalRequest *_request;
    CDUnknownBlockType _successBlock;
    CDUnknownBlockType _failureBlock;
}

+ (id)withRequest:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType successBlock; // @synthesize successBlock=_successBlock;
@property(retain, nonatomic) OneSignalRequest *request; // @synthesize request=_request;
- (void).cxx_destruct;

@end

@interface OneSignalNotificationSettingsIOS7 : NSObject <OneSignalNotificationSettings>
{
    CDUnknownBlockType notificationPromptReponseCallback;
}

- (void).cxx_destruct;
- (void)onAPNsResponse:(_Bool)arg1;
- (void)registerForProvisionalAuthorization:(CDUnknownBlockType)arg1;
- (void)onNotificationPromptResponse:(int)arg1;
- (void)promptForNotifications:(CDUnknownBlockType)arg1;
- (int)getNotificationTypes;
- (id)getNotificationPermissionState;
- (void)getNotificationPermissionState:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OneSignalLocation : NSObject
{
}

+ (void)sendLocation;
+ (void)resetSendTimer;
+ (void)internalGetLocation:(_Bool)arg1;
+ (void)endTask;
+ (void)beginTask;
+ (void)onfocus:(_Bool)arg1;
+ (void)getLocation:(_Bool)arg1;
+ (void)clearLastLocation;
+ (struct os_last_location *)lastLocation;
+ (id)sharedInstance;
+ (id)mutexObjectForLastLocation;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;

@end

@interface OSSubscriptionState : NSObject <OSPermissionStateObserver>
{
    _Bool _userSubscriptionSetting;
    NSString *_userId;
    NSString *_pushToken;
    _Bool _accpeted;
    _Bool _delayedObserverUpdate;
    struct OSObservable *_observable;
}

@property(retain, nonatomic) OSObservable *observable; // @synthesize observable=_observable;
@property(nonatomic) _Bool delayedObserverUpdate; // @synthesize delayedObserverUpdate=_delayedObserverUpdate;
@property(nonatomic) _Bool accpeted; // @synthesize accpeted=_accpeted;
@property(retain, nonatomic) NSString *pushToken; // @synthesize pushToken=_pushToken;
@property(retain, nonatomic) NSString *userId; // @synthesize userId=_userId;
@property(nonatomic) _Bool userSubscriptionSetting; // @synthesize userSubscriptionSetting=_userSubscriptionSetting;
- (void).cxx_destruct;
- (id)toDictionary;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool subscribed;
- (void)setAccepted:(_Bool)arg1;
- (void)onChanged:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)persistAsFrom;
- (id)initAsFrom;
- (_Bool)compare:(id)arg1;
- (id)initAsToWithPermision:(_Bool)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface OSSubscriptionChangedInternalObserver : NSObject <OSSubscriptionStateObserver>
{
}

+ (void)fireChangesObserver:(id)arg1;
- (void)onChanged:(id)arg1;

@end

@interface OSSubscriptionStateChanges : NSObject
{
    OSSubscriptionState *_to;
    OSSubscriptionState *_from;
}

@property(retain) OSSubscriptionState *from; // @synthesize from=_from;
@property(retain) OSSubscriptionState *to; // @synthesize to=_to;
- (void).cxx_destruct;
- (id)toDictionary;
- (id)description;

@end

@interface OneSignalTrackIAP : NSObject
{
}

+ (_Bool)canTrack;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)getProductInfo:(id)arg1;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface OneSignalExtensionBadgeHandler : NSObject
{
}

+ (id)appGroupName;
+ (void)updateCachedBadgeValue:(long long)arg1;
+ (id)primaryBundleIdentifier;
+ (long long)currentCachedBadgeValue;
+ (void)handleBadgeCountWithNotificationRequest:(id)arg1 withNotificationPayload:(id)arg2 withMutableNotificationContent:(id)arg3;

@end

@interface OSRequestGetTags : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2;

@end

@interface OSRequestGetIosParams : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2;
- (_Bool)missingAppId;

@end

@interface OSRequestSendTagsToServer : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 tags:(id)arg3 networkType:(id)arg4 withEmailAuthHashToken:(id)arg5;

@end

@interface OSRequestPostNotification : OneSignalRequest
{
}

+ (id)withAppId:(id)arg1 withJson:(id)arg2;

@end

@interface OSRequestUpdateDeviceToken : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 deviceToken:(id)arg3 notificationTypes:(id)arg4 withParentId:(id)arg5 emailAuthToken:(id)arg6 email:(id)arg7;

@end

@interface OSRequestCreateDevice : OneSignalRequest
{
}

+ (id)withAppId:(id)arg1 withDeviceType:(id)arg2 withEmail:(id)arg3 withPlayerId:(id)arg4 withEmailAuthHash:(id)arg5;

@end

@interface OSRequestLogoutEmail : OneSignalRequest
{
}

+ (id)withAppId:(id)arg1 emailPlayerId:(id)arg2 devicePlayerId:(id)arg3 emailAuthHash:(id)arg4;

@end

@interface OSRequestUpdateNotificationTypes : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 notificationTypes:(id)arg3;

@end

@interface OSRequestSendPurchases : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 emailAuthToken:(id)arg2 appId:(id)arg3 withPurchases:(id)arg4;
+ (id)withUserId:(id)arg1 appId:(id)arg2 withPurchases:(id)arg3;

@end

@interface OSRequestSubmitNotificationOpened : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 wasOpened:(_Bool)arg3 messageId:(id)arg4;

@end

@interface OSRequestRegisterUser : OneSignalRequest
{
}

+ (id)withData:(id)arg1 userId:(id)arg2;

@end

@interface OSRequestSyncHashedEmail : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 email:(id)arg3 networkType:(id)arg4;

@end

@interface OSRequestSendLocation : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 location:(struct os_last_location *)arg3 networkType:(id)arg4 backgroundState:(_Bool)arg5 emailAuthHashToken:(id)arg6;

@end

@interface OSRequestOnFocus : OneSignalRequest
{
}

+ (id)withUserId:(id)arg1 appId:(id)arg2 state:(id)arg3 type:(id)arg4 activeTime:(id)arg5 netType:(id)arg6 emailAuthToken:(id)arg7;
+ (id)withUserId:(id)arg1 appId:(id)arg2 badgeCount:(id)arg3 emailAuthToken:(id)arg4;

@end

@interface OneSignalDialogController : NSObject <UIAlertViewDelegate>
{
    NSMutableArray *_queue;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 didDismissWithButtonIndex:(long long)arg2;
- (void)delayResult:(_Bool)arg1;
- (void)displayDialog:(id)arg1;
- (void)presentDialogWithTitle:(id)arg1 withMessage:(id)arg2 withAction:(id)arg3 cancelTitle:(id)arg4 withActionCompletion:(CDUnknownBlockType)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PodsDummy_Pods_Studo : NSObject
{
}

@end

@interface UIView (Studo)
@property(nonatomic, retain) UIColor *borderColor;
@property(nonatomic) double borderWidth;
@property(nonatomic) double cornerRadius;
@end

@interface _TtC5Studo9MbPagerVC (Studo) <UIPageViewControllerDelegate>
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
@end

@interface _TtC5Studo9MbPagerVC (Studo1) <UIPageViewControllerDataSource>
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
@end

@interface _TtC5Studo9IAPHelper (Studo) <SKPaymentTransactionObserver>
- (void)paymentQueue:(id)arg1 restoreCompletedTransactionsFailedWithError:(id)arg2;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
@end

@interface _TtC5Studo9IAPHelper (Studo1) <SKProductsRequestDelegate>
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
@end

@interface NSIndexSet (MCO)
- (id)mcoIndexSet;
@end

@interface NSSet (MCO)
+ (id)mco_setWithMCSet:(struct Set *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct Set *)mco_mcSet;
@end

@interface NSData (MCO)
+ (id)mco_dataWithMCData:(struct Data *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct Data *)mco_mcData;
@end

@interface NSString (MCO)
+ (id)mco_stringWithMCObject:(struct Object *)arg1;
+ (id)mco_stringWithMCString:(struct String *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (id)mco_strippedWhitespace;
- (id)mco_cleanedHTMLString;
- (id)mco_htmlEncodedString;
- (id)mco_flattenHTMLAndShowBlockquote:(_Bool)arg1 showLink:(_Bool)arg2;
- (id)mco_flattenHTMLAndShowBlockquote:(_Bool)arg1;
- (id)mco_flattenHTML;
- (struct String *)mco_mcString;
@end

@interface NSError (MCO)
+ (id)mco_errorWithErrorCode:(int)arg1;
@end

@interface NSDictionary (MCO)
+ (id)mco_dictionaryWithMCHashMap:(struct HashMap *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct HashMap *)mco_mcHashMap;
@end

@interface NSArray (MCO)
+ (id)mco_arrayWithMCArray:(struct Array *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct Array *)mco_mcArray;
@end

@interface NSObject (MCO)
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct Object *)mco_mcObject;
@end

@interface NSArray (MCOAddress)
- (id)mco_nonEncodedRFC822StringForAddresses;
- (id)mco_RFC822StringForAddresses;
@end

@interface NSValue (MCO)
+ (id)mco_valueWithMCValue:(struct Value *)arg1;
+ (id)mco_objectWithMCObject:(struct Object *)arg1;
- (struct Value *)mco_mcValue;
@end

@interface UIViewController (FIRAScreenClassName)
+ (void)load;
@property(retain, nonatomic) FIRAScreen *firaScreen;
- (void)fira_viewDidDisappear:(_Bool)arg1;
- (void)fira_viewDidAppear:(_Bool)arg1;
@end

@interface UIWindow (FIRAScreenClassName)
@property(retain, nonatomic) NSPointerArray *firaStack;
@end

@interface NSError (FIRAAdditions)
+ (id)fira_errorWithCode:(long long)arg1 description:(id)arg2 monitorContext:(id)arg3;
+ (id)fira_errorWithCode:(long long)arg1 description:(id)arg2;
@end

@interface NSData (MD5)
- (long long)fira_64LeastSignificantBits;
- (long long)fira_64LSBMD5;
- (id)fira_MD5Data;
@end

@interface NSDictionary (FIRNSDictionaryQuery)
+ (id)fira_dictionaryWithHttpArgumentsString:(id)arg1;
- (id)fira_queryString;
@end

@interface NSString (FIRD5Additions)
- (id)fira_MD5String;
@end

@interface NSString (URLArguments)
- (id)fira_stringByUnescapingFromURLArgument;
@end

@interface NSString (FIRAUTF32)
- (void)fira_getUTF32Bytes:(void *)arg1 maxBytes:(unsigned long long)arg2;
- (unsigned long long)fira_UTF32Length;
@end

@interface NSString (FIRAuth)
@property(retain, nonatomic) NSString *fir_authPhoneNumber;
@end

@interface FIRDynamicLinks (FIRApp)
+ (void)receivedReadyToConfigureNotification:(id)arg1;
+ (void)load;
- (void)configureDynamicLinks:(id)arg1;
@end

@interface FIRInstanceID (FIRApp)
+ (void)sendLogsForFirebaseApp:(id)arg1 withError:(id)arg2;
+ (void)exitWithReason:(id)arg1 forFirebaseApp:(id)arg2;
+ (id)configureErrorWithReason:(id)arg1;
+ (void)didReceiveConfigureSDKNotification:(id)arg1;
+ (void)load;
- (void)configureInstanceIDWithOptions:(id)arg1 app:(id)arg2;
@end

@interface NSError (FIRInstanceID)
+ (id)FIRInstanceIDErrorMissingCheckin;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFIRInstanceIDErrorCode:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long instanceIDErrorCode;
@end

@interface FIRMessaging (FIRApp)
+ (void)didReceiveConfigureSDKNotification:(id)arg1;
+ (void)load;
- (void)exitApp:(id)arg1 withError:(id)arg2;
- (void)configureMessaging:(id)arg1;
@end

@interface NSDictionary (FIRMessaging)
- (id)fcm_trimNonStringValues;
- (_Bool)fcm_hasNonStringKeysOrValues;
- (id)fcm_string;
@end

@interface NSError (FIRMessaging)
+ (id)fcm_errorWithCode:(long long)arg1 userInfo:(id)arg2;
+ (id)errorWithFCMErrorCode:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long fcmErrorCode;
@end

@interface NSArray (GADOJSONAdditions)
- (id)gad_JSONSafeArray;
- (id)gad_JSONStringPretty:(_Bool)arg1 error:(id *)arg2;
@end

@interface NSString (GADOJSONAdditions)
- (id)gad_decodedJSONObjectError:(id *)arg1;
@end

@interface NSDictionary (GADOJSONAdditions)
- (id)gad_JSONSafeDictionary;
- (id)gad_JSONStringPretty:(_Bool)arg1 error:(id *)arg2;
@end

@interface NSHTTPURLResponse (GADOHeaderParser)
- (id)gad_dateFromHttpDateString:(id)arg1;
- (id)gad_expirationDate;
@end

@interface UIImage (GIDAdditions_Private)
- (id)gid_imageWithBlendMode:(int)arg1 color:(id)arg2;
@end

@interface NSBundle (GID3PAdditions)
+ (void)gid_registerFonts;
+ (id)gid_frameworkBundle;
@end

@interface NSURL (FIFE)
- (_Bool)isFIFEUrl;
- (id)FIFEURLRequestingCenteredCropToDimensions:(struct CGSize)arg1;
- (id)FIFEURLRequestingSmartCropToDimensions:(struct CGSize)arg1;
- (id)FIFEURLRequestingSmartCropToMaxSize:(double)arg1;
- (id)FIFEURLRequestingDimensions:(struct CGSize)arg1;
- (id)FIFEURLRequestingDimensions:(struct CGSize)arg1 stripExistingOptions:(_Bool)arg2;
- (id)FIFEURLRequestingExactDimensions:(struct CGSize)arg1;
- (id)FIFEURLRequestingMaxSize:(double)arg1;
- (id)URLByRemovingFIFEInfo;
- (id)FIFEArgumentsArray;
@property(readonly, copy, nonatomic) NSString *FIFEArgumentsString;
- (struct CGSize)maximumFIFEImageSize;
- (id)FIFEURLWithArguments:(id)arg1 stripExistingOptions:(_Bool)arg2;
- (id)FIFELegacyURLWithArgumentsString:(id)arg1;
- (id)legacyFIFEArgumentsString;
- (id)URLByAppendingTrailingSlash;
- (_Bool)isLegacyFIFEURLWithArguments;
- (_Bool)isLegacyFIFEURL;
- (unsigned long long)numberOfPathComponentsInLegacyFIFEURL;
@end

@interface UIImage (AFNetworkingSafeImageLoading)
+ (id)IntercomSDK_af_safeImageWithData:(id)arg1;
@end

@interface UIViewController (MessengerAppIntentsHandler) <ICMMessengerSheetViewControllerDelegate>
- (void)icm_logMetricEventForMessengerAppWebview:(id)arg1;
- (void)messengerSheetDidCloseAndTriggerReload:(id)arg1;
- (void)messengerSheetDidClose:(id)arg1;
- (void)icm_messengerSheetDidCloseAndTriggerReload;
- (void)icm_messengerSheetDidClose;
- (void)icm_addSheetViewedMetric:(id)arg1;
- (void)icm_addSheetClosedMetric:(id)arg1;
- (void)icm_presentSheet:(id)arg1;
- (void)icm_handleTextInputIntent:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIImage (ICMImageUtils)
- (id)icm_resizeImageToSize:(struct CGSize)arg1;
- (id)icm_grayscale;
@end

@interface UIScrollView (ICMScrollUtils)
- (_Bool)icm_isScrolledToBottom;
- (void)icm_scrollToBottomAnimated:(_Bool)arg1;
@end

@interface UIView (RoundedCorners)
- (void)icm_applyTopRoundedCornersMaskWithSize:(struct CGSize)arg1;
- (void)icm_applyTopRoundedCorners;
@end

@interface NSData (PINImageDetectors)
- (_Bool)IntercomSDK_pin_isGIF;
@end

@interface UIButton (PINRemoteImage) <PINRemoteImageCategory>
- (_Bool)IntercomSDK_pin_ignoreGIFs;
- (void)IntercomSDK_pin_clearImages;
- (void)IntercomSDK_pin_updateUIWithImage:(id)arg1 animatedImage:(id)arg2;
- (void)IntercomSDK_pin_setPlaceholderWithImage:(id)arg1;
@property(nonatomic) _Bool IntercomSDK_pin_updateWithProgress;
- (void)IntercomSDK_pin_setDownloadImageOperationUUID:(id)arg1;
- (id)IntercomSDK_pin_downloadImageOperationUUID;
- (void)IntercomSDK_pin_cancelImageDownload;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface UIImage (PINDecodedImage)
+ (id)IntercomSDK_pin_decodedImageWithCGImageRef:(struct CGImage *)arg1 orientation:(long long)arg2;
+ (id)IntercomSDK_pin_decodedImageWithCGImageRef:(struct CGImage *)arg1;
+ (id)IntercomSDK_pin_decodedImageWithData:(id)arg1 skipDecodeIfPossible:(_Bool)arg2;
+ (id)IntercomSDK_pin_decodedImageWithData:(id)arg1;
@end

@interface UIImageView (PINRemoteImage) <PINRemoteImageCategory>
- (_Bool)IntercomSDK_pin_ignoreGIFs;
- (void)IntercomSDK_pin_clearImages;
- (void)IntercomSDK_pin_updateUIWithImage:(id)arg1 animatedImage:(id)arg2;
- (void)IntercomSDK_pin_setPlaceholderWithImage:(id)arg1;
@property(nonatomic) _Bool IntercomSDK_pin_updateWithProgress;
- (void)IntercomSDK_pin_setDownloadImageOperationUUID:(id)arg1;
- (id)IntercomSDK_pin_downloadImageOperationUUID;
- (void)IntercomSDK_pin_cancelImageDownload;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURLs:(id)arg1;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 processorKey:(id)arg3 processor:(CDUnknownBlockType)arg4;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 processorKey:(id)arg2 processor:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1 placeholderImage:(id)arg2;
- (void)IntercomSDK_pin_setImageFromURL:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@end

@interface NSOperationQueue (IntercomSDK_PINRemoteImageManager)
- (void)IntercomSDK_pin_addOperationWithQueuePriority:(unsigned long long)arg1 block:(CDUnknownBlockType)arg2;
@end

@interface NSData (IntercomSDK_SRWebSocket)
- (id)IntercomSDK_stringBySHA1ThenBase64Encoding;
@end

@interface NSString (IntercomSDK_SRWebSocket)
- (id)IntercomSDK_stringBySHA1ThenBase64Encoding;
@end

@interface NSURLRequest (SRCertificateAdditions)
@property(readonly, retain, nonatomic) NSArray *IntercomSDK_SR_SSLPinnedCertificates;
@end

@interface NSMutableURLRequest (SRCertificateAdditions)
@property(retain, nonatomic) NSArray *IntercomSDK_SR_SSLPinnedCertificates;
@end

@interface NSURL (IntercomSDK_SRWebSocket)
- (id)IntercomSDK_SR_origin;
@end

@interface NSRunLoop (IntercomSDK_SRWebSocket)
+ (id)IntercomSDK_SR_networkRunLoop;
@end

@interface UIApplication (OneSignal)
+ (void)setupUNUserNotificationCenterDelegate;
+ (void)load;
- (void)onesignalSetApplicationIconBadgeNumber:(long long)arg1;
@end

@interface NSURLSession (DirectDownload)
+ (id)downloadItemAtURL:(id)arg1 toFile:(id)arg2 error:(id *)arg3;
@end

@interface NSURL (OneSignal)
- (id)valueFromQueryParameter:(id)arg1;
@end

@interface NSString (OneSignal)
- (id)fileExtensionForMimeType;
- (id)supportedFileExtension;
- (id)one_getSemanticVersion;
- (id)one_getVersionForRange:(struct _NSRange)arg1;
- (id)one_substringAfter:(id)arg1;
@end

